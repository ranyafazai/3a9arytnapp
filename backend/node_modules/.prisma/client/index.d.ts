
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Agency
 * 
 */
export type Agency = $Result.DefaultSelection<Prisma.$AgencyPayload>
/**
 * Model AgencyMember
 * 
 */
export type AgencyMember = $Result.DefaultSelection<Prisma.$AgencyMemberPayload>
/**
 * Model AgencyRole
 * 
 */
export type AgencyRole = $Result.DefaultSelection<Prisma.$AgencyRolePayload>
/**
 * Model AgencyVerificationDocument
 * 
 */
export type AgencyVerificationDocument = $Result.DefaultSelection<Prisma.$AgencyVerificationDocumentPayload>
/**
 * Model AgencyPerformance
 * 
 */
export type AgencyPerformance = $Result.DefaultSelection<Prisma.$AgencyPerformancePayload>
/**
 * Model AgentPerformance
 * 
 */
export type AgentPerformance = $Result.DefaultSelection<Prisma.$AgentPerformancePayload>
/**
 * Model AgencyInquiry
 * 
 */
export type AgencyInquiry = $Result.DefaultSelection<Prisma.$AgencyInquiryPayload>
/**
 * Model Property
 * 
 */
export type Property = $Result.DefaultSelection<Prisma.$PropertyPayload>
/**
 * Model PropertyPhoto
 * 
 */
export type PropertyPhoto = $Result.DefaultSelection<Prisma.$PropertyPhotoPayload>
/**
 * Model PropertyVideo
 * 
 */
export type PropertyVideo = $Result.DefaultSelection<Prisma.$PropertyVideoPayload>
/**
 * Model VirtualTour
 * 
 */
export type VirtualTour = $Result.DefaultSelection<Prisma.$VirtualTourPayload>
/**
 * Model PropertyView
 * 
 */
export type PropertyView = $Result.DefaultSelection<Prisma.$PropertyViewPayload>
/**
 * Model Favorite
 * 
 */
export type Favorite = $Result.DefaultSelection<Prisma.$FavoritePayload>
/**
 * Model FavoriteList
 * 
 */
export type FavoriteList = $Result.DefaultSelection<Prisma.$FavoriteListPayload>
/**
 * Model PropertyRequest
 * 
 */
export type PropertyRequest = $Result.DefaultSelection<Prisma.$PropertyRequestPayload>
/**
 * Model PropertyInquiry
 * 
 */
export type PropertyInquiry = $Result.DefaultSelection<Prisma.$PropertyInquiryPayload>
/**
 * Model PropertyComparison
 * 
 */
export type PropertyComparison = $Result.DefaultSelection<Prisma.$PropertyComparisonPayload>
/**
 * Model PropertyComparisonProperties
 * 
 */
export type PropertyComparisonProperties = $Result.DefaultSelection<Prisma.$PropertyComparisonPropertiesPayload>
/**
 * Model PropertyReview
 * 
 */
export type PropertyReview = $Result.DefaultSelection<Prisma.$PropertyReviewPayload>
/**
 * Model PropertyComment
 * 
 */
export type PropertyComment = $Result.DefaultSelection<Prisma.$PropertyCommentPayload>
/**
 * Model PropertyViewing
 * 
 */
export type PropertyViewing = $Result.DefaultSelection<Prisma.$PropertyViewingPayload>
/**
 * Model PropertyAnalytics
 * 
 */
export type PropertyAnalytics = $Result.DefaultSelection<Prisma.$PropertyAnalyticsPayload>
/**
 * Model AdminAction
 * 
 */
export type AdminAction = $Result.DefaultSelection<Prisma.$AdminActionPayload>
/**
 * Model Notification
 * 
 */
export type Notification = $Result.DefaultSelection<Prisma.$NotificationPayload>
/**
 * Model Payment
 * 
 */
export type Payment = $Result.DefaultSelection<Prisma.$PaymentPayload>
/**
 * Model SavedSearch
 * 
 */
export type SavedSearch = $Result.DefaultSelection<Prisma.$SavedSearchPayload>
/**
 * Model PlatformSetting
 * 
 */
export type PlatformSetting = $Result.DefaultSelection<Prisma.$PlatformSettingPayload>
/**
 * Model PlatformAnalytics
 * 
 */
export type PlatformAnalytics = $Result.DefaultSelection<Prisma.$PlatformAnalyticsPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const UserRole: {
  BUYER: 'BUYER',
  SELLER: 'SELLER',
  AGENT: 'AGENT',
  ASSISTANT: 'ASSISTANT',
  MANAGER: 'MANAGER',
  ADMIN: 'ADMIN',
  SUPER_ADMIN: 'SUPER_ADMIN'
};

export type UserRole = (typeof UserRole)[keyof typeof UserRole]


export const PropertyType: {
  LAND: 'LAND',
  HOUSE: 'HOUSE',
  APARTMENT: 'APARTMENT',
  CONDO: 'CONDO',
  TOWNHOUSE: 'TOWNHOUSE',
  STUDIO: 'STUDIO',
  VILLA: 'VILLA',
  COMMERCIAL: 'COMMERCIAL',
  OFFICE: 'OFFICE',
  SHOP: 'SHOP',
  GARAGE: 'GARAGE',
  WAREHOUSE: 'WAREHOUSE'
};

export type PropertyType = (typeof PropertyType)[keyof typeof PropertyType]


export const PropertyStatus: {
  DRAFT: 'DRAFT',
  UNDER_REVIEW: 'UNDER_REVIEW',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  ACTIVE: 'ACTIVE',
  ON_HOLD: 'ON_HOLD',
  FOR_SALE: 'FOR_SALE',
  FOR_RENT: 'FOR_RENT',
  SOLD: 'SOLD',
  RENTED: 'RENTED',
  INACTIVE: 'INACTIVE'
};

export type PropertyStatus = (typeof PropertyStatus)[keyof typeof PropertyStatus]


export const TransactionType: {
  SALE: 'SALE',
  RENT: 'RENT',
  LEASE: 'LEASE',
  SHORT_TERM: 'SHORT_TERM'
};

export type TransactionType = (typeof TransactionType)[keyof typeof TransactionType]


export const RequestType: {
  VISIT_REQUEST: 'VISIT_REQUEST',
  INTEREST_REQUEST: 'INTEREST_REQUEST',
  BUY_REQUEST: 'BUY_REQUEST',
  RENT_REQUEST: 'RENT_REQUEST',
  INFORMATION_REQUEST: 'INFORMATION_REQUEST'
};

export type RequestType = (typeof RequestType)[keyof typeof RequestType]


export const RequestStatus: {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  REJECTED: 'REJECTED',
  CANCELLED: 'CANCELLED',
  COMPLETED: 'COMPLETED',
  EXPIRED: 'EXPIRED'
};

export type RequestStatus = (typeof RequestStatus)[keyof typeof RequestStatus]


export const PaymentStatus: {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  REFUNDED: 'REFUNDED',
  CANCELLED: 'CANCELLED'
};

export type PaymentStatus = (typeof PaymentStatus)[keyof typeof PaymentStatus]


export const PropertyCondition: {
  NEW: 'NEW',
  RENOVATED: 'RENOVATED',
  GOOD: 'GOOD',
  FAIR: 'FAIR',
  NEEDS_WORK: 'NEEDS_WORK',
  POOR: 'POOR'
};

export type PropertyCondition = (typeof PropertyCondition)[keyof typeof PropertyCondition]


export const LeaseType: {
  SHORT_TERM: 'SHORT_TERM',
  LONG_TERM: 'LONG_TERM',
  MONTHLY: 'MONTHLY',
  YEARLY: 'YEARLY',
  FLEXIBLE: 'FLEXIBLE'
};

export type LeaseType = (typeof LeaseType)[keyof typeof LeaseType]


export const NotificationType: {
  PROPERTY_APPROVED: 'PROPERTY_APPROVED',
  PROPERTY_REJECTED: 'PROPERTY_REJECTED',
  NEW_INQUIRY: 'NEW_INQUIRY',
  REQUEST_ACCEPTED: 'REQUEST_ACCEPTED',
  REQUEST_REJECTED: 'REQUEST_REJECTED',
  VIEWING_SCHEDULED: 'VIEWING_SCHEDULED',
  VIEWING_CANCELLED: 'VIEWING_CANCELLED',
  PAYMENT_RECEIVED: 'PAYMENT_RECEIVED',
  PAYMENT_FAILED: 'PAYMENT_FAILED',
  PROPERTY_SOLD: 'PROPERTY_SOLD',
  PROPERTY_RENTED: 'PROPERTY_RENTED',
  SYSTEM_ALERT: 'SYSTEM_ALERT'
};

export type NotificationType = (typeof NotificationType)[keyof typeof NotificationType]


export const AgencyVerificationStatus: {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  UNDER_REVIEW: 'UNDER_REVIEW'
};

export type AgencyVerificationStatus = (typeof AgencyVerificationStatus)[keyof typeof AgencyVerificationStatus]


export const InquiryStatus: {
  OPEN: 'OPEN',
  PENDING: 'PENDING',
  DONE: 'DONE'
};

export type InquiryStatus = (typeof InquiryStatus)[keyof typeof InquiryStatus]


export const AgencyActivityType: {
  REAL_ESTATE: 'REAL_ESTATE',
  DELIVERY: 'DELIVERY',
  MARKETING: 'MARKETING',
  SECURITY: 'SECURITY',
  OTHER: 'OTHER'
};

export type AgencyActivityType = (typeof AgencyActivityType)[keyof typeof AgencyActivityType]

}

export type UserRole = $Enums.UserRole

export const UserRole: typeof $Enums.UserRole

export type PropertyType = $Enums.PropertyType

export const PropertyType: typeof $Enums.PropertyType

export type PropertyStatus = $Enums.PropertyStatus

export const PropertyStatus: typeof $Enums.PropertyStatus

export type TransactionType = $Enums.TransactionType

export const TransactionType: typeof $Enums.TransactionType

export type RequestType = $Enums.RequestType

export const RequestType: typeof $Enums.RequestType

export type RequestStatus = $Enums.RequestStatus

export const RequestStatus: typeof $Enums.RequestStatus

export type PaymentStatus = $Enums.PaymentStatus

export const PaymentStatus: typeof $Enums.PaymentStatus

export type PropertyCondition = $Enums.PropertyCondition

export const PropertyCondition: typeof $Enums.PropertyCondition

export type LeaseType = $Enums.LeaseType

export const LeaseType: typeof $Enums.LeaseType

export type NotificationType = $Enums.NotificationType

export const NotificationType: typeof $Enums.NotificationType

export type AgencyVerificationStatus = $Enums.AgencyVerificationStatus

export const AgencyVerificationStatus: typeof $Enums.AgencyVerificationStatus

export type InquiryStatus = $Enums.InquiryStatus

export const InquiryStatus: typeof $Enums.InquiryStatus

export type AgencyActivityType = $Enums.AgencyActivityType

export const AgencyActivityType: typeof $Enums.AgencyActivityType

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.agency`: Exposes CRUD operations for the **Agency** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Agencies
    * const agencies = await prisma.agency.findMany()
    * ```
    */
  get agency(): Prisma.AgencyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.agencyMember`: Exposes CRUD operations for the **AgencyMember** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AgencyMembers
    * const agencyMembers = await prisma.agencyMember.findMany()
    * ```
    */
  get agencyMember(): Prisma.AgencyMemberDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.agencyRole`: Exposes CRUD operations for the **AgencyRole** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AgencyRoles
    * const agencyRoles = await prisma.agencyRole.findMany()
    * ```
    */
  get agencyRole(): Prisma.AgencyRoleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.agencyVerificationDocument`: Exposes CRUD operations for the **AgencyVerificationDocument** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AgencyVerificationDocuments
    * const agencyVerificationDocuments = await prisma.agencyVerificationDocument.findMany()
    * ```
    */
  get agencyVerificationDocument(): Prisma.AgencyVerificationDocumentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.agencyPerformance`: Exposes CRUD operations for the **AgencyPerformance** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AgencyPerformances
    * const agencyPerformances = await prisma.agencyPerformance.findMany()
    * ```
    */
  get agencyPerformance(): Prisma.AgencyPerformanceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.agentPerformance`: Exposes CRUD operations for the **AgentPerformance** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AgentPerformances
    * const agentPerformances = await prisma.agentPerformance.findMany()
    * ```
    */
  get agentPerformance(): Prisma.AgentPerformanceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.agencyInquiry`: Exposes CRUD operations for the **AgencyInquiry** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AgencyInquiries
    * const agencyInquiries = await prisma.agencyInquiry.findMany()
    * ```
    */
  get agencyInquiry(): Prisma.AgencyInquiryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.property`: Exposes CRUD operations for the **Property** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Properties
    * const properties = await prisma.property.findMany()
    * ```
    */
  get property(): Prisma.PropertyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.propertyPhoto`: Exposes CRUD operations for the **PropertyPhoto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PropertyPhotos
    * const propertyPhotos = await prisma.propertyPhoto.findMany()
    * ```
    */
  get propertyPhoto(): Prisma.PropertyPhotoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.propertyVideo`: Exposes CRUD operations for the **PropertyVideo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PropertyVideos
    * const propertyVideos = await prisma.propertyVideo.findMany()
    * ```
    */
  get propertyVideo(): Prisma.PropertyVideoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.virtualTour`: Exposes CRUD operations for the **VirtualTour** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VirtualTours
    * const virtualTours = await prisma.virtualTour.findMany()
    * ```
    */
  get virtualTour(): Prisma.VirtualTourDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.propertyView`: Exposes CRUD operations for the **PropertyView** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PropertyViews
    * const propertyViews = await prisma.propertyView.findMany()
    * ```
    */
  get propertyView(): Prisma.PropertyViewDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.favorite`: Exposes CRUD operations for the **Favorite** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Favorites
    * const favorites = await prisma.favorite.findMany()
    * ```
    */
  get favorite(): Prisma.FavoriteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.favoriteList`: Exposes CRUD operations for the **FavoriteList** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FavoriteLists
    * const favoriteLists = await prisma.favoriteList.findMany()
    * ```
    */
  get favoriteList(): Prisma.FavoriteListDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.propertyRequest`: Exposes CRUD operations for the **PropertyRequest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PropertyRequests
    * const propertyRequests = await prisma.propertyRequest.findMany()
    * ```
    */
  get propertyRequest(): Prisma.PropertyRequestDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.propertyInquiry`: Exposes CRUD operations for the **PropertyInquiry** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PropertyInquiries
    * const propertyInquiries = await prisma.propertyInquiry.findMany()
    * ```
    */
  get propertyInquiry(): Prisma.PropertyInquiryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.propertyComparison`: Exposes CRUD operations for the **PropertyComparison** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PropertyComparisons
    * const propertyComparisons = await prisma.propertyComparison.findMany()
    * ```
    */
  get propertyComparison(): Prisma.PropertyComparisonDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.propertyComparisonProperties`: Exposes CRUD operations for the **PropertyComparisonProperties** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PropertyComparisonProperties
    * const propertyComparisonProperties = await prisma.propertyComparisonProperties.findMany()
    * ```
    */
  get propertyComparisonProperties(): Prisma.PropertyComparisonPropertiesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.propertyReview`: Exposes CRUD operations for the **PropertyReview** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PropertyReviews
    * const propertyReviews = await prisma.propertyReview.findMany()
    * ```
    */
  get propertyReview(): Prisma.PropertyReviewDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.propertyComment`: Exposes CRUD operations for the **PropertyComment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PropertyComments
    * const propertyComments = await prisma.propertyComment.findMany()
    * ```
    */
  get propertyComment(): Prisma.PropertyCommentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.propertyViewing`: Exposes CRUD operations for the **PropertyViewing** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PropertyViewings
    * const propertyViewings = await prisma.propertyViewing.findMany()
    * ```
    */
  get propertyViewing(): Prisma.PropertyViewingDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.propertyAnalytics`: Exposes CRUD operations for the **PropertyAnalytics** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PropertyAnalytics
    * const propertyAnalytics = await prisma.propertyAnalytics.findMany()
    * ```
    */
  get propertyAnalytics(): Prisma.PropertyAnalyticsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.adminAction`: Exposes CRUD operations for the **AdminAction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AdminActions
    * const adminActions = await prisma.adminAction.findMany()
    * ```
    */
  get adminAction(): Prisma.AdminActionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notification`: Exposes CRUD operations for the **Notification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notification.findMany()
    * ```
    */
  get notification(): Prisma.NotificationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.payment`: Exposes CRUD operations for the **Payment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Payments
    * const payments = await prisma.payment.findMany()
    * ```
    */
  get payment(): Prisma.PaymentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.savedSearch`: Exposes CRUD operations for the **SavedSearch** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SavedSearches
    * const savedSearches = await prisma.savedSearch.findMany()
    * ```
    */
  get savedSearch(): Prisma.SavedSearchDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.platformSetting`: Exposes CRUD operations for the **PlatformSetting** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PlatformSettings
    * const platformSettings = await prisma.platformSetting.findMany()
    * ```
    */
  get platformSetting(): Prisma.PlatformSettingDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.platformAnalytics`: Exposes CRUD operations for the **PlatformAnalytics** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PlatformAnalytics
    * const platformAnalytics = await prisma.platformAnalytics.findMany()
    * ```
    */
  get platformAnalytics(): Prisma.PlatformAnalyticsDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.14.0
   * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    Agency: 'Agency',
    AgencyMember: 'AgencyMember',
    AgencyRole: 'AgencyRole',
    AgencyVerificationDocument: 'AgencyVerificationDocument',
    AgencyPerformance: 'AgencyPerformance',
    AgentPerformance: 'AgentPerformance',
    AgencyInquiry: 'AgencyInquiry',
    Property: 'Property',
    PropertyPhoto: 'PropertyPhoto',
    PropertyVideo: 'PropertyVideo',
    VirtualTour: 'VirtualTour',
    PropertyView: 'PropertyView',
    Favorite: 'Favorite',
    FavoriteList: 'FavoriteList',
    PropertyRequest: 'PropertyRequest',
    PropertyInquiry: 'PropertyInquiry',
    PropertyComparison: 'PropertyComparison',
    PropertyComparisonProperties: 'PropertyComparisonProperties',
    PropertyReview: 'PropertyReview',
    PropertyComment: 'PropertyComment',
    PropertyViewing: 'PropertyViewing',
    PropertyAnalytics: 'PropertyAnalytics',
    AdminAction: 'AdminAction',
    Notification: 'Notification',
    Payment: 'Payment',
    SavedSearch: 'SavedSearch',
    PlatformSetting: 'PlatformSetting',
    PlatformAnalytics: 'PlatformAnalytics'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "user" | "agency" | "agencyMember" | "agencyRole" | "agencyVerificationDocument" | "agencyPerformance" | "agentPerformance" | "agencyInquiry" | "property" | "propertyPhoto" | "propertyVideo" | "virtualTour" | "propertyView" | "favorite" | "favoriteList" | "propertyRequest" | "propertyInquiry" | "propertyComparison" | "propertyComparisonProperties" | "propertyReview" | "propertyComment" | "propertyViewing" | "propertyAnalytics" | "adminAction" | "notification" | "payment" | "savedSearch" | "platformSetting" | "platformAnalytics"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Agency: {
        payload: Prisma.$AgencyPayload<ExtArgs>
        fields: Prisma.AgencyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AgencyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AgencyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>
          }
          findFirst: {
            args: Prisma.AgencyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AgencyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>
          }
          findMany: {
            args: Prisma.AgencyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>[]
          }
          create: {
            args: Prisma.AgencyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>
          }
          createMany: {
            args: Prisma.AgencyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AgencyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>[]
          }
          delete: {
            args: Prisma.AgencyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>
          }
          update: {
            args: Prisma.AgencyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>
          }
          deleteMany: {
            args: Prisma.AgencyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AgencyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AgencyUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>[]
          }
          upsert: {
            args: Prisma.AgencyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>
          }
          aggregate: {
            args: Prisma.AgencyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAgency>
          }
          groupBy: {
            args: Prisma.AgencyGroupByArgs<ExtArgs>
            result: $Utils.Optional<AgencyGroupByOutputType>[]
          }
          count: {
            args: Prisma.AgencyCountArgs<ExtArgs>
            result: $Utils.Optional<AgencyCountAggregateOutputType> | number
          }
        }
      }
      AgencyMember: {
        payload: Prisma.$AgencyMemberPayload<ExtArgs>
        fields: Prisma.AgencyMemberFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AgencyMemberFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyMemberPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AgencyMemberFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyMemberPayload>
          }
          findFirst: {
            args: Prisma.AgencyMemberFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyMemberPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AgencyMemberFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyMemberPayload>
          }
          findMany: {
            args: Prisma.AgencyMemberFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyMemberPayload>[]
          }
          create: {
            args: Prisma.AgencyMemberCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyMemberPayload>
          }
          createMany: {
            args: Prisma.AgencyMemberCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AgencyMemberCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyMemberPayload>[]
          }
          delete: {
            args: Prisma.AgencyMemberDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyMemberPayload>
          }
          update: {
            args: Prisma.AgencyMemberUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyMemberPayload>
          }
          deleteMany: {
            args: Prisma.AgencyMemberDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AgencyMemberUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AgencyMemberUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyMemberPayload>[]
          }
          upsert: {
            args: Prisma.AgencyMemberUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyMemberPayload>
          }
          aggregate: {
            args: Prisma.AgencyMemberAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAgencyMember>
          }
          groupBy: {
            args: Prisma.AgencyMemberGroupByArgs<ExtArgs>
            result: $Utils.Optional<AgencyMemberGroupByOutputType>[]
          }
          count: {
            args: Prisma.AgencyMemberCountArgs<ExtArgs>
            result: $Utils.Optional<AgencyMemberCountAggregateOutputType> | number
          }
        }
      }
      AgencyRole: {
        payload: Prisma.$AgencyRolePayload<ExtArgs>
        fields: Prisma.AgencyRoleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AgencyRoleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyRolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AgencyRoleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyRolePayload>
          }
          findFirst: {
            args: Prisma.AgencyRoleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyRolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AgencyRoleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyRolePayload>
          }
          findMany: {
            args: Prisma.AgencyRoleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyRolePayload>[]
          }
          create: {
            args: Prisma.AgencyRoleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyRolePayload>
          }
          createMany: {
            args: Prisma.AgencyRoleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AgencyRoleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyRolePayload>[]
          }
          delete: {
            args: Prisma.AgencyRoleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyRolePayload>
          }
          update: {
            args: Prisma.AgencyRoleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyRolePayload>
          }
          deleteMany: {
            args: Prisma.AgencyRoleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AgencyRoleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AgencyRoleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyRolePayload>[]
          }
          upsert: {
            args: Prisma.AgencyRoleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyRolePayload>
          }
          aggregate: {
            args: Prisma.AgencyRoleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAgencyRole>
          }
          groupBy: {
            args: Prisma.AgencyRoleGroupByArgs<ExtArgs>
            result: $Utils.Optional<AgencyRoleGroupByOutputType>[]
          }
          count: {
            args: Prisma.AgencyRoleCountArgs<ExtArgs>
            result: $Utils.Optional<AgencyRoleCountAggregateOutputType> | number
          }
        }
      }
      AgencyVerificationDocument: {
        payload: Prisma.$AgencyVerificationDocumentPayload<ExtArgs>
        fields: Prisma.AgencyVerificationDocumentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AgencyVerificationDocumentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyVerificationDocumentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AgencyVerificationDocumentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyVerificationDocumentPayload>
          }
          findFirst: {
            args: Prisma.AgencyVerificationDocumentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyVerificationDocumentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AgencyVerificationDocumentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyVerificationDocumentPayload>
          }
          findMany: {
            args: Prisma.AgencyVerificationDocumentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyVerificationDocumentPayload>[]
          }
          create: {
            args: Prisma.AgencyVerificationDocumentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyVerificationDocumentPayload>
          }
          createMany: {
            args: Prisma.AgencyVerificationDocumentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AgencyVerificationDocumentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyVerificationDocumentPayload>[]
          }
          delete: {
            args: Prisma.AgencyVerificationDocumentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyVerificationDocumentPayload>
          }
          update: {
            args: Prisma.AgencyVerificationDocumentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyVerificationDocumentPayload>
          }
          deleteMany: {
            args: Prisma.AgencyVerificationDocumentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AgencyVerificationDocumentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AgencyVerificationDocumentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyVerificationDocumentPayload>[]
          }
          upsert: {
            args: Prisma.AgencyVerificationDocumentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyVerificationDocumentPayload>
          }
          aggregate: {
            args: Prisma.AgencyVerificationDocumentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAgencyVerificationDocument>
          }
          groupBy: {
            args: Prisma.AgencyVerificationDocumentGroupByArgs<ExtArgs>
            result: $Utils.Optional<AgencyVerificationDocumentGroupByOutputType>[]
          }
          count: {
            args: Prisma.AgencyVerificationDocumentCountArgs<ExtArgs>
            result: $Utils.Optional<AgencyVerificationDocumentCountAggregateOutputType> | number
          }
        }
      }
      AgencyPerformance: {
        payload: Prisma.$AgencyPerformancePayload<ExtArgs>
        fields: Prisma.AgencyPerformanceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AgencyPerformanceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPerformancePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AgencyPerformanceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPerformancePayload>
          }
          findFirst: {
            args: Prisma.AgencyPerformanceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPerformancePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AgencyPerformanceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPerformancePayload>
          }
          findMany: {
            args: Prisma.AgencyPerformanceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPerformancePayload>[]
          }
          create: {
            args: Prisma.AgencyPerformanceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPerformancePayload>
          }
          createMany: {
            args: Prisma.AgencyPerformanceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AgencyPerformanceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPerformancePayload>[]
          }
          delete: {
            args: Prisma.AgencyPerformanceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPerformancePayload>
          }
          update: {
            args: Prisma.AgencyPerformanceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPerformancePayload>
          }
          deleteMany: {
            args: Prisma.AgencyPerformanceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AgencyPerformanceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AgencyPerformanceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPerformancePayload>[]
          }
          upsert: {
            args: Prisma.AgencyPerformanceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPerformancePayload>
          }
          aggregate: {
            args: Prisma.AgencyPerformanceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAgencyPerformance>
          }
          groupBy: {
            args: Prisma.AgencyPerformanceGroupByArgs<ExtArgs>
            result: $Utils.Optional<AgencyPerformanceGroupByOutputType>[]
          }
          count: {
            args: Prisma.AgencyPerformanceCountArgs<ExtArgs>
            result: $Utils.Optional<AgencyPerformanceCountAggregateOutputType> | number
          }
        }
      }
      AgentPerformance: {
        payload: Prisma.$AgentPerformancePayload<ExtArgs>
        fields: Prisma.AgentPerformanceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AgentPerformanceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentPerformancePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AgentPerformanceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentPerformancePayload>
          }
          findFirst: {
            args: Prisma.AgentPerformanceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentPerformancePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AgentPerformanceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentPerformancePayload>
          }
          findMany: {
            args: Prisma.AgentPerformanceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentPerformancePayload>[]
          }
          create: {
            args: Prisma.AgentPerformanceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentPerformancePayload>
          }
          createMany: {
            args: Prisma.AgentPerformanceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AgentPerformanceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentPerformancePayload>[]
          }
          delete: {
            args: Prisma.AgentPerformanceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentPerformancePayload>
          }
          update: {
            args: Prisma.AgentPerformanceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentPerformancePayload>
          }
          deleteMany: {
            args: Prisma.AgentPerformanceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AgentPerformanceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AgentPerformanceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentPerformancePayload>[]
          }
          upsert: {
            args: Prisma.AgentPerformanceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgentPerformancePayload>
          }
          aggregate: {
            args: Prisma.AgentPerformanceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAgentPerformance>
          }
          groupBy: {
            args: Prisma.AgentPerformanceGroupByArgs<ExtArgs>
            result: $Utils.Optional<AgentPerformanceGroupByOutputType>[]
          }
          count: {
            args: Prisma.AgentPerformanceCountArgs<ExtArgs>
            result: $Utils.Optional<AgentPerformanceCountAggregateOutputType> | number
          }
        }
      }
      AgencyInquiry: {
        payload: Prisma.$AgencyInquiryPayload<ExtArgs>
        fields: Prisma.AgencyInquiryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AgencyInquiryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyInquiryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AgencyInquiryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyInquiryPayload>
          }
          findFirst: {
            args: Prisma.AgencyInquiryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyInquiryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AgencyInquiryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyInquiryPayload>
          }
          findMany: {
            args: Prisma.AgencyInquiryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyInquiryPayload>[]
          }
          create: {
            args: Prisma.AgencyInquiryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyInquiryPayload>
          }
          createMany: {
            args: Prisma.AgencyInquiryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AgencyInquiryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyInquiryPayload>[]
          }
          delete: {
            args: Prisma.AgencyInquiryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyInquiryPayload>
          }
          update: {
            args: Prisma.AgencyInquiryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyInquiryPayload>
          }
          deleteMany: {
            args: Prisma.AgencyInquiryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AgencyInquiryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AgencyInquiryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyInquiryPayload>[]
          }
          upsert: {
            args: Prisma.AgencyInquiryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyInquiryPayload>
          }
          aggregate: {
            args: Prisma.AgencyInquiryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAgencyInquiry>
          }
          groupBy: {
            args: Prisma.AgencyInquiryGroupByArgs<ExtArgs>
            result: $Utils.Optional<AgencyInquiryGroupByOutputType>[]
          }
          count: {
            args: Prisma.AgencyInquiryCountArgs<ExtArgs>
            result: $Utils.Optional<AgencyInquiryCountAggregateOutputType> | number
          }
        }
      }
      Property: {
        payload: Prisma.$PropertyPayload<ExtArgs>
        fields: Prisma.PropertyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PropertyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PropertyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyPayload>
          }
          findFirst: {
            args: Prisma.PropertyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PropertyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyPayload>
          }
          findMany: {
            args: Prisma.PropertyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyPayload>[]
          }
          create: {
            args: Prisma.PropertyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyPayload>
          }
          createMany: {
            args: Prisma.PropertyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PropertyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyPayload>[]
          }
          delete: {
            args: Prisma.PropertyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyPayload>
          }
          update: {
            args: Prisma.PropertyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyPayload>
          }
          deleteMany: {
            args: Prisma.PropertyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PropertyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PropertyUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyPayload>[]
          }
          upsert: {
            args: Prisma.PropertyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyPayload>
          }
          aggregate: {
            args: Prisma.PropertyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProperty>
          }
          groupBy: {
            args: Prisma.PropertyGroupByArgs<ExtArgs>
            result: $Utils.Optional<PropertyGroupByOutputType>[]
          }
          count: {
            args: Prisma.PropertyCountArgs<ExtArgs>
            result: $Utils.Optional<PropertyCountAggregateOutputType> | number
          }
        }
      }
      PropertyPhoto: {
        payload: Prisma.$PropertyPhotoPayload<ExtArgs>
        fields: Prisma.PropertyPhotoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PropertyPhotoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyPhotoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PropertyPhotoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyPhotoPayload>
          }
          findFirst: {
            args: Prisma.PropertyPhotoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyPhotoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PropertyPhotoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyPhotoPayload>
          }
          findMany: {
            args: Prisma.PropertyPhotoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyPhotoPayload>[]
          }
          create: {
            args: Prisma.PropertyPhotoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyPhotoPayload>
          }
          createMany: {
            args: Prisma.PropertyPhotoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PropertyPhotoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyPhotoPayload>[]
          }
          delete: {
            args: Prisma.PropertyPhotoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyPhotoPayload>
          }
          update: {
            args: Prisma.PropertyPhotoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyPhotoPayload>
          }
          deleteMany: {
            args: Prisma.PropertyPhotoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PropertyPhotoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PropertyPhotoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyPhotoPayload>[]
          }
          upsert: {
            args: Prisma.PropertyPhotoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyPhotoPayload>
          }
          aggregate: {
            args: Prisma.PropertyPhotoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePropertyPhoto>
          }
          groupBy: {
            args: Prisma.PropertyPhotoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PropertyPhotoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PropertyPhotoCountArgs<ExtArgs>
            result: $Utils.Optional<PropertyPhotoCountAggregateOutputType> | number
          }
        }
      }
      PropertyVideo: {
        payload: Prisma.$PropertyVideoPayload<ExtArgs>
        fields: Prisma.PropertyVideoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PropertyVideoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyVideoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PropertyVideoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyVideoPayload>
          }
          findFirst: {
            args: Prisma.PropertyVideoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyVideoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PropertyVideoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyVideoPayload>
          }
          findMany: {
            args: Prisma.PropertyVideoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyVideoPayload>[]
          }
          create: {
            args: Prisma.PropertyVideoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyVideoPayload>
          }
          createMany: {
            args: Prisma.PropertyVideoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PropertyVideoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyVideoPayload>[]
          }
          delete: {
            args: Prisma.PropertyVideoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyVideoPayload>
          }
          update: {
            args: Prisma.PropertyVideoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyVideoPayload>
          }
          deleteMany: {
            args: Prisma.PropertyVideoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PropertyVideoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PropertyVideoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyVideoPayload>[]
          }
          upsert: {
            args: Prisma.PropertyVideoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyVideoPayload>
          }
          aggregate: {
            args: Prisma.PropertyVideoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePropertyVideo>
          }
          groupBy: {
            args: Prisma.PropertyVideoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PropertyVideoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PropertyVideoCountArgs<ExtArgs>
            result: $Utils.Optional<PropertyVideoCountAggregateOutputType> | number
          }
        }
      }
      VirtualTour: {
        payload: Prisma.$VirtualTourPayload<ExtArgs>
        fields: Prisma.VirtualTourFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VirtualTourFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualTourPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VirtualTourFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualTourPayload>
          }
          findFirst: {
            args: Prisma.VirtualTourFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualTourPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VirtualTourFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualTourPayload>
          }
          findMany: {
            args: Prisma.VirtualTourFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualTourPayload>[]
          }
          create: {
            args: Prisma.VirtualTourCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualTourPayload>
          }
          createMany: {
            args: Prisma.VirtualTourCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VirtualTourCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualTourPayload>[]
          }
          delete: {
            args: Prisma.VirtualTourDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualTourPayload>
          }
          update: {
            args: Prisma.VirtualTourUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualTourPayload>
          }
          deleteMany: {
            args: Prisma.VirtualTourDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VirtualTourUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VirtualTourUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualTourPayload>[]
          }
          upsert: {
            args: Prisma.VirtualTourUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VirtualTourPayload>
          }
          aggregate: {
            args: Prisma.VirtualTourAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVirtualTour>
          }
          groupBy: {
            args: Prisma.VirtualTourGroupByArgs<ExtArgs>
            result: $Utils.Optional<VirtualTourGroupByOutputType>[]
          }
          count: {
            args: Prisma.VirtualTourCountArgs<ExtArgs>
            result: $Utils.Optional<VirtualTourCountAggregateOutputType> | number
          }
        }
      }
      PropertyView: {
        payload: Prisma.$PropertyViewPayload<ExtArgs>
        fields: Prisma.PropertyViewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PropertyViewFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyViewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PropertyViewFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyViewPayload>
          }
          findFirst: {
            args: Prisma.PropertyViewFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyViewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PropertyViewFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyViewPayload>
          }
          findMany: {
            args: Prisma.PropertyViewFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyViewPayload>[]
          }
          create: {
            args: Prisma.PropertyViewCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyViewPayload>
          }
          createMany: {
            args: Prisma.PropertyViewCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PropertyViewCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyViewPayload>[]
          }
          delete: {
            args: Prisma.PropertyViewDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyViewPayload>
          }
          update: {
            args: Prisma.PropertyViewUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyViewPayload>
          }
          deleteMany: {
            args: Prisma.PropertyViewDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PropertyViewUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PropertyViewUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyViewPayload>[]
          }
          upsert: {
            args: Prisma.PropertyViewUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyViewPayload>
          }
          aggregate: {
            args: Prisma.PropertyViewAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePropertyView>
          }
          groupBy: {
            args: Prisma.PropertyViewGroupByArgs<ExtArgs>
            result: $Utils.Optional<PropertyViewGroupByOutputType>[]
          }
          count: {
            args: Prisma.PropertyViewCountArgs<ExtArgs>
            result: $Utils.Optional<PropertyViewCountAggregateOutputType> | number
          }
        }
      }
      Favorite: {
        payload: Prisma.$FavoritePayload<ExtArgs>
        fields: Prisma.FavoriteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FavoriteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FavoriteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          findFirst: {
            args: Prisma.FavoriteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FavoriteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          findMany: {
            args: Prisma.FavoriteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>[]
          }
          create: {
            args: Prisma.FavoriteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          createMany: {
            args: Prisma.FavoriteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FavoriteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>[]
          }
          delete: {
            args: Prisma.FavoriteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          update: {
            args: Prisma.FavoriteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          deleteMany: {
            args: Prisma.FavoriteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FavoriteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FavoriteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>[]
          }
          upsert: {
            args: Prisma.FavoriteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          aggregate: {
            args: Prisma.FavoriteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFavorite>
          }
          groupBy: {
            args: Prisma.FavoriteGroupByArgs<ExtArgs>
            result: $Utils.Optional<FavoriteGroupByOutputType>[]
          }
          count: {
            args: Prisma.FavoriteCountArgs<ExtArgs>
            result: $Utils.Optional<FavoriteCountAggregateOutputType> | number
          }
        }
      }
      FavoriteList: {
        payload: Prisma.$FavoriteListPayload<ExtArgs>
        fields: Prisma.FavoriteListFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FavoriteListFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteListPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FavoriteListFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteListPayload>
          }
          findFirst: {
            args: Prisma.FavoriteListFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteListPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FavoriteListFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteListPayload>
          }
          findMany: {
            args: Prisma.FavoriteListFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteListPayload>[]
          }
          create: {
            args: Prisma.FavoriteListCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteListPayload>
          }
          createMany: {
            args: Prisma.FavoriteListCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FavoriteListCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteListPayload>[]
          }
          delete: {
            args: Prisma.FavoriteListDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteListPayload>
          }
          update: {
            args: Prisma.FavoriteListUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteListPayload>
          }
          deleteMany: {
            args: Prisma.FavoriteListDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FavoriteListUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FavoriteListUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteListPayload>[]
          }
          upsert: {
            args: Prisma.FavoriteListUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoriteListPayload>
          }
          aggregate: {
            args: Prisma.FavoriteListAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFavoriteList>
          }
          groupBy: {
            args: Prisma.FavoriteListGroupByArgs<ExtArgs>
            result: $Utils.Optional<FavoriteListGroupByOutputType>[]
          }
          count: {
            args: Prisma.FavoriteListCountArgs<ExtArgs>
            result: $Utils.Optional<FavoriteListCountAggregateOutputType> | number
          }
        }
      }
      PropertyRequest: {
        payload: Prisma.$PropertyRequestPayload<ExtArgs>
        fields: Prisma.PropertyRequestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PropertyRequestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyRequestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PropertyRequestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyRequestPayload>
          }
          findFirst: {
            args: Prisma.PropertyRequestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyRequestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PropertyRequestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyRequestPayload>
          }
          findMany: {
            args: Prisma.PropertyRequestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyRequestPayload>[]
          }
          create: {
            args: Prisma.PropertyRequestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyRequestPayload>
          }
          createMany: {
            args: Prisma.PropertyRequestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PropertyRequestCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyRequestPayload>[]
          }
          delete: {
            args: Prisma.PropertyRequestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyRequestPayload>
          }
          update: {
            args: Prisma.PropertyRequestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyRequestPayload>
          }
          deleteMany: {
            args: Prisma.PropertyRequestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PropertyRequestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PropertyRequestUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyRequestPayload>[]
          }
          upsert: {
            args: Prisma.PropertyRequestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyRequestPayload>
          }
          aggregate: {
            args: Prisma.PropertyRequestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePropertyRequest>
          }
          groupBy: {
            args: Prisma.PropertyRequestGroupByArgs<ExtArgs>
            result: $Utils.Optional<PropertyRequestGroupByOutputType>[]
          }
          count: {
            args: Prisma.PropertyRequestCountArgs<ExtArgs>
            result: $Utils.Optional<PropertyRequestCountAggregateOutputType> | number
          }
        }
      }
      PropertyInquiry: {
        payload: Prisma.$PropertyInquiryPayload<ExtArgs>
        fields: Prisma.PropertyInquiryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PropertyInquiryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyInquiryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PropertyInquiryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyInquiryPayload>
          }
          findFirst: {
            args: Prisma.PropertyInquiryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyInquiryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PropertyInquiryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyInquiryPayload>
          }
          findMany: {
            args: Prisma.PropertyInquiryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyInquiryPayload>[]
          }
          create: {
            args: Prisma.PropertyInquiryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyInquiryPayload>
          }
          createMany: {
            args: Prisma.PropertyInquiryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PropertyInquiryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyInquiryPayload>[]
          }
          delete: {
            args: Prisma.PropertyInquiryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyInquiryPayload>
          }
          update: {
            args: Prisma.PropertyInquiryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyInquiryPayload>
          }
          deleteMany: {
            args: Prisma.PropertyInquiryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PropertyInquiryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PropertyInquiryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyInquiryPayload>[]
          }
          upsert: {
            args: Prisma.PropertyInquiryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyInquiryPayload>
          }
          aggregate: {
            args: Prisma.PropertyInquiryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePropertyInquiry>
          }
          groupBy: {
            args: Prisma.PropertyInquiryGroupByArgs<ExtArgs>
            result: $Utils.Optional<PropertyInquiryGroupByOutputType>[]
          }
          count: {
            args: Prisma.PropertyInquiryCountArgs<ExtArgs>
            result: $Utils.Optional<PropertyInquiryCountAggregateOutputType> | number
          }
        }
      }
      PropertyComparison: {
        payload: Prisma.$PropertyComparisonPayload<ExtArgs>
        fields: Prisma.PropertyComparisonFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PropertyComparisonFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyComparisonPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PropertyComparisonFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyComparisonPayload>
          }
          findFirst: {
            args: Prisma.PropertyComparisonFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyComparisonPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PropertyComparisonFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyComparisonPayload>
          }
          findMany: {
            args: Prisma.PropertyComparisonFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyComparisonPayload>[]
          }
          create: {
            args: Prisma.PropertyComparisonCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyComparisonPayload>
          }
          createMany: {
            args: Prisma.PropertyComparisonCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PropertyComparisonCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyComparisonPayload>[]
          }
          delete: {
            args: Prisma.PropertyComparisonDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyComparisonPayload>
          }
          update: {
            args: Prisma.PropertyComparisonUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyComparisonPayload>
          }
          deleteMany: {
            args: Prisma.PropertyComparisonDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PropertyComparisonUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PropertyComparisonUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyComparisonPayload>[]
          }
          upsert: {
            args: Prisma.PropertyComparisonUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyComparisonPayload>
          }
          aggregate: {
            args: Prisma.PropertyComparisonAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePropertyComparison>
          }
          groupBy: {
            args: Prisma.PropertyComparisonGroupByArgs<ExtArgs>
            result: $Utils.Optional<PropertyComparisonGroupByOutputType>[]
          }
          count: {
            args: Prisma.PropertyComparisonCountArgs<ExtArgs>
            result: $Utils.Optional<PropertyComparisonCountAggregateOutputType> | number
          }
        }
      }
      PropertyComparisonProperties: {
        payload: Prisma.$PropertyComparisonPropertiesPayload<ExtArgs>
        fields: Prisma.PropertyComparisonPropertiesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PropertyComparisonPropertiesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyComparisonPropertiesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PropertyComparisonPropertiesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyComparisonPropertiesPayload>
          }
          findFirst: {
            args: Prisma.PropertyComparisonPropertiesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyComparisonPropertiesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PropertyComparisonPropertiesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyComparisonPropertiesPayload>
          }
          findMany: {
            args: Prisma.PropertyComparisonPropertiesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyComparisonPropertiesPayload>[]
          }
          create: {
            args: Prisma.PropertyComparisonPropertiesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyComparisonPropertiesPayload>
          }
          createMany: {
            args: Prisma.PropertyComparisonPropertiesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PropertyComparisonPropertiesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyComparisonPropertiesPayload>[]
          }
          delete: {
            args: Prisma.PropertyComparisonPropertiesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyComparisonPropertiesPayload>
          }
          update: {
            args: Prisma.PropertyComparisonPropertiesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyComparisonPropertiesPayload>
          }
          deleteMany: {
            args: Prisma.PropertyComparisonPropertiesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PropertyComparisonPropertiesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PropertyComparisonPropertiesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyComparisonPropertiesPayload>[]
          }
          upsert: {
            args: Prisma.PropertyComparisonPropertiesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyComparisonPropertiesPayload>
          }
          aggregate: {
            args: Prisma.PropertyComparisonPropertiesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePropertyComparisonProperties>
          }
          groupBy: {
            args: Prisma.PropertyComparisonPropertiesGroupByArgs<ExtArgs>
            result: $Utils.Optional<PropertyComparisonPropertiesGroupByOutputType>[]
          }
          count: {
            args: Prisma.PropertyComparisonPropertiesCountArgs<ExtArgs>
            result: $Utils.Optional<PropertyComparisonPropertiesCountAggregateOutputType> | number
          }
        }
      }
      PropertyReview: {
        payload: Prisma.$PropertyReviewPayload<ExtArgs>
        fields: Prisma.PropertyReviewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PropertyReviewFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyReviewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PropertyReviewFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyReviewPayload>
          }
          findFirst: {
            args: Prisma.PropertyReviewFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyReviewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PropertyReviewFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyReviewPayload>
          }
          findMany: {
            args: Prisma.PropertyReviewFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyReviewPayload>[]
          }
          create: {
            args: Prisma.PropertyReviewCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyReviewPayload>
          }
          createMany: {
            args: Prisma.PropertyReviewCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PropertyReviewCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyReviewPayload>[]
          }
          delete: {
            args: Prisma.PropertyReviewDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyReviewPayload>
          }
          update: {
            args: Prisma.PropertyReviewUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyReviewPayload>
          }
          deleteMany: {
            args: Prisma.PropertyReviewDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PropertyReviewUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PropertyReviewUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyReviewPayload>[]
          }
          upsert: {
            args: Prisma.PropertyReviewUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyReviewPayload>
          }
          aggregate: {
            args: Prisma.PropertyReviewAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePropertyReview>
          }
          groupBy: {
            args: Prisma.PropertyReviewGroupByArgs<ExtArgs>
            result: $Utils.Optional<PropertyReviewGroupByOutputType>[]
          }
          count: {
            args: Prisma.PropertyReviewCountArgs<ExtArgs>
            result: $Utils.Optional<PropertyReviewCountAggregateOutputType> | number
          }
        }
      }
      PropertyComment: {
        payload: Prisma.$PropertyCommentPayload<ExtArgs>
        fields: Prisma.PropertyCommentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PropertyCommentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyCommentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PropertyCommentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyCommentPayload>
          }
          findFirst: {
            args: Prisma.PropertyCommentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyCommentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PropertyCommentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyCommentPayload>
          }
          findMany: {
            args: Prisma.PropertyCommentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyCommentPayload>[]
          }
          create: {
            args: Prisma.PropertyCommentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyCommentPayload>
          }
          createMany: {
            args: Prisma.PropertyCommentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PropertyCommentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyCommentPayload>[]
          }
          delete: {
            args: Prisma.PropertyCommentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyCommentPayload>
          }
          update: {
            args: Prisma.PropertyCommentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyCommentPayload>
          }
          deleteMany: {
            args: Prisma.PropertyCommentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PropertyCommentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PropertyCommentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyCommentPayload>[]
          }
          upsert: {
            args: Prisma.PropertyCommentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyCommentPayload>
          }
          aggregate: {
            args: Prisma.PropertyCommentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePropertyComment>
          }
          groupBy: {
            args: Prisma.PropertyCommentGroupByArgs<ExtArgs>
            result: $Utils.Optional<PropertyCommentGroupByOutputType>[]
          }
          count: {
            args: Prisma.PropertyCommentCountArgs<ExtArgs>
            result: $Utils.Optional<PropertyCommentCountAggregateOutputType> | number
          }
        }
      }
      PropertyViewing: {
        payload: Prisma.$PropertyViewingPayload<ExtArgs>
        fields: Prisma.PropertyViewingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PropertyViewingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyViewingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PropertyViewingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyViewingPayload>
          }
          findFirst: {
            args: Prisma.PropertyViewingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyViewingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PropertyViewingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyViewingPayload>
          }
          findMany: {
            args: Prisma.PropertyViewingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyViewingPayload>[]
          }
          create: {
            args: Prisma.PropertyViewingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyViewingPayload>
          }
          createMany: {
            args: Prisma.PropertyViewingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PropertyViewingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyViewingPayload>[]
          }
          delete: {
            args: Prisma.PropertyViewingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyViewingPayload>
          }
          update: {
            args: Prisma.PropertyViewingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyViewingPayload>
          }
          deleteMany: {
            args: Prisma.PropertyViewingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PropertyViewingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PropertyViewingUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyViewingPayload>[]
          }
          upsert: {
            args: Prisma.PropertyViewingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyViewingPayload>
          }
          aggregate: {
            args: Prisma.PropertyViewingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePropertyViewing>
          }
          groupBy: {
            args: Prisma.PropertyViewingGroupByArgs<ExtArgs>
            result: $Utils.Optional<PropertyViewingGroupByOutputType>[]
          }
          count: {
            args: Prisma.PropertyViewingCountArgs<ExtArgs>
            result: $Utils.Optional<PropertyViewingCountAggregateOutputType> | number
          }
        }
      }
      PropertyAnalytics: {
        payload: Prisma.$PropertyAnalyticsPayload<ExtArgs>
        fields: Prisma.PropertyAnalyticsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PropertyAnalyticsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyAnalyticsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PropertyAnalyticsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyAnalyticsPayload>
          }
          findFirst: {
            args: Prisma.PropertyAnalyticsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyAnalyticsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PropertyAnalyticsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyAnalyticsPayload>
          }
          findMany: {
            args: Prisma.PropertyAnalyticsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyAnalyticsPayload>[]
          }
          create: {
            args: Prisma.PropertyAnalyticsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyAnalyticsPayload>
          }
          createMany: {
            args: Prisma.PropertyAnalyticsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PropertyAnalyticsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyAnalyticsPayload>[]
          }
          delete: {
            args: Prisma.PropertyAnalyticsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyAnalyticsPayload>
          }
          update: {
            args: Prisma.PropertyAnalyticsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyAnalyticsPayload>
          }
          deleteMany: {
            args: Prisma.PropertyAnalyticsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PropertyAnalyticsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PropertyAnalyticsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyAnalyticsPayload>[]
          }
          upsert: {
            args: Prisma.PropertyAnalyticsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyAnalyticsPayload>
          }
          aggregate: {
            args: Prisma.PropertyAnalyticsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePropertyAnalytics>
          }
          groupBy: {
            args: Prisma.PropertyAnalyticsGroupByArgs<ExtArgs>
            result: $Utils.Optional<PropertyAnalyticsGroupByOutputType>[]
          }
          count: {
            args: Prisma.PropertyAnalyticsCountArgs<ExtArgs>
            result: $Utils.Optional<PropertyAnalyticsCountAggregateOutputType> | number
          }
        }
      }
      AdminAction: {
        payload: Prisma.$AdminActionPayload<ExtArgs>
        fields: Prisma.AdminActionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AdminActionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminActionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AdminActionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminActionPayload>
          }
          findFirst: {
            args: Prisma.AdminActionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminActionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AdminActionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminActionPayload>
          }
          findMany: {
            args: Prisma.AdminActionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminActionPayload>[]
          }
          create: {
            args: Prisma.AdminActionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminActionPayload>
          }
          createMany: {
            args: Prisma.AdminActionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AdminActionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminActionPayload>[]
          }
          delete: {
            args: Prisma.AdminActionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminActionPayload>
          }
          update: {
            args: Prisma.AdminActionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminActionPayload>
          }
          deleteMany: {
            args: Prisma.AdminActionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AdminActionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AdminActionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminActionPayload>[]
          }
          upsert: {
            args: Prisma.AdminActionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminActionPayload>
          }
          aggregate: {
            args: Prisma.AdminActionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdminAction>
          }
          groupBy: {
            args: Prisma.AdminActionGroupByArgs<ExtArgs>
            result: $Utils.Optional<AdminActionGroupByOutputType>[]
          }
          count: {
            args: Prisma.AdminActionCountArgs<ExtArgs>
            result: $Utils.Optional<AdminActionCountAggregateOutputType> | number
          }
        }
      }
      Notification: {
        payload: Prisma.$NotificationPayload<ExtArgs>
        fields: Prisma.NotificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findFirst: {
            args: Prisma.NotificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findMany: {
            args: Prisma.NotificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          create: {
            args: Prisma.NotificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          createMany: {
            args: Prisma.NotificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NotificationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          delete: {
            args: Prisma.NotificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          update: {
            args: Prisma.NotificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          deleteMany: {
            args: Prisma.NotificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.NotificationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          upsert: {
            args: Prisma.NotificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          aggregate: {
            args: Prisma.NotificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotification>
          }
          groupBy: {
            args: Prisma.NotificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotificationCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationCountAggregateOutputType> | number
          }
        }
      }
      Payment: {
        payload: Prisma.$PaymentPayload<ExtArgs>
        fields: Prisma.PaymentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findFirst: {
            args: Prisma.PaymentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findMany: {
            args: Prisma.PaymentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          create: {
            args: Prisma.PaymentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          createMany: {
            args: Prisma.PaymentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          delete: {
            args: Prisma.PaymentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          update: {
            args: Prisma.PaymentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          deleteMany: {
            args: Prisma.PaymentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PaymentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          upsert: {
            args: Prisma.PaymentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          aggregate: {
            args: Prisma.PaymentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePayment>
          }
          groupBy: {
            args: Prisma.PaymentGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentCountAggregateOutputType> | number
          }
        }
      }
      SavedSearch: {
        payload: Prisma.$SavedSearchPayload<ExtArgs>
        fields: Prisma.SavedSearchFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SavedSearchFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SavedSearchPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SavedSearchFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SavedSearchPayload>
          }
          findFirst: {
            args: Prisma.SavedSearchFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SavedSearchPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SavedSearchFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SavedSearchPayload>
          }
          findMany: {
            args: Prisma.SavedSearchFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SavedSearchPayload>[]
          }
          create: {
            args: Prisma.SavedSearchCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SavedSearchPayload>
          }
          createMany: {
            args: Prisma.SavedSearchCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SavedSearchCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SavedSearchPayload>[]
          }
          delete: {
            args: Prisma.SavedSearchDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SavedSearchPayload>
          }
          update: {
            args: Prisma.SavedSearchUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SavedSearchPayload>
          }
          deleteMany: {
            args: Prisma.SavedSearchDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SavedSearchUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SavedSearchUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SavedSearchPayload>[]
          }
          upsert: {
            args: Prisma.SavedSearchUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SavedSearchPayload>
          }
          aggregate: {
            args: Prisma.SavedSearchAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSavedSearch>
          }
          groupBy: {
            args: Prisma.SavedSearchGroupByArgs<ExtArgs>
            result: $Utils.Optional<SavedSearchGroupByOutputType>[]
          }
          count: {
            args: Prisma.SavedSearchCountArgs<ExtArgs>
            result: $Utils.Optional<SavedSearchCountAggregateOutputType> | number
          }
        }
      }
      PlatformSetting: {
        payload: Prisma.$PlatformSettingPayload<ExtArgs>
        fields: Prisma.PlatformSettingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PlatformSettingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatformSettingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PlatformSettingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatformSettingPayload>
          }
          findFirst: {
            args: Prisma.PlatformSettingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatformSettingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PlatformSettingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatformSettingPayload>
          }
          findMany: {
            args: Prisma.PlatformSettingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatformSettingPayload>[]
          }
          create: {
            args: Prisma.PlatformSettingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatformSettingPayload>
          }
          createMany: {
            args: Prisma.PlatformSettingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PlatformSettingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatformSettingPayload>[]
          }
          delete: {
            args: Prisma.PlatformSettingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatformSettingPayload>
          }
          update: {
            args: Prisma.PlatformSettingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatformSettingPayload>
          }
          deleteMany: {
            args: Prisma.PlatformSettingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PlatformSettingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PlatformSettingUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatformSettingPayload>[]
          }
          upsert: {
            args: Prisma.PlatformSettingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatformSettingPayload>
          }
          aggregate: {
            args: Prisma.PlatformSettingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePlatformSetting>
          }
          groupBy: {
            args: Prisma.PlatformSettingGroupByArgs<ExtArgs>
            result: $Utils.Optional<PlatformSettingGroupByOutputType>[]
          }
          count: {
            args: Prisma.PlatformSettingCountArgs<ExtArgs>
            result: $Utils.Optional<PlatformSettingCountAggregateOutputType> | number
          }
        }
      }
      PlatformAnalytics: {
        payload: Prisma.$PlatformAnalyticsPayload<ExtArgs>
        fields: Prisma.PlatformAnalyticsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PlatformAnalyticsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatformAnalyticsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PlatformAnalyticsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatformAnalyticsPayload>
          }
          findFirst: {
            args: Prisma.PlatformAnalyticsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatformAnalyticsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PlatformAnalyticsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatformAnalyticsPayload>
          }
          findMany: {
            args: Prisma.PlatformAnalyticsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatformAnalyticsPayload>[]
          }
          create: {
            args: Prisma.PlatformAnalyticsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatformAnalyticsPayload>
          }
          createMany: {
            args: Prisma.PlatformAnalyticsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PlatformAnalyticsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatformAnalyticsPayload>[]
          }
          delete: {
            args: Prisma.PlatformAnalyticsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatformAnalyticsPayload>
          }
          update: {
            args: Prisma.PlatformAnalyticsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatformAnalyticsPayload>
          }
          deleteMany: {
            args: Prisma.PlatformAnalyticsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PlatformAnalyticsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PlatformAnalyticsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatformAnalyticsPayload>[]
          }
          upsert: {
            args: Prisma.PlatformAnalyticsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlatformAnalyticsPayload>
          }
          aggregate: {
            args: Prisma.PlatformAnalyticsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePlatformAnalytics>
          }
          groupBy: {
            args: Prisma.PlatformAnalyticsGroupByArgs<ExtArgs>
            result: $Utils.Optional<PlatformAnalyticsGroupByOutputType>[]
          }
          count: {
            args: Prisma.PlatformAnalyticsCountArgs<ExtArgs>
            result: $Utils.Optional<PlatformAnalyticsCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: UserOmit
    agency?: AgencyOmit
    agencyMember?: AgencyMemberOmit
    agencyRole?: AgencyRoleOmit
    agencyVerificationDocument?: AgencyVerificationDocumentOmit
    agencyPerformance?: AgencyPerformanceOmit
    agentPerformance?: AgentPerformanceOmit
    agencyInquiry?: AgencyInquiryOmit
    property?: PropertyOmit
    propertyPhoto?: PropertyPhotoOmit
    propertyVideo?: PropertyVideoOmit
    virtualTour?: VirtualTourOmit
    propertyView?: PropertyViewOmit
    favorite?: FavoriteOmit
    favoriteList?: FavoriteListOmit
    propertyRequest?: PropertyRequestOmit
    propertyInquiry?: PropertyInquiryOmit
    propertyComparison?: PropertyComparisonOmit
    propertyComparisonProperties?: PropertyComparisonPropertiesOmit
    propertyReview?: PropertyReviewOmit
    propertyComment?: PropertyCommentOmit
    propertyViewing?: PropertyViewingOmit
    propertyAnalytics?: PropertyAnalyticsOmit
    adminAction?: AdminActionOmit
    notification?: NotificationOmit
    payment?: PaymentOmit
    savedSearch?: SavedSearchOmit
    platformSetting?: PlatformSettingOmit
    platformAnalytics?: PlatformAnalyticsOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    viewedProperties: number
    favorites: number
    favoriteLists: number
    requests: number
    inquiries: number
    propertyComparisons: number
    reviews: number
    comments: number
    ownedProperties: number
    managedProperties: number
    scheduledViewings: number
    buyerViewings: number
    propertyAnalytics: number
    agencyRoles: number
    adminActions: number
    adminActionTargets: number
    notifications: number
    payments: number
    AgencyMember: number
    SavedSearch: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    viewedProperties?: boolean | UserCountOutputTypeCountViewedPropertiesArgs
    favorites?: boolean | UserCountOutputTypeCountFavoritesArgs
    favoriteLists?: boolean | UserCountOutputTypeCountFavoriteListsArgs
    requests?: boolean | UserCountOutputTypeCountRequestsArgs
    inquiries?: boolean | UserCountOutputTypeCountInquiriesArgs
    propertyComparisons?: boolean | UserCountOutputTypeCountPropertyComparisonsArgs
    reviews?: boolean | UserCountOutputTypeCountReviewsArgs
    comments?: boolean | UserCountOutputTypeCountCommentsArgs
    ownedProperties?: boolean | UserCountOutputTypeCountOwnedPropertiesArgs
    managedProperties?: boolean | UserCountOutputTypeCountManagedPropertiesArgs
    scheduledViewings?: boolean | UserCountOutputTypeCountScheduledViewingsArgs
    buyerViewings?: boolean | UserCountOutputTypeCountBuyerViewingsArgs
    propertyAnalytics?: boolean | UserCountOutputTypeCountPropertyAnalyticsArgs
    agencyRoles?: boolean | UserCountOutputTypeCountAgencyRolesArgs
    adminActions?: boolean | UserCountOutputTypeCountAdminActionsArgs
    adminActionTargets?: boolean | UserCountOutputTypeCountAdminActionTargetsArgs
    notifications?: boolean | UserCountOutputTypeCountNotificationsArgs
    payments?: boolean | UserCountOutputTypeCountPaymentsArgs
    AgencyMember?: boolean | UserCountOutputTypeCountAgencyMemberArgs
    SavedSearch?: boolean | UserCountOutputTypeCountSavedSearchArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountViewedPropertiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyViewWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFavoritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFavoriteListsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteListWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountInquiriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyInquiryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPropertyComparisonsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyComparisonWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyReviewWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyCommentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOwnedPropertiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountManagedPropertiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountScheduledViewingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyViewingWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountBuyerViewingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyViewingWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPropertyAnalyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyAnalyticsWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAgencyRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyRoleWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAdminActionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdminActionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAdminActionTargetsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdminActionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPaymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAgencyMemberArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyMemberWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSavedSearchArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SavedSearchWhereInput
  }


  /**
   * Count Type AgencyCountOutputType
   */

  export type AgencyCountOutputType = {
    verificationDocuments: number
    teamMembers: number
    teamRoles: number
    properties: number
    inquiries: number
    adminActions: number
    User: number
  }

  export type AgencyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    verificationDocuments?: boolean | AgencyCountOutputTypeCountVerificationDocumentsArgs
    teamMembers?: boolean | AgencyCountOutputTypeCountTeamMembersArgs
    teamRoles?: boolean | AgencyCountOutputTypeCountTeamRolesArgs
    properties?: boolean | AgencyCountOutputTypeCountPropertiesArgs
    inquiries?: boolean | AgencyCountOutputTypeCountInquiriesArgs
    adminActions?: boolean | AgencyCountOutputTypeCountAdminActionsArgs
    User?: boolean | AgencyCountOutputTypeCountUserArgs
  }

  // Custom InputTypes
  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyCountOutputType
     */
    select?: AgencyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeCountVerificationDocumentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyVerificationDocumentWhereInput
  }

  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeCountTeamMembersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyMemberWhereInput
  }

  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeCountTeamRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyRoleWhereInput
  }

  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeCountPropertiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyWhereInput
  }

  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeCountInquiriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyInquiryWhereInput
  }

  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeCountAdminActionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdminActionWhereInput
  }

  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeCountUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }


  /**
   * Count Type PropertyCountOutputType
   */

  export type PropertyCountOutputType = {
    photos: number
    videos: number
    virtualTours: number
    views: number
    favorites: number
    requests: number
    inquiries: number
    comparisons: number
    reviews: number
    comments: number
    viewings: number
    analytics: number
    adminActions: number
    payments: number
    agencyInquiries: number
  }

  export type PropertyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    photos?: boolean | PropertyCountOutputTypeCountPhotosArgs
    videos?: boolean | PropertyCountOutputTypeCountVideosArgs
    virtualTours?: boolean | PropertyCountOutputTypeCountVirtualToursArgs
    views?: boolean | PropertyCountOutputTypeCountViewsArgs
    favorites?: boolean | PropertyCountOutputTypeCountFavoritesArgs
    requests?: boolean | PropertyCountOutputTypeCountRequestsArgs
    inquiries?: boolean | PropertyCountOutputTypeCountInquiriesArgs
    comparisons?: boolean | PropertyCountOutputTypeCountComparisonsArgs
    reviews?: boolean | PropertyCountOutputTypeCountReviewsArgs
    comments?: boolean | PropertyCountOutputTypeCountCommentsArgs
    viewings?: boolean | PropertyCountOutputTypeCountViewingsArgs
    analytics?: boolean | PropertyCountOutputTypeCountAnalyticsArgs
    adminActions?: boolean | PropertyCountOutputTypeCountAdminActionsArgs
    payments?: boolean | PropertyCountOutputTypeCountPaymentsArgs
    agencyInquiries?: boolean | PropertyCountOutputTypeCountAgencyInquiriesArgs
  }

  // Custom InputTypes
  /**
   * PropertyCountOutputType without action
   */
  export type PropertyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyCountOutputType
     */
    select?: PropertyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PropertyCountOutputType without action
   */
  export type PropertyCountOutputTypeCountPhotosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyPhotoWhereInput
  }

  /**
   * PropertyCountOutputType without action
   */
  export type PropertyCountOutputTypeCountVideosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyVideoWhereInput
  }

  /**
   * PropertyCountOutputType without action
   */
  export type PropertyCountOutputTypeCountVirtualToursArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VirtualTourWhereInput
  }

  /**
   * PropertyCountOutputType without action
   */
  export type PropertyCountOutputTypeCountViewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyViewWhereInput
  }

  /**
   * PropertyCountOutputType without action
   */
  export type PropertyCountOutputTypeCountFavoritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteWhereInput
  }

  /**
   * PropertyCountOutputType without action
   */
  export type PropertyCountOutputTypeCountRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyRequestWhereInput
  }

  /**
   * PropertyCountOutputType without action
   */
  export type PropertyCountOutputTypeCountInquiriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyInquiryWhereInput
  }

  /**
   * PropertyCountOutputType without action
   */
  export type PropertyCountOutputTypeCountComparisonsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyComparisonPropertiesWhereInput
  }

  /**
   * PropertyCountOutputType without action
   */
  export type PropertyCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyReviewWhereInput
  }

  /**
   * PropertyCountOutputType without action
   */
  export type PropertyCountOutputTypeCountCommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyCommentWhereInput
  }

  /**
   * PropertyCountOutputType without action
   */
  export type PropertyCountOutputTypeCountViewingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyViewingWhereInput
  }

  /**
   * PropertyCountOutputType without action
   */
  export type PropertyCountOutputTypeCountAnalyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyAnalyticsWhereInput
  }

  /**
   * PropertyCountOutputType without action
   */
  export type PropertyCountOutputTypeCountAdminActionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdminActionWhereInput
  }

  /**
   * PropertyCountOutputType without action
   */
  export type PropertyCountOutputTypeCountPaymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
  }

  /**
   * PropertyCountOutputType without action
   */
  export type PropertyCountOutputTypeCountAgencyInquiriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyInquiryWhereInput
  }


  /**
   * Count Type FavoriteListCountOutputType
   */

  export type FavoriteListCountOutputType = {
    favorites: number
  }

  export type FavoriteListCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    favorites?: boolean | FavoriteListCountOutputTypeCountFavoritesArgs
  }

  // Custom InputTypes
  /**
   * FavoriteListCountOutputType without action
   */
  export type FavoriteListCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteListCountOutputType
     */
    select?: FavoriteListCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FavoriteListCountOutputType without action
   */
  export type FavoriteListCountOutputTypeCountFavoritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteWhereInput
  }


  /**
   * Count Type PropertyRequestCountOutputType
   */

  export type PropertyRequestCountOutputType = {
    viewings: number
    payments: number
  }

  export type PropertyRequestCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    viewings?: boolean | PropertyRequestCountOutputTypeCountViewingsArgs
    payments?: boolean | PropertyRequestCountOutputTypeCountPaymentsArgs
  }

  // Custom InputTypes
  /**
   * PropertyRequestCountOutputType without action
   */
  export type PropertyRequestCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRequestCountOutputType
     */
    select?: PropertyRequestCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PropertyRequestCountOutputType without action
   */
  export type PropertyRequestCountOutputTypeCountViewingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyViewingWhereInput
  }

  /**
   * PropertyRequestCountOutputType without action
   */
  export type PropertyRequestCountOutputTypeCountPaymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
  }


  /**
   * Count Type PropertyComparisonCountOutputType
   */

  export type PropertyComparisonCountOutputType = {
    PropertyComparisonProperties: number
  }

  export type PropertyComparisonCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    PropertyComparisonProperties?: boolean | PropertyComparisonCountOutputTypeCountPropertyComparisonPropertiesArgs
  }

  // Custom InputTypes
  /**
   * PropertyComparisonCountOutputType without action
   */
  export type PropertyComparisonCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparisonCountOutputType
     */
    select?: PropertyComparisonCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PropertyComparisonCountOutputType without action
   */
  export type PropertyComparisonCountOutputTypeCountPropertyComparisonPropertiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyComparisonPropertiesWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    firstName: string | null
    lastName: string | null
    phone: string | null
    avatar: string | null
    dateOfBirth: Date | null
    address: string | null
    city: string | null
    state: string | null
    zipCode: string | null
    country: string | null
    isVerified: boolean | null
    isActive: boolean | null
    isBanned: boolean | null
    banReason: string | null
    bannedAt: Date | null
    bannedBy: string | null
    createdAt: Date | null
    updatedAt: Date | null
    agencyId: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    firstName: string | null
    lastName: string | null
    phone: string | null
    avatar: string | null
    dateOfBirth: Date | null
    address: string | null
    city: string | null
    state: string | null
    zipCode: string | null
    country: string | null
    isVerified: boolean | null
    isActive: boolean | null
    isBanned: boolean | null
    banReason: string | null
    bannedAt: Date | null
    bannedBy: string | null
    createdAt: Date | null
    updatedAt: Date | null
    agencyId: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    password: number
    firstName: number
    lastName: number
    phone: number
    avatar: number
    roles: number
    dateOfBirth: number
    address: number
    city: number
    state: number
    zipCode: number
    country: number
    isVerified: number
    isActive: number
    isBanned: number
    banReason: number
    bannedAt: number
    bannedBy: number
    createdAt: number
    updatedAt: number
    agencyId: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    password?: true
    firstName?: true
    lastName?: true
    phone?: true
    avatar?: true
    dateOfBirth?: true
    address?: true
    city?: true
    state?: true
    zipCode?: true
    country?: true
    isVerified?: true
    isActive?: true
    isBanned?: true
    banReason?: true
    bannedAt?: true
    bannedBy?: true
    createdAt?: true
    updatedAt?: true
    agencyId?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    password?: true
    firstName?: true
    lastName?: true
    phone?: true
    avatar?: true
    dateOfBirth?: true
    address?: true
    city?: true
    state?: true
    zipCode?: true
    country?: true
    isVerified?: true
    isActive?: true
    isBanned?: true
    banReason?: true
    bannedAt?: true
    bannedBy?: true
    createdAt?: true
    updatedAt?: true
    agencyId?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    password?: true
    firstName?: true
    lastName?: true
    phone?: true
    avatar?: true
    roles?: true
    dateOfBirth?: true
    address?: true
    city?: true
    state?: true
    zipCode?: true
    country?: true
    isVerified?: true
    isActive?: true
    isBanned?: true
    banReason?: true
    bannedAt?: true
    bannedBy?: true
    createdAt?: true
    updatedAt?: true
    agencyId?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone: string | null
    avatar: string | null
    roles: $Enums.UserRole[]
    dateOfBirth: Date | null
    address: string | null
    city: string | null
    state: string | null
    zipCode: string | null
    country: string | null
    isVerified: boolean
    isActive: boolean
    isBanned: boolean
    banReason: string | null
    bannedAt: Date | null
    bannedBy: string | null
    createdAt: Date
    updatedAt: Date
    agencyId: string | null
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    avatar?: boolean
    roles?: boolean
    dateOfBirth?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    country?: boolean
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: boolean
    bannedAt?: boolean
    bannedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agencyId?: boolean
    viewedProperties?: boolean | User$viewedPropertiesArgs<ExtArgs>
    favorites?: boolean | User$favoritesArgs<ExtArgs>
    favoriteLists?: boolean | User$favoriteListsArgs<ExtArgs>
    requests?: boolean | User$requestsArgs<ExtArgs>
    inquiries?: boolean | User$inquiriesArgs<ExtArgs>
    propertyComparisons?: boolean | User$propertyComparisonsArgs<ExtArgs>
    reviews?: boolean | User$reviewsArgs<ExtArgs>
    comments?: boolean | User$commentsArgs<ExtArgs>
    ownedProperties?: boolean | User$ownedPropertiesArgs<ExtArgs>
    managedProperties?: boolean | User$managedPropertiesArgs<ExtArgs>
    scheduledViewings?: boolean | User$scheduledViewingsArgs<ExtArgs>
    buyerViewings?: boolean | User$buyerViewingsArgs<ExtArgs>
    propertyAnalytics?: boolean | User$propertyAnalyticsArgs<ExtArgs>
    agency?: boolean | User$agencyArgs<ExtArgs>
    agencyRoles?: boolean | User$agencyRolesArgs<ExtArgs>
    adminActions?: boolean | User$adminActionsArgs<ExtArgs>
    adminActionTargets?: boolean | User$adminActionTargetsArgs<ExtArgs>
    notifications?: boolean | User$notificationsArgs<ExtArgs>
    payments?: boolean | User$paymentsArgs<ExtArgs>
    AgencyMember?: boolean | User$AgencyMemberArgs<ExtArgs>
    SavedSearch?: boolean | User$SavedSearchArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    avatar?: boolean
    roles?: boolean
    dateOfBirth?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    country?: boolean
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: boolean
    bannedAt?: boolean
    bannedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agencyId?: boolean
    agency?: boolean | User$agencyArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    avatar?: boolean
    roles?: boolean
    dateOfBirth?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    country?: boolean
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: boolean
    bannedAt?: boolean
    bannedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agencyId?: boolean
    agency?: boolean | User$agencyArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    avatar?: boolean
    roles?: boolean
    dateOfBirth?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    country?: boolean
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: boolean
    bannedAt?: boolean
    bannedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agencyId?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "password" | "firstName" | "lastName" | "phone" | "avatar" | "roles" | "dateOfBirth" | "address" | "city" | "state" | "zipCode" | "country" | "isVerified" | "isActive" | "isBanned" | "banReason" | "bannedAt" | "bannedBy" | "createdAt" | "updatedAt" | "agencyId", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    viewedProperties?: boolean | User$viewedPropertiesArgs<ExtArgs>
    favorites?: boolean | User$favoritesArgs<ExtArgs>
    favoriteLists?: boolean | User$favoriteListsArgs<ExtArgs>
    requests?: boolean | User$requestsArgs<ExtArgs>
    inquiries?: boolean | User$inquiriesArgs<ExtArgs>
    propertyComparisons?: boolean | User$propertyComparisonsArgs<ExtArgs>
    reviews?: boolean | User$reviewsArgs<ExtArgs>
    comments?: boolean | User$commentsArgs<ExtArgs>
    ownedProperties?: boolean | User$ownedPropertiesArgs<ExtArgs>
    managedProperties?: boolean | User$managedPropertiesArgs<ExtArgs>
    scheduledViewings?: boolean | User$scheduledViewingsArgs<ExtArgs>
    buyerViewings?: boolean | User$buyerViewingsArgs<ExtArgs>
    propertyAnalytics?: boolean | User$propertyAnalyticsArgs<ExtArgs>
    agency?: boolean | User$agencyArgs<ExtArgs>
    agencyRoles?: boolean | User$agencyRolesArgs<ExtArgs>
    adminActions?: boolean | User$adminActionsArgs<ExtArgs>
    adminActionTargets?: boolean | User$adminActionTargetsArgs<ExtArgs>
    notifications?: boolean | User$notificationsArgs<ExtArgs>
    payments?: boolean | User$paymentsArgs<ExtArgs>
    AgencyMember?: boolean | User$AgencyMemberArgs<ExtArgs>
    SavedSearch?: boolean | User$SavedSearchArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | User$agencyArgs<ExtArgs>
  }
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | User$agencyArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      viewedProperties: Prisma.$PropertyViewPayload<ExtArgs>[]
      favorites: Prisma.$FavoritePayload<ExtArgs>[]
      favoriteLists: Prisma.$FavoriteListPayload<ExtArgs>[]
      requests: Prisma.$PropertyRequestPayload<ExtArgs>[]
      inquiries: Prisma.$PropertyInquiryPayload<ExtArgs>[]
      propertyComparisons: Prisma.$PropertyComparisonPayload<ExtArgs>[]
      reviews: Prisma.$PropertyReviewPayload<ExtArgs>[]
      comments: Prisma.$PropertyCommentPayload<ExtArgs>[]
      ownedProperties: Prisma.$PropertyPayload<ExtArgs>[]
      managedProperties: Prisma.$PropertyPayload<ExtArgs>[]
      scheduledViewings: Prisma.$PropertyViewingPayload<ExtArgs>[]
      buyerViewings: Prisma.$PropertyViewingPayload<ExtArgs>[]
      propertyAnalytics: Prisma.$PropertyAnalyticsPayload<ExtArgs>[]
      agency: Prisma.$AgencyPayload<ExtArgs> | null
      agencyRoles: Prisma.$AgencyRolePayload<ExtArgs>[]
      adminActions: Prisma.$AdminActionPayload<ExtArgs>[]
      adminActionTargets: Prisma.$AdminActionPayload<ExtArgs>[]
      notifications: Prisma.$NotificationPayload<ExtArgs>[]
      payments: Prisma.$PaymentPayload<ExtArgs>[]
      AgencyMember: Prisma.$AgencyMemberPayload<ExtArgs>[]
      SavedSearch: Prisma.$SavedSearchPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      password: string
      firstName: string
      lastName: string
      phone: string | null
      avatar: string | null
      roles: $Enums.UserRole[]
      dateOfBirth: Date | null
      address: string | null
      city: string | null
      state: string | null
      zipCode: string | null
      country: string | null
      isVerified: boolean
      isActive: boolean
      isBanned: boolean
      banReason: string | null
      bannedAt: Date | null
      bannedBy: string | null
      createdAt: Date
      updatedAt: Date
      agencyId: string | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    viewedProperties<T extends User$viewedPropertiesArgs<ExtArgs> = {}>(args?: Subset<T, User$viewedPropertiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyViewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    favorites<T extends User$favoritesArgs<ExtArgs> = {}>(args?: Subset<T, User$favoritesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    favoriteLists<T extends User$favoriteListsArgs<ExtArgs> = {}>(args?: Subset<T, User$favoriteListsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoriteListPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    requests<T extends User$requestsArgs<ExtArgs> = {}>(args?: Subset<T, User$requestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    inquiries<T extends User$inquiriesArgs<ExtArgs> = {}>(args?: Subset<T, User$inquiriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyInquiryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    propertyComparisons<T extends User$propertyComparisonsArgs<ExtArgs> = {}>(args?: Subset<T, User$propertyComparisonsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyComparisonPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reviews<T extends User$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, User$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    comments<T extends User$commentsArgs<ExtArgs> = {}>(args?: Subset<T, User$commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyCommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ownedProperties<T extends User$ownedPropertiesArgs<ExtArgs> = {}>(args?: Subset<T, User$ownedPropertiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    managedProperties<T extends User$managedPropertiesArgs<ExtArgs> = {}>(args?: Subset<T, User$managedPropertiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    scheduledViewings<T extends User$scheduledViewingsArgs<ExtArgs> = {}>(args?: Subset<T, User$scheduledViewingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyViewingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    buyerViewings<T extends User$buyerViewingsArgs<ExtArgs> = {}>(args?: Subset<T, User$buyerViewingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyViewingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    propertyAnalytics<T extends User$propertyAnalyticsArgs<ExtArgs> = {}>(args?: Subset<T, User$propertyAnalyticsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyAnalyticsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    agency<T extends User$agencyArgs<ExtArgs> = {}>(args?: Subset<T, User$agencyArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    agencyRoles<T extends User$agencyRolesArgs<ExtArgs> = {}>(args?: Subset<T, User$agencyRolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyRolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    adminActions<T extends User$adminActionsArgs<ExtArgs> = {}>(args?: Subset<T, User$adminActionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    adminActionTargets<T extends User$adminActionTargetsArgs<ExtArgs> = {}>(args?: Subset<T, User$adminActionTargetsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notifications<T extends User$notificationsArgs<ExtArgs> = {}>(args?: Subset<T, User$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    payments<T extends User$paymentsArgs<ExtArgs> = {}>(args?: Subset<T, User$paymentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    AgencyMember<T extends User$AgencyMemberArgs<ExtArgs> = {}>(args?: Subset<T, User$AgencyMemberArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyMemberPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SavedSearch<T extends User$SavedSearchArgs<ExtArgs> = {}>(args?: Subset<T, User$SavedSearchArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SavedSearchPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly firstName: FieldRef<"User", 'String'>
    readonly lastName: FieldRef<"User", 'String'>
    readonly phone: FieldRef<"User", 'String'>
    readonly avatar: FieldRef<"User", 'String'>
    readonly roles: FieldRef<"User", 'UserRole[]'>
    readonly dateOfBirth: FieldRef<"User", 'DateTime'>
    readonly address: FieldRef<"User", 'String'>
    readonly city: FieldRef<"User", 'String'>
    readonly state: FieldRef<"User", 'String'>
    readonly zipCode: FieldRef<"User", 'String'>
    readonly country: FieldRef<"User", 'String'>
    readonly isVerified: FieldRef<"User", 'Boolean'>
    readonly isActive: FieldRef<"User", 'Boolean'>
    readonly isBanned: FieldRef<"User", 'Boolean'>
    readonly banReason: FieldRef<"User", 'String'>
    readonly bannedAt: FieldRef<"User", 'DateTime'>
    readonly bannedBy: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly agencyId: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.viewedProperties
   */
  export type User$viewedPropertiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyView
     */
    select?: PropertyViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyView
     */
    omit?: PropertyViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewInclude<ExtArgs> | null
    where?: PropertyViewWhereInput
    orderBy?: PropertyViewOrderByWithRelationInput | PropertyViewOrderByWithRelationInput[]
    cursor?: PropertyViewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyViewScalarFieldEnum | PropertyViewScalarFieldEnum[]
  }

  /**
   * User.favorites
   */
  export type User$favoritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    where?: FavoriteWhereInput
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    cursor?: FavoriteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * User.favoriteLists
   */
  export type User$favoriteListsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteList
     */
    select?: FavoriteListSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteList
     */
    omit?: FavoriteListOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteListInclude<ExtArgs> | null
    where?: FavoriteListWhereInput
    orderBy?: FavoriteListOrderByWithRelationInput | FavoriteListOrderByWithRelationInput[]
    cursor?: FavoriteListWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoriteListScalarFieldEnum | FavoriteListScalarFieldEnum[]
  }

  /**
   * User.requests
   */
  export type User$requestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRequest
     */
    select?: PropertyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRequest
     */
    omit?: PropertyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRequestInclude<ExtArgs> | null
    where?: PropertyRequestWhereInput
    orderBy?: PropertyRequestOrderByWithRelationInput | PropertyRequestOrderByWithRelationInput[]
    cursor?: PropertyRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyRequestScalarFieldEnum | PropertyRequestScalarFieldEnum[]
  }

  /**
   * User.inquiries
   */
  export type User$inquiriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyInquiry
     */
    select?: PropertyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyInquiry
     */
    omit?: PropertyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInquiryInclude<ExtArgs> | null
    where?: PropertyInquiryWhereInput
    orderBy?: PropertyInquiryOrderByWithRelationInput | PropertyInquiryOrderByWithRelationInput[]
    cursor?: PropertyInquiryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyInquiryScalarFieldEnum | PropertyInquiryScalarFieldEnum[]
  }

  /**
   * User.propertyComparisons
   */
  export type User$propertyComparisonsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparison
     */
    select?: PropertyComparisonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparison
     */
    omit?: PropertyComparisonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonInclude<ExtArgs> | null
    where?: PropertyComparisonWhereInput
    orderBy?: PropertyComparisonOrderByWithRelationInput | PropertyComparisonOrderByWithRelationInput[]
    cursor?: PropertyComparisonWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyComparisonScalarFieldEnum | PropertyComparisonScalarFieldEnum[]
  }

  /**
   * User.reviews
   */
  export type User$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyReview
     */
    select?: PropertyReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyReview
     */
    omit?: PropertyReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyReviewInclude<ExtArgs> | null
    where?: PropertyReviewWhereInput
    orderBy?: PropertyReviewOrderByWithRelationInput | PropertyReviewOrderByWithRelationInput[]
    cursor?: PropertyReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyReviewScalarFieldEnum | PropertyReviewScalarFieldEnum[]
  }

  /**
   * User.comments
   */
  export type User$commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComment
     */
    select?: PropertyCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComment
     */
    omit?: PropertyCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyCommentInclude<ExtArgs> | null
    where?: PropertyCommentWhereInput
    orderBy?: PropertyCommentOrderByWithRelationInput | PropertyCommentOrderByWithRelationInput[]
    cursor?: PropertyCommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyCommentScalarFieldEnum | PropertyCommentScalarFieldEnum[]
  }

  /**
   * User.ownedProperties
   */
  export type User$ownedPropertiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Property
     */
    select?: PropertySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Property
     */
    omit?: PropertyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInclude<ExtArgs> | null
    where?: PropertyWhereInput
    orderBy?: PropertyOrderByWithRelationInput | PropertyOrderByWithRelationInput[]
    cursor?: PropertyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyScalarFieldEnum | PropertyScalarFieldEnum[]
  }

  /**
   * User.managedProperties
   */
  export type User$managedPropertiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Property
     */
    select?: PropertySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Property
     */
    omit?: PropertyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInclude<ExtArgs> | null
    where?: PropertyWhereInput
    orderBy?: PropertyOrderByWithRelationInput | PropertyOrderByWithRelationInput[]
    cursor?: PropertyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyScalarFieldEnum | PropertyScalarFieldEnum[]
  }

  /**
   * User.scheduledViewings
   */
  export type User$scheduledViewingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyViewing
     */
    select?: PropertyViewingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyViewing
     */
    omit?: PropertyViewingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewingInclude<ExtArgs> | null
    where?: PropertyViewingWhereInput
    orderBy?: PropertyViewingOrderByWithRelationInput | PropertyViewingOrderByWithRelationInput[]
    cursor?: PropertyViewingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyViewingScalarFieldEnum | PropertyViewingScalarFieldEnum[]
  }

  /**
   * User.buyerViewings
   */
  export type User$buyerViewingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyViewing
     */
    select?: PropertyViewingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyViewing
     */
    omit?: PropertyViewingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewingInclude<ExtArgs> | null
    where?: PropertyViewingWhereInput
    orderBy?: PropertyViewingOrderByWithRelationInput | PropertyViewingOrderByWithRelationInput[]
    cursor?: PropertyViewingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyViewingScalarFieldEnum | PropertyViewingScalarFieldEnum[]
  }

  /**
   * User.propertyAnalytics
   */
  export type User$propertyAnalyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyAnalytics
     */
    select?: PropertyAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyAnalytics
     */
    omit?: PropertyAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyAnalyticsInclude<ExtArgs> | null
    where?: PropertyAnalyticsWhereInput
    orderBy?: PropertyAnalyticsOrderByWithRelationInput | PropertyAnalyticsOrderByWithRelationInput[]
    cursor?: PropertyAnalyticsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyAnalyticsScalarFieldEnum | PropertyAnalyticsScalarFieldEnum[]
  }

  /**
   * User.agency
   */
  export type User$agencyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    where?: AgencyWhereInput
  }

  /**
   * User.agencyRoles
   */
  export type User$agencyRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRole
     */
    select?: AgencyRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyRole
     */
    omit?: AgencyRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRoleInclude<ExtArgs> | null
    where?: AgencyRoleWhereInput
    orderBy?: AgencyRoleOrderByWithRelationInput | AgencyRoleOrderByWithRelationInput[]
    cursor?: AgencyRoleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AgencyRoleScalarFieldEnum | AgencyRoleScalarFieldEnum[]
  }

  /**
   * User.adminActions
   */
  export type User$adminActionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminAction
     */
    omit?: AdminActionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
    where?: AdminActionWhereInput
    orderBy?: AdminActionOrderByWithRelationInput | AdminActionOrderByWithRelationInput[]
    cursor?: AdminActionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdminActionScalarFieldEnum | AdminActionScalarFieldEnum[]
  }

  /**
   * User.adminActionTargets
   */
  export type User$adminActionTargetsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminAction
     */
    omit?: AdminActionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
    where?: AdminActionWhereInput
    orderBy?: AdminActionOrderByWithRelationInput | AdminActionOrderByWithRelationInput[]
    cursor?: AdminActionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdminActionScalarFieldEnum | AdminActionScalarFieldEnum[]
  }

  /**
   * User.notifications
   */
  export type User$notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * User.payments
   */
  export type User$paymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    cursor?: PaymentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * User.AgencyMember
   */
  export type User$AgencyMemberArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMember
     */
    select?: AgencyMemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyMember
     */
    omit?: AgencyMemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMemberInclude<ExtArgs> | null
    where?: AgencyMemberWhereInput
    orderBy?: AgencyMemberOrderByWithRelationInput | AgencyMemberOrderByWithRelationInput[]
    cursor?: AgencyMemberWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AgencyMemberScalarFieldEnum | AgencyMemberScalarFieldEnum[]
  }

  /**
   * User.SavedSearch
   */
  export type User$SavedSearchArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedSearch
     */
    select?: SavedSearchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedSearch
     */
    omit?: SavedSearchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedSearchInclude<ExtArgs> | null
    where?: SavedSearchWhereInput
    orderBy?: SavedSearchOrderByWithRelationInput | SavedSearchOrderByWithRelationInput[]
    cursor?: SavedSearchWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SavedSearchScalarFieldEnum | SavedSearchScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Agency
   */

  export type AggregateAgency = {
    _count: AgencyCountAggregateOutputType | null
    _avg: AgencyAvgAggregateOutputType | null
    _sum: AgencySumAggregateOutputType | null
    _min: AgencyMinAggregateOutputType | null
    _max: AgencyMaxAggregateOutputType | null
  }

  export type AgencyAvgAggregateOutputType = {
    latitude: number | null
    longitude: number | null
  }

  export type AgencySumAggregateOutputType = {
    latitude: number | null
    longitude: number | null
  }

  export type AgencyMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    logo: string | null
    activityType: $Enums.AgencyActivityType | null
    businessPhone: string | null
    businessEmail: string | null
    website: string | null
    address: string | null
    city: string | null
    state: string | null
    zipCode: string | null
    country: string | null
    latitude: number | null
    longitude: number | null
    businessRegistrationNumber: string | null
    activityLicense: string | null
    taxId: string | null
    bankAccountInfo: string | null
    isVerified: boolean | null
    isActive: boolean | null
    isSuspended: boolean | null
    suspensionReason: string | null
    suspendedAt: Date | null
    suspendedBy: string | null
    verificationStatus: $Enums.AgencyVerificationStatus | null
    verifiedBy: string | null
    verifiedAt: Date | null
    verificationNotes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AgencyMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    logo: string | null
    activityType: $Enums.AgencyActivityType | null
    businessPhone: string | null
    businessEmail: string | null
    website: string | null
    address: string | null
    city: string | null
    state: string | null
    zipCode: string | null
    country: string | null
    latitude: number | null
    longitude: number | null
    businessRegistrationNumber: string | null
    activityLicense: string | null
    taxId: string | null
    bankAccountInfo: string | null
    isVerified: boolean | null
    isActive: boolean | null
    isSuspended: boolean | null
    suspensionReason: string | null
    suspendedAt: Date | null
    suspendedBy: string | null
    verificationStatus: $Enums.AgencyVerificationStatus | null
    verifiedBy: string | null
    verifiedAt: Date | null
    verificationNotes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AgencyCountAggregateOutputType = {
    id: number
    name: number
    description: number
    logo: number
    activityType: number
    businessPhone: number
    businessEmail: number
    website: number
    address: number
    city: number
    state: number
    zipCode: number
    country: number
    latitude: number
    longitude: number
    businessRegistrationNumber: number
    activityLicense: number
    taxId: number
    bankAccountInfo: number
    isVerified: number
    isActive: number
    isSuspended: number
    suspensionReason: number
    suspendedAt: number
    suspendedBy: number
    verificationStatus: number
    verifiedBy: number
    verifiedAt: number
    verificationNotes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AgencyAvgAggregateInputType = {
    latitude?: true
    longitude?: true
  }

  export type AgencySumAggregateInputType = {
    latitude?: true
    longitude?: true
  }

  export type AgencyMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    logo?: true
    activityType?: true
    businessPhone?: true
    businessEmail?: true
    website?: true
    address?: true
    city?: true
    state?: true
    zipCode?: true
    country?: true
    latitude?: true
    longitude?: true
    businessRegistrationNumber?: true
    activityLicense?: true
    taxId?: true
    bankAccountInfo?: true
    isVerified?: true
    isActive?: true
    isSuspended?: true
    suspensionReason?: true
    suspendedAt?: true
    suspendedBy?: true
    verificationStatus?: true
    verifiedBy?: true
    verifiedAt?: true
    verificationNotes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AgencyMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    logo?: true
    activityType?: true
    businessPhone?: true
    businessEmail?: true
    website?: true
    address?: true
    city?: true
    state?: true
    zipCode?: true
    country?: true
    latitude?: true
    longitude?: true
    businessRegistrationNumber?: true
    activityLicense?: true
    taxId?: true
    bankAccountInfo?: true
    isVerified?: true
    isActive?: true
    isSuspended?: true
    suspensionReason?: true
    suspendedAt?: true
    suspendedBy?: true
    verificationStatus?: true
    verifiedBy?: true
    verifiedAt?: true
    verificationNotes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AgencyCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    logo?: true
    activityType?: true
    businessPhone?: true
    businessEmail?: true
    website?: true
    address?: true
    city?: true
    state?: true
    zipCode?: true
    country?: true
    latitude?: true
    longitude?: true
    businessRegistrationNumber?: true
    activityLicense?: true
    taxId?: true
    bankAccountInfo?: true
    isVerified?: true
    isActive?: true
    isSuspended?: true
    suspensionReason?: true
    suspendedAt?: true
    suspendedBy?: true
    verificationStatus?: true
    verifiedBy?: true
    verifiedAt?: true
    verificationNotes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AgencyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Agency to aggregate.
     */
    where?: AgencyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Agencies to fetch.
     */
    orderBy?: AgencyOrderByWithRelationInput | AgencyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AgencyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Agencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Agencies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Agencies
    **/
    _count?: true | AgencyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AgencyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AgencySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AgencyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AgencyMaxAggregateInputType
  }

  export type GetAgencyAggregateType<T extends AgencyAggregateArgs> = {
        [P in keyof T & keyof AggregateAgency]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAgency[P]>
      : GetScalarType<T[P], AggregateAgency[P]>
  }




  export type AgencyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyWhereInput
    orderBy?: AgencyOrderByWithAggregationInput | AgencyOrderByWithAggregationInput[]
    by: AgencyScalarFieldEnum[] | AgencyScalarFieldEnum
    having?: AgencyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AgencyCountAggregateInputType | true
    _avg?: AgencyAvgAggregateInputType
    _sum?: AgencySumAggregateInputType
    _min?: AgencyMinAggregateInputType
    _max?: AgencyMaxAggregateInputType
  }

  export type AgencyGroupByOutputType = {
    id: string
    name: string
    description: string | null
    logo: string | null
    activityType: $Enums.AgencyActivityType
    businessPhone: string
    businessEmail: string
    website: string | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude: number | null
    longitude: number | null
    businessRegistrationNumber: string | null
    activityLicense: string | null
    taxId: string | null
    bankAccountInfo: string | null
    isVerified: boolean
    isActive: boolean
    isSuspended: boolean
    suspensionReason: string | null
    suspendedAt: Date | null
    suspendedBy: string | null
    verificationStatus: $Enums.AgencyVerificationStatus
    verifiedBy: string | null
    verifiedAt: Date | null
    verificationNotes: string | null
    createdAt: Date
    updatedAt: Date
    _count: AgencyCountAggregateOutputType | null
    _avg: AgencyAvgAggregateOutputType | null
    _sum: AgencySumAggregateOutputType | null
    _min: AgencyMinAggregateOutputType | null
    _max: AgencyMaxAggregateOutputType | null
  }

  type GetAgencyGroupByPayload<T extends AgencyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AgencyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AgencyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AgencyGroupByOutputType[P]>
            : GetScalarType<T[P], AgencyGroupByOutputType[P]>
        }
      >
    >


  export type AgencySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    logo?: boolean
    activityType?: boolean
    businessPhone?: boolean
    businessEmail?: boolean
    website?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    businessRegistrationNumber?: boolean
    activityLicense?: boolean
    taxId?: boolean
    bankAccountInfo?: boolean
    isVerified?: boolean
    isActive?: boolean
    isSuspended?: boolean
    suspensionReason?: boolean
    suspendedAt?: boolean
    suspendedBy?: boolean
    verificationStatus?: boolean
    verifiedBy?: boolean
    verifiedAt?: boolean
    verificationNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    verificationDocuments?: boolean | Agency$verificationDocumentsArgs<ExtArgs>
    teamMembers?: boolean | Agency$teamMembersArgs<ExtArgs>
    teamRoles?: boolean | Agency$teamRolesArgs<ExtArgs>
    properties?: boolean | Agency$propertiesArgs<ExtArgs>
    performance?: boolean | Agency$performanceArgs<ExtArgs>
    inquiries?: boolean | Agency$inquiriesArgs<ExtArgs>
    adminActions?: boolean | Agency$adminActionsArgs<ExtArgs>
    User?: boolean | Agency$UserArgs<ExtArgs>
    _count?: boolean | AgencyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agency"]>

  export type AgencySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    logo?: boolean
    activityType?: boolean
    businessPhone?: boolean
    businessEmail?: boolean
    website?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    businessRegistrationNumber?: boolean
    activityLicense?: boolean
    taxId?: boolean
    bankAccountInfo?: boolean
    isVerified?: boolean
    isActive?: boolean
    isSuspended?: boolean
    suspensionReason?: boolean
    suspendedAt?: boolean
    suspendedBy?: boolean
    verificationStatus?: boolean
    verifiedBy?: boolean
    verifiedAt?: boolean
    verificationNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["agency"]>

  export type AgencySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    logo?: boolean
    activityType?: boolean
    businessPhone?: boolean
    businessEmail?: boolean
    website?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    businessRegistrationNumber?: boolean
    activityLicense?: boolean
    taxId?: boolean
    bankAccountInfo?: boolean
    isVerified?: boolean
    isActive?: boolean
    isSuspended?: boolean
    suspensionReason?: boolean
    suspendedAt?: boolean
    suspendedBy?: boolean
    verificationStatus?: boolean
    verifiedBy?: boolean
    verifiedAt?: boolean
    verificationNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["agency"]>

  export type AgencySelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    logo?: boolean
    activityType?: boolean
    businessPhone?: boolean
    businessEmail?: boolean
    website?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    businessRegistrationNumber?: boolean
    activityLicense?: boolean
    taxId?: boolean
    bankAccountInfo?: boolean
    isVerified?: boolean
    isActive?: boolean
    isSuspended?: boolean
    suspensionReason?: boolean
    suspendedAt?: boolean
    suspendedBy?: boolean
    verificationStatus?: boolean
    verifiedBy?: boolean
    verifiedAt?: boolean
    verificationNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AgencyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "logo" | "activityType" | "businessPhone" | "businessEmail" | "website" | "address" | "city" | "state" | "zipCode" | "country" | "latitude" | "longitude" | "businessRegistrationNumber" | "activityLicense" | "taxId" | "bankAccountInfo" | "isVerified" | "isActive" | "isSuspended" | "suspensionReason" | "suspendedAt" | "suspendedBy" | "verificationStatus" | "verifiedBy" | "verifiedAt" | "verificationNotes" | "createdAt" | "updatedAt", ExtArgs["result"]["agency"]>
  export type AgencyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    verificationDocuments?: boolean | Agency$verificationDocumentsArgs<ExtArgs>
    teamMembers?: boolean | Agency$teamMembersArgs<ExtArgs>
    teamRoles?: boolean | Agency$teamRolesArgs<ExtArgs>
    properties?: boolean | Agency$propertiesArgs<ExtArgs>
    performance?: boolean | Agency$performanceArgs<ExtArgs>
    inquiries?: boolean | Agency$inquiriesArgs<ExtArgs>
    adminActions?: boolean | Agency$adminActionsArgs<ExtArgs>
    User?: boolean | Agency$UserArgs<ExtArgs>
    _count?: boolean | AgencyCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AgencyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type AgencyIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $AgencyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Agency"
    objects: {
      verificationDocuments: Prisma.$AgencyVerificationDocumentPayload<ExtArgs>[]
      teamMembers: Prisma.$AgencyMemberPayload<ExtArgs>[]
      teamRoles: Prisma.$AgencyRolePayload<ExtArgs>[]
      properties: Prisma.$PropertyPayload<ExtArgs>[]
      performance: Prisma.$AgencyPerformancePayload<ExtArgs> | null
      inquiries: Prisma.$AgencyInquiryPayload<ExtArgs>[]
      adminActions: Prisma.$AdminActionPayload<ExtArgs>[]
      User: Prisma.$UserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      logo: string | null
      activityType: $Enums.AgencyActivityType
      businessPhone: string
      businessEmail: string
      website: string | null
      address: string
      city: string
      state: string
      zipCode: string
      country: string
      latitude: number | null
      longitude: number | null
      businessRegistrationNumber: string | null
      activityLicense: string | null
      taxId: string | null
      bankAccountInfo: string | null
      isVerified: boolean
      isActive: boolean
      isSuspended: boolean
      suspensionReason: string | null
      suspendedAt: Date | null
      suspendedBy: string | null
      verificationStatus: $Enums.AgencyVerificationStatus
      verifiedBy: string | null
      verifiedAt: Date | null
      verificationNotes: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["agency"]>
    composites: {}
  }

  type AgencyGetPayload<S extends boolean | null | undefined | AgencyDefaultArgs> = $Result.GetResult<Prisma.$AgencyPayload, S>

  type AgencyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AgencyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AgencyCountAggregateInputType | true
    }

  export interface AgencyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Agency'], meta: { name: 'Agency' } }
    /**
     * Find zero or one Agency that matches the filter.
     * @param {AgencyFindUniqueArgs} args - Arguments to find a Agency
     * @example
     * // Get one Agency
     * const agency = await prisma.agency.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AgencyFindUniqueArgs>(args: SelectSubset<T, AgencyFindUniqueArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Agency that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AgencyFindUniqueOrThrowArgs} args - Arguments to find a Agency
     * @example
     * // Get one Agency
     * const agency = await prisma.agency.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AgencyFindUniqueOrThrowArgs>(args: SelectSubset<T, AgencyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Agency that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyFindFirstArgs} args - Arguments to find a Agency
     * @example
     * // Get one Agency
     * const agency = await prisma.agency.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AgencyFindFirstArgs>(args?: SelectSubset<T, AgencyFindFirstArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Agency that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyFindFirstOrThrowArgs} args - Arguments to find a Agency
     * @example
     * // Get one Agency
     * const agency = await prisma.agency.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AgencyFindFirstOrThrowArgs>(args?: SelectSubset<T, AgencyFindFirstOrThrowArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Agencies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Agencies
     * const agencies = await prisma.agency.findMany()
     * 
     * // Get first 10 Agencies
     * const agencies = await prisma.agency.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const agencyWithIdOnly = await prisma.agency.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AgencyFindManyArgs>(args?: SelectSubset<T, AgencyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Agency.
     * @param {AgencyCreateArgs} args - Arguments to create a Agency.
     * @example
     * // Create one Agency
     * const Agency = await prisma.agency.create({
     *   data: {
     *     // ... data to create a Agency
     *   }
     * })
     * 
     */
    create<T extends AgencyCreateArgs>(args: SelectSubset<T, AgencyCreateArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Agencies.
     * @param {AgencyCreateManyArgs} args - Arguments to create many Agencies.
     * @example
     * // Create many Agencies
     * const agency = await prisma.agency.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AgencyCreateManyArgs>(args?: SelectSubset<T, AgencyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Agencies and returns the data saved in the database.
     * @param {AgencyCreateManyAndReturnArgs} args - Arguments to create many Agencies.
     * @example
     * // Create many Agencies
     * const agency = await prisma.agency.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Agencies and only return the `id`
     * const agencyWithIdOnly = await prisma.agency.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AgencyCreateManyAndReturnArgs>(args?: SelectSubset<T, AgencyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Agency.
     * @param {AgencyDeleteArgs} args - Arguments to delete one Agency.
     * @example
     * // Delete one Agency
     * const Agency = await prisma.agency.delete({
     *   where: {
     *     // ... filter to delete one Agency
     *   }
     * })
     * 
     */
    delete<T extends AgencyDeleteArgs>(args: SelectSubset<T, AgencyDeleteArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Agency.
     * @param {AgencyUpdateArgs} args - Arguments to update one Agency.
     * @example
     * // Update one Agency
     * const agency = await prisma.agency.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AgencyUpdateArgs>(args: SelectSubset<T, AgencyUpdateArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Agencies.
     * @param {AgencyDeleteManyArgs} args - Arguments to filter Agencies to delete.
     * @example
     * // Delete a few Agencies
     * const { count } = await prisma.agency.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AgencyDeleteManyArgs>(args?: SelectSubset<T, AgencyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Agencies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Agencies
     * const agency = await prisma.agency.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AgencyUpdateManyArgs>(args: SelectSubset<T, AgencyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Agencies and returns the data updated in the database.
     * @param {AgencyUpdateManyAndReturnArgs} args - Arguments to update many Agencies.
     * @example
     * // Update many Agencies
     * const agency = await prisma.agency.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Agencies and only return the `id`
     * const agencyWithIdOnly = await prisma.agency.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AgencyUpdateManyAndReturnArgs>(args: SelectSubset<T, AgencyUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Agency.
     * @param {AgencyUpsertArgs} args - Arguments to update or create a Agency.
     * @example
     * // Update or create a Agency
     * const agency = await prisma.agency.upsert({
     *   create: {
     *     // ... data to create a Agency
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Agency we want to update
     *   }
     * })
     */
    upsert<T extends AgencyUpsertArgs>(args: SelectSubset<T, AgencyUpsertArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Agencies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyCountArgs} args - Arguments to filter Agencies to count.
     * @example
     * // Count the number of Agencies
     * const count = await prisma.agency.count({
     *   where: {
     *     // ... the filter for the Agencies we want to count
     *   }
     * })
    **/
    count<T extends AgencyCountArgs>(
      args?: Subset<T, AgencyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AgencyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Agency.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AgencyAggregateArgs>(args: Subset<T, AgencyAggregateArgs>): Prisma.PrismaPromise<GetAgencyAggregateType<T>>

    /**
     * Group by Agency.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AgencyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AgencyGroupByArgs['orderBy'] }
        : { orderBy?: AgencyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AgencyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAgencyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Agency model
   */
  readonly fields: AgencyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Agency.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AgencyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    verificationDocuments<T extends Agency$verificationDocumentsArgs<ExtArgs> = {}>(args?: Subset<T, Agency$verificationDocumentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyVerificationDocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    teamMembers<T extends Agency$teamMembersArgs<ExtArgs> = {}>(args?: Subset<T, Agency$teamMembersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyMemberPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    teamRoles<T extends Agency$teamRolesArgs<ExtArgs> = {}>(args?: Subset<T, Agency$teamRolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyRolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    properties<T extends Agency$propertiesArgs<ExtArgs> = {}>(args?: Subset<T, Agency$propertiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    performance<T extends Agency$performanceArgs<ExtArgs> = {}>(args?: Subset<T, Agency$performanceArgs<ExtArgs>>): Prisma__AgencyPerformanceClient<$Result.GetResult<Prisma.$AgencyPerformancePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    inquiries<T extends Agency$inquiriesArgs<ExtArgs> = {}>(args?: Subset<T, Agency$inquiriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyInquiryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    adminActions<T extends Agency$adminActionsArgs<ExtArgs> = {}>(args?: Subset<T, Agency$adminActionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    User<T extends Agency$UserArgs<ExtArgs> = {}>(args?: Subset<T, Agency$UserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Agency model
   */
  interface AgencyFieldRefs {
    readonly id: FieldRef<"Agency", 'String'>
    readonly name: FieldRef<"Agency", 'String'>
    readonly description: FieldRef<"Agency", 'String'>
    readonly logo: FieldRef<"Agency", 'String'>
    readonly activityType: FieldRef<"Agency", 'AgencyActivityType'>
    readonly businessPhone: FieldRef<"Agency", 'String'>
    readonly businessEmail: FieldRef<"Agency", 'String'>
    readonly website: FieldRef<"Agency", 'String'>
    readonly address: FieldRef<"Agency", 'String'>
    readonly city: FieldRef<"Agency", 'String'>
    readonly state: FieldRef<"Agency", 'String'>
    readonly zipCode: FieldRef<"Agency", 'String'>
    readonly country: FieldRef<"Agency", 'String'>
    readonly latitude: FieldRef<"Agency", 'Float'>
    readonly longitude: FieldRef<"Agency", 'Float'>
    readonly businessRegistrationNumber: FieldRef<"Agency", 'String'>
    readonly activityLicense: FieldRef<"Agency", 'String'>
    readonly taxId: FieldRef<"Agency", 'String'>
    readonly bankAccountInfo: FieldRef<"Agency", 'String'>
    readonly isVerified: FieldRef<"Agency", 'Boolean'>
    readonly isActive: FieldRef<"Agency", 'Boolean'>
    readonly isSuspended: FieldRef<"Agency", 'Boolean'>
    readonly suspensionReason: FieldRef<"Agency", 'String'>
    readonly suspendedAt: FieldRef<"Agency", 'DateTime'>
    readonly suspendedBy: FieldRef<"Agency", 'String'>
    readonly verificationStatus: FieldRef<"Agency", 'AgencyVerificationStatus'>
    readonly verifiedBy: FieldRef<"Agency", 'String'>
    readonly verifiedAt: FieldRef<"Agency", 'DateTime'>
    readonly verificationNotes: FieldRef<"Agency", 'String'>
    readonly createdAt: FieldRef<"Agency", 'DateTime'>
    readonly updatedAt: FieldRef<"Agency", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Agency findUnique
   */
  export type AgencyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * Filter, which Agency to fetch.
     */
    where: AgencyWhereUniqueInput
  }

  /**
   * Agency findUniqueOrThrow
   */
  export type AgencyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * Filter, which Agency to fetch.
     */
    where: AgencyWhereUniqueInput
  }

  /**
   * Agency findFirst
   */
  export type AgencyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * Filter, which Agency to fetch.
     */
    where?: AgencyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Agencies to fetch.
     */
    orderBy?: AgencyOrderByWithRelationInput | AgencyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Agencies.
     */
    cursor?: AgencyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Agencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Agencies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Agencies.
     */
    distinct?: AgencyScalarFieldEnum | AgencyScalarFieldEnum[]
  }

  /**
   * Agency findFirstOrThrow
   */
  export type AgencyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * Filter, which Agency to fetch.
     */
    where?: AgencyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Agencies to fetch.
     */
    orderBy?: AgencyOrderByWithRelationInput | AgencyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Agencies.
     */
    cursor?: AgencyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Agencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Agencies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Agencies.
     */
    distinct?: AgencyScalarFieldEnum | AgencyScalarFieldEnum[]
  }

  /**
   * Agency findMany
   */
  export type AgencyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * Filter, which Agencies to fetch.
     */
    where?: AgencyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Agencies to fetch.
     */
    orderBy?: AgencyOrderByWithRelationInput | AgencyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Agencies.
     */
    cursor?: AgencyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Agencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Agencies.
     */
    skip?: number
    distinct?: AgencyScalarFieldEnum | AgencyScalarFieldEnum[]
  }

  /**
   * Agency create
   */
  export type AgencyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * The data needed to create a Agency.
     */
    data: XOR<AgencyCreateInput, AgencyUncheckedCreateInput>
  }

  /**
   * Agency createMany
   */
  export type AgencyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Agencies.
     */
    data: AgencyCreateManyInput | AgencyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Agency createManyAndReturn
   */
  export type AgencyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * The data used to create many Agencies.
     */
    data: AgencyCreateManyInput | AgencyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Agency update
   */
  export type AgencyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * The data needed to update a Agency.
     */
    data: XOR<AgencyUpdateInput, AgencyUncheckedUpdateInput>
    /**
     * Choose, which Agency to update.
     */
    where: AgencyWhereUniqueInput
  }

  /**
   * Agency updateMany
   */
  export type AgencyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Agencies.
     */
    data: XOR<AgencyUpdateManyMutationInput, AgencyUncheckedUpdateManyInput>
    /**
     * Filter which Agencies to update
     */
    where?: AgencyWhereInput
    /**
     * Limit how many Agencies to update.
     */
    limit?: number
  }

  /**
   * Agency updateManyAndReturn
   */
  export type AgencyUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * The data used to update Agencies.
     */
    data: XOR<AgencyUpdateManyMutationInput, AgencyUncheckedUpdateManyInput>
    /**
     * Filter which Agencies to update
     */
    where?: AgencyWhereInput
    /**
     * Limit how many Agencies to update.
     */
    limit?: number
  }

  /**
   * Agency upsert
   */
  export type AgencyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * The filter to search for the Agency to update in case it exists.
     */
    where: AgencyWhereUniqueInput
    /**
     * In case the Agency found by the `where` argument doesn't exist, create a new Agency with this data.
     */
    create: XOR<AgencyCreateInput, AgencyUncheckedCreateInput>
    /**
     * In case the Agency was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AgencyUpdateInput, AgencyUncheckedUpdateInput>
  }

  /**
   * Agency delete
   */
  export type AgencyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * Filter which Agency to delete.
     */
    where: AgencyWhereUniqueInput
  }

  /**
   * Agency deleteMany
   */
  export type AgencyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Agencies to delete
     */
    where?: AgencyWhereInput
    /**
     * Limit how many Agencies to delete.
     */
    limit?: number
  }

  /**
   * Agency.verificationDocuments
   */
  export type Agency$verificationDocumentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyVerificationDocument
     */
    select?: AgencyVerificationDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyVerificationDocument
     */
    omit?: AgencyVerificationDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyVerificationDocumentInclude<ExtArgs> | null
    where?: AgencyVerificationDocumentWhereInput
    orderBy?: AgencyVerificationDocumentOrderByWithRelationInput | AgencyVerificationDocumentOrderByWithRelationInput[]
    cursor?: AgencyVerificationDocumentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AgencyVerificationDocumentScalarFieldEnum | AgencyVerificationDocumentScalarFieldEnum[]
  }

  /**
   * Agency.teamMembers
   */
  export type Agency$teamMembersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMember
     */
    select?: AgencyMemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyMember
     */
    omit?: AgencyMemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMemberInclude<ExtArgs> | null
    where?: AgencyMemberWhereInput
    orderBy?: AgencyMemberOrderByWithRelationInput | AgencyMemberOrderByWithRelationInput[]
    cursor?: AgencyMemberWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AgencyMemberScalarFieldEnum | AgencyMemberScalarFieldEnum[]
  }

  /**
   * Agency.teamRoles
   */
  export type Agency$teamRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRole
     */
    select?: AgencyRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyRole
     */
    omit?: AgencyRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRoleInclude<ExtArgs> | null
    where?: AgencyRoleWhereInput
    orderBy?: AgencyRoleOrderByWithRelationInput | AgencyRoleOrderByWithRelationInput[]
    cursor?: AgencyRoleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AgencyRoleScalarFieldEnum | AgencyRoleScalarFieldEnum[]
  }

  /**
   * Agency.properties
   */
  export type Agency$propertiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Property
     */
    select?: PropertySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Property
     */
    omit?: PropertyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInclude<ExtArgs> | null
    where?: PropertyWhereInput
    orderBy?: PropertyOrderByWithRelationInput | PropertyOrderByWithRelationInput[]
    cursor?: PropertyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyScalarFieldEnum | PropertyScalarFieldEnum[]
  }

  /**
   * Agency.performance
   */
  export type Agency$performanceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyPerformance
     */
    select?: AgencyPerformanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyPerformance
     */
    omit?: AgencyPerformanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyPerformanceInclude<ExtArgs> | null
    where?: AgencyPerformanceWhereInput
  }

  /**
   * Agency.inquiries
   */
  export type Agency$inquiriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInquiry
     */
    select?: AgencyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyInquiry
     */
    omit?: AgencyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInquiryInclude<ExtArgs> | null
    where?: AgencyInquiryWhereInput
    orderBy?: AgencyInquiryOrderByWithRelationInput | AgencyInquiryOrderByWithRelationInput[]
    cursor?: AgencyInquiryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AgencyInquiryScalarFieldEnum | AgencyInquiryScalarFieldEnum[]
  }

  /**
   * Agency.adminActions
   */
  export type Agency$adminActionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminAction
     */
    omit?: AdminActionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
    where?: AdminActionWhereInput
    orderBy?: AdminActionOrderByWithRelationInput | AdminActionOrderByWithRelationInput[]
    cursor?: AdminActionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdminActionScalarFieldEnum | AdminActionScalarFieldEnum[]
  }

  /**
   * Agency.User
   */
  export type Agency$UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Agency without action
   */
  export type AgencyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
  }


  /**
   * Model AgencyMember
   */

  export type AggregateAgencyMember = {
    _count: AgencyMemberCountAggregateOutputType | null
    _min: AgencyMemberMinAggregateOutputType | null
    _max: AgencyMemberMaxAggregateOutputType | null
  }

  export type AgencyMemberMinAggregateOutputType = {
    id: string | null
    userId: string | null
    agencyId: string | null
    role: $Enums.UserRole | null
    canManageProperties: boolean | null
    canManageTeam: boolean | null
    canViewAllData: boolean | null
    canContactClients: boolean | null
    canScheduleViewings: boolean | null
    canSetPrices: boolean | null
    canUploadDocuments: boolean | null
    joinedAt: Date | null
    updatedAt: Date | null
  }

  export type AgencyMemberMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    agencyId: string | null
    role: $Enums.UserRole | null
    canManageProperties: boolean | null
    canManageTeam: boolean | null
    canViewAllData: boolean | null
    canContactClients: boolean | null
    canScheduleViewings: boolean | null
    canSetPrices: boolean | null
    canUploadDocuments: boolean | null
    joinedAt: Date | null
    updatedAt: Date | null
  }

  export type AgencyMemberCountAggregateOutputType = {
    id: number
    userId: number
    agencyId: number
    role: number
    canManageProperties: number
    canManageTeam: number
    canViewAllData: number
    canContactClients: number
    canScheduleViewings: number
    canSetPrices: number
    canUploadDocuments: number
    joinedAt: number
    updatedAt: number
    _all: number
  }


  export type AgencyMemberMinAggregateInputType = {
    id?: true
    userId?: true
    agencyId?: true
    role?: true
    canManageProperties?: true
    canManageTeam?: true
    canViewAllData?: true
    canContactClients?: true
    canScheduleViewings?: true
    canSetPrices?: true
    canUploadDocuments?: true
    joinedAt?: true
    updatedAt?: true
  }

  export type AgencyMemberMaxAggregateInputType = {
    id?: true
    userId?: true
    agencyId?: true
    role?: true
    canManageProperties?: true
    canManageTeam?: true
    canViewAllData?: true
    canContactClients?: true
    canScheduleViewings?: true
    canSetPrices?: true
    canUploadDocuments?: true
    joinedAt?: true
    updatedAt?: true
  }

  export type AgencyMemberCountAggregateInputType = {
    id?: true
    userId?: true
    agencyId?: true
    role?: true
    canManageProperties?: true
    canManageTeam?: true
    canViewAllData?: true
    canContactClients?: true
    canScheduleViewings?: true
    canSetPrices?: true
    canUploadDocuments?: true
    joinedAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AgencyMemberAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgencyMember to aggregate.
     */
    where?: AgencyMemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyMembers to fetch.
     */
    orderBy?: AgencyMemberOrderByWithRelationInput | AgencyMemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AgencyMemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyMembers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyMembers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AgencyMembers
    **/
    _count?: true | AgencyMemberCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AgencyMemberMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AgencyMemberMaxAggregateInputType
  }

  export type GetAgencyMemberAggregateType<T extends AgencyMemberAggregateArgs> = {
        [P in keyof T & keyof AggregateAgencyMember]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAgencyMember[P]>
      : GetScalarType<T[P], AggregateAgencyMember[P]>
  }




  export type AgencyMemberGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyMemberWhereInput
    orderBy?: AgencyMemberOrderByWithAggregationInput | AgencyMemberOrderByWithAggregationInput[]
    by: AgencyMemberScalarFieldEnum[] | AgencyMemberScalarFieldEnum
    having?: AgencyMemberScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AgencyMemberCountAggregateInputType | true
    _min?: AgencyMemberMinAggregateInputType
    _max?: AgencyMemberMaxAggregateInputType
  }

  export type AgencyMemberGroupByOutputType = {
    id: string
    userId: string
    agencyId: string
    role: $Enums.UserRole
    canManageProperties: boolean
    canManageTeam: boolean
    canViewAllData: boolean
    canContactClients: boolean
    canScheduleViewings: boolean
    canSetPrices: boolean
    canUploadDocuments: boolean
    joinedAt: Date
    updatedAt: Date
    _count: AgencyMemberCountAggregateOutputType | null
    _min: AgencyMemberMinAggregateOutputType | null
    _max: AgencyMemberMaxAggregateOutputType | null
  }

  type GetAgencyMemberGroupByPayload<T extends AgencyMemberGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AgencyMemberGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AgencyMemberGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AgencyMemberGroupByOutputType[P]>
            : GetScalarType<T[P], AgencyMemberGroupByOutputType[P]>
        }
      >
    >


  export type AgencyMemberSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    agencyId?: boolean
    role?: boolean
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    joinedAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    performance?: boolean | AgencyMember$performanceArgs<ExtArgs>
  }, ExtArgs["result"]["agencyMember"]>

  export type AgencyMemberSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    agencyId?: boolean
    role?: boolean
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    joinedAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agencyMember"]>

  export type AgencyMemberSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    agencyId?: boolean
    role?: boolean
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    joinedAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agencyMember"]>

  export type AgencyMemberSelectScalar = {
    id?: boolean
    userId?: boolean
    agencyId?: boolean
    role?: boolean
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    joinedAt?: boolean
    updatedAt?: boolean
  }

  export type AgencyMemberOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "agencyId" | "role" | "canManageProperties" | "canManageTeam" | "canViewAllData" | "canContactClients" | "canScheduleViewings" | "canSetPrices" | "canUploadDocuments" | "joinedAt" | "updatedAt", ExtArgs["result"]["agencyMember"]>
  export type AgencyMemberInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    performance?: boolean | AgencyMember$performanceArgs<ExtArgs>
  }
  export type AgencyMemberIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }
  export type AgencyMemberIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }

  export type $AgencyMemberPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AgencyMember"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      agency: Prisma.$AgencyPayload<ExtArgs>
      performance: Prisma.$AgentPerformancePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      agencyId: string
      role: $Enums.UserRole
      canManageProperties: boolean
      canManageTeam: boolean
      canViewAllData: boolean
      canContactClients: boolean
      canScheduleViewings: boolean
      canSetPrices: boolean
      canUploadDocuments: boolean
      joinedAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["agencyMember"]>
    composites: {}
  }

  type AgencyMemberGetPayload<S extends boolean | null | undefined | AgencyMemberDefaultArgs> = $Result.GetResult<Prisma.$AgencyMemberPayload, S>

  type AgencyMemberCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AgencyMemberFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AgencyMemberCountAggregateInputType | true
    }

  export interface AgencyMemberDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AgencyMember'], meta: { name: 'AgencyMember' } }
    /**
     * Find zero or one AgencyMember that matches the filter.
     * @param {AgencyMemberFindUniqueArgs} args - Arguments to find a AgencyMember
     * @example
     * // Get one AgencyMember
     * const agencyMember = await prisma.agencyMember.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AgencyMemberFindUniqueArgs>(args: SelectSubset<T, AgencyMemberFindUniqueArgs<ExtArgs>>): Prisma__AgencyMemberClient<$Result.GetResult<Prisma.$AgencyMemberPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AgencyMember that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AgencyMemberFindUniqueOrThrowArgs} args - Arguments to find a AgencyMember
     * @example
     * // Get one AgencyMember
     * const agencyMember = await prisma.agencyMember.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AgencyMemberFindUniqueOrThrowArgs>(args: SelectSubset<T, AgencyMemberFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AgencyMemberClient<$Result.GetResult<Prisma.$AgencyMemberPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AgencyMember that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyMemberFindFirstArgs} args - Arguments to find a AgencyMember
     * @example
     * // Get one AgencyMember
     * const agencyMember = await prisma.agencyMember.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AgencyMemberFindFirstArgs>(args?: SelectSubset<T, AgencyMemberFindFirstArgs<ExtArgs>>): Prisma__AgencyMemberClient<$Result.GetResult<Prisma.$AgencyMemberPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AgencyMember that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyMemberFindFirstOrThrowArgs} args - Arguments to find a AgencyMember
     * @example
     * // Get one AgencyMember
     * const agencyMember = await prisma.agencyMember.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AgencyMemberFindFirstOrThrowArgs>(args?: SelectSubset<T, AgencyMemberFindFirstOrThrowArgs<ExtArgs>>): Prisma__AgencyMemberClient<$Result.GetResult<Prisma.$AgencyMemberPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AgencyMembers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyMemberFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AgencyMembers
     * const agencyMembers = await prisma.agencyMember.findMany()
     * 
     * // Get first 10 AgencyMembers
     * const agencyMembers = await prisma.agencyMember.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const agencyMemberWithIdOnly = await prisma.agencyMember.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AgencyMemberFindManyArgs>(args?: SelectSubset<T, AgencyMemberFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyMemberPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AgencyMember.
     * @param {AgencyMemberCreateArgs} args - Arguments to create a AgencyMember.
     * @example
     * // Create one AgencyMember
     * const AgencyMember = await prisma.agencyMember.create({
     *   data: {
     *     // ... data to create a AgencyMember
     *   }
     * })
     * 
     */
    create<T extends AgencyMemberCreateArgs>(args: SelectSubset<T, AgencyMemberCreateArgs<ExtArgs>>): Prisma__AgencyMemberClient<$Result.GetResult<Prisma.$AgencyMemberPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AgencyMembers.
     * @param {AgencyMemberCreateManyArgs} args - Arguments to create many AgencyMembers.
     * @example
     * // Create many AgencyMembers
     * const agencyMember = await prisma.agencyMember.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AgencyMemberCreateManyArgs>(args?: SelectSubset<T, AgencyMemberCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AgencyMembers and returns the data saved in the database.
     * @param {AgencyMemberCreateManyAndReturnArgs} args - Arguments to create many AgencyMembers.
     * @example
     * // Create many AgencyMembers
     * const agencyMember = await prisma.agencyMember.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AgencyMembers and only return the `id`
     * const agencyMemberWithIdOnly = await prisma.agencyMember.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AgencyMemberCreateManyAndReturnArgs>(args?: SelectSubset<T, AgencyMemberCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyMemberPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AgencyMember.
     * @param {AgencyMemberDeleteArgs} args - Arguments to delete one AgencyMember.
     * @example
     * // Delete one AgencyMember
     * const AgencyMember = await prisma.agencyMember.delete({
     *   where: {
     *     // ... filter to delete one AgencyMember
     *   }
     * })
     * 
     */
    delete<T extends AgencyMemberDeleteArgs>(args: SelectSubset<T, AgencyMemberDeleteArgs<ExtArgs>>): Prisma__AgencyMemberClient<$Result.GetResult<Prisma.$AgencyMemberPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AgencyMember.
     * @param {AgencyMemberUpdateArgs} args - Arguments to update one AgencyMember.
     * @example
     * // Update one AgencyMember
     * const agencyMember = await prisma.agencyMember.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AgencyMemberUpdateArgs>(args: SelectSubset<T, AgencyMemberUpdateArgs<ExtArgs>>): Prisma__AgencyMemberClient<$Result.GetResult<Prisma.$AgencyMemberPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AgencyMembers.
     * @param {AgencyMemberDeleteManyArgs} args - Arguments to filter AgencyMembers to delete.
     * @example
     * // Delete a few AgencyMembers
     * const { count } = await prisma.agencyMember.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AgencyMemberDeleteManyArgs>(args?: SelectSubset<T, AgencyMemberDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AgencyMembers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyMemberUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AgencyMembers
     * const agencyMember = await prisma.agencyMember.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AgencyMemberUpdateManyArgs>(args: SelectSubset<T, AgencyMemberUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AgencyMembers and returns the data updated in the database.
     * @param {AgencyMemberUpdateManyAndReturnArgs} args - Arguments to update many AgencyMembers.
     * @example
     * // Update many AgencyMembers
     * const agencyMember = await prisma.agencyMember.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AgencyMembers and only return the `id`
     * const agencyMemberWithIdOnly = await prisma.agencyMember.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AgencyMemberUpdateManyAndReturnArgs>(args: SelectSubset<T, AgencyMemberUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyMemberPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AgencyMember.
     * @param {AgencyMemberUpsertArgs} args - Arguments to update or create a AgencyMember.
     * @example
     * // Update or create a AgencyMember
     * const agencyMember = await prisma.agencyMember.upsert({
     *   create: {
     *     // ... data to create a AgencyMember
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AgencyMember we want to update
     *   }
     * })
     */
    upsert<T extends AgencyMemberUpsertArgs>(args: SelectSubset<T, AgencyMemberUpsertArgs<ExtArgs>>): Prisma__AgencyMemberClient<$Result.GetResult<Prisma.$AgencyMemberPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AgencyMembers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyMemberCountArgs} args - Arguments to filter AgencyMembers to count.
     * @example
     * // Count the number of AgencyMembers
     * const count = await prisma.agencyMember.count({
     *   where: {
     *     // ... the filter for the AgencyMembers we want to count
     *   }
     * })
    **/
    count<T extends AgencyMemberCountArgs>(
      args?: Subset<T, AgencyMemberCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AgencyMemberCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AgencyMember.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyMemberAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AgencyMemberAggregateArgs>(args: Subset<T, AgencyMemberAggregateArgs>): Prisma.PrismaPromise<GetAgencyMemberAggregateType<T>>

    /**
     * Group by AgencyMember.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyMemberGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AgencyMemberGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AgencyMemberGroupByArgs['orderBy'] }
        : { orderBy?: AgencyMemberGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AgencyMemberGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAgencyMemberGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AgencyMember model
   */
  readonly fields: AgencyMemberFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AgencyMember.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AgencyMemberClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    agency<T extends AgencyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AgencyDefaultArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    performance<T extends AgencyMember$performanceArgs<ExtArgs> = {}>(args?: Subset<T, AgencyMember$performanceArgs<ExtArgs>>): Prisma__AgentPerformanceClient<$Result.GetResult<Prisma.$AgentPerformancePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AgencyMember model
   */
  interface AgencyMemberFieldRefs {
    readonly id: FieldRef<"AgencyMember", 'String'>
    readonly userId: FieldRef<"AgencyMember", 'String'>
    readonly agencyId: FieldRef<"AgencyMember", 'String'>
    readonly role: FieldRef<"AgencyMember", 'UserRole'>
    readonly canManageProperties: FieldRef<"AgencyMember", 'Boolean'>
    readonly canManageTeam: FieldRef<"AgencyMember", 'Boolean'>
    readonly canViewAllData: FieldRef<"AgencyMember", 'Boolean'>
    readonly canContactClients: FieldRef<"AgencyMember", 'Boolean'>
    readonly canScheduleViewings: FieldRef<"AgencyMember", 'Boolean'>
    readonly canSetPrices: FieldRef<"AgencyMember", 'Boolean'>
    readonly canUploadDocuments: FieldRef<"AgencyMember", 'Boolean'>
    readonly joinedAt: FieldRef<"AgencyMember", 'DateTime'>
    readonly updatedAt: FieldRef<"AgencyMember", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AgencyMember findUnique
   */
  export type AgencyMemberFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMember
     */
    select?: AgencyMemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyMember
     */
    omit?: AgencyMemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMemberInclude<ExtArgs> | null
    /**
     * Filter, which AgencyMember to fetch.
     */
    where: AgencyMemberWhereUniqueInput
  }

  /**
   * AgencyMember findUniqueOrThrow
   */
  export type AgencyMemberFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMember
     */
    select?: AgencyMemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyMember
     */
    omit?: AgencyMemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMemberInclude<ExtArgs> | null
    /**
     * Filter, which AgencyMember to fetch.
     */
    where: AgencyMemberWhereUniqueInput
  }

  /**
   * AgencyMember findFirst
   */
  export type AgencyMemberFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMember
     */
    select?: AgencyMemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyMember
     */
    omit?: AgencyMemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMemberInclude<ExtArgs> | null
    /**
     * Filter, which AgencyMember to fetch.
     */
    where?: AgencyMemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyMembers to fetch.
     */
    orderBy?: AgencyMemberOrderByWithRelationInput | AgencyMemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgencyMembers.
     */
    cursor?: AgencyMemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyMembers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyMembers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgencyMembers.
     */
    distinct?: AgencyMemberScalarFieldEnum | AgencyMemberScalarFieldEnum[]
  }

  /**
   * AgencyMember findFirstOrThrow
   */
  export type AgencyMemberFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMember
     */
    select?: AgencyMemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyMember
     */
    omit?: AgencyMemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMemberInclude<ExtArgs> | null
    /**
     * Filter, which AgencyMember to fetch.
     */
    where?: AgencyMemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyMembers to fetch.
     */
    orderBy?: AgencyMemberOrderByWithRelationInput | AgencyMemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgencyMembers.
     */
    cursor?: AgencyMemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyMembers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyMembers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgencyMembers.
     */
    distinct?: AgencyMemberScalarFieldEnum | AgencyMemberScalarFieldEnum[]
  }

  /**
   * AgencyMember findMany
   */
  export type AgencyMemberFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMember
     */
    select?: AgencyMemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyMember
     */
    omit?: AgencyMemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMemberInclude<ExtArgs> | null
    /**
     * Filter, which AgencyMembers to fetch.
     */
    where?: AgencyMemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyMembers to fetch.
     */
    orderBy?: AgencyMemberOrderByWithRelationInput | AgencyMemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AgencyMembers.
     */
    cursor?: AgencyMemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyMembers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyMembers.
     */
    skip?: number
    distinct?: AgencyMemberScalarFieldEnum | AgencyMemberScalarFieldEnum[]
  }

  /**
   * AgencyMember create
   */
  export type AgencyMemberCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMember
     */
    select?: AgencyMemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyMember
     */
    omit?: AgencyMemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMemberInclude<ExtArgs> | null
    /**
     * The data needed to create a AgencyMember.
     */
    data: XOR<AgencyMemberCreateInput, AgencyMemberUncheckedCreateInput>
  }

  /**
   * AgencyMember createMany
   */
  export type AgencyMemberCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AgencyMembers.
     */
    data: AgencyMemberCreateManyInput | AgencyMemberCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AgencyMember createManyAndReturn
   */
  export type AgencyMemberCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMember
     */
    select?: AgencyMemberSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyMember
     */
    omit?: AgencyMemberOmit<ExtArgs> | null
    /**
     * The data used to create many AgencyMembers.
     */
    data: AgencyMemberCreateManyInput | AgencyMemberCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMemberIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AgencyMember update
   */
  export type AgencyMemberUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMember
     */
    select?: AgencyMemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyMember
     */
    omit?: AgencyMemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMemberInclude<ExtArgs> | null
    /**
     * The data needed to update a AgencyMember.
     */
    data: XOR<AgencyMemberUpdateInput, AgencyMemberUncheckedUpdateInput>
    /**
     * Choose, which AgencyMember to update.
     */
    where: AgencyMemberWhereUniqueInput
  }

  /**
   * AgencyMember updateMany
   */
  export type AgencyMemberUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AgencyMembers.
     */
    data: XOR<AgencyMemberUpdateManyMutationInput, AgencyMemberUncheckedUpdateManyInput>
    /**
     * Filter which AgencyMembers to update
     */
    where?: AgencyMemberWhereInput
    /**
     * Limit how many AgencyMembers to update.
     */
    limit?: number
  }

  /**
   * AgencyMember updateManyAndReturn
   */
  export type AgencyMemberUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMember
     */
    select?: AgencyMemberSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyMember
     */
    omit?: AgencyMemberOmit<ExtArgs> | null
    /**
     * The data used to update AgencyMembers.
     */
    data: XOR<AgencyMemberUpdateManyMutationInput, AgencyMemberUncheckedUpdateManyInput>
    /**
     * Filter which AgencyMembers to update
     */
    where?: AgencyMemberWhereInput
    /**
     * Limit how many AgencyMembers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMemberIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AgencyMember upsert
   */
  export type AgencyMemberUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMember
     */
    select?: AgencyMemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyMember
     */
    omit?: AgencyMemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMemberInclude<ExtArgs> | null
    /**
     * The filter to search for the AgencyMember to update in case it exists.
     */
    where: AgencyMemberWhereUniqueInput
    /**
     * In case the AgencyMember found by the `where` argument doesn't exist, create a new AgencyMember with this data.
     */
    create: XOR<AgencyMemberCreateInput, AgencyMemberUncheckedCreateInput>
    /**
     * In case the AgencyMember was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AgencyMemberUpdateInput, AgencyMemberUncheckedUpdateInput>
  }

  /**
   * AgencyMember delete
   */
  export type AgencyMemberDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMember
     */
    select?: AgencyMemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyMember
     */
    omit?: AgencyMemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMemberInclude<ExtArgs> | null
    /**
     * Filter which AgencyMember to delete.
     */
    where: AgencyMemberWhereUniqueInput
  }

  /**
   * AgencyMember deleteMany
   */
  export type AgencyMemberDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgencyMembers to delete
     */
    where?: AgencyMemberWhereInput
    /**
     * Limit how many AgencyMembers to delete.
     */
    limit?: number
  }

  /**
   * AgencyMember.performance
   */
  export type AgencyMember$performanceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentPerformance
     */
    select?: AgentPerformanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgentPerformance
     */
    omit?: AgentPerformanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentPerformanceInclude<ExtArgs> | null
    where?: AgentPerformanceWhereInput
  }

  /**
   * AgencyMember without action
   */
  export type AgencyMemberDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMember
     */
    select?: AgencyMemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyMember
     */
    omit?: AgencyMemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMemberInclude<ExtArgs> | null
  }


  /**
   * Model AgencyRole
   */

  export type AggregateAgencyRole = {
    _count: AgencyRoleCountAggregateOutputType | null
    _min: AgencyRoleMinAggregateOutputType | null
    _max: AgencyRoleMaxAggregateOutputType | null
  }

  export type AgencyRoleMinAggregateOutputType = {
    id: string | null
    userId: string | null
    agencyId: string | null
    role: $Enums.UserRole | null
    title: string | null
    description: string | null
    canManageProperties: boolean | null
    canManageTeam: boolean | null
    canViewAllData: boolean | null
    canContactClients: boolean | null
    canScheduleViewings: boolean | null
    canSetPrices: boolean | null
    canUploadDocuments: boolean | null
    assignedAt: Date | null
    updatedAt: Date | null
  }

  export type AgencyRoleMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    agencyId: string | null
    role: $Enums.UserRole | null
    title: string | null
    description: string | null
    canManageProperties: boolean | null
    canManageTeam: boolean | null
    canViewAllData: boolean | null
    canContactClients: boolean | null
    canScheduleViewings: boolean | null
    canSetPrices: boolean | null
    canUploadDocuments: boolean | null
    assignedAt: Date | null
    updatedAt: Date | null
  }

  export type AgencyRoleCountAggregateOutputType = {
    id: number
    userId: number
    agencyId: number
    role: number
    title: number
    description: number
    canManageProperties: number
    canManageTeam: number
    canViewAllData: number
    canContactClients: number
    canScheduleViewings: number
    canSetPrices: number
    canUploadDocuments: number
    assignedAt: number
    updatedAt: number
    _all: number
  }


  export type AgencyRoleMinAggregateInputType = {
    id?: true
    userId?: true
    agencyId?: true
    role?: true
    title?: true
    description?: true
    canManageProperties?: true
    canManageTeam?: true
    canViewAllData?: true
    canContactClients?: true
    canScheduleViewings?: true
    canSetPrices?: true
    canUploadDocuments?: true
    assignedAt?: true
    updatedAt?: true
  }

  export type AgencyRoleMaxAggregateInputType = {
    id?: true
    userId?: true
    agencyId?: true
    role?: true
    title?: true
    description?: true
    canManageProperties?: true
    canManageTeam?: true
    canViewAllData?: true
    canContactClients?: true
    canScheduleViewings?: true
    canSetPrices?: true
    canUploadDocuments?: true
    assignedAt?: true
    updatedAt?: true
  }

  export type AgencyRoleCountAggregateInputType = {
    id?: true
    userId?: true
    agencyId?: true
    role?: true
    title?: true
    description?: true
    canManageProperties?: true
    canManageTeam?: true
    canViewAllData?: true
    canContactClients?: true
    canScheduleViewings?: true
    canSetPrices?: true
    canUploadDocuments?: true
    assignedAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AgencyRoleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgencyRole to aggregate.
     */
    where?: AgencyRoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyRoles to fetch.
     */
    orderBy?: AgencyRoleOrderByWithRelationInput | AgencyRoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AgencyRoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyRoles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyRoles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AgencyRoles
    **/
    _count?: true | AgencyRoleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AgencyRoleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AgencyRoleMaxAggregateInputType
  }

  export type GetAgencyRoleAggregateType<T extends AgencyRoleAggregateArgs> = {
        [P in keyof T & keyof AggregateAgencyRole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAgencyRole[P]>
      : GetScalarType<T[P], AggregateAgencyRole[P]>
  }




  export type AgencyRoleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyRoleWhereInput
    orderBy?: AgencyRoleOrderByWithAggregationInput | AgencyRoleOrderByWithAggregationInput[]
    by: AgencyRoleScalarFieldEnum[] | AgencyRoleScalarFieldEnum
    having?: AgencyRoleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AgencyRoleCountAggregateInputType | true
    _min?: AgencyRoleMinAggregateInputType
    _max?: AgencyRoleMaxAggregateInputType
  }

  export type AgencyRoleGroupByOutputType = {
    id: string
    userId: string
    agencyId: string
    role: $Enums.UserRole
    title: string | null
    description: string | null
    canManageProperties: boolean
    canManageTeam: boolean
    canViewAllData: boolean
    canContactClients: boolean
    canScheduleViewings: boolean
    canSetPrices: boolean
    canUploadDocuments: boolean
    assignedAt: Date
    updatedAt: Date
    _count: AgencyRoleCountAggregateOutputType | null
    _min: AgencyRoleMinAggregateOutputType | null
    _max: AgencyRoleMaxAggregateOutputType | null
  }

  type GetAgencyRoleGroupByPayload<T extends AgencyRoleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AgencyRoleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AgencyRoleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AgencyRoleGroupByOutputType[P]>
            : GetScalarType<T[P], AgencyRoleGroupByOutputType[P]>
        }
      >
    >


  export type AgencyRoleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    agencyId?: boolean
    role?: boolean
    title?: boolean
    description?: boolean
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    assignedAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agencyRole"]>

  export type AgencyRoleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    agencyId?: boolean
    role?: boolean
    title?: boolean
    description?: boolean
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    assignedAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agencyRole"]>

  export type AgencyRoleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    agencyId?: boolean
    role?: boolean
    title?: boolean
    description?: boolean
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    assignedAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agencyRole"]>

  export type AgencyRoleSelectScalar = {
    id?: boolean
    userId?: boolean
    agencyId?: boolean
    role?: boolean
    title?: boolean
    description?: boolean
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    assignedAt?: boolean
    updatedAt?: boolean
  }

  export type AgencyRoleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "agencyId" | "role" | "title" | "description" | "canManageProperties" | "canManageTeam" | "canViewAllData" | "canContactClients" | "canScheduleViewings" | "canSetPrices" | "canUploadDocuments" | "assignedAt" | "updatedAt", ExtArgs["result"]["agencyRole"]>
  export type AgencyRoleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }
  export type AgencyRoleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }
  export type AgencyRoleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }

  export type $AgencyRolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AgencyRole"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      agency: Prisma.$AgencyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      agencyId: string
      role: $Enums.UserRole
      title: string | null
      description: string | null
      canManageProperties: boolean
      canManageTeam: boolean
      canViewAllData: boolean
      canContactClients: boolean
      canScheduleViewings: boolean
      canSetPrices: boolean
      canUploadDocuments: boolean
      assignedAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["agencyRole"]>
    composites: {}
  }

  type AgencyRoleGetPayload<S extends boolean | null | undefined | AgencyRoleDefaultArgs> = $Result.GetResult<Prisma.$AgencyRolePayload, S>

  type AgencyRoleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AgencyRoleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AgencyRoleCountAggregateInputType | true
    }

  export interface AgencyRoleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AgencyRole'], meta: { name: 'AgencyRole' } }
    /**
     * Find zero or one AgencyRole that matches the filter.
     * @param {AgencyRoleFindUniqueArgs} args - Arguments to find a AgencyRole
     * @example
     * // Get one AgencyRole
     * const agencyRole = await prisma.agencyRole.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AgencyRoleFindUniqueArgs>(args: SelectSubset<T, AgencyRoleFindUniqueArgs<ExtArgs>>): Prisma__AgencyRoleClient<$Result.GetResult<Prisma.$AgencyRolePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AgencyRole that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AgencyRoleFindUniqueOrThrowArgs} args - Arguments to find a AgencyRole
     * @example
     * // Get one AgencyRole
     * const agencyRole = await prisma.agencyRole.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AgencyRoleFindUniqueOrThrowArgs>(args: SelectSubset<T, AgencyRoleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AgencyRoleClient<$Result.GetResult<Prisma.$AgencyRolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AgencyRole that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyRoleFindFirstArgs} args - Arguments to find a AgencyRole
     * @example
     * // Get one AgencyRole
     * const agencyRole = await prisma.agencyRole.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AgencyRoleFindFirstArgs>(args?: SelectSubset<T, AgencyRoleFindFirstArgs<ExtArgs>>): Prisma__AgencyRoleClient<$Result.GetResult<Prisma.$AgencyRolePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AgencyRole that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyRoleFindFirstOrThrowArgs} args - Arguments to find a AgencyRole
     * @example
     * // Get one AgencyRole
     * const agencyRole = await prisma.agencyRole.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AgencyRoleFindFirstOrThrowArgs>(args?: SelectSubset<T, AgencyRoleFindFirstOrThrowArgs<ExtArgs>>): Prisma__AgencyRoleClient<$Result.GetResult<Prisma.$AgencyRolePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AgencyRoles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyRoleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AgencyRoles
     * const agencyRoles = await prisma.agencyRole.findMany()
     * 
     * // Get first 10 AgencyRoles
     * const agencyRoles = await prisma.agencyRole.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const agencyRoleWithIdOnly = await prisma.agencyRole.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AgencyRoleFindManyArgs>(args?: SelectSubset<T, AgencyRoleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyRolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AgencyRole.
     * @param {AgencyRoleCreateArgs} args - Arguments to create a AgencyRole.
     * @example
     * // Create one AgencyRole
     * const AgencyRole = await prisma.agencyRole.create({
     *   data: {
     *     // ... data to create a AgencyRole
     *   }
     * })
     * 
     */
    create<T extends AgencyRoleCreateArgs>(args: SelectSubset<T, AgencyRoleCreateArgs<ExtArgs>>): Prisma__AgencyRoleClient<$Result.GetResult<Prisma.$AgencyRolePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AgencyRoles.
     * @param {AgencyRoleCreateManyArgs} args - Arguments to create many AgencyRoles.
     * @example
     * // Create many AgencyRoles
     * const agencyRole = await prisma.agencyRole.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AgencyRoleCreateManyArgs>(args?: SelectSubset<T, AgencyRoleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AgencyRoles and returns the data saved in the database.
     * @param {AgencyRoleCreateManyAndReturnArgs} args - Arguments to create many AgencyRoles.
     * @example
     * // Create many AgencyRoles
     * const agencyRole = await prisma.agencyRole.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AgencyRoles and only return the `id`
     * const agencyRoleWithIdOnly = await prisma.agencyRole.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AgencyRoleCreateManyAndReturnArgs>(args?: SelectSubset<T, AgencyRoleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyRolePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AgencyRole.
     * @param {AgencyRoleDeleteArgs} args - Arguments to delete one AgencyRole.
     * @example
     * // Delete one AgencyRole
     * const AgencyRole = await prisma.agencyRole.delete({
     *   where: {
     *     // ... filter to delete one AgencyRole
     *   }
     * })
     * 
     */
    delete<T extends AgencyRoleDeleteArgs>(args: SelectSubset<T, AgencyRoleDeleteArgs<ExtArgs>>): Prisma__AgencyRoleClient<$Result.GetResult<Prisma.$AgencyRolePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AgencyRole.
     * @param {AgencyRoleUpdateArgs} args - Arguments to update one AgencyRole.
     * @example
     * // Update one AgencyRole
     * const agencyRole = await prisma.agencyRole.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AgencyRoleUpdateArgs>(args: SelectSubset<T, AgencyRoleUpdateArgs<ExtArgs>>): Prisma__AgencyRoleClient<$Result.GetResult<Prisma.$AgencyRolePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AgencyRoles.
     * @param {AgencyRoleDeleteManyArgs} args - Arguments to filter AgencyRoles to delete.
     * @example
     * // Delete a few AgencyRoles
     * const { count } = await prisma.agencyRole.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AgencyRoleDeleteManyArgs>(args?: SelectSubset<T, AgencyRoleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AgencyRoles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyRoleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AgencyRoles
     * const agencyRole = await prisma.agencyRole.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AgencyRoleUpdateManyArgs>(args: SelectSubset<T, AgencyRoleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AgencyRoles and returns the data updated in the database.
     * @param {AgencyRoleUpdateManyAndReturnArgs} args - Arguments to update many AgencyRoles.
     * @example
     * // Update many AgencyRoles
     * const agencyRole = await prisma.agencyRole.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AgencyRoles and only return the `id`
     * const agencyRoleWithIdOnly = await prisma.agencyRole.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AgencyRoleUpdateManyAndReturnArgs>(args: SelectSubset<T, AgencyRoleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyRolePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AgencyRole.
     * @param {AgencyRoleUpsertArgs} args - Arguments to update or create a AgencyRole.
     * @example
     * // Update or create a AgencyRole
     * const agencyRole = await prisma.agencyRole.upsert({
     *   create: {
     *     // ... data to create a AgencyRole
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AgencyRole we want to update
     *   }
     * })
     */
    upsert<T extends AgencyRoleUpsertArgs>(args: SelectSubset<T, AgencyRoleUpsertArgs<ExtArgs>>): Prisma__AgencyRoleClient<$Result.GetResult<Prisma.$AgencyRolePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AgencyRoles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyRoleCountArgs} args - Arguments to filter AgencyRoles to count.
     * @example
     * // Count the number of AgencyRoles
     * const count = await prisma.agencyRole.count({
     *   where: {
     *     // ... the filter for the AgencyRoles we want to count
     *   }
     * })
    **/
    count<T extends AgencyRoleCountArgs>(
      args?: Subset<T, AgencyRoleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AgencyRoleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AgencyRole.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyRoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AgencyRoleAggregateArgs>(args: Subset<T, AgencyRoleAggregateArgs>): Prisma.PrismaPromise<GetAgencyRoleAggregateType<T>>

    /**
     * Group by AgencyRole.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyRoleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AgencyRoleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AgencyRoleGroupByArgs['orderBy'] }
        : { orderBy?: AgencyRoleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AgencyRoleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAgencyRoleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AgencyRole model
   */
  readonly fields: AgencyRoleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AgencyRole.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AgencyRoleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    agency<T extends AgencyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AgencyDefaultArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AgencyRole model
   */
  interface AgencyRoleFieldRefs {
    readonly id: FieldRef<"AgencyRole", 'String'>
    readonly userId: FieldRef<"AgencyRole", 'String'>
    readonly agencyId: FieldRef<"AgencyRole", 'String'>
    readonly role: FieldRef<"AgencyRole", 'UserRole'>
    readonly title: FieldRef<"AgencyRole", 'String'>
    readonly description: FieldRef<"AgencyRole", 'String'>
    readonly canManageProperties: FieldRef<"AgencyRole", 'Boolean'>
    readonly canManageTeam: FieldRef<"AgencyRole", 'Boolean'>
    readonly canViewAllData: FieldRef<"AgencyRole", 'Boolean'>
    readonly canContactClients: FieldRef<"AgencyRole", 'Boolean'>
    readonly canScheduleViewings: FieldRef<"AgencyRole", 'Boolean'>
    readonly canSetPrices: FieldRef<"AgencyRole", 'Boolean'>
    readonly canUploadDocuments: FieldRef<"AgencyRole", 'Boolean'>
    readonly assignedAt: FieldRef<"AgencyRole", 'DateTime'>
    readonly updatedAt: FieldRef<"AgencyRole", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AgencyRole findUnique
   */
  export type AgencyRoleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRole
     */
    select?: AgencyRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyRole
     */
    omit?: AgencyRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRoleInclude<ExtArgs> | null
    /**
     * Filter, which AgencyRole to fetch.
     */
    where: AgencyRoleWhereUniqueInput
  }

  /**
   * AgencyRole findUniqueOrThrow
   */
  export type AgencyRoleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRole
     */
    select?: AgencyRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyRole
     */
    omit?: AgencyRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRoleInclude<ExtArgs> | null
    /**
     * Filter, which AgencyRole to fetch.
     */
    where: AgencyRoleWhereUniqueInput
  }

  /**
   * AgencyRole findFirst
   */
  export type AgencyRoleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRole
     */
    select?: AgencyRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyRole
     */
    omit?: AgencyRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRoleInclude<ExtArgs> | null
    /**
     * Filter, which AgencyRole to fetch.
     */
    where?: AgencyRoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyRoles to fetch.
     */
    orderBy?: AgencyRoleOrderByWithRelationInput | AgencyRoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgencyRoles.
     */
    cursor?: AgencyRoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyRoles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyRoles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgencyRoles.
     */
    distinct?: AgencyRoleScalarFieldEnum | AgencyRoleScalarFieldEnum[]
  }

  /**
   * AgencyRole findFirstOrThrow
   */
  export type AgencyRoleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRole
     */
    select?: AgencyRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyRole
     */
    omit?: AgencyRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRoleInclude<ExtArgs> | null
    /**
     * Filter, which AgencyRole to fetch.
     */
    where?: AgencyRoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyRoles to fetch.
     */
    orderBy?: AgencyRoleOrderByWithRelationInput | AgencyRoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgencyRoles.
     */
    cursor?: AgencyRoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyRoles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyRoles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgencyRoles.
     */
    distinct?: AgencyRoleScalarFieldEnum | AgencyRoleScalarFieldEnum[]
  }

  /**
   * AgencyRole findMany
   */
  export type AgencyRoleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRole
     */
    select?: AgencyRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyRole
     */
    omit?: AgencyRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRoleInclude<ExtArgs> | null
    /**
     * Filter, which AgencyRoles to fetch.
     */
    where?: AgencyRoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyRoles to fetch.
     */
    orderBy?: AgencyRoleOrderByWithRelationInput | AgencyRoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AgencyRoles.
     */
    cursor?: AgencyRoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyRoles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyRoles.
     */
    skip?: number
    distinct?: AgencyRoleScalarFieldEnum | AgencyRoleScalarFieldEnum[]
  }

  /**
   * AgencyRole create
   */
  export type AgencyRoleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRole
     */
    select?: AgencyRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyRole
     */
    omit?: AgencyRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRoleInclude<ExtArgs> | null
    /**
     * The data needed to create a AgencyRole.
     */
    data: XOR<AgencyRoleCreateInput, AgencyRoleUncheckedCreateInput>
  }

  /**
   * AgencyRole createMany
   */
  export type AgencyRoleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AgencyRoles.
     */
    data: AgencyRoleCreateManyInput | AgencyRoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AgencyRole createManyAndReturn
   */
  export type AgencyRoleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRole
     */
    select?: AgencyRoleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyRole
     */
    omit?: AgencyRoleOmit<ExtArgs> | null
    /**
     * The data used to create many AgencyRoles.
     */
    data: AgencyRoleCreateManyInput | AgencyRoleCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRoleIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AgencyRole update
   */
  export type AgencyRoleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRole
     */
    select?: AgencyRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyRole
     */
    omit?: AgencyRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRoleInclude<ExtArgs> | null
    /**
     * The data needed to update a AgencyRole.
     */
    data: XOR<AgencyRoleUpdateInput, AgencyRoleUncheckedUpdateInput>
    /**
     * Choose, which AgencyRole to update.
     */
    where: AgencyRoleWhereUniqueInput
  }

  /**
   * AgencyRole updateMany
   */
  export type AgencyRoleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AgencyRoles.
     */
    data: XOR<AgencyRoleUpdateManyMutationInput, AgencyRoleUncheckedUpdateManyInput>
    /**
     * Filter which AgencyRoles to update
     */
    where?: AgencyRoleWhereInput
    /**
     * Limit how many AgencyRoles to update.
     */
    limit?: number
  }

  /**
   * AgencyRole updateManyAndReturn
   */
  export type AgencyRoleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRole
     */
    select?: AgencyRoleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyRole
     */
    omit?: AgencyRoleOmit<ExtArgs> | null
    /**
     * The data used to update AgencyRoles.
     */
    data: XOR<AgencyRoleUpdateManyMutationInput, AgencyRoleUncheckedUpdateManyInput>
    /**
     * Filter which AgencyRoles to update
     */
    where?: AgencyRoleWhereInput
    /**
     * Limit how many AgencyRoles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRoleIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AgencyRole upsert
   */
  export type AgencyRoleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRole
     */
    select?: AgencyRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyRole
     */
    omit?: AgencyRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRoleInclude<ExtArgs> | null
    /**
     * The filter to search for the AgencyRole to update in case it exists.
     */
    where: AgencyRoleWhereUniqueInput
    /**
     * In case the AgencyRole found by the `where` argument doesn't exist, create a new AgencyRole with this data.
     */
    create: XOR<AgencyRoleCreateInput, AgencyRoleUncheckedCreateInput>
    /**
     * In case the AgencyRole was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AgencyRoleUpdateInput, AgencyRoleUncheckedUpdateInput>
  }

  /**
   * AgencyRole delete
   */
  export type AgencyRoleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRole
     */
    select?: AgencyRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyRole
     */
    omit?: AgencyRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRoleInclude<ExtArgs> | null
    /**
     * Filter which AgencyRole to delete.
     */
    where: AgencyRoleWhereUniqueInput
  }

  /**
   * AgencyRole deleteMany
   */
  export type AgencyRoleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgencyRoles to delete
     */
    where?: AgencyRoleWhereInput
    /**
     * Limit how many AgencyRoles to delete.
     */
    limit?: number
  }

  /**
   * AgencyRole without action
   */
  export type AgencyRoleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRole
     */
    select?: AgencyRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyRole
     */
    omit?: AgencyRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRoleInclude<ExtArgs> | null
  }


  /**
   * Model AgencyVerificationDocument
   */

  export type AggregateAgencyVerificationDocument = {
    _count: AgencyVerificationDocumentCountAggregateOutputType | null
    _avg: AgencyVerificationDocumentAvgAggregateOutputType | null
    _sum: AgencyVerificationDocumentSumAggregateOutputType | null
    _min: AgencyVerificationDocumentMinAggregateOutputType | null
    _max: AgencyVerificationDocumentMaxAggregateOutputType | null
  }

  export type AgencyVerificationDocumentAvgAggregateOutputType = {
    fileSize: number | null
  }

  export type AgencyVerificationDocumentSumAggregateOutputType = {
    fileSize: number | null
  }

  export type AgencyVerificationDocumentMinAggregateOutputType = {
    id: string | null
    documentType: string | null
    fileName: string | null
    fileUrl: string | null
    fileSize: number | null
    mimeType: string | null
    title: string | null
    description: string | null
    isVerified: boolean | null
    reviewedBy: string | null
    reviewedAt: Date | null
    reviewNotes: string | null
    uploadedAt: Date | null
    agencyId: string | null
  }

  export type AgencyVerificationDocumentMaxAggregateOutputType = {
    id: string | null
    documentType: string | null
    fileName: string | null
    fileUrl: string | null
    fileSize: number | null
    mimeType: string | null
    title: string | null
    description: string | null
    isVerified: boolean | null
    reviewedBy: string | null
    reviewedAt: Date | null
    reviewNotes: string | null
    uploadedAt: Date | null
    agencyId: string | null
  }

  export type AgencyVerificationDocumentCountAggregateOutputType = {
    id: number
    documentType: number
    fileName: number
    fileUrl: number
    fileSize: number
    mimeType: number
    title: number
    description: number
    isVerified: number
    reviewedBy: number
    reviewedAt: number
    reviewNotes: number
    uploadedAt: number
    agencyId: number
    _all: number
  }


  export type AgencyVerificationDocumentAvgAggregateInputType = {
    fileSize?: true
  }

  export type AgencyVerificationDocumentSumAggregateInputType = {
    fileSize?: true
  }

  export type AgencyVerificationDocumentMinAggregateInputType = {
    id?: true
    documentType?: true
    fileName?: true
    fileUrl?: true
    fileSize?: true
    mimeType?: true
    title?: true
    description?: true
    isVerified?: true
    reviewedBy?: true
    reviewedAt?: true
    reviewNotes?: true
    uploadedAt?: true
    agencyId?: true
  }

  export type AgencyVerificationDocumentMaxAggregateInputType = {
    id?: true
    documentType?: true
    fileName?: true
    fileUrl?: true
    fileSize?: true
    mimeType?: true
    title?: true
    description?: true
    isVerified?: true
    reviewedBy?: true
    reviewedAt?: true
    reviewNotes?: true
    uploadedAt?: true
    agencyId?: true
  }

  export type AgencyVerificationDocumentCountAggregateInputType = {
    id?: true
    documentType?: true
    fileName?: true
    fileUrl?: true
    fileSize?: true
    mimeType?: true
    title?: true
    description?: true
    isVerified?: true
    reviewedBy?: true
    reviewedAt?: true
    reviewNotes?: true
    uploadedAt?: true
    agencyId?: true
    _all?: true
  }

  export type AgencyVerificationDocumentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgencyVerificationDocument to aggregate.
     */
    where?: AgencyVerificationDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyVerificationDocuments to fetch.
     */
    orderBy?: AgencyVerificationDocumentOrderByWithRelationInput | AgencyVerificationDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AgencyVerificationDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyVerificationDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyVerificationDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AgencyVerificationDocuments
    **/
    _count?: true | AgencyVerificationDocumentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AgencyVerificationDocumentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AgencyVerificationDocumentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AgencyVerificationDocumentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AgencyVerificationDocumentMaxAggregateInputType
  }

  export type GetAgencyVerificationDocumentAggregateType<T extends AgencyVerificationDocumentAggregateArgs> = {
        [P in keyof T & keyof AggregateAgencyVerificationDocument]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAgencyVerificationDocument[P]>
      : GetScalarType<T[P], AggregateAgencyVerificationDocument[P]>
  }




  export type AgencyVerificationDocumentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyVerificationDocumentWhereInput
    orderBy?: AgencyVerificationDocumentOrderByWithAggregationInput | AgencyVerificationDocumentOrderByWithAggregationInput[]
    by: AgencyVerificationDocumentScalarFieldEnum[] | AgencyVerificationDocumentScalarFieldEnum
    having?: AgencyVerificationDocumentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AgencyVerificationDocumentCountAggregateInputType | true
    _avg?: AgencyVerificationDocumentAvgAggregateInputType
    _sum?: AgencyVerificationDocumentSumAggregateInputType
    _min?: AgencyVerificationDocumentMinAggregateInputType
    _max?: AgencyVerificationDocumentMaxAggregateInputType
  }

  export type AgencyVerificationDocumentGroupByOutputType = {
    id: string
    documentType: string
    fileName: string
    fileUrl: string
    fileSize: number
    mimeType: string
    title: string
    description: string | null
    isVerified: boolean
    reviewedBy: string | null
    reviewedAt: Date | null
    reviewNotes: string | null
    uploadedAt: Date
    agencyId: string
    _count: AgencyVerificationDocumentCountAggregateOutputType | null
    _avg: AgencyVerificationDocumentAvgAggregateOutputType | null
    _sum: AgencyVerificationDocumentSumAggregateOutputType | null
    _min: AgencyVerificationDocumentMinAggregateOutputType | null
    _max: AgencyVerificationDocumentMaxAggregateOutputType | null
  }

  type GetAgencyVerificationDocumentGroupByPayload<T extends AgencyVerificationDocumentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AgencyVerificationDocumentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AgencyVerificationDocumentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AgencyVerificationDocumentGroupByOutputType[P]>
            : GetScalarType<T[P], AgencyVerificationDocumentGroupByOutputType[P]>
        }
      >
    >


  export type AgencyVerificationDocumentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    documentType?: boolean
    fileName?: boolean
    fileUrl?: boolean
    fileSize?: boolean
    mimeType?: boolean
    title?: boolean
    description?: boolean
    isVerified?: boolean
    reviewedBy?: boolean
    reviewedAt?: boolean
    reviewNotes?: boolean
    uploadedAt?: boolean
    agencyId?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agencyVerificationDocument"]>

  export type AgencyVerificationDocumentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    documentType?: boolean
    fileName?: boolean
    fileUrl?: boolean
    fileSize?: boolean
    mimeType?: boolean
    title?: boolean
    description?: boolean
    isVerified?: boolean
    reviewedBy?: boolean
    reviewedAt?: boolean
    reviewNotes?: boolean
    uploadedAt?: boolean
    agencyId?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agencyVerificationDocument"]>

  export type AgencyVerificationDocumentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    documentType?: boolean
    fileName?: boolean
    fileUrl?: boolean
    fileSize?: boolean
    mimeType?: boolean
    title?: boolean
    description?: boolean
    isVerified?: boolean
    reviewedBy?: boolean
    reviewedAt?: boolean
    reviewNotes?: boolean
    uploadedAt?: boolean
    agencyId?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agencyVerificationDocument"]>

  export type AgencyVerificationDocumentSelectScalar = {
    id?: boolean
    documentType?: boolean
    fileName?: boolean
    fileUrl?: boolean
    fileSize?: boolean
    mimeType?: boolean
    title?: boolean
    description?: boolean
    isVerified?: boolean
    reviewedBy?: boolean
    reviewedAt?: boolean
    reviewNotes?: boolean
    uploadedAt?: boolean
    agencyId?: boolean
  }

  export type AgencyVerificationDocumentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "documentType" | "fileName" | "fileUrl" | "fileSize" | "mimeType" | "title" | "description" | "isVerified" | "reviewedBy" | "reviewedAt" | "reviewNotes" | "uploadedAt" | "agencyId", ExtArgs["result"]["agencyVerificationDocument"]>
  export type AgencyVerificationDocumentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }
  export type AgencyVerificationDocumentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }
  export type AgencyVerificationDocumentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }

  export type $AgencyVerificationDocumentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AgencyVerificationDocument"
    objects: {
      agency: Prisma.$AgencyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      documentType: string
      fileName: string
      fileUrl: string
      fileSize: number
      mimeType: string
      title: string
      description: string | null
      isVerified: boolean
      reviewedBy: string | null
      reviewedAt: Date | null
      reviewNotes: string | null
      uploadedAt: Date
      agencyId: string
    }, ExtArgs["result"]["agencyVerificationDocument"]>
    composites: {}
  }

  type AgencyVerificationDocumentGetPayload<S extends boolean | null | undefined | AgencyVerificationDocumentDefaultArgs> = $Result.GetResult<Prisma.$AgencyVerificationDocumentPayload, S>

  type AgencyVerificationDocumentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AgencyVerificationDocumentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AgencyVerificationDocumentCountAggregateInputType | true
    }

  export interface AgencyVerificationDocumentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AgencyVerificationDocument'], meta: { name: 'AgencyVerificationDocument' } }
    /**
     * Find zero or one AgencyVerificationDocument that matches the filter.
     * @param {AgencyVerificationDocumentFindUniqueArgs} args - Arguments to find a AgencyVerificationDocument
     * @example
     * // Get one AgencyVerificationDocument
     * const agencyVerificationDocument = await prisma.agencyVerificationDocument.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AgencyVerificationDocumentFindUniqueArgs>(args: SelectSubset<T, AgencyVerificationDocumentFindUniqueArgs<ExtArgs>>): Prisma__AgencyVerificationDocumentClient<$Result.GetResult<Prisma.$AgencyVerificationDocumentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AgencyVerificationDocument that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AgencyVerificationDocumentFindUniqueOrThrowArgs} args - Arguments to find a AgencyVerificationDocument
     * @example
     * // Get one AgencyVerificationDocument
     * const agencyVerificationDocument = await prisma.agencyVerificationDocument.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AgencyVerificationDocumentFindUniqueOrThrowArgs>(args: SelectSubset<T, AgencyVerificationDocumentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AgencyVerificationDocumentClient<$Result.GetResult<Prisma.$AgencyVerificationDocumentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AgencyVerificationDocument that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyVerificationDocumentFindFirstArgs} args - Arguments to find a AgencyVerificationDocument
     * @example
     * // Get one AgencyVerificationDocument
     * const agencyVerificationDocument = await prisma.agencyVerificationDocument.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AgencyVerificationDocumentFindFirstArgs>(args?: SelectSubset<T, AgencyVerificationDocumentFindFirstArgs<ExtArgs>>): Prisma__AgencyVerificationDocumentClient<$Result.GetResult<Prisma.$AgencyVerificationDocumentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AgencyVerificationDocument that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyVerificationDocumentFindFirstOrThrowArgs} args - Arguments to find a AgencyVerificationDocument
     * @example
     * // Get one AgencyVerificationDocument
     * const agencyVerificationDocument = await prisma.agencyVerificationDocument.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AgencyVerificationDocumentFindFirstOrThrowArgs>(args?: SelectSubset<T, AgencyVerificationDocumentFindFirstOrThrowArgs<ExtArgs>>): Prisma__AgencyVerificationDocumentClient<$Result.GetResult<Prisma.$AgencyVerificationDocumentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AgencyVerificationDocuments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyVerificationDocumentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AgencyVerificationDocuments
     * const agencyVerificationDocuments = await prisma.agencyVerificationDocument.findMany()
     * 
     * // Get first 10 AgencyVerificationDocuments
     * const agencyVerificationDocuments = await prisma.agencyVerificationDocument.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const agencyVerificationDocumentWithIdOnly = await prisma.agencyVerificationDocument.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AgencyVerificationDocumentFindManyArgs>(args?: SelectSubset<T, AgencyVerificationDocumentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyVerificationDocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AgencyVerificationDocument.
     * @param {AgencyVerificationDocumentCreateArgs} args - Arguments to create a AgencyVerificationDocument.
     * @example
     * // Create one AgencyVerificationDocument
     * const AgencyVerificationDocument = await prisma.agencyVerificationDocument.create({
     *   data: {
     *     // ... data to create a AgencyVerificationDocument
     *   }
     * })
     * 
     */
    create<T extends AgencyVerificationDocumentCreateArgs>(args: SelectSubset<T, AgencyVerificationDocumentCreateArgs<ExtArgs>>): Prisma__AgencyVerificationDocumentClient<$Result.GetResult<Prisma.$AgencyVerificationDocumentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AgencyVerificationDocuments.
     * @param {AgencyVerificationDocumentCreateManyArgs} args - Arguments to create many AgencyVerificationDocuments.
     * @example
     * // Create many AgencyVerificationDocuments
     * const agencyVerificationDocument = await prisma.agencyVerificationDocument.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AgencyVerificationDocumentCreateManyArgs>(args?: SelectSubset<T, AgencyVerificationDocumentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AgencyVerificationDocuments and returns the data saved in the database.
     * @param {AgencyVerificationDocumentCreateManyAndReturnArgs} args - Arguments to create many AgencyVerificationDocuments.
     * @example
     * // Create many AgencyVerificationDocuments
     * const agencyVerificationDocument = await prisma.agencyVerificationDocument.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AgencyVerificationDocuments and only return the `id`
     * const agencyVerificationDocumentWithIdOnly = await prisma.agencyVerificationDocument.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AgencyVerificationDocumentCreateManyAndReturnArgs>(args?: SelectSubset<T, AgencyVerificationDocumentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyVerificationDocumentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AgencyVerificationDocument.
     * @param {AgencyVerificationDocumentDeleteArgs} args - Arguments to delete one AgencyVerificationDocument.
     * @example
     * // Delete one AgencyVerificationDocument
     * const AgencyVerificationDocument = await prisma.agencyVerificationDocument.delete({
     *   where: {
     *     // ... filter to delete one AgencyVerificationDocument
     *   }
     * })
     * 
     */
    delete<T extends AgencyVerificationDocumentDeleteArgs>(args: SelectSubset<T, AgencyVerificationDocumentDeleteArgs<ExtArgs>>): Prisma__AgencyVerificationDocumentClient<$Result.GetResult<Prisma.$AgencyVerificationDocumentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AgencyVerificationDocument.
     * @param {AgencyVerificationDocumentUpdateArgs} args - Arguments to update one AgencyVerificationDocument.
     * @example
     * // Update one AgencyVerificationDocument
     * const agencyVerificationDocument = await prisma.agencyVerificationDocument.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AgencyVerificationDocumentUpdateArgs>(args: SelectSubset<T, AgencyVerificationDocumentUpdateArgs<ExtArgs>>): Prisma__AgencyVerificationDocumentClient<$Result.GetResult<Prisma.$AgencyVerificationDocumentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AgencyVerificationDocuments.
     * @param {AgencyVerificationDocumentDeleteManyArgs} args - Arguments to filter AgencyVerificationDocuments to delete.
     * @example
     * // Delete a few AgencyVerificationDocuments
     * const { count } = await prisma.agencyVerificationDocument.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AgencyVerificationDocumentDeleteManyArgs>(args?: SelectSubset<T, AgencyVerificationDocumentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AgencyVerificationDocuments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyVerificationDocumentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AgencyVerificationDocuments
     * const agencyVerificationDocument = await prisma.agencyVerificationDocument.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AgencyVerificationDocumentUpdateManyArgs>(args: SelectSubset<T, AgencyVerificationDocumentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AgencyVerificationDocuments and returns the data updated in the database.
     * @param {AgencyVerificationDocumentUpdateManyAndReturnArgs} args - Arguments to update many AgencyVerificationDocuments.
     * @example
     * // Update many AgencyVerificationDocuments
     * const agencyVerificationDocument = await prisma.agencyVerificationDocument.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AgencyVerificationDocuments and only return the `id`
     * const agencyVerificationDocumentWithIdOnly = await prisma.agencyVerificationDocument.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AgencyVerificationDocumentUpdateManyAndReturnArgs>(args: SelectSubset<T, AgencyVerificationDocumentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyVerificationDocumentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AgencyVerificationDocument.
     * @param {AgencyVerificationDocumentUpsertArgs} args - Arguments to update or create a AgencyVerificationDocument.
     * @example
     * // Update or create a AgencyVerificationDocument
     * const agencyVerificationDocument = await prisma.agencyVerificationDocument.upsert({
     *   create: {
     *     // ... data to create a AgencyVerificationDocument
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AgencyVerificationDocument we want to update
     *   }
     * })
     */
    upsert<T extends AgencyVerificationDocumentUpsertArgs>(args: SelectSubset<T, AgencyVerificationDocumentUpsertArgs<ExtArgs>>): Prisma__AgencyVerificationDocumentClient<$Result.GetResult<Prisma.$AgencyVerificationDocumentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AgencyVerificationDocuments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyVerificationDocumentCountArgs} args - Arguments to filter AgencyVerificationDocuments to count.
     * @example
     * // Count the number of AgencyVerificationDocuments
     * const count = await prisma.agencyVerificationDocument.count({
     *   where: {
     *     // ... the filter for the AgencyVerificationDocuments we want to count
     *   }
     * })
    **/
    count<T extends AgencyVerificationDocumentCountArgs>(
      args?: Subset<T, AgencyVerificationDocumentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AgencyVerificationDocumentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AgencyVerificationDocument.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyVerificationDocumentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AgencyVerificationDocumentAggregateArgs>(args: Subset<T, AgencyVerificationDocumentAggregateArgs>): Prisma.PrismaPromise<GetAgencyVerificationDocumentAggregateType<T>>

    /**
     * Group by AgencyVerificationDocument.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyVerificationDocumentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AgencyVerificationDocumentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AgencyVerificationDocumentGroupByArgs['orderBy'] }
        : { orderBy?: AgencyVerificationDocumentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AgencyVerificationDocumentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAgencyVerificationDocumentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AgencyVerificationDocument model
   */
  readonly fields: AgencyVerificationDocumentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AgencyVerificationDocument.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AgencyVerificationDocumentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    agency<T extends AgencyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AgencyDefaultArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AgencyVerificationDocument model
   */
  interface AgencyVerificationDocumentFieldRefs {
    readonly id: FieldRef<"AgencyVerificationDocument", 'String'>
    readonly documentType: FieldRef<"AgencyVerificationDocument", 'String'>
    readonly fileName: FieldRef<"AgencyVerificationDocument", 'String'>
    readonly fileUrl: FieldRef<"AgencyVerificationDocument", 'String'>
    readonly fileSize: FieldRef<"AgencyVerificationDocument", 'Int'>
    readonly mimeType: FieldRef<"AgencyVerificationDocument", 'String'>
    readonly title: FieldRef<"AgencyVerificationDocument", 'String'>
    readonly description: FieldRef<"AgencyVerificationDocument", 'String'>
    readonly isVerified: FieldRef<"AgencyVerificationDocument", 'Boolean'>
    readonly reviewedBy: FieldRef<"AgencyVerificationDocument", 'String'>
    readonly reviewedAt: FieldRef<"AgencyVerificationDocument", 'DateTime'>
    readonly reviewNotes: FieldRef<"AgencyVerificationDocument", 'String'>
    readonly uploadedAt: FieldRef<"AgencyVerificationDocument", 'DateTime'>
    readonly agencyId: FieldRef<"AgencyVerificationDocument", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AgencyVerificationDocument findUnique
   */
  export type AgencyVerificationDocumentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyVerificationDocument
     */
    select?: AgencyVerificationDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyVerificationDocument
     */
    omit?: AgencyVerificationDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyVerificationDocumentInclude<ExtArgs> | null
    /**
     * Filter, which AgencyVerificationDocument to fetch.
     */
    where: AgencyVerificationDocumentWhereUniqueInput
  }

  /**
   * AgencyVerificationDocument findUniqueOrThrow
   */
  export type AgencyVerificationDocumentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyVerificationDocument
     */
    select?: AgencyVerificationDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyVerificationDocument
     */
    omit?: AgencyVerificationDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyVerificationDocumentInclude<ExtArgs> | null
    /**
     * Filter, which AgencyVerificationDocument to fetch.
     */
    where: AgencyVerificationDocumentWhereUniqueInput
  }

  /**
   * AgencyVerificationDocument findFirst
   */
  export type AgencyVerificationDocumentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyVerificationDocument
     */
    select?: AgencyVerificationDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyVerificationDocument
     */
    omit?: AgencyVerificationDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyVerificationDocumentInclude<ExtArgs> | null
    /**
     * Filter, which AgencyVerificationDocument to fetch.
     */
    where?: AgencyVerificationDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyVerificationDocuments to fetch.
     */
    orderBy?: AgencyVerificationDocumentOrderByWithRelationInput | AgencyVerificationDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgencyVerificationDocuments.
     */
    cursor?: AgencyVerificationDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyVerificationDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyVerificationDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgencyVerificationDocuments.
     */
    distinct?: AgencyVerificationDocumentScalarFieldEnum | AgencyVerificationDocumentScalarFieldEnum[]
  }

  /**
   * AgencyVerificationDocument findFirstOrThrow
   */
  export type AgencyVerificationDocumentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyVerificationDocument
     */
    select?: AgencyVerificationDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyVerificationDocument
     */
    omit?: AgencyVerificationDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyVerificationDocumentInclude<ExtArgs> | null
    /**
     * Filter, which AgencyVerificationDocument to fetch.
     */
    where?: AgencyVerificationDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyVerificationDocuments to fetch.
     */
    orderBy?: AgencyVerificationDocumentOrderByWithRelationInput | AgencyVerificationDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgencyVerificationDocuments.
     */
    cursor?: AgencyVerificationDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyVerificationDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyVerificationDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgencyVerificationDocuments.
     */
    distinct?: AgencyVerificationDocumentScalarFieldEnum | AgencyVerificationDocumentScalarFieldEnum[]
  }

  /**
   * AgencyVerificationDocument findMany
   */
  export type AgencyVerificationDocumentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyVerificationDocument
     */
    select?: AgencyVerificationDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyVerificationDocument
     */
    omit?: AgencyVerificationDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyVerificationDocumentInclude<ExtArgs> | null
    /**
     * Filter, which AgencyVerificationDocuments to fetch.
     */
    where?: AgencyVerificationDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyVerificationDocuments to fetch.
     */
    orderBy?: AgencyVerificationDocumentOrderByWithRelationInput | AgencyVerificationDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AgencyVerificationDocuments.
     */
    cursor?: AgencyVerificationDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyVerificationDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyVerificationDocuments.
     */
    skip?: number
    distinct?: AgencyVerificationDocumentScalarFieldEnum | AgencyVerificationDocumentScalarFieldEnum[]
  }

  /**
   * AgencyVerificationDocument create
   */
  export type AgencyVerificationDocumentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyVerificationDocument
     */
    select?: AgencyVerificationDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyVerificationDocument
     */
    omit?: AgencyVerificationDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyVerificationDocumentInclude<ExtArgs> | null
    /**
     * The data needed to create a AgencyVerificationDocument.
     */
    data: XOR<AgencyVerificationDocumentCreateInput, AgencyVerificationDocumentUncheckedCreateInput>
  }

  /**
   * AgencyVerificationDocument createMany
   */
  export type AgencyVerificationDocumentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AgencyVerificationDocuments.
     */
    data: AgencyVerificationDocumentCreateManyInput | AgencyVerificationDocumentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AgencyVerificationDocument createManyAndReturn
   */
  export type AgencyVerificationDocumentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyVerificationDocument
     */
    select?: AgencyVerificationDocumentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyVerificationDocument
     */
    omit?: AgencyVerificationDocumentOmit<ExtArgs> | null
    /**
     * The data used to create many AgencyVerificationDocuments.
     */
    data: AgencyVerificationDocumentCreateManyInput | AgencyVerificationDocumentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyVerificationDocumentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AgencyVerificationDocument update
   */
  export type AgencyVerificationDocumentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyVerificationDocument
     */
    select?: AgencyVerificationDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyVerificationDocument
     */
    omit?: AgencyVerificationDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyVerificationDocumentInclude<ExtArgs> | null
    /**
     * The data needed to update a AgencyVerificationDocument.
     */
    data: XOR<AgencyVerificationDocumentUpdateInput, AgencyVerificationDocumentUncheckedUpdateInput>
    /**
     * Choose, which AgencyVerificationDocument to update.
     */
    where: AgencyVerificationDocumentWhereUniqueInput
  }

  /**
   * AgencyVerificationDocument updateMany
   */
  export type AgencyVerificationDocumentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AgencyVerificationDocuments.
     */
    data: XOR<AgencyVerificationDocumentUpdateManyMutationInput, AgencyVerificationDocumentUncheckedUpdateManyInput>
    /**
     * Filter which AgencyVerificationDocuments to update
     */
    where?: AgencyVerificationDocumentWhereInput
    /**
     * Limit how many AgencyVerificationDocuments to update.
     */
    limit?: number
  }

  /**
   * AgencyVerificationDocument updateManyAndReturn
   */
  export type AgencyVerificationDocumentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyVerificationDocument
     */
    select?: AgencyVerificationDocumentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyVerificationDocument
     */
    omit?: AgencyVerificationDocumentOmit<ExtArgs> | null
    /**
     * The data used to update AgencyVerificationDocuments.
     */
    data: XOR<AgencyVerificationDocumentUpdateManyMutationInput, AgencyVerificationDocumentUncheckedUpdateManyInput>
    /**
     * Filter which AgencyVerificationDocuments to update
     */
    where?: AgencyVerificationDocumentWhereInput
    /**
     * Limit how many AgencyVerificationDocuments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyVerificationDocumentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AgencyVerificationDocument upsert
   */
  export type AgencyVerificationDocumentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyVerificationDocument
     */
    select?: AgencyVerificationDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyVerificationDocument
     */
    omit?: AgencyVerificationDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyVerificationDocumentInclude<ExtArgs> | null
    /**
     * The filter to search for the AgencyVerificationDocument to update in case it exists.
     */
    where: AgencyVerificationDocumentWhereUniqueInput
    /**
     * In case the AgencyVerificationDocument found by the `where` argument doesn't exist, create a new AgencyVerificationDocument with this data.
     */
    create: XOR<AgencyVerificationDocumentCreateInput, AgencyVerificationDocumentUncheckedCreateInput>
    /**
     * In case the AgencyVerificationDocument was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AgencyVerificationDocumentUpdateInput, AgencyVerificationDocumentUncheckedUpdateInput>
  }

  /**
   * AgencyVerificationDocument delete
   */
  export type AgencyVerificationDocumentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyVerificationDocument
     */
    select?: AgencyVerificationDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyVerificationDocument
     */
    omit?: AgencyVerificationDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyVerificationDocumentInclude<ExtArgs> | null
    /**
     * Filter which AgencyVerificationDocument to delete.
     */
    where: AgencyVerificationDocumentWhereUniqueInput
  }

  /**
   * AgencyVerificationDocument deleteMany
   */
  export type AgencyVerificationDocumentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgencyVerificationDocuments to delete
     */
    where?: AgencyVerificationDocumentWhereInput
    /**
     * Limit how many AgencyVerificationDocuments to delete.
     */
    limit?: number
  }

  /**
   * AgencyVerificationDocument without action
   */
  export type AgencyVerificationDocumentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyVerificationDocument
     */
    select?: AgencyVerificationDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyVerificationDocument
     */
    omit?: AgencyVerificationDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyVerificationDocumentInclude<ExtArgs> | null
  }


  /**
   * Model AgencyPerformance
   */

  export type AggregateAgencyPerformance = {
    _count: AgencyPerformanceCountAggregateOutputType | null
    _avg: AgencyPerformanceAvgAggregateOutputType | null
    _sum: AgencyPerformanceSumAggregateOutputType | null
    _min: AgencyPerformanceMinAggregateOutputType | null
    _max: AgencyPerformanceMaxAggregateOutputType | null
  }

  export type AgencyPerformanceAvgAggregateOutputType = {
    totalSales: number | null
    totalRentals: number | null
    totalRevenue: number | null
    topAgentSales: number | null
    topAgentRevenue: number | null
    salesThisMonth: number | null
    salesThisYear: number | null
    revenueThisMonth: number | null
    revenueThisYear: number | null
  }

  export type AgencyPerformanceSumAggregateOutputType = {
    totalSales: number | null
    totalRentals: number | null
    totalRevenue: number | null
    topAgentSales: number | null
    topAgentRevenue: number | null
    salesThisMonth: number | null
    salesThisYear: number | null
    revenueThisMonth: number | null
    revenueThisYear: number | null
  }

  export type AgencyPerformanceMinAggregateOutputType = {
    id: string | null
    totalSales: number | null
    totalRentals: number | null
    totalRevenue: number | null
    topAgent: string | null
    topAgentSales: number | null
    topAgentRevenue: number | null
    salesThisMonth: number | null
    salesThisYear: number | null
    revenueThisMonth: number | null
    revenueThisYear: number | null
    lastCalculated: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    agencyId: string | null
  }

  export type AgencyPerformanceMaxAggregateOutputType = {
    id: string | null
    totalSales: number | null
    totalRentals: number | null
    totalRevenue: number | null
    topAgent: string | null
    topAgentSales: number | null
    topAgentRevenue: number | null
    salesThisMonth: number | null
    salesThisYear: number | null
    revenueThisMonth: number | null
    revenueThisYear: number | null
    lastCalculated: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    agencyId: string | null
  }

  export type AgencyPerformanceCountAggregateOutputType = {
    id: number
    totalSales: number
    totalRentals: number
    totalRevenue: number
    topAgent: number
    topAgentSales: number
    topAgentRevenue: number
    salesThisMonth: number
    salesThisYear: number
    revenueThisMonth: number
    revenueThisYear: number
    lastCalculated: number
    createdAt: number
    updatedAt: number
    agencyId: number
    _all: number
  }


  export type AgencyPerformanceAvgAggregateInputType = {
    totalSales?: true
    totalRentals?: true
    totalRevenue?: true
    topAgentSales?: true
    topAgentRevenue?: true
    salesThisMonth?: true
    salesThisYear?: true
    revenueThisMonth?: true
    revenueThisYear?: true
  }

  export type AgencyPerformanceSumAggregateInputType = {
    totalSales?: true
    totalRentals?: true
    totalRevenue?: true
    topAgentSales?: true
    topAgentRevenue?: true
    salesThisMonth?: true
    salesThisYear?: true
    revenueThisMonth?: true
    revenueThisYear?: true
  }

  export type AgencyPerformanceMinAggregateInputType = {
    id?: true
    totalSales?: true
    totalRentals?: true
    totalRevenue?: true
    topAgent?: true
    topAgentSales?: true
    topAgentRevenue?: true
    salesThisMonth?: true
    salesThisYear?: true
    revenueThisMonth?: true
    revenueThisYear?: true
    lastCalculated?: true
    createdAt?: true
    updatedAt?: true
    agencyId?: true
  }

  export type AgencyPerformanceMaxAggregateInputType = {
    id?: true
    totalSales?: true
    totalRentals?: true
    totalRevenue?: true
    topAgent?: true
    topAgentSales?: true
    topAgentRevenue?: true
    salesThisMonth?: true
    salesThisYear?: true
    revenueThisMonth?: true
    revenueThisYear?: true
    lastCalculated?: true
    createdAt?: true
    updatedAt?: true
    agencyId?: true
  }

  export type AgencyPerformanceCountAggregateInputType = {
    id?: true
    totalSales?: true
    totalRentals?: true
    totalRevenue?: true
    topAgent?: true
    topAgentSales?: true
    topAgentRevenue?: true
    salesThisMonth?: true
    salesThisYear?: true
    revenueThisMonth?: true
    revenueThisYear?: true
    lastCalculated?: true
    createdAt?: true
    updatedAt?: true
    agencyId?: true
    _all?: true
  }

  export type AgencyPerformanceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgencyPerformance to aggregate.
     */
    where?: AgencyPerformanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyPerformances to fetch.
     */
    orderBy?: AgencyPerformanceOrderByWithRelationInput | AgencyPerformanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AgencyPerformanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyPerformances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyPerformances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AgencyPerformances
    **/
    _count?: true | AgencyPerformanceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AgencyPerformanceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AgencyPerformanceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AgencyPerformanceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AgencyPerformanceMaxAggregateInputType
  }

  export type GetAgencyPerformanceAggregateType<T extends AgencyPerformanceAggregateArgs> = {
        [P in keyof T & keyof AggregateAgencyPerformance]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAgencyPerformance[P]>
      : GetScalarType<T[P], AggregateAgencyPerformance[P]>
  }




  export type AgencyPerformanceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyPerformanceWhereInput
    orderBy?: AgencyPerformanceOrderByWithAggregationInput | AgencyPerformanceOrderByWithAggregationInput[]
    by: AgencyPerformanceScalarFieldEnum[] | AgencyPerformanceScalarFieldEnum
    having?: AgencyPerformanceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AgencyPerformanceCountAggregateInputType | true
    _avg?: AgencyPerformanceAvgAggregateInputType
    _sum?: AgencyPerformanceSumAggregateInputType
    _min?: AgencyPerformanceMinAggregateInputType
    _max?: AgencyPerformanceMaxAggregateInputType
  }

  export type AgencyPerformanceGroupByOutputType = {
    id: string
    totalSales: number
    totalRentals: number
    totalRevenue: number
    topAgent: string | null
    topAgentSales: number
    topAgentRevenue: number
    salesThisMonth: number
    salesThisYear: number
    revenueThisMonth: number
    revenueThisYear: number
    lastCalculated: Date
    createdAt: Date
    updatedAt: Date
    agencyId: string
    _count: AgencyPerformanceCountAggregateOutputType | null
    _avg: AgencyPerformanceAvgAggregateOutputType | null
    _sum: AgencyPerformanceSumAggregateOutputType | null
    _min: AgencyPerformanceMinAggregateOutputType | null
    _max: AgencyPerformanceMaxAggregateOutputType | null
  }

  type GetAgencyPerformanceGroupByPayload<T extends AgencyPerformanceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AgencyPerformanceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AgencyPerformanceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AgencyPerformanceGroupByOutputType[P]>
            : GetScalarType<T[P], AgencyPerformanceGroupByOutputType[P]>
        }
      >
    >


  export type AgencyPerformanceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    totalSales?: boolean
    totalRentals?: boolean
    totalRevenue?: boolean
    topAgent?: boolean
    topAgentSales?: boolean
    topAgentRevenue?: boolean
    salesThisMonth?: boolean
    salesThisYear?: boolean
    revenueThisMonth?: boolean
    revenueThisYear?: boolean
    lastCalculated?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agencyId?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agencyPerformance"]>

  export type AgencyPerformanceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    totalSales?: boolean
    totalRentals?: boolean
    totalRevenue?: boolean
    topAgent?: boolean
    topAgentSales?: boolean
    topAgentRevenue?: boolean
    salesThisMonth?: boolean
    salesThisYear?: boolean
    revenueThisMonth?: boolean
    revenueThisYear?: boolean
    lastCalculated?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agencyId?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agencyPerformance"]>

  export type AgencyPerformanceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    totalSales?: boolean
    totalRentals?: boolean
    totalRevenue?: boolean
    topAgent?: boolean
    topAgentSales?: boolean
    topAgentRevenue?: boolean
    salesThisMonth?: boolean
    salesThisYear?: boolean
    revenueThisMonth?: boolean
    revenueThisYear?: boolean
    lastCalculated?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agencyId?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agencyPerformance"]>

  export type AgencyPerformanceSelectScalar = {
    id?: boolean
    totalSales?: boolean
    totalRentals?: boolean
    totalRevenue?: boolean
    topAgent?: boolean
    topAgentSales?: boolean
    topAgentRevenue?: boolean
    salesThisMonth?: boolean
    salesThisYear?: boolean
    revenueThisMonth?: boolean
    revenueThisYear?: boolean
    lastCalculated?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agencyId?: boolean
  }

  export type AgencyPerformanceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "totalSales" | "totalRentals" | "totalRevenue" | "topAgent" | "topAgentSales" | "topAgentRevenue" | "salesThisMonth" | "salesThisYear" | "revenueThisMonth" | "revenueThisYear" | "lastCalculated" | "createdAt" | "updatedAt" | "agencyId", ExtArgs["result"]["agencyPerformance"]>
  export type AgencyPerformanceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }
  export type AgencyPerformanceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }
  export type AgencyPerformanceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
  }

  export type $AgencyPerformancePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AgencyPerformance"
    objects: {
      agency: Prisma.$AgencyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      totalSales: number
      totalRentals: number
      totalRevenue: number
      topAgent: string | null
      topAgentSales: number
      topAgentRevenue: number
      salesThisMonth: number
      salesThisYear: number
      revenueThisMonth: number
      revenueThisYear: number
      lastCalculated: Date
      createdAt: Date
      updatedAt: Date
      agencyId: string
    }, ExtArgs["result"]["agencyPerformance"]>
    composites: {}
  }

  type AgencyPerformanceGetPayload<S extends boolean | null | undefined | AgencyPerformanceDefaultArgs> = $Result.GetResult<Prisma.$AgencyPerformancePayload, S>

  type AgencyPerformanceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AgencyPerformanceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AgencyPerformanceCountAggregateInputType | true
    }

  export interface AgencyPerformanceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AgencyPerformance'], meta: { name: 'AgencyPerformance' } }
    /**
     * Find zero or one AgencyPerformance that matches the filter.
     * @param {AgencyPerformanceFindUniqueArgs} args - Arguments to find a AgencyPerformance
     * @example
     * // Get one AgencyPerformance
     * const agencyPerformance = await prisma.agencyPerformance.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AgencyPerformanceFindUniqueArgs>(args: SelectSubset<T, AgencyPerformanceFindUniqueArgs<ExtArgs>>): Prisma__AgencyPerformanceClient<$Result.GetResult<Prisma.$AgencyPerformancePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AgencyPerformance that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AgencyPerformanceFindUniqueOrThrowArgs} args - Arguments to find a AgencyPerformance
     * @example
     * // Get one AgencyPerformance
     * const agencyPerformance = await prisma.agencyPerformance.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AgencyPerformanceFindUniqueOrThrowArgs>(args: SelectSubset<T, AgencyPerformanceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AgencyPerformanceClient<$Result.GetResult<Prisma.$AgencyPerformancePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AgencyPerformance that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyPerformanceFindFirstArgs} args - Arguments to find a AgencyPerformance
     * @example
     * // Get one AgencyPerformance
     * const agencyPerformance = await prisma.agencyPerformance.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AgencyPerformanceFindFirstArgs>(args?: SelectSubset<T, AgencyPerformanceFindFirstArgs<ExtArgs>>): Prisma__AgencyPerformanceClient<$Result.GetResult<Prisma.$AgencyPerformancePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AgencyPerformance that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyPerformanceFindFirstOrThrowArgs} args - Arguments to find a AgencyPerformance
     * @example
     * // Get one AgencyPerformance
     * const agencyPerformance = await prisma.agencyPerformance.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AgencyPerformanceFindFirstOrThrowArgs>(args?: SelectSubset<T, AgencyPerformanceFindFirstOrThrowArgs<ExtArgs>>): Prisma__AgencyPerformanceClient<$Result.GetResult<Prisma.$AgencyPerformancePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AgencyPerformances that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyPerformanceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AgencyPerformances
     * const agencyPerformances = await prisma.agencyPerformance.findMany()
     * 
     * // Get first 10 AgencyPerformances
     * const agencyPerformances = await prisma.agencyPerformance.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const agencyPerformanceWithIdOnly = await prisma.agencyPerformance.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AgencyPerformanceFindManyArgs>(args?: SelectSubset<T, AgencyPerformanceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyPerformancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AgencyPerformance.
     * @param {AgencyPerformanceCreateArgs} args - Arguments to create a AgencyPerformance.
     * @example
     * // Create one AgencyPerformance
     * const AgencyPerformance = await prisma.agencyPerformance.create({
     *   data: {
     *     // ... data to create a AgencyPerformance
     *   }
     * })
     * 
     */
    create<T extends AgencyPerformanceCreateArgs>(args: SelectSubset<T, AgencyPerformanceCreateArgs<ExtArgs>>): Prisma__AgencyPerformanceClient<$Result.GetResult<Prisma.$AgencyPerformancePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AgencyPerformances.
     * @param {AgencyPerformanceCreateManyArgs} args - Arguments to create many AgencyPerformances.
     * @example
     * // Create many AgencyPerformances
     * const agencyPerformance = await prisma.agencyPerformance.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AgencyPerformanceCreateManyArgs>(args?: SelectSubset<T, AgencyPerformanceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AgencyPerformances and returns the data saved in the database.
     * @param {AgencyPerformanceCreateManyAndReturnArgs} args - Arguments to create many AgencyPerformances.
     * @example
     * // Create many AgencyPerformances
     * const agencyPerformance = await prisma.agencyPerformance.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AgencyPerformances and only return the `id`
     * const agencyPerformanceWithIdOnly = await prisma.agencyPerformance.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AgencyPerformanceCreateManyAndReturnArgs>(args?: SelectSubset<T, AgencyPerformanceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyPerformancePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AgencyPerformance.
     * @param {AgencyPerformanceDeleteArgs} args - Arguments to delete one AgencyPerformance.
     * @example
     * // Delete one AgencyPerformance
     * const AgencyPerformance = await prisma.agencyPerformance.delete({
     *   where: {
     *     // ... filter to delete one AgencyPerformance
     *   }
     * })
     * 
     */
    delete<T extends AgencyPerformanceDeleteArgs>(args: SelectSubset<T, AgencyPerformanceDeleteArgs<ExtArgs>>): Prisma__AgencyPerformanceClient<$Result.GetResult<Prisma.$AgencyPerformancePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AgencyPerformance.
     * @param {AgencyPerformanceUpdateArgs} args - Arguments to update one AgencyPerformance.
     * @example
     * // Update one AgencyPerformance
     * const agencyPerformance = await prisma.agencyPerformance.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AgencyPerformanceUpdateArgs>(args: SelectSubset<T, AgencyPerformanceUpdateArgs<ExtArgs>>): Prisma__AgencyPerformanceClient<$Result.GetResult<Prisma.$AgencyPerformancePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AgencyPerformances.
     * @param {AgencyPerformanceDeleteManyArgs} args - Arguments to filter AgencyPerformances to delete.
     * @example
     * // Delete a few AgencyPerformances
     * const { count } = await prisma.agencyPerformance.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AgencyPerformanceDeleteManyArgs>(args?: SelectSubset<T, AgencyPerformanceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AgencyPerformances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyPerformanceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AgencyPerformances
     * const agencyPerformance = await prisma.agencyPerformance.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AgencyPerformanceUpdateManyArgs>(args: SelectSubset<T, AgencyPerformanceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AgencyPerformances and returns the data updated in the database.
     * @param {AgencyPerformanceUpdateManyAndReturnArgs} args - Arguments to update many AgencyPerformances.
     * @example
     * // Update many AgencyPerformances
     * const agencyPerformance = await prisma.agencyPerformance.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AgencyPerformances and only return the `id`
     * const agencyPerformanceWithIdOnly = await prisma.agencyPerformance.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AgencyPerformanceUpdateManyAndReturnArgs>(args: SelectSubset<T, AgencyPerformanceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyPerformancePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AgencyPerformance.
     * @param {AgencyPerformanceUpsertArgs} args - Arguments to update or create a AgencyPerformance.
     * @example
     * // Update or create a AgencyPerformance
     * const agencyPerformance = await prisma.agencyPerformance.upsert({
     *   create: {
     *     // ... data to create a AgencyPerformance
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AgencyPerformance we want to update
     *   }
     * })
     */
    upsert<T extends AgencyPerformanceUpsertArgs>(args: SelectSubset<T, AgencyPerformanceUpsertArgs<ExtArgs>>): Prisma__AgencyPerformanceClient<$Result.GetResult<Prisma.$AgencyPerformancePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AgencyPerformances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyPerformanceCountArgs} args - Arguments to filter AgencyPerformances to count.
     * @example
     * // Count the number of AgencyPerformances
     * const count = await prisma.agencyPerformance.count({
     *   where: {
     *     // ... the filter for the AgencyPerformances we want to count
     *   }
     * })
    **/
    count<T extends AgencyPerformanceCountArgs>(
      args?: Subset<T, AgencyPerformanceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AgencyPerformanceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AgencyPerformance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyPerformanceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AgencyPerformanceAggregateArgs>(args: Subset<T, AgencyPerformanceAggregateArgs>): Prisma.PrismaPromise<GetAgencyPerformanceAggregateType<T>>

    /**
     * Group by AgencyPerformance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyPerformanceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AgencyPerformanceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AgencyPerformanceGroupByArgs['orderBy'] }
        : { orderBy?: AgencyPerformanceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AgencyPerformanceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAgencyPerformanceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AgencyPerformance model
   */
  readonly fields: AgencyPerformanceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AgencyPerformance.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AgencyPerformanceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    agency<T extends AgencyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AgencyDefaultArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AgencyPerformance model
   */
  interface AgencyPerformanceFieldRefs {
    readonly id: FieldRef<"AgencyPerformance", 'String'>
    readonly totalSales: FieldRef<"AgencyPerformance", 'Int'>
    readonly totalRentals: FieldRef<"AgencyPerformance", 'Int'>
    readonly totalRevenue: FieldRef<"AgencyPerformance", 'Float'>
    readonly topAgent: FieldRef<"AgencyPerformance", 'String'>
    readonly topAgentSales: FieldRef<"AgencyPerformance", 'Int'>
    readonly topAgentRevenue: FieldRef<"AgencyPerformance", 'Float'>
    readonly salesThisMonth: FieldRef<"AgencyPerformance", 'Int'>
    readonly salesThisYear: FieldRef<"AgencyPerformance", 'Int'>
    readonly revenueThisMonth: FieldRef<"AgencyPerformance", 'Float'>
    readonly revenueThisYear: FieldRef<"AgencyPerformance", 'Float'>
    readonly lastCalculated: FieldRef<"AgencyPerformance", 'DateTime'>
    readonly createdAt: FieldRef<"AgencyPerformance", 'DateTime'>
    readonly updatedAt: FieldRef<"AgencyPerformance", 'DateTime'>
    readonly agencyId: FieldRef<"AgencyPerformance", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AgencyPerformance findUnique
   */
  export type AgencyPerformanceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyPerformance
     */
    select?: AgencyPerformanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyPerformance
     */
    omit?: AgencyPerformanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyPerformanceInclude<ExtArgs> | null
    /**
     * Filter, which AgencyPerformance to fetch.
     */
    where: AgencyPerformanceWhereUniqueInput
  }

  /**
   * AgencyPerformance findUniqueOrThrow
   */
  export type AgencyPerformanceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyPerformance
     */
    select?: AgencyPerformanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyPerformance
     */
    omit?: AgencyPerformanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyPerformanceInclude<ExtArgs> | null
    /**
     * Filter, which AgencyPerformance to fetch.
     */
    where: AgencyPerformanceWhereUniqueInput
  }

  /**
   * AgencyPerformance findFirst
   */
  export type AgencyPerformanceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyPerformance
     */
    select?: AgencyPerformanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyPerformance
     */
    omit?: AgencyPerformanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyPerformanceInclude<ExtArgs> | null
    /**
     * Filter, which AgencyPerformance to fetch.
     */
    where?: AgencyPerformanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyPerformances to fetch.
     */
    orderBy?: AgencyPerformanceOrderByWithRelationInput | AgencyPerformanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgencyPerformances.
     */
    cursor?: AgencyPerformanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyPerformances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyPerformances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgencyPerformances.
     */
    distinct?: AgencyPerformanceScalarFieldEnum | AgencyPerformanceScalarFieldEnum[]
  }

  /**
   * AgencyPerformance findFirstOrThrow
   */
  export type AgencyPerformanceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyPerformance
     */
    select?: AgencyPerformanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyPerformance
     */
    omit?: AgencyPerformanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyPerformanceInclude<ExtArgs> | null
    /**
     * Filter, which AgencyPerformance to fetch.
     */
    where?: AgencyPerformanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyPerformances to fetch.
     */
    orderBy?: AgencyPerformanceOrderByWithRelationInput | AgencyPerformanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgencyPerformances.
     */
    cursor?: AgencyPerformanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyPerformances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyPerformances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgencyPerformances.
     */
    distinct?: AgencyPerformanceScalarFieldEnum | AgencyPerformanceScalarFieldEnum[]
  }

  /**
   * AgencyPerformance findMany
   */
  export type AgencyPerformanceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyPerformance
     */
    select?: AgencyPerformanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyPerformance
     */
    omit?: AgencyPerformanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyPerformanceInclude<ExtArgs> | null
    /**
     * Filter, which AgencyPerformances to fetch.
     */
    where?: AgencyPerformanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyPerformances to fetch.
     */
    orderBy?: AgencyPerformanceOrderByWithRelationInput | AgencyPerformanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AgencyPerformances.
     */
    cursor?: AgencyPerformanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyPerformances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyPerformances.
     */
    skip?: number
    distinct?: AgencyPerformanceScalarFieldEnum | AgencyPerformanceScalarFieldEnum[]
  }

  /**
   * AgencyPerformance create
   */
  export type AgencyPerformanceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyPerformance
     */
    select?: AgencyPerformanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyPerformance
     */
    omit?: AgencyPerformanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyPerformanceInclude<ExtArgs> | null
    /**
     * The data needed to create a AgencyPerformance.
     */
    data: XOR<AgencyPerformanceCreateInput, AgencyPerformanceUncheckedCreateInput>
  }

  /**
   * AgencyPerformance createMany
   */
  export type AgencyPerformanceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AgencyPerformances.
     */
    data: AgencyPerformanceCreateManyInput | AgencyPerformanceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AgencyPerformance createManyAndReturn
   */
  export type AgencyPerformanceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyPerformance
     */
    select?: AgencyPerformanceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyPerformance
     */
    omit?: AgencyPerformanceOmit<ExtArgs> | null
    /**
     * The data used to create many AgencyPerformances.
     */
    data: AgencyPerformanceCreateManyInput | AgencyPerformanceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyPerformanceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AgencyPerformance update
   */
  export type AgencyPerformanceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyPerformance
     */
    select?: AgencyPerformanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyPerformance
     */
    omit?: AgencyPerformanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyPerformanceInclude<ExtArgs> | null
    /**
     * The data needed to update a AgencyPerformance.
     */
    data: XOR<AgencyPerformanceUpdateInput, AgencyPerformanceUncheckedUpdateInput>
    /**
     * Choose, which AgencyPerformance to update.
     */
    where: AgencyPerformanceWhereUniqueInput
  }

  /**
   * AgencyPerformance updateMany
   */
  export type AgencyPerformanceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AgencyPerformances.
     */
    data: XOR<AgencyPerformanceUpdateManyMutationInput, AgencyPerformanceUncheckedUpdateManyInput>
    /**
     * Filter which AgencyPerformances to update
     */
    where?: AgencyPerformanceWhereInput
    /**
     * Limit how many AgencyPerformances to update.
     */
    limit?: number
  }

  /**
   * AgencyPerformance updateManyAndReturn
   */
  export type AgencyPerformanceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyPerformance
     */
    select?: AgencyPerformanceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyPerformance
     */
    omit?: AgencyPerformanceOmit<ExtArgs> | null
    /**
     * The data used to update AgencyPerformances.
     */
    data: XOR<AgencyPerformanceUpdateManyMutationInput, AgencyPerformanceUncheckedUpdateManyInput>
    /**
     * Filter which AgencyPerformances to update
     */
    where?: AgencyPerformanceWhereInput
    /**
     * Limit how many AgencyPerformances to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyPerformanceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AgencyPerformance upsert
   */
  export type AgencyPerformanceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyPerformance
     */
    select?: AgencyPerformanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyPerformance
     */
    omit?: AgencyPerformanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyPerformanceInclude<ExtArgs> | null
    /**
     * The filter to search for the AgencyPerformance to update in case it exists.
     */
    where: AgencyPerformanceWhereUniqueInput
    /**
     * In case the AgencyPerformance found by the `where` argument doesn't exist, create a new AgencyPerformance with this data.
     */
    create: XOR<AgencyPerformanceCreateInput, AgencyPerformanceUncheckedCreateInput>
    /**
     * In case the AgencyPerformance was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AgencyPerformanceUpdateInput, AgencyPerformanceUncheckedUpdateInput>
  }

  /**
   * AgencyPerformance delete
   */
  export type AgencyPerformanceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyPerformance
     */
    select?: AgencyPerformanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyPerformance
     */
    omit?: AgencyPerformanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyPerformanceInclude<ExtArgs> | null
    /**
     * Filter which AgencyPerformance to delete.
     */
    where: AgencyPerformanceWhereUniqueInput
  }

  /**
   * AgencyPerformance deleteMany
   */
  export type AgencyPerformanceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgencyPerformances to delete
     */
    where?: AgencyPerformanceWhereInput
    /**
     * Limit how many AgencyPerformances to delete.
     */
    limit?: number
  }

  /**
   * AgencyPerformance without action
   */
  export type AgencyPerformanceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyPerformance
     */
    select?: AgencyPerformanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyPerformance
     */
    omit?: AgencyPerformanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyPerformanceInclude<ExtArgs> | null
  }


  /**
   * Model AgentPerformance
   */

  export type AggregateAgentPerformance = {
    _count: AgentPerformanceCountAggregateOutputType | null
    _avg: AgentPerformanceAvgAggregateOutputType | null
    _sum: AgentPerformanceSumAggregateOutputType | null
    _min: AgentPerformanceMinAggregateOutputType | null
    _max: AgentPerformanceMaxAggregateOutputType | null
  }

  export type AgentPerformanceAvgAggregateOutputType = {
    totalSales: number | null
    totalRentals: number | null
    totalRevenue: number | null
    salesThisMonth: number | null
    salesThisYear: number | null
    revenueThisMonth: number | null
    revenueThisYear: number | null
    averageResponseTime: number | null
    totalInquiries: number | null
    convertedInquiries: number | null
  }

  export type AgentPerformanceSumAggregateOutputType = {
    totalSales: number | null
    totalRentals: number | null
    totalRevenue: number | null
    salesThisMonth: number | null
    salesThisYear: number | null
    revenueThisMonth: number | null
    revenueThisYear: number | null
    averageResponseTime: number | null
    totalInquiries: number | null
    convertedInquiries: number | null
  }

  export type AgentPerformanceMinAggregateOutputType = {
    id: string | null
    totalSales: number | null
    totalRentals: number | null
    totalRevenue: number | null
    salesThisMonth: number | null
    salesThisYear: number | null
    revenueThisMonth: number | null
    revenueThisYear: number | null
    averageResponseTime: number | null
    totalInquiries: number | null
    convertedInquiries: number | null
    lastCalculated: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    agentId: string | null
  }

  export type AgentPerformanceMaxAggregateOutputType = {
    id: string | null
    totalSales: number | null
    totalRentals: number | null
    totalRevenue: number | null
    salesThisMonth: number | null
    salesThisYear: number | null
    revenueThisMonth: number | null
    revenueThisYear: number | null
    averageResponseTime: number | null
    totalInquiries: number | null
    convertedInquiries: number | null
    lastCalculated: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    agentId: string | null
  }

  export type AgentPerformanceCountAggregateOutputType = {
    id: number
    totalSales: number
    totalRentals: number
    totalRevenue: number
    salesThisMonth: number
    salesThisYear: number
    revenueThisMonth: number
    revenueThisYear: number
    averageResponseTime: number
    totalInquiries: number
    convertedInquiries: number
    lastCalculated: number
    createdAt: number
    updatedAt: number
    agentId: number
    _all: number
  }


  export type AgentPerformanceAvgAggregateInputType = {
    totalSales?: true
    totalRentals?: true
    totalRevenue?: true
    salesThisMonth?: true
    salesThisYear?: true
    revenueThisMonth?: true
    revenueThisYear?: true
    averageResponseTime?: true
    totalInquiries?: true
    convertedInquiries?: true
  }

  export type AgentPerformanceSumAggregateInputType = {
    totalSales?: true
    totalRentals?: true
    totalRevenue?: true
    salesThisMonth?: true
    salesThisYear?: true
    revenueThisMonth?: true
    revenueThisYear?: true
    averageResponseTime?: true
    totalInquiries?: true
    convertedInquiries?: true
  }

  export type AgentPerformanceMinAggregateInputType = {
    id?: true
    totalSales?: true
    totalRentals?: true
    totalRevenue?: true
    salesThisMonth?: true
    salesThisYear?: true
    revenueThisMonth?: true
    revenueThisYear?: true
    averageResponseTime?: true
    totalInquiries?: true
    convertedInquiries?: true
    lastCalculated?: true
    createdAt?: true
    updatedAt?: true
    agentId?: true
  }

  export type AgentPerformanceMaxAggregateInputType = {
    id?: true
    totalSales?: true
    totalRentals?: true
    totalRevenue?: true
    salesThisMonth?: true
    salesThisYear?: true
    revenueThisMonth?: true
    revenueThisYear?: true
    averageResponseTime?: true
    totalInquiries?: true
    convertedInquiries?: true
    lastCalculated?: true
    createdAt?: true
    updatedAt?: true
    agentId?: true
  }

  export type AgentPerformanceCountAggregateInputType = {
    id?: true
    totalSales?: true
    totalRentals?: true
    totalRevenue?: true
    salesThisMonth?: true
    salesThisYear?: true
    revenueThisMonth?: true
    revenueThisYear?: true
    averageResponseTime?: true
    totalInquiries?: true
    convertedInquiries?: true
    lastCalculated?: true
    createdAt?: true
    updatedAt?: true
    agentId?: true
    _all?: true
  }

  export type AgentPerformanceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgentPerformance to aggregate.
     */
    where?: AgentPerformanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgentPerformances to fetch.
     */
    orderBy?: AgentPerformanceOrderByWithRelationInput | AgentPerformanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AgentPerformanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgentPerformances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgentPerformances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AgentPerformances
    **/
    _count?: true | AgentPerformanceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AgentPerformanceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AgentPerformanceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AgentPerformanceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AgentPerformanceMaxAggregateInputType
  }

  export type GetAgentPerformanceAggregateType<T extends AgentPerformanceAggregateArgs> = {
        [P in keyof T & keyof AggregateAgentPerformance]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAgentPerformance[P]>
      : GetScalarType<T[P], AggregateAgentPerformance[P]>
  }




  export type AgentPerformanceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgentPerformanceWhereInput
    orderBy?: AgentPerformanceOrderByWithAggregationInput | AgentPerformanceOrderByWithAggregationInput[]
    by: AgentPerformanceScalarFieldEnum[] | AgentPerformanceScalarFieldEnum
    having?: AgentPerformanceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AgentPerformanceCountAggregateInputType | true
    _avg?: AgentPerformanceAvgAggregateInputType
    _sum?: AgentPerformanceSumAggregateInputType
    _min?: AgentPerformanceMinAggregateInputType
    _max?: AgentPerformanceMaxAggregateInputType
  }

  export type AgentPerformanceGroupByOutputType = {
    id: string
    totalSales: number
    totalRentals: number
    totalRevenue: number
    salesThisMonth: number
    salesThisYear: number
    revenueThisMonth: number
    revenueThisYear: number
    averageResponseTime: number
    totalInquiries: number
    convertedInquiries: number
    lastCalculated: Date
    createdAt: Date
    updatedAt: Date
    agentId: string
    _count: AgentPerformanceCountAggregateOutputType | null
    _avg: AgentPerformanceAvgAggregateOutputType | null
    _sum: AgentPerformanceSumAggregateOutputType | null
    _min: AgentPerformanceMinAggregateOutputType | null
    _max: AgentPerformanceMaxAggregateOutputType | null
  }

  type GetAgentPerformanceGroupByPayload<T extends AgentPerformanceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AgentPerformanceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AgentPerformanceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AgentPerformanceGroupByOutputType[P]>
            : GetScalarType<T[P], AgentPerformanceGroupByOutputType[P]>
        }
      >
    >


  export type AgentPerformanceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    totalSales?: boolean
    totalRentals?: boolean
    totalRevenue?: boolean
    salesThisMonth?: boolean
    salesThisYear?: boolean
    revenueThisMonth?: boolean
    revenueThisYear?: boolean
    averageResponseTime?: boolean
    totalInquiries?: boolean
    convertedInquiries?: boolean
    lastCalculated?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agentId?: boolean
    agent?: boolean | AgencyMemberDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agentPerformance"]>

  export type AgentPerformanceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    totalSales?: boolean
    totalRentals?: boolean
    totalRevenue?: boolean
    salesThisMonth?: boolean
    salesThisYear?: boolean
    revenueThisMonth?: boolean
    revenueThisYear?: boolean
    averageResponseTime?: boolean
    totalInquiries?: boolean
    convertedInquiries?: boolean
    lastCalculated?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agentId?: boolean
    agent?: boolean | AgencyMemberDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agentPerformance"]>

  export type AgentPerformanceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    totalSales?: boolean
    totalRentals?: boolean
    totalRevenue?: boolean
    salesThisMonth?: boolean
    salesThisYear?: boolean
    revenueThisMonth?: boolean
    revenueThisYear?: boolean
    averageResponseTime?: boolean
    totalInquiries?: boolean
    convertedInquiries?: boolean
    lastCalculated?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agentId?: boolean
    agent?: boolean | AgencyMemberDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agentPerformance"]>

  export type AgentPerformanceSelectScalar = {
    id?: boolean
    totalSales?: boolean
    totalRentals?: boolean
    totalRevenue?: boolean
    salesThisMonth?: boolean
    salesThisYear?: boolean
    revenueThisMonth?: boolean
    revenueThisYear?: boolean
    averageResponseTime?: boolean
    totalInquiries?: boolean
    convertedInquiries?: boolean
    lastCalculated?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agentId?: boolean
  }

  export type AgentPerformanceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "totalSales" | "totalRentals" | "totalRevenue" | "salesThisMonth" | "salesThisYear" | "revenueThisMonth" | "revenueThisYear" | "averageResponseTime" | "totalInquiries" | "convertedInquiries" | "lastCalculated" | "createdAt" | "updatedAt" | "agentId", ExtArgs["result"]["agentPerformance"]>
  export type AgentPerformanceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agent?: boolean | AgencyMemberDefaultArgs<ExtArgs>
  }
  export type AgentPerformanceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agent?: boolean | AgencyMemberDefaultArgs<ExtArgs>
  }
  export type AgentPerformanceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agent?: boolean | AgencyMemberDefaultArgs<ExtArgs>
  }

  export type $AgentPerformancePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AgentPerformance"
    objects: {
      agent: Prisma.$AgencyMemberPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      totalSales: number
      totalRentals: number
      totalRevenue: number
      salesThisMonth: number
      salesThisYear: number
      revenueThisMonth: number
      revenueThisYear: number
      averageResponseTime: number
      totalInquiries: number
      convertedInquiries: number
      lastCalculated: Date
      createdAt: Date
      updatedAt: Date
      agentId: string
    }, ExtArgs["result"]["agentPerformance"]>
    composites: {}
  }

  type AgentPerformanceGetPayload<S extends boolean | null | undefined | AgentPerformanceDefaultArgs> = $Result.GetResult<Prisma.$AgentPerformancePayload, S>

  type AgentPerformanceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AgentPerformanceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AgentPerformanceCountAggregateInputType | true
    }

  export interface AgentPerformanceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AgentPerformance'], meta: { name: 'AgentPerformance' } }
    /**
     * Find zero or one AgentPerformance that matches the filter.
     * @param {AgentPerformanceFindUniqueArgs} args - Arguments to find a AgentPerformance
     * @example
     * // Get one AgentPerformance
     * const agentPerformance = await prisma.agentPerformance.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AgentPerformanceFindUniqueArgs>(args: SelectSubset<T, AgentPerformanceFindUniqueArgs<ExtArgs>>): Prisma__AgentPerformanceClient<$Result.GetResult<Prisma.$AgentPerformancePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AgentPerformance that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AgentPerformanceFindUniqueOrThrowArgs} args - Arguments to find a AgentPerformance
     * @example
     * // Get one AgentPerformance
     * const agentPerformance = await prisma.agentPerformance.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AgentPerformanceFindUniqueOrThrowArgs>(args: SelectSubset<T, AgentPerformanceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AgentPerformanceClient<$Result.GetResult<Prisma.$AgentPerformancePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AgentPerformance that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentPerformanceFindFirstArgs} args - Arguments to find a AgentPerformance
     * @example
     * // Get one AgentPerformance
     * const agentPerformance = await prisma.agentPerformance.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AgentPerformanceFindFirstArgs>(args?: SelectSubset<T, AgentPerformanceFindFirstArgs<ExtArgs>>): Prisma__AgentPerformanceClient<$Result.GetResult<Prisma.$AgentPerformancePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AgentPerformance that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentPerformanceFindFirstOrThrowArgs} args - Arguments to find a AgentPerformance
     * @example
     * // Get one AgentPerformance
     * const agentPerformance = await prisma.agentPerformance.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AgentPerformanceFindFirstOrThrowArgs>(args?: SelectSubset<T, AgentPerformanceFindFirstOrThrowArgs<ExtArgs>>): Prisma__AgentPerformanceClient<$Result.GetResult<Prisma.$AgentPerformancePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AgentPerformances that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentPerformanceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AgentPerformances
     * const agentPerformances = await prisma.agentPerformance.findMany()
     * 
     * // Get first 10 AgentPerformances
     * const agentPerformances = await prisma.agentPerformance.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const agentPerformanceWithIdOnly = await prisma.agentPerformance.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AgentPerformanceFindManyArgs>(args?: SelectSubset<T, AgentPerformanceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgentPerformancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AgentPerformance.
     * @param {AgentPerformanceCreateArgs} args - Arguments to create a AgentPerformance.
     * @example
     * // Create one AgentPerformance
     * const AgentPerformance = await prisma.agentPerformance.create({
     *   data: {
     *     // ... data to create a AgentPerformance
     *   }
     * })
     * 
     */
    create<T extends AgentPerformanceCreateArgs>(args: SelectSubset<T, AgentPerformanceCreateArgs<ExtArgs>>): Prisma__AgentPerformanceClient<$Result.GetResult<Prisma.$AgentPerformancePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AgentPerformances.
     * @param {AgentPerformanceCreateManyArgs} args - Arguments to create many AgentPerformances.
     * @example
     * // Create many AgentPerformances
     * const agentPerformance = await prisma.agentPerformance.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AgentPerformanceCreateManyArgs>(args?: SelectSubset<T, AgentPerformanceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AgentPerformances and returns the data saved in the database.
     * @param {AgentPerformanceCreateManyAndReturnArgs} args - Arguments to create many AgentPerformances.
     * @example
     * // Create many AgentPerformances
     * const agentPerformance = await prisma.agentPerformance.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AgentPerformances and only return the `id`
     * const agentPerformanceWithIdOnly = await prisma.agentPerformance.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AgentPerformanceCreateManyAndReturnArgs>(args?: SelectSubset<T, AgentPerformanceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgentPerformancePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AgentPerformance.
     * @param {AgentPerformanceDeleteArgs} args - Arguments to delete one AgentPerformance.
     * @example
     * // Delete one AgentPerformance
     * const AgentPerformance = await prisma.agentPerformance.delete({
     *   where: {
     *     // ... filter to delete one AgentPerformance
     *   }
     * })
     * 
     */
    delete<T extends AgentPerformanceDeleteArgs>(args: SelectSubset<T, AgentPerformanceDeleteArgs<ExtArgs>>): Prisma__AgentPerformanceClient<$Result.GetResult<Prisma.$AgentPerformancePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AgentPerformance.
     * @param {AgentPerformanceUpdateArgs} args - Arguments to update one AgentPerformance.
     * @example
     * // Update one AgentPerformance
     * const agentPerformance = await prisma.agentPerformance.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AgentPerformanceUpdateArgs>(args: SelectSubset<T, AgentPerformanceUpdateArgs<ExtArgs>>): Prisma__AgentPerformanceClient<$Result.GetResult<Prisma.$AgentPerformancePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AgentPerformances.
     * @param {AgentPerformanceDeleteManyArgs} args - Arguments to filter AgentPerformances to delete.
     * @example
     * // Delete a few AgentPerformances
     * const { count } = await prisma.agentPerformance.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AgentPerformanceDeleteManyArgs>(args?: SelectSubset<T, AgentPerformanceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AgentPerformances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentPerformanceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AgentPerformances
     * const agentPerformance = await prisma.agentPerformance.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AgentPerformanceUpdateManyArgs>(args: SelectSubset<T, AgentPerformanceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AgentPerformances and returns the data updated in the database.
     * @param {AgentPerformanceUpdateManyAndReturnArgs} args - Arguments to update many AgentPerformances.
     * @example
     * // Update many AgentPerformances
     * const agentPerformance = await prisma.agentPerformance.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AgentPerformances and only return the `id`
     * const agentPerformanceWithIdOnly = await prisma.agentPerformance.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AgentPerformanceUpdateManyAndReturnArgs>(args: SelectSubset<T, AgentPerformanceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgentPerformancePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AgentPerformance.
     * @param {AgentPerformanceUpsertArgs} args - Arguments to update or create a AgentPerformance.
     * @example
     * // Update or create a AgentPerformance
     * const agentPerformance = await prisma.agentPerformance.upsert({
     *   create: {
     *     // ... data to create a AgentPerformance
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AgentPerformance we want to update
     *   }
     * })
     */
    upsert<T extends AgentPerformanceUpsertArgs>(args: SelectSubset<T, AgentPerformanceUpsertArgs<ExtArgs>>): Prisma__AgentPerformanceClient<$Result.GetResult<Prisma.$AgentPerformancePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AgentPerformances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentPerformanceCountArgs} args - Arguments to filter AgentPerformances to count.
     * @example
     * // Count the number of AgentPerformances
     * const count = await prisma.agentPerformance.count({
     *   where: {
     *     // ... the filter for the AgentPerformances we want to count
     *   }
     * })
    **/
    count<T extends AgentPerformanceCountArgs>(
      args?: Subset<T, AgentPerformanceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AgentPerformanceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AgentPerformance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentPerformanceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AgentPerformanceAggregateArgs>(args: Subset<T, AgentPerformanceAggregateArgs>): Prisma.PrismaPromise<GetAgentPerformanceAggregateType<T>>

    /**
     * Group by AgentPerformance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgentPerformanceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AgentPerformanceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AgentPerformanceGroupByArgs['orderBy'] }
        : { orderBy?: AgentPerformanceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AgentPerformanceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAgentPerformanceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AgentPerformance model
   */
  readonly fields: AgentPerformanceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AgentPerformance.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AgentPerformanceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    agent<T extends AgencyMemberDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AgencyMemberDefaultArgs<ExtArgs>>): Prisma__AgencyMemberClient<$Result.GetResult<Prisma.$AgencyMemberPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AgentPerformance model
   */
  interface AgentPerformanceFieldRefs {
    readonly id: FieldRef<"AgentPerformance", 'String'>
    readonly totalSales: FieldRef<"AgentPerformance", 'Int'>
    readonly totalRentals: FieldRef<"AgentPerformance", 'Int'>
    readonly totalRevenue: FieldRef<"AgentPerformance", 'Float'>
    readonly salesThisMonth: FieldRef<"AgentPerformance", 'Int'>
    readonly salesThisYear: FieldRef<"AgentPerformance", 'Int'>
    readonly revenueThisMonth: FieldRef<"AgentPerformance", 'Float'>
    readonly revenueThisYear: FieldRef<"AgentPerformance", 'Float'>
    readonly averageResponseTime: FieldRef<"AgentPerformance", 'Float'>
    readonly totalInquiries: FieldRef<"AgentPerformance", 'Int'>
    readonly convertedInquiries: FieldRef<"AgentPerformance", 'Int'>
    readonly lastCalculated: FieldRef<"AgentPerformance", 'DateTime'>
    readonly createdAt: FieldRef<"AgentPerformance", 'DateTime'>
    readonly updatedAt: FieldRef<"AgentPerformance", 'DateTime'>
    readonly agentId: FieldRef<"AgentPerformance", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AgentPerformance findUnique
   */
  export type AgentPerformanceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentPerformance
     */
    select?: AgentPerformanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgentPerformance
     */
    omit?: AgentPerformanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentPerformanceInclude<ExtArgs> | null
    /**
     * Filter, which AgentPerformance to fetch.
     */
    where: AgentPerformanceWhereUniqueInput
  }

  /**
   * AgentPerformance findUniqueOrThrow
   */
  export type AgentPerformanceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentPerformance
     */
    select?: AgentPerformanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgentPerformance
     */
    omit?: AgentPerformanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentPerformanceInclude<ExtArgs> | null
    /**
     * Filter, which AgentPerformance to fetch.
     */
    where: AgentPerformanceWhereUniqueInput
  }

  /**
   * AgentPerformance findFirst
   */
  export type AgentPerformanceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentPerformance
     */
    select?: AgentPerformanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgentPerformance
     */
    omit?: AgentPerformanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentPerformanceInclude<ExtArgs> | null
    /**
     * Filter, which AgentPerformance to fetch.
     */
    where?: AgentPerformanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgentPerformances to fetch.
     */
    orderBy?: AgentPerformanceOrderByWithRelationInput | AgentPerformanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgentPerformances.
     */
    cursor?: AgentPerformanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgentPerformances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgentPerformances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgentPerformances.
     */
    distinct?: AgentPerformanceScalarFieldEnum | AgentPerformanceScalarFieldEnum[]
  }

  /**
   * AgentPerformance findFirstOrThrow
   */
  export type AgentPerformanceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentPerformance
     */
    select?: AgentPerformanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgentPerformance
     */
    omit?: AgentPerformanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentPerformanceInclude<ExtArgs> | null
    /**
     * Filter, which AgentPerformance to fetch.
     */
    where?: AgentPerformanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgentPerformances to fetch.
     */
    orderBy?: AgentPerformanceOrderByWithRelationInput | AgentPerformanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgentPerformances.
     */
    cursor?: AgentPerformanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgentPerformances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgentPerformances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgentPerformances.
     */
    distinct?: AgentPerformanceScalarFieldEnum | AgentPerformanceScalarFieldEnum[]
  }

  /**
   * AgentPerformance findMany
   */
  export type AgentPerformanceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentPerformance
     */
    select?: AgentPerformanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgentPerformance
     */
    omit?: AgentPerformanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentPerformanceInclude<ExtArgs> | null
    /**
     * Filter, which AgentPerformances to fetch.
     */
    where?: AgentPerformanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgentPerformances to fetch.
     */
    orderBy?: AgentPerformanceOrderByWithRelationInput | AgentPerformanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AgentPerformances.
     */
    cursor?: AgentPerformanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgentPerformances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgentPerformances.
     */
    skip?: number
    distinct?: AgentPerformanceScalarFieldEnum | AgentPerformanceScalarFieldEnum[]
  }

  /**
   * AgentPerformance create
   */
  export type AgentPerformanceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentPerformance
     */
    select?: AgentPerformanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgentPerformance
     */
    omit?: AgentPerformanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentPerformanceInclude<ExtArgs> | null
    /**
     * The data needed to create a AgentPerformance.
     */
    data: XOR<AgentPerformanceCreateInput, AgentPerformanceUncheckedCreateInput>
  }

  /**
   * AgentPerformance createMany
   */
  export type AgentPerformanceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AgentPerformances.
     */
    data: AgentPerformanceCreateManyInput | AgentPerformanceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AgentPerformance createManyAndReturn
   */
  export type AgentPerformanceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentPerformance
     */
    select?: AgentPerformanceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AgentPerformance
     */
    omit?: AgentPerformanceOmit<ExtArgs> | null
    /**
     * The data used to create many AgentPerformances.
     */
    data: AgentPerformanceCreateManyInput | AgentPerformanceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentPerformanceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AgentPerformance update
   */
  export type AgentPerformanceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentPerformance
     */
    select?: AgentPerformanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgentPerformance
     */
    omit?: AgentPerformanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentPerformanceInclude<ExtArgs> | null
    /**
     * The data needed to update a AgentPerformance.
     */
    data: XOR<AgentPerformanceUpdateInput, AgentPerformanceUncheckedUpdateInput>
    /**
     * Choose, which AgentPerformance to update.
     */
    where: AgentPerformanceWhereUniqueInput
  }

  /**
   * AgentPerformance updateMany
   */
  export type AgentPerformanceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AgentPerformances.
     */
    data: XOR<AgentPerformanceUpdateManyMutationInput, AgentPerformanceUncheckedUpdateManyInput>
    /**
     * Filter which AgentPerformances to update
     */
    where?: AgentPerformanceWhereInput
    /**
     * Limit how many AgentPerformances to update.
     */
    limit?: number
  }

  /**
   * AgentPerformance updateManyAndReturn
   */
  export type AgentPerformanceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentPerformance
     */
    select?: AgentPerformanceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AgentPerformance
     */
    omit?: AgentPerformanceOmit<ExtArgs> | null
    /**
     * The data used to update AgentPerformances.
     */
    data: XOR<AgentPerformanceUpdateManyMutationInput, AgentPerformanceUncheckedUpdateManyInput>
    /**
     * Filter which AgentPerformances to update
     */
    where?: AgentPerformanceWhereInput
    /**
     * Limit how many AgentPerformances to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentPerformanceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AgentPerformance upsert
   */
  export type AgentPerformanceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentPerformance
     */
    select?: AgentPerformanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgentPerformance
     */
    omit?: AgentPerformanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentPerformanceInclude<ExtArgs> | null
    /**
     * The filter to search for the AgentPerformance to update in case it exists.
     */
    where: AgentPerformanceWhereUniqueInput
    /**
     * In case the AgentPerformance found by the `where` argument doesn't exist, create a new AgentPerformance with this data.
     */
    create: XOR<AgentPerformanceCreateInput, AgentPerformanceUncheckedCreateInput>
    /**
     * In case the AgentPerformance was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AgentPerformanceUpdateInput, AgentPerformanceUncheckedUpdateInput>
  }

  /**
   * AgentPerformance delete
   */
  export type AgentPerformanceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentPerformance
     */
    select?: AgentPerformanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgentPerformance
     */
    omit?: AgentPerformanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentPerformanceInclude<ExtArgs> | null
    /**
     * Filter which AgentPerformance to delete.
     */
    where: AgentPerformanceWhereUniqueInput
  }

  /**
   * AgentPerformance deleteMany
   */
  export type AgentPerformanceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgentPerformances to delete
     */
    where?: AgentPerformanceWhereInput
    /**
     * Limit how many AgentPerformances to delete.
     */
    limit?: number
  }

  /**
   * AgentPerformance without action
   */
  export type AgentPerformanceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgentPerformance
     */
    select?: AgentPerformanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgentPerformance
     */
    omit?: AgentPerformanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgentPerformanceInclude<ExtArgs> | null
  }


  /**
   * Model AgencyInquiry
   */

  export type AggregateAgencyInquiry = {
    _count: AgencyInquiryCountAggregateOutputType | null
    _min: AgencyInquiryMinAggregateOutputType | null
    _max: AgencyInquiryMaxAggregateOutputType | null
  }

  export type AgencyInquiryMinAggregateOutputType = {
    id: string | null
    subject: string | null
    message: string | null
    whoSentIt: string | null
    whichProperty: string | null
    status: $Enums.InquiryStatus | null
    whenSent: Date | null
    response: string | null
    respondedAt: Date | null
    respondedBy: string | null
    createdAt: Date | null
    updatedAt: Date | null
    agencyId: string | null
    propertyId: string | null
  }

  export type AgencyInquiryMaxAggregateOutputType = {
    id: string | null
    subject: string | null
    message: string | null
    whoSentIt: string | null
    whichProperty: string | null
    status: $Enums.InquiryStatus | null
    whenSent: Date | null
    response: string | null
    respondedAt: Date | null
    respondedBy: string | null
    createdAt: Date | null
    updatedAt: Date | null
    agencyId: string | null
    propertyId: string | null
  }

  export type AgencyInquiryCountAggregateOutputType = {
    id: number
    subject: number
    message: number
    whoSentIt: number
    whichProperty: number
    status: number
    whenSent: number
    response: number
    respondedAt: number
    respondedBy: number
    createdAt: number
    updatedAt: number
    agencyId: number
    propertyId: number
    _all: number
  }


  export type AgencyInquiryMinAggregateInputType = {
    id?: true
    subject?: true
    message?: true
    whoSentIt?: true
    whichProperty?: true
    status?: true
    whenSent?: true
    response?: true
    respondedAt?: true
    respondedBy?: true
    createdAt?: true
    updatedAt?: true
    agencyId?: true
    propertyId?: true
  }

  export type AgencyInquiryMaxAggregateInputType = {
    id?: true
    subject?: true
    message?: true
    whoSentIt?: true
    whichProperty?: true
    status?: true
    whenSent?: true
    response?: true
    respondedAt?: true
    respondedBy?: true
    createdAt?: true
    updatedAt?: true
    agencyId?: true
    propertyId?: true
  }

  export type AgencyInquiryCountAggregateInputType = {
    id?: true
    subject?: true
    message?: true
    whoSentIt?: true
    whichProperty?: true
    status?: true
    whenSent?: true
    response?: true
    respondedAt?: true
    respondedBy?: true
    createdAt?: true
    updatedAt?: true
    agencyId?: true
    propertyId?: true
    _all?: true
  }

  export type AgencyInquiryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgencyInquiry to aggregate.
     */
    where?: AgencyInquiryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyInquiries to fetch.
     */
    orderBy?: AgencyInquiryOrderByWithRelationInput | AgencyInquiryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AgencyInquiryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyInquiries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyInquiries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AgencyInquiries
    **/
    _count?: true | AgencyInquiryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AgencyInquiryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AgencyInquiryMaxAggregateInputType
  }

  export type GetAgencyInquiryAggregateType<T extends AgencyInquiryAggregateArgs> = {
        [P in keyof T & keyof AggregateAgencyInquiry]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAgencyInquiry[P]>
      : GetScalarType<T[P], AggregateAgencyInquiry[P]>
  }




  export type AgencyInquiryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyInquiryWhereInput
    orderBy?: AgencyInquiryOrderByWithAggregationInput | AgencyInquiryOrderByWithAggregationInput[]
    by: AgencyInquiryScalarFieldEnum[] | AgencyInquiryScalarFieldEnum
    having?: AgencyInquiryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AgencyInquiryCountAggregateInputType | true
    _min?: AgencyInquiryMinAggregateInputType
    _max?: AgencyInquiryMaxAggregateInputType
  }

  export type AgencyInquiryGroupByOutputType = {
    id: string
    subject: string
    message: string
    whoSentIt: string
    whichProperty: string | null
    status: $Enums.InquiryStatus
    whenSent: Date
    response: string | null
    respondedAt: Date | null
    respondedBy: string | null
    createdAt: Date
    updatedAt: Date
    agencyId: string
    propertyId: string | null
    _count: AgencyInquiryCountAggregateOutputType | null
    _min: AgencyInquiryMinAggregateOutputType | null
    _max: AgencyInquiryMaxAggregateOutputType | null
  }

  type GetAgencyInquiryGroupByPayload<T extends AgencyInquiryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AgencyInquiryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AgencyInquiryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AgencyInquiryGroupByOutputType[P]>
            : GetScalarType<T[P], AgencyInquiryGroupByOutputType[P]>
        }
      >
    >


  export type AgencyInquirySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    subject?: boolean
    message?: boolean
    whoSentIt?: boolean
    whichProperty?: boolean
    status?: boolean
    whenSent?: boolean
    response?: boolean
    respondedAt?: boolean
    respondedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agencyId?: boolean
    propertyId?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    property?: boolean | AgencyInquiry$propertyArgs<ExtArgs>
  }, ExtArgs["result"]["agencyInquiry"]>

  export type AgencyInquirySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    subject?: boolean
    message?: boolean
    whoSentIt?: boolean
    whichProperty?: boolean
    status?: boolean
    whenSent?: boolean
    response?: boolean
    respondedAt?: boolean
    respondedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agencyId?: boolean
    propertyId?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    property?: boolean | AgencyInquiry$propertyArgs<ExtArgs>
  }, ExtArgs["result"]["agencyInquiry"]>

  export type AgencyInquirySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    subject?: boolean
    message?: boolean
    whoSentIt?: boolean
    whichProperty?: boolean
    status?: boolean
    whenSent?: boolean
    response?: boolean
    respondedAt?: boolean
    respondedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agencyId?: boolean
    propertyId?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    property?: boolean | AgencyInquiry$propertyArgs<ExtArgs>
  }, ExtArgs["result"]["agencyInquiry"]>

  export type AgencyInquirySelectScalar = {
    id?: boolean
    subject?: boolean
    message?: boolean
    whoSentIt?: boolean
    whichProperty?: boolean
    status?: boolean
    whenSent?: boolean
    response?: boolean
    respondedAt?: boolean
    respondedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    agencyId?: boolean
    propertyId?: boolean
  }

  export type AgencyInquiryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "subject" | "message" | "whoSentIt" | "whichProperty" | "status" | "whenSent" | "response" | "respondedAt" | "respondedBy" | "createdAt" | "updatedAt" | "agencyId" | "propertyId", ExtArgs["result"]["agencyInquiry"]>
  export type AgencyInquiryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    property?: boolean | AgencyInquiry$propertyArgs<ExtArgs>
  }
  export type AgencyInquiryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    property?: boolean | AgencyInquiry$propertyArgs<ExtArgs>
  }
  export type AgencyInquiryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    property?: boolean | AgencyInquiry$propertyArgs<ExtArgs>
  }

  export type $AgencyInquiryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AgencyInquiry"
    objects: {
      agency: Prisma.$AgencyPayload<ExtArgs>
      property: Prisma.$PropertyPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      subject: string
      message: string
      whoSentIt: string
      whichProperty: string | null
      status: $Enums.InquiryStatus
      whenSent: Date
      response: string | null
      respondedAt: Date | null
      respondedBy: string | null
      createdAt: Date
      updatedAt: Date
      agencyId: string
      propertyId: string | null
    }, ExtArgs["result"]["agencyInquiry"]>
    composites: {}
  }

  type AgencyInquiryGetPayload<S extends boolean | null | undefined | AgencyInquiryDefaultArgs> = $Result.GetResult<Prisma.$AgencyInquiryPayload, S>

  type AgencyInquiryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AgencyInquiryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AgencyInquiryCountAggregateInputType | true
    }

  export interface AgencyInquiryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AgencyInquiry'], meta: { name: 'AgencyInquiry' } }
    /**
     * Find zero or one AgencyInquiry that matches the filter.
     * @param {AgencyInquiryFindUniqueArgs} args - Arguments to find a AgencyInquiry
     * @example
     * // Get one AgencyInquiry
     * const agencyInquiry = await prisma.agencyInquiry.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AgencyInquiryFindUniqueArgs>(args: SelectSubset<T, AgencyInquiryFindUniqueArgs<ExtArgs>>): Prisma__AgencyInquiryClient<$Result.GetResult<Prisma.$AgencyInquiryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AgencyInquiry that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AgencyInquiryFindUniqueOrThrowArgs} args - Arguments to find a AgencyInquiry
     * @example
     * // Get one AgencyInquiry
     * const agencyInquiry = await prisma.agencyInquiry.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AgencyInquiryFindUniqueOrThrowArgs>(args: SelectSubset<T, AgencyInquiryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AgencyInquiryClient<$Result.GetResult<Prisma.$AgencyInquiryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AgencyInquiry that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyInquiryFindFirstArgs} args - Arguments to find a AgencyInquiry
     * @example
     * // Get one AgencyInquiry
     * const agencyInquiry = await prisma.agencyInquiry.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AgencyInquiryFindFirstArgs>(args?: SelectSubset<T, AgencyInquiryFindFirstArgs<ExtArgs>>): Prisma__AgencyInquiryClient<$Result.GetResult<Prisma.$AgencyInquiryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AgencyInquiry that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyInquiryFindFirstOrThrowArgs} args - Arguments to find a AgencyInquiry
     * @example
     * // Get one AgencyInquiry
     * const agencyInquiry = await prisma.agencyInquiry.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AgencyInquiryFindFirstOrThrowArgs>(args?: SelectSubset<T, AgencyInquiryFindFirstOrThrowArgs<ExtArgs>>): Prisma__AgencyInquiryClient<$Result.GetResult<Prisma.$AgencyInquiryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AgencyInquiries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyInquiryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AgencyInquiries
     * const agencyInquiries = await prisma.agencyInquiry.findMany()
     * 
     * // Get first 10 AgencyInquiries
     * const agencyInquiries = await prisma.agencyInquiry.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const agencyInquiryWithIdOnly = await prisma.agencyInquiry.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AgencyInquiryFindManyArgs>(args?: SelectSubset<T, AgencyInquiryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyInquiryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AgencyInquiry.
     * @param {AgencyInquiryCreateArgs} args - Arguments to create a AgencyInquiry.
     * @example
     * // Create one AgencyInquiry
     * const AgencyInquiry = await prisma.agencyInquiry.create({
     *   data: {
     *     // ... data to create a AgencyInquiry
     *   }
     * })
     * 
     */
    create<T extends AgencyInquiryCreateArgs>(args: SelectSubset<T, AgencyInquiryCreateArgs<ExtArgs>>): Prisma__AgencyInquiryClient<$Result.GetResult<Prisma.$AgencyInquiryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AgencyInquiries.
     * @param {AgencyInquiryCreateManyArgs} args - Arguments to create many AgencyInquiries.
     * @example
     * // Create many AgencyInquiries
     * const agencyInquiry = await prisma.agencyInquiry.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AgencyInquiryCreateManyArgs>(args?: SelectSubset<T, AgencyInquiryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AgencyInquiries and returns the data saved in the database.
     * @param {AgencyInquiryCreateManyAndReturnArgs} args - Arguments to create many AgencyInquiries.
     * @example
     * // Create many AgencyInquiries
     * const agencyInquiry = await prisma.agencyInquiry.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AgencyInquiries and only return the `id`
     * const agencyInquiryWithIdOnly = await prisma.agencyInquiry.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AgencyInquiryCreateManyAndReturnArgs>(args?: SelectSubset<T, AgencyInquiryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyInquiryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AgencyInquiry.
     * @param {AgencyInquiryDeleteArgs} args - Arguments to delete one AgencyInquiry.
     * @example
     * // Delete one AgencyInquiry
     * const AgencyInquiry = await prisma.agencyInquiry.delete({
     *   where: {
     *     // ... filter to delete one AgencyInquiry
     *   }
     * })
     * 
     */
    delete<T extends AgencyInquiryDeleteArgs>(args: SelectSubset<T, AgencyInquiryDeleteArgs<ExtArgs>>): Prisma__AgencyInquiryClient<$Result.GetResult<Prisma.$AgencyInquiryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AgencyInquiry.
     * @param {AgencyInquiryUpdateArgs} args - Arguments to update one AgencyInquiry.
     * @example
     * // Update one AgencyInquiry
     * const agencyInquiry = await prisma.agencyInquiry.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AgencyInquiryUpdateArgs>(args: SelectSubset<T, AgencyInquiryUpdateArgs<ExtArgs>>): Prisma__AgencyInquiryClient<$Result.GetResult<Prisma.$AgencyInquiryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AgencyInquiries.
     * @param {AgencyInquiryDeleteManyArgs} args - Arguments to filter AgencyInquiries to delete.
     * @example
     * // Delete a few AgencyInquiries
     * const { count } = await prisma.agencyInquiry.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AgencyInquiryDeleteManyArgs>(args?: SelectSubset<T, AgencyInquiryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AgencyInquiries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyInquiryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AgencyInquiries
     * const agencyInquiry = await prisma.agencyInquiry.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AgencyInquiryUpdateManyArgs>(args: SelectSubset<T, AgencyInquiryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AgencyInquiries and returns the data updated in the database.
     * @param {AgencyInquiryUpdateManyAndReturnArgs} args - Arguments to update many AgencyInquiries.
     * @example
     * // Update many AgencyInquiries
     * const agencyInquiry = await prisma.agencyInquiry.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AgencyInquiries and only return the `id`
     * const agencyInquiryWithIdOnly = await prisma.agencyInquiry.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AgencyInquiryUpdateManyAndReturnArgs>(args: SelectSubset<T, AgencyInquiryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyInquiryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AgencyInquiry.
     * @param {AgencyInquiryUpsertArgs} args - Arguments to update or create a AgencyInquiry.
     * @example
     * // Update or create a AgencyInquiry
     * const agencyInquiry = await prisma.agencyInquiry.upsert({
     *   create: {
     *     // ... data to create a AgencyInquiry
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AgencyInquiry we want to update
     *   }
     * })
     */
    upsert<T extends AgencyInquiryUpsertArgs>(args: SelectSubset<T, AgencyInquiryUpsertArgs<ExtArgs>>): Prisma__AgencyInquiryClient<$Result.GetResult<Prisma.$AgencyInquiryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AgencyInquiries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyInquiryCountArgs} args - Arguments to filter AgencyInquiries to count.
     * @example
     * // Count the number of AgencyInquiries
     * const count = await prisma.agencyInquiry.count({
     *   where: {
     *     // ... the filter for the AgencyInquiries we want to count
     *   }
     * })
    **/
    count<T extends AgencyInquiryCountArgs>(
      args?: Subset<T, AgencyInquiryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AgencyInquiryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AgencyInquiry.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyInquiryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AgencyInquiryAggregateArgs>(args: Subset<T, AgencyInquiryAggregateArgs>): Prisma.PrismaPromise<GetAgencyInquiryAggregateType<T>>

    /**
     * Group by AgencyInquiry.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyInquiryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AgencyInquiryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AgencyInquiryGroupByArgs['orderBy'] }
        : { orderBy?: AgencyInquiryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AgencyInquiryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAgencyInquiryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AgencyInquiry model
   */
  readonly fields: AgencyInquiryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AgencyInquiry.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AgencyInquiryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    agency<T extends AgencyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AgencyDefaultArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    property<T extends AgencyInquiry$propertyArgs<ExtArgs> = {}>(args?: Subset<T, AgencyInquiry$propertyArgs<ExtArgs>>): Prisma__PropertyClient<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AgencyInquiry model
   */
  interface AgencyInquiryFieldRefs {
    readonly id: FieldRef<"AgencyInquiry", 'String'>
    readonly subject: FieldRef<"AgencyInquiry", 'String'>
    readonly message: FieldRef<"AgencyInquiry", 'String'>
    readonly whoSentIt: FieldRef<"AgencyInquiry", 'String'>
    readonly whichProperty: FieldRef<"AgencyInquiry", 'String'>
    readonly status: FieldRef<"AgencyInquiry", 'InquiryStatus'>
    readonly whenSent: FieldRef<"AgencyInquiry", 'DateTime'>
    readonly response: FieldRef<"AgencyInquiry", 'String'>
    readonly respondedAt: FieldRef<"AgencyInquiry", 'DateTime'>
    readonly respondedBy: FieldRef<"AgencyInquiry", 'String'>
    readonly createdAt: FieldRef<"AgencyInquiry", 'DateTime'>
    readonly updatedAt: FieldRef<"AgencyInquiry", 'DateTime'>
    readonly agencyId: FieldRef<"AgencyInquiry", 'String'>
    readonly propertyId: FieldRef<"AgencyInquiry", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AgencyInquiry findUnique
   */
  export type AgencyInquiryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInquiry
     */
    select?: AgencyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyInquiry
     */
    omit?: AgencyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInquiryInclude<ExtArgs> | null
    /**
     * Filter, which AgencyInquiry to fetch.
     */
    where: AgencyInquiryWhereUniqueInput
  }

  /**
   * AgencyInquiry findUniqueOrThrow
   */
  export type AgencyInquiryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInquiry
     */
    select?: AgencyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyInquiry
     */
    omit?: AgencyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInquiryInclude<ExtArgs> | null
    /**
     * Filter, which AgencyInquiry to fetch.
     */
    where: AgencyInquiryWhereUniqueInput
  }

  /**
   * AgencyInquiry findFirst
   */
  export type AgencyInquiryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInquiry
     */
    select?: AgencyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyInquiry
     */
    omit?: AgencyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInquiryInclude<ExtArgs> | null
    /**
     * Filter, which AgencyInquiry to fetch.
     */
    where?: AgencyInquiryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyInquiries to fetch.
     */
    orderBy?: AgencyInquiryOrderByWithRelationInput | AgencyInquiryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgencyInquiries.
     */
    cursor?: AgencyInquiryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyInquiries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyInquiries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgencyInquiries.
     */
    distinct?: AgencyInquiryScalarFieldEnum | AgencyInquiryScalarFieldEnum[]
  }

  /**
   * AgencyInquiry findFirstOrThrow
   */
  export type AgencyInquiryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInquiry
     */
    select?: AgencyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyInquiry
     */
    omit?: AgencyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInquiryInclude<ExtArgs> | null
    /**
     * Filter, which AgencyInquiry to fetch.
     */
    where?: AgencyInquiryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyInquiries to fetch.
     */
    orderBy?: AgencyInquiryOrderByWithRelationInput | AgencyInquiryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgencyInquiries.
     */
    cursor?: AgencyInquiryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyInquiries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyInquiries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgencyInquiries.
     */
    distinct?: AgencyInquiryScalarFieldEnum | AgencyInquiryScalarFieldEnum[]
  }

  /**
   * AgencyInquiry findMany
   */
  export type AgencyInquiryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInquiry
     */
    select?: AgencyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyInquiry
     */
    omit?: AgencyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInquiryInclude<ExtArgs> | null
    /**
     * Filter, which AgencyInquiries to fetch.
     */
    where?: AgencyInquiryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyInquiries to fetch.
     */
    orderBy?: AgencyInquiryOrderByWithRelationInput | AgencyInquiryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AgencyInquiries.
     */
    cursor?: AgencyInquiryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyInquiries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyInquiries.
     */
    skip?: number
    distinct?: AgencyInquiryScalarFieldEnum | AgencyInquiryScalarFieldEnum[]
  }

  /**
   * AgencyInquiry create
   */
  export type AgencyInquiryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInquiry
     */
    select?: AgencyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyInquiry
     */
    omit?: AgencyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInquiryInclude<ExtArgs> | null
    /**
     * The data needed to create a AgencyInquiry.
     */
    data: XOR<AgencyInquiryCreateInput, AgencyInquiryUncheckedCreateInput>
  }

  /**
   * AgencyInquiry createMany
   */
  export type AgencyInquiryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AgencyInquiries.
     */
    data: AgencyInquiryCreateManyInput | AgencyInquiryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AgencyInquiry createManyAndReturn
   */
  export type AgencyInquiryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInquiry
     */
    select?: AgencyInquirySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyInquiry
     */
    omit?: AgencyInquiryOmit<ExtArgs> | null
    /**
     * The data used to create many AgencyInquiries.
     */
    data: AgencyInquiryCreateManyInput | AgencyInquiryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInquiryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AgencyInquiry update
   */
  export type AgencyInquiryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInquiry
     */
    select?: AgencyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyInquiry
     */
    omit?: AgencyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInquiryInclude<ExtArgs> | null
    /**
     * The data needed to update a AgencyInquiry.
     */
    data: XOR<AgencyInquiryUpdateInput, AgencyInquiryUncheckedUpdateInput>
    /**
     * Choose, which AgencyInquiry to update.
     */
    where: AgencyInquiryWhereUniqueInput
  }

  /**
   * AgencyInquiry updateMany
   */
  export type AgencyInquiryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AgencyInquiries.
     */
    data: XOR<AgencyInquiryUpdateManyMutationInput, AgencyInquiryUncheckedUpdateManyInput>
    /**
     * Filter which AgencyInquiries to update
     */
    where?: AgencyInquiryWhereInput
    /**
     * Limit how many AgencyInquiries to update.
     */
    limit?: number
  }

  /**
   * AgencyInquiry updateManyAndReturn
   */
  export type AgencyInquiryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInquiry
     */
    select?: AgencyInquirySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyInquiry
     */
    omit?: AgencyInquiryOmit<ExtArgs> | null
    /**
     * The data used to update AgencyInquiries.
     */
    data: XOR<AgencyInquiryUpdateManyMutationInput, AgencyInquiryUncheckedUpdateManyInput>
    /**
     * Filter which AgencyInquiries to update
     */
    where?: AgencyInquiryWhereInput
    /**
     * Limit how many AgencyInquiries to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInquiryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AgencyInquiry upsert
   */
  export type AgencyInquiryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInquiry
     */
    select?: AgencyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyInquiry
     */
    omit?: AgencyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInquiryInclude<ExtArgs> | null
    /**
     * The filter to search for the AgencyInquiry to update in case it exists.
     */
    where: AgencyInquiryWhereUniqueInput
    /**
     * In case the AgencyInquiry found by the `where` argument doesn't exist, create a new AgencyInquiry with this data.
     */
    create: XOR<AgencyInquiryCreateInput, AgencyInquiryUncheckedCreateInput>
    /**
     * In case the AgencyInquiry was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AgencyInquiryUpdateInput, AgencyInquiryUncheckedUpdateInput>
  }

  /**
   * AgencyInquiry delete
   */
  export type AgencyInquiryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInquiry
     */
    select?: AgencyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyInquiry
     */
    omit?: AgencyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInquiryInclude<ExtArgs> | null
    /**
     * Filter which AgencyInquiry to delete.
     */
    where: AgencyInquiryWhereUniqueInput
  }

  /**
   * AgencyInquiry deleteMany
   */
  export type AgencyInquiryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgencyInquiries to delete
     */
    where?: AgencyInquiryWhereInput
    /**
     * Limit how many AgencyInquiries to delete.
     */
    limit?: number
  }

  /**
   * AgencyInquiry.property
   */
  export type AgencyInquiry$propertyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Property
     */
    select?: PropertySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Property
     */
    omit?: PropertyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInclude<ExtArgs> | null
    where?: PropertyWhereInput
  }

  /**
   * AgencyInquiry without action
   */
  export type AgencyInquiryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInquiry
     */
    select?: AgencyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyInquiry
     */
    omit?: AgencyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInquiryInclude<ExtArgs> | null
  }


  /**
   * Model Property
   */

  export type AggregateProperty = {
    _count: PropertyCountAggregateOutputType | null
    _avg: PropertyAvgAggregateOutputType | null
    _sum: PropertySumAggregateOutputType | null
    _min: PropertyMinAggregateOutputType | null
    _max: PropertyMaxAggregateOutputType | null
  }

  export type PropertyAvgAggregateOutputType = {
    price: number | null
    rentAmount: number | null
    pricePerSqm: number | null
    deposit: number | null
    latitude: number | null
    longitude: number | null
    totalArea: number | null
    landArea: number | null
    floorNumber: number | null
    totalFloors: number | null
    bedrooms: number | null
    bathrooms: number | null
    livingRooms: number | null
    yearBuilt: number | null
  }

  export type PropertySumAggregateOutputType = {
    price: number | null
    rentAmount: number | null
    pricePerSqm: number | null
    deposit: number | null
    latitude: number | null
    longitude: number | null
    totalArea: number | null
    landArea: number | null
    floorNumber: number | null
    totalFloors: number | null
    bedrooms: number | null
    bathrooms: number | null
    livingRooms: number | null
    yearBuilt: number | null
  }

  export type PropertyMinAggregateOutputType = {
    id: string | null
    title: string | null
    description: string | null
    type: $Enums.PropertyType | null
    transactionType: $Enums.TransactionType | null
    price: number | null
    rentAmount: number | null
    pricePerSqm: number | null
    deposit: number | null
    address: string | null
    city: string | null
    state: string | null
    zipCode: string | null
    country: string | null
    latitude: number | null
    longitude: number | null
    neighborhood: string | null
    totalArea: number | null
    landArea: number | null
    floorNumber: number | null
    totalFloors: number | null
    bedrooms: number | null
    bathrooms: number | null
    livingRooms: number | null
    kitchen: string | null
    yearBuilt: number | null
    condition: $Enums.PropertyCondition | null
    furnished: boolean | null
    parking: boolean | null
    garden: boolean | null
    balcony: boolean | null
    elevator: boolean | null
    pool: boolean | null
    ac: boolean | null
    petPolicy: string | null
    energyRating: string | null
    leaseType: $Enums.LeaseType | null
    minRentalPeriod: string | null
    availableDate: Date | null
    status: $Enums.PropertyStatus | null
    isVerified: boolean | null
    verifiedBy: string | null
    verifiedAt: Date | null
    verificationNotes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    listedAt: Date | null
    soldAt: Date | null
    rentedAt: Date | null
    ownerId: string | null
    agentId: string | null
    agencyId: string | null
  }

  export type PropertyMaxAggregateOutputType = {
    id: string | null
    title: string | null
    description: string | null
    type: $Enums.PropertyType | null
    transactionType: $Enums.TransactionType | null
    price: number | null
    rentAmount: number | null
    pricePerSqm: number | null
    deposit: number | null
    address: string | null
    city: string | null
    state: string | null
    zipCode: string | null
    country: string | null
    latitude: number | null
    longitude: number | null
    neighborhood: string | null
    totalArea: number | null
    landArea: number | null
    floorNumber: number | null
    totalFloors: number | null
    bedrooms: number | null
    bathrooms: number | null
    livingRooms: number | null
    kitchen: string | null
    yearBuilt: number | null
    condition: $Enums.PropertyCondition | null
    furnished: boolean | null
    parking: boolean | null
    garden: boolean | null
    balcony: boolean | null
    elevator: boolean | null
    pool: boolean | null
    ac: boolean | null
    petPolicy: string | null
    energyRating: string | null
    leaseType: $Enums.LeaseType | null
    minRentalPeriod: string | null
    availableDate: Date | null
    status: $Enums.PropertyStatus | null
    isVerified: boolean | null
    verifiedBy: string | null
    verifiedAt: Date | null
    verificationNotes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    listedAt: Date | null
    soldAt: Date | null
    rentedAt: Date | null
    ownerId: string | null
    agentId: string | null
    agencyId: string | null
  }

  export type PropertyCountAggregateOutputType = {
    id: number
    title: number
    description: number
    type: number
    transactionType: number
    price: number
    rentAmount: number
    pricePerSqm: number
    deposit: number
    address: number
    city: number
    state: number
    zipCode: number
    country: number
    latitude: number
    longitude: number
    neighborhood: number
    totalArea: number
    landArea: number
    floorNumber: number
    totalFloors: number
    bedrooms: number
    bathrooms: number
    livingRooms: number
    kitchen: number
    yearBuilt: number
    condition: number
    furnished: number
    amenities: number
    utilities: number
    parking: number
    garden: number
    balcony: number
    elevator: number
    pool: number
    ac: number
    petPolicy: number
    nearbyServices: number
    energyRating: number
    leaseType: number
    minRentalPeriod: number
    availableDate: number
    status: number
    isVerified: number
    verifiedBy: number
    verifiedAt: number
    verificationNotes: number
    createdAt: number
    updatedAt: number
    listedAt: number
    soldAt: number
    rentedAt: number
    ownerId: number
    agentId: number
    agencyId: number
    _all: number
  }


  export type PropertyAvgAggregateInputType = {
    price?: true
    rentAmount?: true
    pricePerSqm?: true
    deposit?: true
    latitude?: true
    longitude?: true
    totalArea?: true
    landArea?: true
    floorNumber?: true
    totalFloors?: true
    bedrooms?: true
    bathrooms?: true
    livingRooms?: true
    yearBuilt?: true
  }

  export type PropertySumAggregateInputType = {
    price?: true
    rentAmount?: true
    pricePerSqm?: true
    deposit?: true
    latitude?: true
    longitude?: true
    totalArea?: true
    landArea?: true
    floorNumber?: true
    totalFloors?: true
    bedrooms?: true
    bathrooms?: true
    livingRooms?: true
    yearBuilt?: true
  }

  export type PropertyMinAggregateInputType = {
    id?: true
    title?: true
    description?: true
    type?: true
    transactionType?: true
    price?: true
    rentAmount?: true
    pricePerSqm?: true
    deposit?: true
    address?: true
    city?: true
    state?: true
    zipCode?: true
    country?: true
    latitude?: true
    longitude?: true
    neighborhood?: true
    totalArea?: true
    landArea?: true
    floorNumber?: true
    totalFloors?: true
    bedrooms?: true
    bathrooms?: true
    livingRooms?: true
    kitchen?: true
    yearBuilt?: true
    condition?: true
    furnished?: true
    parking?: true
    garden?: true
    balcony?: true
    elevator?: true
    pool?: true
    ac?: true
    petPolicy?: true
    energyRating?: true
    leaseType?: true
    minRentalPeriod?: true
    availableDate?: true
    status?: true
    isVerified?: true
    verifiedBy?: true
    verifiedAt?: true
    verificationNotes?: true
    createdAt?: true
    updatedAt?: true
    listedAt?: true
    soldAt?: true
    rentedAt?: true
    ownerId?: true
    agentId?: true
    agencyId?: true
  }

  export type PropertyMaxAggregateInputType = {
    id?: true
    title?: true
    description?: true
    type?: true
    transactionType?: true
    price?: true
    rentAmount?: true
    pricePerSqm?: true
    deposit?: true
    address?: true
    city?: true
    state?: true
    zipCode?: true
    country?: true
    latitude?: true
    longitude?: true
    neighborhood?: true
    totalArea?: true
    landArea?: true
    floorNumber?: true
    totalFloors?: true
    bedrooms?: true
    bathrooms?: true
    livingRooms?: true
    kitchen?: true
    yearBuilt?: true
    condition?: true
    furnished?: true
    parking?: true
    garden?: true
    balcony?: true
    elevator?: true
    pool?: true
    ac?: true
    petPolicy?: true
    energyRating?: true
    leaseType?: true
    minRentalPeriod?: true
    availableDate?: true
    status?: true
    isVerified?: true
    verifiedBy?: true
    verifiedAt?: true
    verificationNotes?: true
    createdAt?: true
    updatedAt?: true
    listedAt?: true
    soldAt?: true
    rentedAt?: true
    ownerId?: true
    agentId?: true
    agencyId?: true
  }

  export type PropertyCountAggregateInputType = {
    id?: true
    title?: true
    description?: true
    type?: true
    transactionType?: true
    price?: true
    rentAmount?: true
    pricePerSqm?: true
    deposit?: true
    address?: true
    city?: true
    state?: true
    zipCode?: true
    country?: true
    latitude?: true
    longitude?: true
    neighborhood?: true
    totalArea?: true
    landArea?: true
    floorNumber?: true
    totalFloors?: true
    bedrooms?: true
    bathrooms?: true
    livingRooms?: true
    kitchen?: true
    yearBuilt?: true
    condition?: true
    furnished?: true
    amenities?: true
    utilities?: true
    parking?: true
    garden?: true
    balcony?: true
    elevator?: true
    pool?: true
    ac?: true
    petPolicy?: true
    nearbyServices?: true
    energyRating?: true
    leaseType?: true
    minRentalPeriod?: true
    availableDate?: true
    status?: true
    isVerified?: true
    verifiedBy?: true
    verifiedAt?: true
    verificationNotes?: true
    createdAt?: true
    updatedAt?: true
    listedAt?: true
    soldAt?: true
    rentedAt?: true
    ownerId?: true
    agentId?: true
    agencyId?: true
    _all?: true
  }

  export type PropertyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Property to aggregate.
     */
    where?: PropertyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Properties to fetch.
     */
    orderBy?: PropertyOrderByWithRelationInput | PropertyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PropertyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Properties from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Properties.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Properties
    **/
    _count?: true | PropertyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PropertyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PropertySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PropertyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PropertyMaxAggregateInputType
  }

  export type GetPropertyAggregateType<T extends PropertyAggregateArgs> = {
        [P in keyof T & keyof AggregateProperty]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProperty[P]>
      : GetScalarType<T[P], AggregateProperty[P]>
  }




  export type PropertyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyWhereInput
    orderBy?: PropertyOrderByWithAggregationInput | PropertyOrderByWithAggregationInput[]
    by: PropertyScalarFieldEnum[] | PropertyScalarFieldEnum
    having?: PropertyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PropertyCountAggregateInputType | true
    _avg?: PropertyAvgAggregateInputType
    _sum?: PropertySumAggregateInputType
    _min?: PropertyMinAggregateInputType
    _max?: PropertyMaxAggregateInputType
  }

  export type PropertyGroupByOutputType = {
    id: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price: number | null
    rentAmount: number | null
    pricePerSqm: number | null
    deposit: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude: number | null
    longitude: number | null
    neighborhood: string | null
    totalArea: number
    landArea: number | null
    floorNumber: number | null
    totalFloors: number | null
    bedrooms: number | null
    bathrooms: number | null
    livingRooms: number | null
    kitchen: string | null
    yearBuilt: number | null
    condition: $Enums.PropertyCondition
    furnished: boolean | null
    amenities: string[]
    utilities: string[]
    parking: boolean | null
    garden: boolean | null
    balcony: boolean | null
    elevator: boolean | null
    pool: boolean | null
    ac: boolean | null
    petPolicy: string | null
    nearbyServices: string[]
    energyRating: string | null
    leaseType: $Enums.LeaseType | null
    minRentalPeriod: string | null
    availableDate: Date | null
    status: $Enums.PropertyStatus
    isVerified: boolean
    verifiedBy: string | null
    verifiedAt: Date | null
    verificationNotes: string | null
    createdAt: Date
    updatedAt: Date
    listedAt: Date | null
    soldAt: Date | null
    rentedAt: Date | null
    ownerId: string
    agentId: string | null
    agencyId: string | null
    _count: PropertyCountAggregateOutputType | null
    _avg: PropertyAvgAggregateOutputType | null
    _sum: PropertySumAggregateOutputType | null
    _min: PropertyMinAggregateOutputType | null
    _max: PropertyMaxAggregateOutputType | null
  }

  type GetPropertyGroupByPayload<T extends PropertyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PropertyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PropertyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PropertyGroupByOutputType[P]>
            : GetScalarType<T[P], PropertyGroupByOutputType[P]>
        }
      >
    >


  export type PropertySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    type?: boolean
    transactionType?: boolean
    price?: boolean
    rentAmount?: boolean
    pricePerSqm?: boolean
    deposit?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    neighborhood?: boolean
    totalArea?: boolean
    landArea?: boolean
    floorNumber?: boolean
    totalFloors?: boolean
    bedrooms?: boolean
    bathrooms?: boolean
    livingRooms?: boolean
    kitchen?: boolean
    yearBuilt?: boolean
    condition?: boolean
    furnished?: boolean
    amenities?: boolean
    utilities?: boolean
    parking?: boolean
    garden?: boolean
    balcony?: boolean
    elevator?: boolean
    pool?: boolean
    ac?: boolean
    petPolicy?: boolean
    nearbyServices?: boolean
    energyRating?: boolean
    leaseType?: boolean
    minRentalPeriod?: boolean
    availableDate?: boolean
    status?: boolean
    isVerified?: boolean
    verifiedBy?: boolean
    verifiedAt?: boolean
    verificationNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    listedAt?: boolean
    soldAt?: boolean
    rentedAt?: boolean
    ownerId?: boolean
    agentId?: boolean
    agencyId?: boolean
    owner?: boolean | UserDefaultArgs<ExtArgs>
    agent?: boolean | Property$agentArgs<ExtArgs>
    agency?: boolean | Property$agencyArgs<ExtArgs>
    photos?: boolean | Property$photosArgs<ExtArgs>
    videos?: boolean | Property$videosArgs<ExtArgs>
    virtualTours?: boolean | Property$virtualToursArgs<ExtArgs>
    views?: boolean | Property$viewsArgs<ExtArgs>
    favorites?: boolean | Property$favoritesArgs<ExtArgs>
    requests?: boolean | Property$requestsArgs<ExtArgs>
    inquiries?: boolean | Property$inquiriesArgs<ExtArgs>
    comparisons?: boolean | Property$comparisonsArgs<ExtArgs>
    reviews?: boolean | Property$reviewsArgs<ExtArgs>
    comments?: boolean | Property$commentsArgs<ExtArgs>
    viewings?: boolean | Property$viewingsArgs<ExtArgs>
    analytics?: boolean | Property$analyticsArgs<ExtArgs>
    adminActions?: boolean | Property$adminActionsArgs<ExtArgs>
    payments?: boolean | Property$paymentsArgs<ExtArgs>
    agencyInquiries?: boolean | Property$agencyInquiriesArgs<ExtArgs>
    _count?: boolean | PropertyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["property"]>

  export type PropertySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    type?: boolean
    transactionType?: boolean
    price?: boolean
    rentAmount?: boolean
    pricePerSqm?: boolean
    deposit?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    neighborhood?: boolean
    totalArea?: boolean
    landArea?: boolean
    floorNumber?: boolean
    totalFloors?: boolean
    bedrooms?: boolean
    bathrooms?: boolean
    livingRooms?: boolean
    kitchen?: boolean
    yearBuilt?: boolean
    condition?: boolean
    furnished?: boolean
    amenities?: boolean
    utilities?: boolean
    parking?: boolean
    garden?: boolean
    balcony?: boolean
    elevator?: boolean
    pool?: boolean
    ac?: boolean
    petPolicy?: boolean
    nearbyServices?: boolean
    energyRating?: boolean
    leaseType?: boolean
    minRentalPeriod?: boolean
    availableDate?: boolean
    status?: boolean
    isVerified?: boolean
    verifiedBy?: boolean
    verifiedAt?: boolean
    verificationNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    listedAt?: boolean
    soldAt?: boolean
    rentedAt?: boolean
    ownerId?: boolean
    agentId?: boolean
    agencyId?: boolean
    owner?: boolean | UserDefaultArgs<ExtArgs>
    agent?: boolean | Property$agentArgs<ExtArgs>
    agency?: boolean | Property$agencyArgs<ExtArgs>
  }, ExtArgs["result"]["property"]>

  export type PropertySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    type?: boolean
    transactionType?: boolean
    price?: boolean
    rentAmount?: boolean
    pricePerSqm?: boolean
    deposit?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    neighborhood?: boolean
    totalArea?: boolean
    landArea?: boolean
    floorNumber?: boolean
    totalFloors?: boolean
    bedrooms?: boolean
    bathrooms?: boolean
    livingRooms?: boolean
    kitchen?: boolean
    yearBuilt?: boolean
    condition?: boolean
    furnished?: boolean
    amenities?: boolean
    utilities?: boolean
    parking?: boolean
    garden?: boolean
    balcony?: boolean
    elevator?: boolean
    pool?: boolean
    ac?: boolean
    petPolicy?: boolean
    nearbyServices?: boolean
    energyRating?: boolean
    leaseType?: boolean
    minRentalPeriod?: boolean
    availableDate?: boolean
    status?: boolean
    isVerified?: boolean
    verifiedBy?: boolean
    verifiedAt?: boolean
    verificationNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    listedAt?: boolean
    soldAt?: boolean
    rentedAt?: boolean
    ownerId?: boolean
    agentId?: boolean
    agencyId?: boolean
    owner?: boolean | UserDefaultArgs<ExtArgs>
    agent?: boolean | Property$agentArgs<ExtArgs>
    agency?: boolean | Property$agencyArgs<ExtArgs>
  }, ExtArgs["result"]["property"]>

  export type PropertySelectScalar = {
    id?: boolean
    title?: boolean
    description?: boolean
    type?: boolean
    transactionType?: boolean
    price?: boolean
    rentAmount?: boolean
    pricePerSqm?: boolean
    deposit?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    neighborhood?: boolean
    totalArea?: boolean
    landArea?: boolean
    floorNumber?: boolean
    totalFloors?: boolean
    bedrooms?: boolean
    bathrooms?: boolean
    livingRooms?: boolean
    kitchen?: boolean
    yearBuilt?: boolean
    condition?: boolean
    furnished?: boolean
    amenities?: boolean
    utilities?: boolean
    parking?: boolean
    garden?: boolean
    balcony?: boolean
    elevator?: boolean
    pool?: boolean
    ac?: boolean
    petPolicy?: boolean
    nearbyServices?: boolean
    energyRating?: boolean
    leaseType?: boolean
    minRentalPeriod?: boolean
    availableDate?: boolean
    status?: boolean
    isVerified?: boolean
    verifiedBy?: boolean
    verifiedAt?: boolean
    verificationNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    listedAt?: boolean
    soldAt?: boolean
    rentedAt?: boolean
    ownerId?: boolean
    agentId?: boolean
    agencyId?: boolean
  }

  export type PropertyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "description" | "type" | "transactionType" | "price" | "rentAmount" | "pricePerSqm" | "deposit" | "address" | "city" | "state" | "zipCode" | "country" | "latitude" | "longitude" | "neighborhood" | "totalArea" | "landArea" | "floorNumber" | "totalFloors" | "bedrooms" | "bathrooms" | "livingRooms" | "kitchen" | "yearBuilt" | "condition" | "furnished" | "amenities" | "utilities" | "parking" | "garden" | "balcony" | "elevator" | "pool" | "ac" | "petPolicy" | "nearbyServices" | "energyRating" | "leaseType" | "minRentalPeriod" | "availableDate" | "status" | "isVerified" | "verifiedBy" | "verifiedAt" | "verificationNotes" | "createdAt" | "updatedAt" | "listedAt" | "soldAt" | "rentedAt" | "ownerId" | "agentId" | "agencyId", ExtArgs["result"]["property"]>
  export type PropertyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    owner?: boolean | UserDefaultArgs<ExtArgs>
    agent?: boolean | Property$agentArgs<ExtArgs>
    agency?: boolean | Property$agencyArgs<ExtArgs>
    photos?: boolean | Property$photosArgs<ExtArgs>
    videos?: boolean | Property$videosArgs<ExtArgs>
    virtualTours?: boolean | Property$virtualToursArgs<ExtArgs>
    views?: boolean | Property$viewsArgs<ExtArgs>
    favorites?: boolean | Property$favoritesArgs<ExtArgs>
    requests?: boolean | Property$requestsArgs<ExtArgs>
    inquiries?: boolean | Property$inquiriesArgs<ExtArgs>
    comparisons?: boolean | Property$comparisonsArgs<ExtArgs>
    reviews?: boolean | Property$reviewsArgs<ExtArgs>
    comments?: boolean | Property$commentsArgs<ExtArgs>
    viewings?: boolean | Property$viewingsArgs<ExtArgs>
    analytics?: boolean | Property$analyticsArgs<ExtArgs>
    adminActions?: boolean | Property$adminActionsArgs<ExtArgs>
    payments?: boolean | Property$paymentsArgs<ExtArgs>
    agencyInquiries?: boolean | Property$agencyInquiriesArgs<ExtArgs>
    _count?: boolean | PropertyCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PropertyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    owner?: boolean | UserDefaultArgs<ExtArgs>
    agent?: boolean | Property$agentArgs<ExtArgs>
    agency?: boolean | Property$agencyArgs<ExtArgs>
  }
  export type PropertyIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    owner?: boolean | UserDefaultArgs<ExtArgs>
    agent?: boolean | Property$agentArgs<ExtArgs>
    agency?: boolean | Property$agencyArgs<ExtArgs>
  }

  export type $PropertyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Property"
    objects: {
      owner: Prisma.$UserPayload<ExtArgs>
      agent: Prisma.$UserPayload<ExtArgs> | null
      agency: Prisma.$AgencyPayload<ExtArgs> | null
      photos: Prisma.$PropertyPhotoPayload<ExtArgs>[]
      videos: Prisma.$PropertyVideoPayload<ExtArgs>[]
      virtualTours: Prisma.$VirtualTourPayload<ExtArgs>[]
      views: Prisma.$PropertyViewPayload<ExtArgs>[]
      favorites: Prisma.$FavoritePayload<ExtArgs>[]
      requests: Prisma.$PropertyRequestPayload<ExtArgs>[]
      inquiries: Prisma.$PropertyInquiryPayload<ExtArgs>[]
      comparisons: Prisma.$PropertyComparisonPropertiesPayload<ExtArgs>[]
      reviews: Prisma.$PropertyReviewPayload<ExtArgs>[]
      comments: Prisma.$PropertyCommentPayload<ExtArgs>[]
      viewings: Prisma.$PropertyViewingPayload<ExtArgs>[]
      analytics: Prisma.$PropertyAnalyticsPayload<ExtArgs>[]
      adminActions: Prisma.$AdminActionPayload<ExtArgs>[]
      payments: Prisma.$PaymentPayload<ExtArgs>[]
      agencyInquiries: Prisma.$AgencyInquiryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      description: string
      type: $Enums.PropertyType
      transactionType: $Enums.TransactionType
      price: number | null
      rentAmount: number | null
      pricePerSqm: number | null
      deposit: number | null
      address: string
      city: string
      state: string
      zipCode: string
      country: string
      latitude: number | null
      longitude: number | null
      neighborhood: string | null
      totalArea: number
      landArea: number | null
      floorNumber: number | null
      totalFloors: number | null
      bedrooms: number | null
      bathrooms: number | null
      livingRooms: number | null
      kitchen: string | null
      yearBuilt: number | null
      condition: $Enums.PropertyCondition
      furnished: boolean | null
      amenities: string[]
      utilities: string[]
      parking: boolean | null
      garden: boolean | null
      balcony: boolean | null
      elevator: boolean | null
      pool: boolean | null
      ac: boolean | null
      petPolicy: string | null
      nearbyServices: string[]
      energyRating: string | null
      leaseType: $Enums.LeaseType | null
      minRentalPeriod: string | null
      availableDate: Date | null
      status: $Enums.PropertyStatus
      isVerified: boolean
      verifiedBy: string | null
      verifiedAt: Date | null
      verificationNotes: string | null
      createdAt: Date
      updatedAt: Date
      listedAt: Date | null
      soldAt: Date | null
      rentedAt: Date | null
      ownerId: string
      agentId: string | null
      agencyId: string | null
    }, ExtArgs["result"]["property"]>
    composites: {}
  }

  type PropertyGetPayload<S extends boolean | null | undefined | PropertyDefaultArgs> = $Result.GetResult<Prisma.$PropertyPayload, S>

  type PropertyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PropertyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PropertyCountAggregateInputType | true
    }

  export interface PropertyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Property'], meta: { name: 'Property' } }
    /**
     * Find zero or one Property that matches the filter.
     * @param {PropertyFindUniqueArgs} args - Arguments to find a Property
     * @example
     * // Get one Property
     * const property = await prisma.property.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PropertyFindUniqueArgs>(args: SelectSubset<T, PropertyFindUniqueArgs<ExtArgs>>): Prisma__PropertyClient<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Property that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PropertyFindUniqueOrThrowArgs} args - Arguments to find a Property
     * @example
     * // Get one Property
     * const property = await prisma.property.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PropertyFindUniqueOrThrowArgs>(args: SelectSubset<T, PropertyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PropertyClient<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Property that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyFindFirstArgs} args - Arguments to find a Property
     * @example
     * // Get one Property
     * const property = await prisma.property.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PropertyFindFirstArgs>(args?: SelectSubset<T, PropertyFindFirstArgs<ExtArgs>>): Prisma__PropertyClient<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Property that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyFindFirstOrThrowArgs} args - Arguments to find a Property
     * @example
     * // Get one Property
     * const property = await prisma.property.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PropertyFindFirstOrThrowArgs>(args?: SelectSubset<T, PropertyFindFirstOrThrowArgs<ExtArgs>>): Prisma__PropertyClient<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Properties that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Properties
     * const properties = await prisma.property.findMany()
     * 
     * // Get first 10 Properties
     * const properties = await prisma.property.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const propertyWithIdOnly = await prisma.property.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PropertyFindManyArgs>(args?: SelectSubset<T, PropertyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Property.
     * @param {PropertyCreateArgs} args - Arguments to create a Property.
     * @example
     * // Create one Property
     * const Property = await prisma.property.create({
     *   data: {
     *     // ... data to create a Property
     *   }
     * })
     * 
     */
    create<T extends PropertyCreateArgs>(args: SelectSubset<T, PropertyCreateArgs<ExtArgs>>): Prisma__PropertyClient<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Properties.
     * @param {PropertyCreateManyArgs} args - Arguments to create many Properties.
     * @example
     * // Create many Properties
     * const property = await prisma.property.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PropertyCreateManyArgs>(args?: SelectSubset<T, PropertyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Properties and returns the data saved in the database.
     * @param {PropertyCreateManyAndReturnArgs} args - Arguments to create many Properties.
     * @example
     * // Create many Properties
     * const property = await prisma.property.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Properties and only return the `id`
     * const propertyWithIdOnly = await prisma.property.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PropertyCreateManyAndReturnArgs>(args?: SelectSubset<T, PropertyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Property.
     * @param {PropertyDeleteArgs} args - Arguments to delete one Property.
     * @example
     * // Delete one Property
     * const Property = await prisma.property.delete({
     *   where: {
     *     // ... filter to delete one Property
     *   }
     * })
     * 
     */
    delete<T extends PropertyDeleteArgs>(args: SelectSubset<T, PropertyDeleteArgs<ExtArgs>>): Prisma__PropertyClient<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Property.
     * @param {PropertyUpdateArgs} args - Arguments to update one Property.
     * @example
     * // Update one Property
     * const property = await prisma.property.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PropertyUpdateArgs>(args: SelectSubset<T, PropertyUpdateArgs<ExtArgs>>): Prisma__PropertyClient<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Properties.
     * @param {PropertyDeleteManyArgs} args - Arguments to filter Properties to delete.
     * @example
     * // Delete a few Properties
     * const { count } = await prisma.property.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PropertyDeleteManyArgs>(args?: SelectSubset<T, PropertyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Properties.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Properties
     * const property = await prisma.property.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PropertyUpdateManyArgs>(args: SelectSubset<T, PropertyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Properties and returns the data updated in the database.
     * @param {PropertyUpdateManyAndReturnArgs} args - Arguments to update many Properties.
     * @example
     * // Update many Properties
     * const property = await prisma.property.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Properties and only return the `id`
     * const propertyWithIdOnly = await prisma.property.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PropertyUpdateManyAndReturnArgs>(args: SelectSubset<T, PropertyUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Property.
     * @param {PropertyUpsertArgs} args - Arguments to update or create a Property.
     * @example
     * // Update or create a Property
     * const property = await prisma.property.upsert({
     *   create: {
     *     // ... data to create a Property
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Property we want to update
     *   }
     * })
     */
    upsert<T extends PropertyUpsertArgs>(args: SelectSubset<T, PropertyUpsertArgs<ExtArgs>>): Prisma__PropertyClient<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Properties.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyCountArgs} args - Arguments to filter Properties to count.
     * @example
     * // Count the number of Properties
     * const count = await prisma.property.count({
     *   where: {
     *     // ... the filter for the Properties we want to count
     *   }
     * })
    **/
    count<T extends PropertyCountArgs>(
      args?: Subset<T, PropertyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PropertyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Property.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PropertyAggregateArgs>(args: Subset<T, PropertyAggregateArgs>): Prisma.PrismaPromise<GetPropertyAggregateType<T>>

    /**
     * Group by Property.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PropertyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PropertyGroupByArgs['orderBy'] }
        : { orderBy?: PropertyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PropertyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPropertyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Property model
   */
  readonly fields: PropertyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Property.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PropertyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    owner<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    agent<T extends Property$agentArgs<ExtArgs> = {}>(args?: Subset<T, Property$agentArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    agency<T extends Property$agencyArgs<ExtArgs> = {}>(args?: Subset<T, Property$agencyArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    photos<T extends Property$photosArgs<ExtArgs> = {}>(args?: Subset<T, Property$photosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyPhotoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    videos<T extends Property$videosArgs<ExtArgs> = {}>(args?: Subset<T, Property$videosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyVideoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    virtualTours<T extends Property$virtualToursArgs<ExtArgs> = {}>(args?: Subset<T, Property$virtualToursArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VirtualTourPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    views<T extends Property$viewsArgs<ExtArgs> = {}>(args?: Subset<T, Property$viewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyViewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    favorites<T extends Property$favoritesArgs<ExtArgs> = {}>(args?: Subset<T, Property$favoritesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    requests<T extends Property$requestsArgs<ExtArgs> = {}>(args?: Subset<T, Property$requestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    inquiries<T extends Property$inquiriesArgs<ExtArgs> = {}>(args?: Subset<T, Property$inquiriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyInquiryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    comparisons<T extends Property$comparisonsArgs<ExtArgs> = {}>(args?: Subset<T, Property$comparisonsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyComparisonPropertiesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reviews<T extends Property$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, Property$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    comments<T extends Property$commentsArgs<ExtArgs> = {}>(args?: Subset<T, Property$commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyCommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    viewings<T extends Property$viewingsArgs<ExtArgs> = {}>(args?: Subset<T, Property$viewingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyViewingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    analytics<T extends Property$analyticsArgs<ExtArgs> = {}>(args?: Subset<T, Property$analyticsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyAnalyticsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    adminActions<T extends Property$adminActionsArgs<ExtArgs> = {}>(args?: Subset<T, Property$adminActionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    payments<T extends Property$paymentsArgs<ExtArgs> = {}>(args?: Subset<T, Property$paymentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    agencyInquiries<T extends Property$agencyInquiriesArgs<ExtArgs> = {}>(args?: Subset<T, Property$agencyInquiriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyInquiryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Property model
   */
  interface PropertyFieldRefs {
    readonly id: FieldRef<"Property", 'String'>
    readonly title: FieldRef<"Property", 'String'>
    readonly description: FieldRef<"Property", 'String'>
    readonly type: FieldRef<"Property", 'PropertyType'>
    readonly transactionType: FieldRef<"Property", 'TransactionType'>
    readonly price: FieldRef<"Property", 'Float'>
    readonly rentAmount: FieldRef<"Property", 'Float'>
    readonly pricePerSqm: FieldRef<"Property", 'Float'>
    readonly deposit: FieldRef<"Property", 'Float'>
    readonly address: FieldRef<"Property", 'String'>
    readonly city: FieldRef<"Property", 'String'>
    readonly state: FieldRef<"Property", 'String'>
    readonly zipCode: FieldRef<"Property", 'String'>
    readonly country: FieldRef<"Property", 'String'>
    readonly latitude: FieldRef<"Property", 'Float'>
    readonly longitude: FieldRef<"Property", 'Float'>
    readonly neighborhood: FieldRef<"Property", 'String'>
    readonly totalArea: FieldRef<"Property", 'Float'>
    readonly landArea: FieldRef<"Property", 'Float'>
    readonly floorNumber: FieldRef<"Property", 'Int'>
    readonly totalFloors: FieldRef<"Property", 'Int'>
    readonly bedrooms: FieldRef<"Property", 'Int'>
    readonly bathrooms: FieldRef<"Property", 'Int'>
    readonly livingRooms: FieldRef<"Property", 'Int'>
    readonly kitchen: FieldRef<"Property", 'String'>
    readonly yearBuilt: FieldRef<"Property", 'Int'>
    readonly condition: FieldRef<"Property", 'PropertyCondition'>
    readonly furnished: FieldRef<"Property", 'Boolean'>
    readonly amenities: FieldRef<"Property", 'String[]'>
    readonly utilities: FieldRef<"Property", 'String[]'>
    readonly parking: FieldRef<"Property", 'Boolean'>
    readonly garden: FieldRef<"Property", 'Boolean'>
    readonly balcony: FieldRef<"Property", 'Boolean'>
    readonly elevator: FieldRef<"Property", 'Boolean'>
    readonly pool: FieldRef<"Property", 'Boolean'>
    readonly ac: FieldRef<"Property", 'Boolean'>
    readonly petPolicy: FieldRef<"Property", 'String'>
    readonly nearbyServices: FieldRef<"Property", 'String[]'>
    readonly energyRating: FieldRef<"Property", 'String'>
    readonly leaseType: FieldRef<"Property", 'LeaseType'>
    readonly minRentalPeriod: FieldRef<"Property", 'String'>
    readonly availableDate: FieldRef<"Property", 'DateTime'>
    readonly status: FieldRef<"Property", 'PropertyStatus'>
    readonly isVerified: FieldRef<"Property", 'Boolean'>
    readonly verifiedBy: FieldRef<"Property", 'String'>
    readonly verifiedAt: FieldRef<"Property", 'DateTime'>
    readonly verificationNotes: FieldRef<"Property", 'String'>
    readonly createdAt: FieldRef<"Property", 'DateTime'>
    readonly updatedAt: FieldRef<"Property", 'DateTime'>
    readonly listedAt: FieldRef<"Property", 'DateTime'>
    readonly soldAt: FieldRef<"Property", 'DateTime'>
    readonly rentedAt: FieldRef<"Property", 'DateTime'>
    readonly ownerId: FieldRef<"Property", 'String'>
    readonly agentId: FieldRef<"Property", 'String'>
    readonly agencyId: FieldRef<"Property", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Property findUnique
   */
  export type PropertyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Property
     */
    select?: PropertySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Property
     */
    omit?: PropertyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInclude<ExtArgs> | null
    /**
     * Filter, which Property to fetch.
     */
    where: PropertyWhereUniqueInput
  }

  /**
   * Property findUniqueOrThrow
   */
  export type PropertyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Property
     */
    select?: PropertySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Property
     */
    omit?: PropertyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInclude<ExtArgs> | null
    /**
     * Filter, which Property to fetch.
     */
    where: PropertyWhereUniqueInput
  }

  /**
   * Property findFirst
   */
  export type PropertyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Property
     */
    select?: PropertySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Property
     */
    omit?: PropertyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInclude<ExtArgs> | null
    /**
     * Filter, which Property to fetch.
     */
    where?: PropertyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Properties to fetch.
     */
    orderBy?: PropertyOrderByWithRelationInput | PropertyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Properties.
     */
    cursor?: PropertyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Properties from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Properties.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Properties.
     */
    distinct?: PropertyScalarFieldEnum | PropertyScalarFieldEnum[]
  }

  /**
   * Property findFirstOrThrow
   */
  export type PropertyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Property
     */
    select?: PropertySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Property
     */
    omit?: PropertyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInclude<ExtArgs> | null
    /**
     * Filter, which Property to fetch.
     */
    where?: PropertyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Properties to fetch.
     */
    orderBy?: PropertyOrderByWithRelationInput | PropertyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Properties.
     */
    cursor?: PropertyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Properties from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Properties.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Properties.
     */
    distinct?: PropertyScalarFieldEnum | PropertyScalarFieldEnum[]
  }

  /**
   * Property findMany
   */
  export type PropertyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Property
     */
    select?: PropertySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Property
     */
    omit?: PropertyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInclude<ExtArgs> | null
    /**
     * Filter, which Properties to fetch.
     */
    where?: PropertyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Properties to fetch.
     */
    orderBy?: PropertyOrderByWithRelationInput | PropertyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Properties.
     */
    cursor?: PropertyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Properties from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Properties.
     */
    skip?: number
    distinct?: PropertyScalarFieldEnum | PropertyScalarFieldEnum[]
  }

  /**
   * Property create
   */
  export type PropertyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Property
     */
    select?: PropertySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Property
     */
    omit?: PropertyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInclude<ExtArgs> | null
    /**
     * The data needed to create a Property.
     */
    data: XOR<PropertyCreateInput, PropertyUncheckedCreateInput>
  }

  /**
   * Property createMany
   */
  export type PropertyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Properties.
     */
    data: PropertyCreateManyInput | PropertyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Property createManyAndReturn
   */
  export type PropertyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Property
     */
    select?: PropertySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Property
     */
    omit?: PropertyOmit<ExtArgs> | null
    /**
     * The data used to create many Properties.
     */
    data: PropertyCreateManyInput | PropertyCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Property update
   */
  export type PropertyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Property
     */
    select?: PropertySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Property
     */
    omit?: PropertyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInclude<ExtArgs> | null
    /**
     * The data needed to update a Property.
     */
    data: XOR<PropertyUpdateInput, PropertyUncheckedUpdateInput>
    /**
     * Choose, which Property to update.
     */
    where: PropertyWhereUniqueInput
  }

  /**
   * Property updateMany
   */
  export type PropertyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Properties.
     */
    data: XOR<PropertyUpdateManyMutationInput, PropertyUncheckedUpdateManyInput>
    /**
     * Filter which Properties to update
     */
    where?: PropertyWhereInput
    /**
     * Limit how many Properties to update.
     */
    limit?: number
  }

  /**
   * Property updateManyAndReturn
   */
  export type PropertyUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Property
     */
    select?: PropertySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Property
     */
    omit?: PropertyOmit<ExtArgs> | null
    /**
     * The data used to update Properties.
     */
    data: XOR<PropertyUpdateManyMutationInput, PropertyUncheckedUpdateManyInput>
    /**
     * Filter which Properties to update
     */
    where?: PropertyWhereInput
    /**
     * Limit how many Properties to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Property upsert
   */
  export type PropertyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Property
     */
    select?: PropertySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Property
     */
    omit?: PropertyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInclude<ExtArgs> | null
    /**
     * The filter to search for the Property to update in case it exists.
     */
    where: PropertyWhereUniqueInput
    /**
     * In case the Property found by the `where` argument doesn't exist, create a new Property with this data.
     */
    create: XOR<PropertyCreateInput, PropertyUncheckedCreateInput>
    /**
     * In case the Property was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PropertyUpdateInput, PropertyUncheckedUpdateInput>
  }

  /**
   * Property delete
   */
  export type PropertyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Property
     */
    select?: PropertySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Property
     */
    omit?: PropertyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInclude<ExtArgs> | null
    /**
     * Filter which Property to delete.
     */
    where: PropertyWhereUniqueInput
  }

  /**
   * Property deleteMany
   */
  export type PropertyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Properties to delete
     */
    where?: PropertyWhereInput
    /**
     * Limit how many Properties to delete.
     */
    limit?: number
  }

  /**
   * Property.agent
   */
  export type Property$agentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Property.agency
   */
  export type Property$agencyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    where?: AgencyWhereInput
  }

  /**
   * Property.photos
   */
  export type Property$photosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyPhoto
     */
    select?: PropertyPhotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyPhoto
     */
    omit?: PropertyPhotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyPhotoInclude<ExtArgs> | null
    where?: PropertyPhotoWhereInput
    orderBy?: PropertyPhotoOrderByWithRelationInput | PropertyPhotoOrderByWithRelationInput[]
    cursor?: PropertyPhotoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyPhotoScalarFieldEnum | PropertyPhotoScalarFieldEnum[]
  }

  /**
   * Property.videos
   */
  export type Property$videosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyVideo
     */
    select?: PropertyVideoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyVideo
     */
    omit?: PropertyVideoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyVideoInclude<ExtArgs> | null
    where?: PropertyVideoWhereInput
    orderBy?: PropertyVideoOrderByWithRelationInput | PropertyVideoOrderByWithRelationInput[]
    cursor?: PropertyVideoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyVideoScalarFieldEnum | PropertyVideoScalarFieldEnum[]
  }

  /**
   * Property.virtualTours
   */
  export type Property$virtualToursArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualTour
     */
    select?: VirtualTourSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualTour
     */
    omit?: VirtualTourOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualTourInclude<ExtArgs> | null
    where?: VirtualTourWhereInput
    orderBy?: VirtualTourOrderByWithRelationInput | VirtualTourOrderByWithRelationInput[]
    cursor?: VirtualTourWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VirtualTourScalarFieldEnum | VirtualTourScalarFieldEnum[]
  }

  /**
   * Property.views
   */
  export type Property$viewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyView
     */
    select?: PropertyViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyView
     */
    omit?: PropertyViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewInclude<ExtArgs> | null
    where?: PropertyViewWhereInput
    orderBy?: PropertyViewOrderByWithRelationInput | PropertyViewOrderByWithRelationInput[]
    cursor?: PropertyViewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyViewScalarFieldEnum | PropertyViewScalarFieldEnum[]
  }

  /**
   * Property.favorites
   */
  export type Property$favoritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    where?: FavoriteWhereInput
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    cursor?: FavoriteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * Property.requests
   */
  export type Property$requestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRequest
     */
    select?: PropertyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRequest
     */
    omit?: PropertyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRequestInclude<ExtArgs> | null
    where?: PropertyRequestWhereInput
    orderBy?: PropertyRequestOrderByWithRelationInput | PropertyRequestOrderByWithRelationInput[]
    cursor?: PropertyRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyRequestScalarFieldEnum | PropertyRequestScalarFieldEnum[]
  }

  /**
   * Property.inquiries
   */
  export type Property$inquiriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyInquiry
     */
    select?: PropertyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyInquiry
     */
    omit?: PropertyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInquiryInclude<ExtArgs> | null
    where?: PropertyInquiryWhereInput
    orderBy?: PropertyInquiryOrderByWithRelationInput | PropertyInquiryOrderByWithRelationInput[]
    cursor?: PropertyInquiryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyInquiryScalarFieldEnum | PropertyInquiryScalarFieldEnum[]
  }

  /**
   * Property.comparisons
   */
  export type Property$comparisonsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparisonProperties
     */
    select?: PropertyComparisonPropertiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparisonProperties
     */
    omit?: PropertyComparisonPropertiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonPropertiesInclude<ExtArgs> | null
    where?: PropertyComparisonPropertiesWhereInput
    orderBy?: PropertyComparisonPropertiesOrderByWithRelationInput | PropertyComparisonPropertiesOrderByWithRelationInput[]
    cursor?: PropertyComparisonPropertiesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyComparisonPropertiesScalarFieldEnum | PropertyComparisonPropertiesScalarFieldEnum[]
  }

  /**
   * Property.reviews
   */
  export type Property$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyReview
     */
    select?: PropertyReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyReview
     */
    omit?: PropertyReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyReviewInclude<ExtArgs> | null
    where?: PropertyReviewWhereInput
    orderBy?: PropertyReviewOrderByWithRelationInput | PropertyReviewOrderByWithRelationInput[]
    cursor?: PropertyReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyReviewScalarFieldEnum | PropertyReviewScalarFieldEnum[]
  }

  /**
   * Property.comments
   */
  export type Property$commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComment
     */
    select?: PropertyCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComment
     */
    omit?: PropertyCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyCommentInclude<ExtArgs> | null
    where?: PropertyCommentWhereInput
    orderBy?: PropertyCommentOrderByWithRelationInput | PropertyCommentOrderByWithRelationInput[]
    cursor?: PropertyCommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyCommentScalarFieldEnum | PropertyCommentScalarFieldEnum[]
  }

  /**
   * Property.viewings
   */
  export type Property$viewingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyViewing
     */
    select?: PropertyViewingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyViewing
     */
    omit?: PropertyViewingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewingInclude<ExtArgs> | null
    where?: PropertyViewingWhereInput
    orderBy?: PropertyViewingOrderByWithRelationInput | PropertyViewingOrderByWithRelationInput[]
    cursor?: PropertyViewingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyViewingScalarFieldEnum | PropertyViewingScalarFieldEnum[]
  }

  /**
   * Property.analytics
   */
  export type Property$analyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyAnalytics
     */
    select?: PropertyAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyAnalytics
     */
    omit?: PropertyAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyAnalyticsInclude<ExtArgs> | null
    where?: PropertyAnalyticsWhereInput
    orderBy?: PropertyAnalyticsOrderByWithRelationInput | PropertyAnalyticsOrderByWithRelationInput[]
    cursor?: PropertyAnalyticsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyAnalyticsScalarFieldEnum | PropertyAnalyticsScalarFieldEnum[]
  }

  /**
   * Property.adminActions
   */
  export type Property$adminActionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminAction
     */
    omit?: AdminActionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
    where?: AdminActionWhereInput
    orderBy?: AdminActionOrderByWithRelationInput | AdminActionOrderByWithRelationInput[]
    cursor?: AdminActionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdminActionScalarFieldEnum | AdminActionScalarFieldEnum[]
  }

  /**
   * Property.payments
   */
  export type Property$paymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    cursor?: PaymentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Property.agencyInquiries
   */
  export type Property$agencyInquiriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInquiry
     */
    select?: AgencyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AgencyInquiry
     */
    omit?: AgencyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInquiryInclude<ExtArgs> | null
    where?: AgencyInquiryWhereInput
    orderBy?: AgencyInquiryOrderByWithRelationInput | AgencyInquiryOrderByWithRelationInput[]
    cursor?: AgencyInquiryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AgencyInquiryScalarFieldEnum | AgencyInquiryScalarFieldEnum[]
  }

  /**
   * Property without action
   */
  export type PropertyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Property
     */
    select?: PropertySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Property
     */
    omit?: PropertyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInclude<ExtArgs> | null
  }


  /**
   * Model PropertyPhoto
   */

  export type AggregatePropertyPhoto = {
    _count: PropertyPhotoCountAggregateOutputType | null
    _avg: PropertyPhotoAvgAggregateOutputType | null
    _sum: PropertyPhotoSumAggregateOutputType | null
    _min: PropertyPhotoMinAggregateOutputType | null
    _max: PropertyPhotoMaxAggregateOutputType | null
  }

  export type PropertyPhotoAvgAggregateOutputType = {
    order: number | null
  }

  export type PropertyPhotoSumAggregateOutputType = {
    order: number | null
  }

  export type PropertyPhotoMinAggregateOutputType = {
    id: string | null
    url: string | null
    caption: string | null
    altText: string | null
    isPrimary: boolean | null
    order: number | null
    category: string | null
    createdAt: Date | null
    propertyId: string | null
  }

  export type PropertyPhotoMaxAggregateOutputType = {
    id: string | null
    url: string | null
    caption: string | null
    altText: string | null
    isPrimary: boolean | null
    order: number | null
    category: string | null
    createdAt: Date | null
    propertyId: string | null
  }

  export type PropertyPhotoCountAggregateOutputType = {
    id: number
    url: number
    caption: number
    altText: number
    isPrimary: number
    order: number
    category: number
    createdAt: number
    propertyId: number
    _all: number
  }


  export type PropertyPhotoAvgAggregateInputType = {
    order?: true
  }

  export type PropertyPhotoSumAggregateInputType = {
    order?: true
  }

  export type PropertyPhotoMinAggregateInputType = {
    id?: true
    url?: true
    caption?: true
    altText?: true
    isPrimary?: true
    order?: true
    category?: true
    createdAt?: true
    propertyId?: true
  }

  export type PropertyPhotoMaxAggregateInputType = {
    id?: true
    url?: true
    caption?: true
    altText?: true
    isPrimary?: true
    order?: true
    category?: true
    createdAt?: true
    propertyId?: true
  }

  export type PropertyPhotoCountAggregateInputType = {
    id?: true
    url?: true
    caption?: true
    altText?: true
    isPrimary?: true
    order?: true
    category?: true
    createdAt?: true
    propertyId?: true
    _all?: true
  }

  export type PropertyPhotoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyPhoto to aggregate.
     */
    where?: PropertyPhotoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyPhotos to fetch.
     */
    orderBy?: PropertyPhotoOrderByWithRelationInput | PropertyPhotoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PropertyPhotoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyPhotos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyPhotos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PropertyPhotos
    **/
    _count?: true | PropertyPhotoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PropertyPhotoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PropertyPhotoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PropertyPhotoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PropertyPhotoMaxAggregateInputType
  }

  export type GetPropertyPhotoAggregateType<T extends PropertyPhotoAggregateArgs> = {
        [P in keyof T & keyof AggregatePropertyPhoto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePropertyPhoto[P]>
      : GetScalarType<T[P], AggregatePropertyPhoto[P]>
  }




  export type PropertyPhotoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyPhotoWhereInput
    orderBy?: PropertyPhotoOrderByWithAggregationInput | PropertyPhotoOrderByWithAggregationInput[]
    by: PropertyPhotoScalarFieldEnum[] | PropertyPhotoScalarFieldEnum
    having?: PropertyPhotoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PropertyPhotoCountAggregateInputType | true
    _avg?: PropertyPhotoAvgAggregateInputType
    _sum?: PropertyPhotoSumAggregateInputType
    _min?: PropertyPhotoMinAggregateInputType
    _max?: PropertyPhotoMaxAggregateInputType
  }

  export type PropertyPhotoGroupByOutputType = {
    id: string
    url: string
    caption: string | null
    altText: string | null
    isPrimary: boolean
    order: number
    category: string | null
    createdAt: Date
    propertyId: string
    _count: PropertyPhotoCountAggregateOutputType | null
    _avg: PropertyPhotoAvgAggregateOutputType | null
    _sum: PropertyPhotoSumAggregateOutputType | null
    _min: PropertyPhotoMinAggregateOutputType | null
    _max: PropertyPhotoMaxAggregateOutputType | null
  }

  type GetPropertyPhotoGroupByPayload<T extends PropertyPhotoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PropertyPhotoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PropertyPhotoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PropertyPhotoGroupByOutputType[P]>
            : GetScalarType<T[P], PropertyPhotoGroupByOutputType[P]>
        }
      >
    >


  export type PropertyPhotoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    caption?: boolean
    altText?: boolean
    isPrimary?: boolean
    order?: boolean
    category?: boolean
    createdAt?: boolean
    propertyId?: boolean
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyPhoto"]>

  export type PropertyPhotoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    caption?: boolean
    altText?: boolean
    isPrimary?: boolean
    order?: boolean
    category?: boolean
    createdAt?: boolean
    propertyId?: boolean
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyPhoto"]>

  export type PropertyPhotoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    caption?: boolean
    altText?: boolean
    isPrimary?: boolean
    order?: boolean
    category?: boolean
    createdAt?: boolean
    propertyId?: boolean
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyPhoto"]>

  export type PropertyPhotoSelectScalar = {
    id?: boolean
    url?: boolean
    caption?: boolean
    altText?: boolean
    isPrimary?: boolean
    order?: boolean
    category?: boolean
    createdAt?: boolean
    propertyId?: boolean
  }

  export type PropertyPhotoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "url" | "caption" | "altText" | "isPrimary" | "order" | "category" | "createdAt" | "propertyId", ExtArgs["result"]["propertyPhoto"]>
  export type PropertyPhotoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }
  export type PropertyPhotoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }
  export type PropertyPhotoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }

  export type $PropertyPhotoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PropertyPhoto"
    objects: {
      property: Prisma.$PropertyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      url: string
      caption: string | null
      altText: string | null
      isPrimary: boolean
      order: number
      category: string | null
      createdAt: Date
      propertyId: string
    }, ExtArgs["result"]["propertyPhoto"]>
    composites: {}
  }

  type PropertyPhotoGetPayload<S extends boolean | null | undefined | PropertyPhotoDefaultArgs> = $Result.GetResult<Prisma.$PropertyPhotoPayload, S>

  type PropertyPhotoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PropertyPhotoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PropertyPhotoCountAggregateInputType | true
    }

  export interface PropertyPhotoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PropertyPhoto'], meta: { name: 'PropertyPhoto' } }
    /**
     * Find zero or one PropertyPhoto that matches the filter.
     * @param {PropertyPhotoFindUniqueArgs} args - Arguments to find a PropertyPhoto
     * @example
     * // Get one PropertyPhoto
     * const propertyPhoto = await prisma.propertyPhoto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PropertyPhotoFindUniqueArgs>(args: SelectSubset<T, PropertyPhotoFindUniqueArgs<ExtArgs>>): Prisma__PropertyPhotoClient<$Result.GetResult<Prisma.$PropertyPhotoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PropertyPhoto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PropertyPhotoFindUniqueOrThrowArgs} args - Arguments to find a PropertyPhoto
     * @example
     * // Get one PropertyPhoto
     * const propertyPhoto = await prisma.propertyPhoto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PropertyPhotoFindUniqueOrThrowArgs>(args: SelectSubset<T, PropertyPhotoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PropertyPhotoClient<$Result.GetResult<Prisma.$PropertyPhotoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyPhoto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyPhotoFindFirstArgs} args - Arguments to find a PropertyPhoto
     * @example
     * // Get one PropertyPhoto
     * const propertyPhoto = await prisma.propertyPhoto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PropertyPhotoFindFirstArgs>(args?: SelectSubset<T, PropertyPhotoFindFirstArgs<ExtArgs>>): Prisma__PropertyPhotoClient<$Result.GetResult<Prisma.$PropertyPhotoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyPhoto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyPhotoFindFirstOrThrowArgs} args - Arguments to find a PropertyPhoto
     * @example
     * // Get one PropertyPhoto
     * const propertyPhoto = await prisma.propertyPhoto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PropertyPhotoFindFirstOrThrowArgs>(args?: SelectSubset<T, PropertyPhotoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PropertyPhotoClient<$Result.GetResult<Prisma.$PropertyPhotoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PropertyPhotos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyPhotoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PropertyPhotos
     * const propertyPhotos = await prisma.propertyPhoto.findMany()
     * 
     * // Get first 10 PropertyPhotos
     * const propertyPhotos = await prisma.propertyPhoto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const propertyPhotoWithIdOnly = await prisma.propertyPhoto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PropertyPhotoFindManyArgs>(args?: SelectSubset<T, PropertyPhotoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyPhotoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PropertyPhoto.
     * @param {PropertyPhotoCreateArgs} args - Arguments to create a PropertyPhoto.
     * @example
     * // Create one PropertyPhoto
     * const PropertyPhoto = await prisma.propertyPhoto.create({
     *   data: {
     *     // ... data to create a PropertyPhoto
     *   }
     * })
     * 
     */
    create<T extends PropertyPhotoCreateArgs>(args: SelectSubset<T, PropertyPhotoCreateArgs<ExtArgs>>): Prisma__PropertyPhotoClient<$Result.GetResult<Prisma.$PropertyPhotoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PropertyPhotos.
     * @param {PropertyPhotoCreateManyArgs} args - Arguments to create many PropertyPhotos.
     * @example
     * // Create many PropertyPhotos
     * const propertyPhoto = await prisma.propertyPhoto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PropertyPhotoCreateManyArgs>(args?: SelectSubset<T, PropertyPhotoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PropertyPhotos and returns the data saved in the database.
     * @param {PropertyPhotoCreateManyAndReturnArgs} args - Arguments to create many PropertyPhotos.
     * @example
     * // Create many PropertyPhotos
     * const propertyPhoto = await prisma.propertyPhoto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PropertyPhotos and only return the `id`
     * const propertyPhotoWithIdOnly = await prisma.propertyPhoto.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PropertyPhotoCreateManyAndReturnArgs>(args?: SelectSubset<T, PropertyPhotoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyPhotoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PropertyPhoto.
     * @param {PropertyPhotoDeleteArgs} args - Arguments to delete one PropertyPhoto.
     * @example
     * // Delete one PropertyPhoto
     * const PropertyPhoto = await prisma.propertyPhoto.delete({
     *   where: {
     *     // ... filter to delete one PropertyPhoto
     *   }
     * })
     * 
     */
    delete<T extends PropertyPhotoDeleteArgs>(args: SelectSubset<T, PropertyPhotoDeleteArgs<ExtArgs>>): Prisma__PropertyPhotoClient<$Result.GetResult<Prisma.$PropertyPhotoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PropertyPhoto.
     * @param {PropertyPhotoUpdateArgs} args - Arguments to update one PropertyPhoto.
     * @example
     * // Update one PropertyPhoto
     * const propertyPhoto = await prisma.propertyPhoto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PropertyPhotoUpdateArgs>(args: SelectSubset<T, PropertyPhotoUpdateArgs<ExtArgs>>): Prisma__PropertyPhotoClient<$Result.GetResult<Prisma.$PropertyPhotoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PropertyPhotos.
     * @param {PropertyPhotoDeleteManyArgs} args - Arguments to filter PropertyPhotos to delete.
     * @example
     * // Delete a few PropertyPhotos
     * const { count } = await prisma.propertyPhoto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PropertyPhotoDeleteManyArgs>(args?: SelectSubset<T, PropertyPhotoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyPhotos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyPhotoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PropertyPhotos
     * const propertyPhoto = await prisma.propertyPhoto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PropertyPhotoUpdateManyArgs>(args: SelectSubset<T, PropertyPhotoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyPhotos and returns the data updated in the database.
     * @param {PropertyPhotoUpdateManyAndReturnArgs} args - Arguments to update many PropertyPhotos.
     * @example
     * // Update many PropertyPhotos
     * const propertyPhoto = await prisma.propertyPhoto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PropertyPhotos and only return the `id`
     * const propertyPhotoWithIdOnly = await prisma.propertyPhoto.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PropertyPhotoUpdateManyAndReturnArgs>(args: SelectSubset<T, PropertyPhotoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyPhotoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PropertyPhoto.
     * @param {PropertyPhotoUpsertArgs} args - Arguments to update or create a PropertyPhoto.
     * @example
     * // Update or create a PropertyPhoto
     * const propertyPhoto = await prisma.propertyPhoto.upsert({
     *   create: {
     *     // ... data to create a PropertyPhoto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PropertyPhoto we want to update
     *   }
     * })
     */
    upsert<T extends PropertyPhotoUpsertArgs>(args: SelectSubset<T, PropertyPhotoUpsertArgs<ExtArgs>>): Prisma__PropertyPhotoClient<$Result.GetResult<Prisma.$PropertyPhotoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PropertyPhotos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyPhotoCountArgs} args - Arguments to filter PropertyPhotos to count.
     * @example
     * // Count the number of PropertyPhotos
     * const count = await prisma.propertyPhoto.count({
     *   where: {
     *     // ... the filter for the PropertyPhotos we want to count
     *   }
     * })
    **/
    count<T extends PropertyPhotoCountArgs>(
      args?: Subset<T, PropertyPhotoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PropertyPhotoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PropertyPhoto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyPhotoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PropertyPhotoAggregateArgs>(args: Subset<T, PropertyPhotoAggregateArgs>): Prisma.PrismaPromise<GetPropertyPhotoAggregateType<T>>

    /**
     * Group by PropertyPhoto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyPhotoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PropertyPhotoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PropertyPhotoGroupByArgs['orderBy'] }
        : { orderBy?: PropertyPhotoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PropertyPhotoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPropertyPhotoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PropertyPhoto model
   */
  readonly fields: PropertyPhotoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PropertyPhoto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PropertyPhotoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    property<T extends PropertyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PropertyDefaultArgs<ExtArgs>>): Prisma__PropertyClient<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PropertyPhoto model
   */
  interface PropertyPhotoFieldRefs {
    readonly id: FieldRef<"PropertyPhoto", 'String'>
    readonly url: FieldRef<"PropertyPhoto", 'String'>
    readonly caption: FieldRef<"PropertyPhoto", 'String'>
    readonly altText: FieldRef<"PropertyPhoto", 'String'>
    readonly isPrimary: FieldRef<"PropertyPhoto", 'Boolean'>
    readonly order: FieldRef<"PropertyPhoto", 'Int'>
    readonly category: FieldRef<"PropertyPhoto", 'String'>
    readonly createdAt: FieldRef<"PropertyPhoto", 'DateTime'>
    readonly propertyId: FieldRef<"PropertyPhoto", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PropertyPhoto findUnique
   */
  export type PropertyPhotoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyPhoto
     */
    select?: PropertyPhotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyPhoto
     */
    omit?: PropertyPhotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyPhotoInclude<ExtArgs> | null
    /**
     * Filter, which PropertyPhoto to fetch.
     */
    where: PropertyPhotoWhereUniqueInput
  }

  /**
   * PropertyPhoto findUniqueOrThrow
   */
  export type PropertyPhotoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyPhoto
     */
    select?: PropertyPhotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyPhoto
     */
    omit?: PropertyPhotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyPhotoInclude<ExtArgs> | null
    /**
     * Filter, which PropertyPhoto to fetch.
     */
    where: PropertyPhotoWhereUniqueInput
  }

  /**
   * PropertyPhoto findFirst
   */
  export type PropertyPhotoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyPhoto
     */
    select?: PropertyPhotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyPhoto
     */
    omit?: PropertyPhotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyPhotoInclude<ExtArgs> | null
    /**
     * Filter, which PropertyPhoto to fetch.
     */
    where?: PropertyPhotoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyPhotos to fetch.
     */
    orderBy?: PropertyPhotoOrderByWithRelationInput | PropertyPhotoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyPhotos.
     */
    cursor?: PropertyPhotoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyPhotos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyPhotos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyPhotos.
     */
    distinct?: PropertyPhotoScalarFieldEnum | PropertyPhotoScalarFieldEnum[]
  }

  /**
   * PropertyPhoto findFirstOrThrow
   */
  export type PropertyPhotoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyPhoto
     */
    select?: PropertyPhotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyPhoto
     */
    omit?: PropertyPhotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyPhotoInclude<ExtArgs> | null
    /**
     * Filter, which PropertyPhoto to fetch.
     */
    where?: PropertyPhotoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyPhotos to fetch.
     */
    orderBy?: PropertyPhotoOrderByWithRelationInput | PropertyPhotoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyPhotos.
     */
    cursor?: PropertyPhotoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyPhotos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyPhotos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyPhotos.
     */
    distinct?: PropertyPhotoScalarFieldEnum | PropertyPhotoScalarFieldEnum[]
  }

  /**
   * PropertyPhoto findMany
   */
  export type PropertyPhotoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyPhoto
     */
    select?: PropertyPhotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyPhoto
     */
    omit?: PropertyPhotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyPhotoInclude<ExtArgs> | null
    /**
     * Filter, which PropertyPhotos to fetch.
     */
    where?: PropertyPhotoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyPhotos to fetch.
     */
    orderBy?: PropertyPhotoOrderByWithRelationInput | PropertyPhotoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PropertyPhotos.
     */
    cursor?: PropertyPhotoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyPhotos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyPhotos.
     */
    skip?: number
    distinct?: PropertyPhotoScalarFieldEnum | PropertyPhotoScalarFieldEnum[]
  }

  /**
   * PropertyPhoto create
   */
  export type PropertyPhotoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyPhoto
     */
    select?: PropertyPhotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyPhoto
     */
    omit?: PropertyPhotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyPhotoInclude<ExtArgs> | null
    /**
     * The data needed to create a PropertyPhoto.
     */
    data: XOR<PropertyPhotoCreateInput, PropertyPhotoUncheckedCreateInput>
  }

  /**
   * PropertyPhoto createMany
   */
  export type PropertyPhotoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PropertyPhotos.
     */
    data: PropertyPhotoCreateManyInput | PropertyPhotoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PropertyPhoto createManyAndReturn
   */
  export type PropertyPhotoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyPhoto
     */
    select?: PropertyPhotoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyPhoto
     */
    omit?: PropertyPhotoOmit<ExtArgs> | null
    /**
     * The data used to create many PropertyPhotos.
     */
    data: PropertyPhotoCreateManyInput | PropertyPhotoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyPhotoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PropertyPhoto update
   */
  export type PropertyPhotoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyPhoto
     */
    select?: PropertyPhotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyPhoto
     */
    omit?: PropertyPhotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyPhotoInclude<ExtArgs> | null
    /**
     * The data needed to update a PropertyPhoto.
     */
    data: XOR<PropertyPhotoUpdateInput, PropertyPhotoUncheckedUpdateInput>
    /**
     * Choose, which PropertyPhoto to update.
     */
    where: PropertyPhotoWhereUniqueInput
  }

  /**
   * PropertyPhoto updateMany
   */
  export type PropertyPhotoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PropertyPhotos.
     */
    data: XOR<PropertyPhotoUpdateManyMutationInput, PropertyPhotoUncheckedUpdateManyInput>
    /**
     * Filter which PropertyPhotos to update
     */
    where?: PropertyPhotoWhereInput
    /**
     * Limit how many PropertyPhotos to update.
     */
    limit?: number
  }

  /**
   * PropertyPhoto updateManyAndReturn
   */
  export type PropertyPhotoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyPhoto
     */
    select?: PropertyPhotoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyPhoto
     */
    omit?: PropertyPhotoOmit<ExtArgs> | null
    /**
     * The data used to update PropertyPhotos.
     */
    data: XOR<PropertyPhotoUpdateManyMutationInput, PropertyPhotoUncheckedUpdateManyInput>
    /**
     * Filter which PropertyPhotos to update
     */
    where?: PropertyPhotoWhereInput
    /**
     * Limit how many PropertyPhotos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyPhotoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PropertyPhoto upsert
   */
  export type PropertyPhotoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyPhoto
     */
    select?: PropertyPhotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyPhoto
     */
    omit?: PropertyPhotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyPhotoInclude<ExtArgs> | null
    /**
     * The filter to search for the PropertyPhoto to update in case it exists.
     */
    where: PropertyPhotoWhereUniqueInput
    /**
     * In case the PropertyPhoto found by the `where` argument doesn't exist, create a new PropertyPhoto with this data.
     */
    create: XOR<PropertyPhotoCreateInput, PropertyPhotoUncheckedCreateInput>
    /**
     * In case the PropertyPhoto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PropertyPhotoUpdateInput, PropertyPhotoUncheckedUpdateInput>
  }

  /**
   * PropertyPhoto delete
   */
  export type PropertyPhotoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyPhoto
     */
    select?: PropertyPhotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyPhoto
     */
    omit?: PropertyPhotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyPhotoInclude<ExtArgs> | null
    /**
     * Filter which PropertyPhoto to delete.
     */
    where: PropertyPhotoWhereUniqueInput
  }

  /**
   * PropertyPhoto deleteMany
   */
  export type PropertyPhotoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyPhotos to delete
     */
    where?: PropertyPhotoWhereInput
    /**
     * Limit how many PropertyPhotos to delete.
     */
    limit?: number
  }

  /**
   * PropertyPhoto without action
   */
  export type PropertyPhotoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyPhoto
     */
    select?: PropertyPhotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyPhoto
     */
    omit?: PropertyPhotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyPhotoInclude<ExtArgs> | null
  }


  /**
   * Model PropertyVideo
   */

  export type AggregatePropertyVideo = {
    _count: PropertyVideoCountAggregateOutputType | null
    _avg: PropertyVideoAvgAggregateOutputType | null
    _sum: PropertyVideoSumAggregateOutputType | null
    _min: PropertyVideoMinAggregateOutputType | null
    _max: PropertyVideoMaxAggregateOutputType | null
  }

  export type PropertyVideoAvgAggregateOutputType = {
    duration: number | null
    order: number | null
  }

  export type PropertyVideoSumAggregateOutputType = {
    duration: number | null
    order: number | null
  }

  export type PropertyVideoMinAggregateOutputType = {
    id: string | null
    url: string | null
    thumbnail: string | null
    duration: number | null
    caption: string | null
    order: number | null
    createdAt: Date | null
    propertyId: string | null
  }

  export type PropertyVideoMaxAggregateOutputType = {
    id: string | null
    url: string | null
    thumbnail: string | null
    duration: number | null
    caption: string | null
    order: number | null
    createdAt: Date | null
    propertyId: string | null
  }

  export type PropertyVideoCountAggregateOutputType = {
    id: number
    url: number
    thumbnail: number
    duration: number
    caption: number
    order: number
    createdAt: number
    propertyId: number
    _all: number
  }


  export type PropertyVideoAvgAggregateInputType = {
    duration?: true
    order?: true
  }

  export type PropertyVideoSumAggregateInputType = {
    duration?: true
    order?: true
  }

  export type PropertyVideoMinAggregateInputType = {
    id?: true
    url?: true
    thumbnail?: true
    duration?: true
    caption?: true
    order?: true
    createdAt?: true
    propertyId?: true
  }

  export type PropertyVideoMaxAggregateInputType = {
    id?: true
    url?: true
    thumbnail?: true
    duration?: true
    caption?: true
    order?: true
    createdAt?: true
    propertyId?: true
  }

  export type PropertyVideoCountAggregateInputType = {
    id?: true
    url?: true
    thumbnail?: true
    duration?: true
    caption?: true
    order?: true
    createdAt?: true
    propertyId?: true
    _all?: true
  }

  export type PropertyVideoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyVideo to aggregate.
     */
    where?: PropertyVideoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyVideos to fetch.
     */
    orderBy?: PropertyVideoOrderByWithRelationInput | PropertyVideoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PropertyVideoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyVideos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyVideos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PropertyVideos
    **/
    _count?: true | PropertyVideoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PropertyVideoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PropertyVideoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PropertyVideoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PropertyVideoMaxAggregateInputType
  }

  export type GetPropertyVideoAggregateType<T extends PropertyVideoAggregateArgs> = {
        [P in keyof T & keyof AggregatePropertyVideo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePropertyVideo[P]>
      : GetScalarType<T[P], AggregatePropertyVideo[P]>
  }




  export type PropertyVideoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyVideoWhereInput
    orderBy?: PropertyVideoOrderByWithAggregationInput | PropertyVideoOrderByWithAggregationInput[]
    by: PropertyVideoScalarFieldEnum[] | PropertyVideoScalarFieldEnum
    having?: PropertyVideoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PropertyVideoCountAggregateInputType | true
    _avg?: PropertyVideoAvgAggregateInputType
    _sum?: PropertyVideoSumAggregateInputType
    _min?: PropertyVideoMinAggregateInputType
    _max?: PropertyVideoMaxAggregateInputType
  }

  export type PropertyVideoGroupByOutputType = {
    id: string
    url: string
    thumbnail: string | null
    duration: number | null
    caption: string | null
    order: number
    createdAt: Date
    propertyId: string
    _count: PropertyVideoCountAggregateOutputType | null
    _avg: PropertyVideoAvgAggregateOutputType | null
    _sum: PropertyVideoSumAggregateOutputType | null
    _min: PropertyVideoMinAggregateOutputType | null
    _max: PropertyVideoMaxAggregateOutputType | null
  }

  type GetPropertyVideoGroupByPayload<T extends PropertyVideoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PropertyVideoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PropertyVideoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PropertyVideoGroupByOutputType[P]>
            : GetScalarType<T[P], PropertyVideoGroupByOutputType[P]>
        }
      >
    >


  export type PropertyVideoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    thumbnail?: boolean
    duration?: boolean
    caption?: boolean
    order?: boolean
    createdAt?: boolean
    propertyId?: boolean
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyVideo"]>

  export type PropertyVideoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    thumbnail?: boolean
    duration?: boolean
    caption?: boolean
    order?: boolean
    createdAt?: boolean
    propertyId?: boolean
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyVideo"]>

  export type PropertyVideoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    thumbnail?: boolean
    duration?: boolean
    caption?: boolean
    order?: boolean
    createdAt?: boolean
    propertyId?: boolean
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyVideo"]>

  export type PropertyVideoSelectScalar = {
    id?: boolean
    url?: boolean
    thumbnail?: boolean
    duration?: boolean
    caption?: boolean
    order?: boolean
    createdAt?: boolean
    propertyId?: boolean
  }

  export type PropertyVideoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "url" | "thumbnail" | "duration" | "caption" | "order" | "createdAt" | "propertyId", ExtArgs["result"]["propertyVideo"]>
  export type PropertyVideoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }
  export type PropertyVideoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }
  export type PropertyVideoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }

  export type $PropertyVideoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PropertyVideo"
    objects: {
      property: Prisma.$PropertyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      url: string
      thumbnail: string | null
      duration: number | null
      caption: string | null
      order: number
      createdAt: Date
      propertyId: string
    }, ExtArgs["result"]["propertyVideo"]>
    composites: {}
  }

  type PropertyVideoGetPayload<S extends boolean | null | undefined | PropertyVideoDefaultArgs> = $Result.GetResult<Prisma.$PropertyVideoPayload, S>

  type PropertyVideoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PropertyVideoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PropertyVideoCountAggregateInputType | true
    }

  export interface PropertyVideoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PropertyVideo'], meta: { name: 'PropertyVideo' } }
    /**
     * Find zero or one PropertyVideo that matches the filter.
     * @param {PropertyVideoFindUniqueArgs} args - Arguments to find a PropertyVideo
     * @example
     * // Get one PropertyVideo
     * const propertyVideo = await prisma.propertyVideo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PropertyVideoFindUniqueArgs>(args: SelectSubset<T, PropertyVideoFindUniqueArgs<ExtArgs>>): Prisma__PropertyVideoClient<$Result.GetResult<Prisma.$PropertyVideoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PropertyVideo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PropertyVideoFindUniqueOrThrowArgs} args - Arguments to find a PropertyVideo
     * @example
     * // Get one PropertyVideo
     * const propertyVideo = await prisma.propertyVideo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PropertyVideoFindUniqueOrThrowArgs>(args: SelectSubset<T, PropertyVideoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PropertyVideoClient<$Result.GetResult<Prisma.$PropertyVideoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyVideo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyVideoFindFirstArgs} args - Arguments to find a PropertyVideo
     * @example
     * // Get one PropertyVideo
     * const propertyVideo = await prisma.propertyVideo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PropertyVideoFindFirstArgs>(args?: SelectSubset<T, PropertyVideoFindFirstArgs<ExtArgs>>): Prisma__PropertyVideoClient<$Result.GetResult<Prisma.$PropertyVideoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyVideo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyVideoFindFirstOrThrowArgs} args - Arguments to find a PropertyVideo
     * @example
     * // Get one PropertyVideo
     * const propertyVideo = await prisma.propertyVideo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PropertyVideoFindFirstOrThrowArgs>(args?: SelectSubset<T, PropertyVideoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PropertyVideoClient<$Result.GetResult<Prisma.$PropertyVideoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PropertyVideos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyVideoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PropertyVideos
     * const propertyVideos = await prisma.propertyVideo.findMany()
     * 
     * // Get first 10 PropertyVideos
     * const propertyVideos = await prisma.propertyVideo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const propertyVideoWithIdOnly = await prisma.propertyVideo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PropertyVideoFindManyArgs>(args?: SelectSubset<T, PropertyVideoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyVideoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PropertyVideo.
     * @param {PropertyVideoCreateArgs} args - Arguments to create a PropertyVideo.
     * @example
     * // Create one PropertyVideo
     * const PropertyVideo = await prisma.propertyVideo.create({
     *   data: {
     *     // ... data to create a PropertyVideo
     *   }
     * })
     * 
     */
    create<T extends PropertyVideoCreateArgs>(args: SelectSubset<T, PropertyVideoCreateArgs<ExtArgs>>): Prisma__PropertyVideoClient<$Result.GetResult<Prisma.$PropertyVideoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PropertyVideos.
     * @param {PropertyVideoCreateManyArgs} args - Arguments to create many PropertyVideos.
     * @example
     * // Create many PropertyVideos
     * const propertyVideo = await prisma.propertyVideo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PropertyVideoCreateManyArgs>(args?: SelectSubset<T, PropertyVideoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PropertyVideos and returns the data saved in the database.
     * @param {PropertyVideoCreateManyAndReturnArgs} args - Arguments to create many PropertyVideos.
     * @example
     * // Create many PropertyVideos
     * const propertyVideo = await prisma.propertyVideo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PropertyVideos and only return the `id`
     * const propertyVideoWithIdOnly = await prisma.propertyVideo.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PropertyVideoCreateManyAndReturnArgs>(args?: SelectSubset<T, PropertyVideoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyVideoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PropertyVideo.
     * @param {PropertyVideoDeleteArgs} args - Arguments to delete one PropertyVideo.
     * @example
     * // Delete one PropertyVideo
     * const PropertyVideo = await prisma.propertyVideo.delete({
     *   where: {
     *     // ... filter to delete one PropertyVideo
     *   }
     * })
     * 
     */
    delete<T extends PropertyVideoDeleteArgs>(args: SelectSubset<T, PropertyVideoDeleteArgs<ExtArgs>>): Prisma__PropertyVideoClient<$Result.GetResult<Prisma.$PropertyVideoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PropertyVideo.
     * @param {PropertyVideoUpdateArgs} args - Arguments to update one PropertyVideo.
     * @example
     * // Update one PropertyVideo
     * const propertyVideo = await prisma.propertyVideo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PropertyVideoUpdateArgs>(args: SelectSubset<T, PropertyVideoUpdateArgs<ExtArgs>>): Prisma__PropertyVideoClient<$Result.GetResult<Prisma.$PropertyVideoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PropertyVideos.
     * @param {PropertyVideoDeleteManyArgs} args - Arguments to filter PropertyVideos to delete.
     * @example
     * // Delete a few PropertyVideos
     * const { count } = await prisma.propertyVideo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PropertyVideoDeleteManyArgs>(args?: SelectSubset<T, PropertyVideoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyVideos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyVideoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PropertyVideos
     * const propertyVideo = await prisma.propertyVideo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PropertyVideoUpdateManyArgs>(args: SelectSubset<T, PropertyVideoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyVideos and returns the data updated in the database.
     * @param {PropertyVideoUpdateManyAndReturnArgs} args - Arguments to update many PropertyVideos.
     * @example
     * // Update many PropertyVideos
     * const propertyVideo = await prisma.propertyVideo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PropertyVideos and only return the `id`
     * const propertyVideoWithIdOnly = await prisma.propertyVideo.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PropertyVideoUpdateManyAndReturnArgs>(args: SelectSubset<T, PropertyVideoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyVideoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PropertyVideo.
     * @param {PropertyVideoUpsertArgs} args - Arguments to update or create a PropertyVideo.
     * @example
     * // Update or create a PropertyVideo
     * const propertyVideo = await prisma.propertyVideo.upsert({
     *   create: {
     *     // ... data to create a PropertyVideo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PropertyVideo we want to update
     *   }
     * })
     */
    upsert<T extends PropertyVideoUpsertArgs>(args: SelectSubset<T, PropertyVideoUpsertArgs<ExtArgs>>): Prisma__PropertyVideoClient<$Result.GetResult<Prisma.$PropertyVideoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PropertyVideos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyVideoCountArgs} args - Arguments to filter PropertyVideos to count.
     * @example
     * // Count the number of PropertyVideos
     * const count = await prisma.propertyVideo.count({
     *   where: {
     *     // ... the filter for the PropertyVideos we want to count
     *   }
     * })
    **/
    count<T extends PropertyVideoCountArgs>(
      args?: Subset<T, PropertyVideoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PropertyVideoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PropertyVideo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyVideoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PropertyVideoAggregateArgs>(args: Subset<T, PropertyVideoAggregateArgs>): Prisma.PrismaPromise<GetPropertyVideoAggregateType<T>>

    /**
     * Group by PropertyVideo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyVideoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PropertyVideoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PropertyVideoGroupByArgs['orderBy'] }
        : { orderBy?: PropertyVideoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PropertyVideoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPropertyVideoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PropertyVideo model
   */
  readonly fields: PropertyVideoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PropertyVideo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PropertyVideoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    property<T extends PropertyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PropertyDefaultArgs<ExtArgs>>): Prisma__PropertyClient<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PropertyVideo model
   */
  interface PropertyVideoFieldRefs {
    readonly id: FieldRef<"PropertyVideo", 'String'>
    readonly url: FieldRef<"PropertyVideo", 'String'>
    readonly thumbnail: FieldRef<"PropertyVideo", 'String'>
    readonly duration: FieldRef<"PropertyVideo", 'Int'>
    readonly caption: FieldRef<"PropertyVideo", 'String'>
    readonly order: FieldRef<"PropertyVideo", 'Int'>
    readonly createdAt: FieldRef<"PropertyVideo", 'DateTime'>
    readonly propertyId: FieldRef<"PropertyVideo", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PropertyVideo findUnique
   */
  export type PropertyVideoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyVideo
     */
    select?: PropertyVideoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyVideo
     */
    omit?: PropertyVideoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyVideoInclude<ExtArgs> | null
    /**
     * Filter, which PropertyVideo to fetch.
     */
    where: PropertyVideoWhereUniqueInput
  }

  /**
   * PropertyVideo findUniqueOrThrow
   */
  export type PropertyVideoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyVideo
     */
    select?: PropertyVideoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyVideo
     */
    omit?: PropertyVideoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyVideoInclude<ExtArgs> | null
    /**
     * Filter, which PropertyVideo to fetch.
     */
    where: PropertyVideoWhereUniqueInput
  }

  /**
   * PropertyVideo findFirst
   */
  export type PropertyVideoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyVideo
     */
    select?: PropertyVideoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyVideo
     */
    omit?: PropertyVideoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyVideoInclude<ExtArgs> | null
    /**
     * Filter, which PropertyVideo to fetch.
     */
    where?: PropertyVideoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyVideos to fetch.
     */
    orderBy?: PropertyVideoOrderByWithRelationInput | PropertyVideoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyVideos.
     */
    cursor?: PropertyVideoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyVideos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyVideos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyVideos.
     */
    distinct?: PropertyVideoScalarFieldEnum | PropertyVideoScalarFieldEnum[]
  }

  /**
   * PropertyVideo findFirstOrThrow
   */
  export type PropertyVideoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyVideo
     */
    select?: PropertyVideoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyVideo
     */
    omit?: PropertyVideoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyVideoInclude<ExtArgs> | null
    /**
     * Filter, which PropertyVideo to fetch.
     */
    where?: PropertyVideoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyVideos to fetch.
     */
    orderBy?: PropertyVideoOrderByWithRelationInput | PropertyVideoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyVideos.
     */
    cursor?: PropertyVideoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyVideos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyVideos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyVideos.
     */
    distinct?: PropertyVideoScalarFieldEnum | PropertyVideoScalarFieldEnum[]
  }

  /**
   * PropertyVideo findMany
   */
  export type PropertyVideoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyVideo
     */
    select?: PropertyVideoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyVideo
     */
    omit?: PropertyVideoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyVideoInclude<ExtArgs> | null
    /**
     * Filter, which PropertyVideos to fetch.
     */
    where?: PropertyVideoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyVideos to fetch.
     */
    orderBy?: PropertyVideoOrderByWithRelationInput | PropertyVideoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PropertyVideos.
     */
    cursor?: PropertyVideoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyVideos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyVideos.
     */
    skip?: number
    distinct?: PropertyVideoScalarFieldEnum | PropertyVideoScalarFieldEnum[]
  }

  /**
   * PropertyVideo create
   */
  export type PropertyVideoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyVideo
     */
    select?: PropertyVideoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyVideo
     */
    omit?: PropertyVideoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyVideoInclude<ExtArgs> | null
    /**
     * The data needed to create a PropertyVideo.
     */
    data: XOR<PropertyVideoCreateInput, PropertyVideoUncheckedCreateInput>
  }

  /**
   * PropertyVideo createMany
   */
  export type PropertyVideoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PropertyVideos.
     */
    data: PropertyVideoCreateManyInput | PropertyVideoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PropertyVideo createManyAndReturn
   */
  export type PropertyVideoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyVideo
     */
    select?: PropertyVideoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyVideo
     */
    omit?: PropertyVideoOmit<ExtArgs> | null
    /**
     * The data used to create many PropertyVideos.
     */
    data: PropertyVideoCreateManyInput | PropertyVideoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyVideoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PropertyVideo update
   */
  export type PropertyVideoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyVideo
     */
    select?: PropertyVideoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyVideo
     */
    omit?: PropertyVideoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyVideoInclude<ExtArgs> | null
    /**
     * The data needed to update a PropertyVideo.
     */
    data: XOR<PropertyVideoUpdateInput, PropertyVideoUncheckedUpdateInput>
    /**
     * Choose, which PropertyVideo to update.
     */
    where: PropertyVideoWhereUniqueInput
  }

  /**
   * PropertyVideo updateMany
   */
  export type PropertyVideoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PropertyVideos.
     */
    data: XOR<PropertyVideoUpdateManyMutationInput, PropertyVideoUncheckedUpdateManyInput>
    /**
     * Filter which PropertyVideos to update
     */
    where?: PropertyVideoWhereInput
    /**
     * Limit how many PropertyVideos to update.
     */
    limit?: number
  }

  /**
   * PropertyVideo updateManyAndReturn
   */
  export type PropertyVideoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyVideo
     */
    select?: PropertyVideoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyVideo
     */
    omit?: PropertyVideoOmit<ExtArgs> | null
    /**
     * The data used to update PropertyVideos.
     */
    data: XOR<PropertyVideoUpdateManyMutationInput, PropertyVideoUncheckedUpdateManyInput>
    /**
     * Filter which PropertyVideos to update
     */
    where?: PropertyVideoWhereInput
    /**
     * Limit how many PropertyVideos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyVideoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PropertyVideo upsert
   */
  export type PropertyVideoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyVideo
     */
    select?: PropertyVideoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyVideo
     */
    omit?: PropertyVideoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyVideoInclude<ExtArgs> | null
    /**
     * The filter to search for the PropertyVideo to update in case it exists.
     */
    where: PropertyVideoWhereUniqueInput
    /**
     * In case the PropertyVideo found by the `where` argument doesn't exist, create a new PropertyVideo with this data.
     */
    create: XOR<PropertyVideoCreateInput, PropertyVideoUncheckedCreateInput>
    /**
     * In case the PropertyVideo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PropertyVideoUpdateInput, PropertyVideoUncheckedUpdateInput>
  }

  /**
   * PropertyVideo delete
   */
  export type PropertyVideoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyVideo
     */
    select?: PropertyVideoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyVideo
     */
    omit?: PropertyVideoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyVideoInclude<ExtArgs> | null
    /**
     * Filter which PropertyVideo to delete.
     */
    where: PropertyVideoWhereUniqueInput
  }

  /**
   * PropertyVideo deleteMany
   */
  export type PropertyVideoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyVideos to delete
     */
    where?: PropertyVideoWhereInput
    /**
     * Limit how many PropertyVideos to delete.
     */
    limit?: number
  }

  /**
   * PropertyVideo without action
   */
  export type PropertyVideoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyVideo
     */
    select?: PropertyVideoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyVideo
     */
    omit?: PropertyVideoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyVideoInclude<ExtArgs> | null
  }


  /**
   * Model VirtualTour
   */

  export type AggregateVirtualTour = {
    _count: VirtualTourCountAggregateOutputType | null
    _avg: VirtualTourAvgAggregateOutputType | null
    _sum: VirtualTourSumAggregateOutputType | null
    _min: VirtualTourMinAggregateOutputType | null
    _max: VirtualTourMaxAggregateOutputType | null
  }

  export type VirtualTourAvgAggregateOutputType = {
    order: number | null
  }

  export type VirtualTourSumAggregateOutputType = {
    order: number | null
  }

  export type VirtualTourMinAggregateOutputType = {
    id: string | null
    url: string | null
    platform: string | null
    caption: string | null
    order: number | null
    createdAt: Date | null
    propertyId: string | null
  }

  export type VirtualTourMaxAggregateOutputType = {
    id: string | null
    url: string | null
    platform: string | null
    caption: string | null
    order: number | null
    createdAt: Date | null
    propertyId: string | null
  }

  export type VirtualTourCountAggregateOutputType = {
    id: number
    url: number
    platform: number
    caption: number
    order: number
    createdAt: number
    propertyId: number
    _all: number
  }


  export type VirtualTourAvgAggregateInputType = {
    order?: true
  }

  export type VirtualTourSumAggregateInputType = {
    order?: true
  }

  export type VirtualTourMinAggregateInputType = {
    id?: true
    url?: true
    platform?: true
    caption?: true
    order?: true
    createdAt?: true
    propertyId?: true
  }

  export type VirtualTourMaxAggregateInputType = {
    id?: true
    url?: true
    platform?: true
    caption?: true
    order?: true
    createdAt?: true
    propertyId?: true
  }

  export type VirtualTourCountAggregateInputType = {
    id?: true
    url?: true
    platform?: true
    caption?: true
    order?: true
    createdAt?: true
    propertyId?: true
    _all?: true
  }

  export type VirtualTourAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VirtualTour to aggregate.
     */
    where?: VirtualTourWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VirtualTours to fetch.
     */
    orderBy?: VirtualTourOrderByWithRelationInput | VirtualTourOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VirtualTourWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VirtualTours from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VirtualTours.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VirtualTours
    **/
    _count?: true | VirtualTourCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VirtualTourAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VirtualTourSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VirtualTourMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VirtualTourMaxAggregateInputType
  }

  export type GetVirtualTourAggregateType<T extends VirtualTourAggregateArgs> = {
        [P in keyof T & keyof AggregateVirtualTour]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVirtualTour[P]>
      : GetScalarType<T[P], AggregateVirtualTour[P]>
  }




  export type VirtualTourGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VirtualTourWhereInput
    orderBy?: VirtualTourOrderByWithAggregationInput | VirtualTourOrderByWithAggregationInput[]
    by: VirtualTourScalarFieldEnum[] | VirtualTourScalarFieldEnum
    having?: VirtualTourScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VirtualTourCountAggregateInputType | true
    _avg?: VirtualTourAvgAggregateInputType
    _sum?: VirtualTourSumAggregateInputType
    _min?: VirtualTourMinAggregateInputType
    _max?: VirtualTourMaxAggregateInputType
  }

  export type VirtualTourGroupByOutputType = {
    id: string
    url: string
    platform: string | null
    caption: string | null
    order: number
    createdAt: Date
    propertyId: string
    _count: VirtualTourCountAggregateOutputType | null
    _avg: VirtualTourAvgAggregateOutputType | null
    _sum: VirtualTourSumAggregateOutputType | null
    _min: VirtualTourMinAggregateOutputType | null
    _max: VirtualTourMaxAggregateOutputType | null
  }

  type GetVirtualTourGroupByPayload<T extends VirtualTourGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VirtualTourGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VirtualTourGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VirtualTourGroupByOutputType[P]>
            : GetScalarType<T[P], VirtualTourGroupByOutputType[P]>
        }
      >
    >


  export type VirtualTourSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    platform?: boolean
    caption?: boolean
    order?: boolean
    createdAt?: boolean
    propertyId?: boolean
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["virtualTour"]>

  export type VirtualTourSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    platform?: boolean
    caption?: boolean
    order?: boolean
    createdAt?: boolean
    propertyId?: boolean
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["virtualTour"]>

  export type VirtualTourSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    platform?: boolean
    caption?: boolean
    order?: boolean
    createdAt?: boolean
    propertyId?: boolean
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["virtualTour"]>

  export type VirtualTourSelectScalar = {
    id?: boolean
    url?: boolean
    platform?: boolean
    caption?: boolean
    order?: boolean
    createdAt?: boolean
    propertyId?: boolean
  }

  export type VirtualTourOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "url" | "platform" | "caption" | "order" | "createdAt" | "propertyId", ExtArgs["result"]["virtualTour"]>
  export type VirtualTourInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }
  export type VirtualTourIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }
  export type VirtualTourIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }

  export type $VirtualTourPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VirtualTour"
    objects: {
      property: Prisma.$PropertyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      url: string
      platform: string | null
      caption: string | null
      order: number
      createdAt: Date
      propertyId: string
    }, ExtArgs["result"]["virtualTour"]>
    composites: {}
  }

  type VirtualTourGetPayload<S extends boolean | null | undefined | VirtualTourDefaultArgs> = $Result.GetResult<Prisma.$VirtualTourPayload, S>

  type VirtualTourCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VirtualTourFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VirtualTourCountAggregateInputType | true
    }

  export interface VirtualTourDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VirtualTour'], meta: { name: 'VirtualTour' } }
    /**
     * Find zero or one VirtualTour that matches the filter.
     * @param {VirtualTourFindUniqueArgs} args - Arguments to find a VirtualTour
     * @example
     * // Get one VirtualTour
     * const virtualTour = await prisma.virtualTour.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VirtualTourFindUniqueArgs>(args: SelectSubset<T, VirtualTourFindUniqueArgs<ExtArgs>>): Prisma__VirtualTourClient<$Result.GetResult<Prisma.$VirtualTourPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one VirtualTour that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VirtualTourFindUniqueOrThrowArgs} args - Arguments to find a VirtualTour
     * @example
     * // Get one VirtualTour
     * const virtualTour = await prisma.virtualTour.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VirtualTourFindUniqueOrThrowArgs>(args: SelectSubset<T, VirtualTourFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VirtualTourClient<$Result.GetResult<Prisma.$VirtualTourPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VirtualTour that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualTourFindFirstArgs} args - Arguments to find a VirtualTour
     * @example
     * // Get one VirtualTour
     * const virtualTour = await prisma.virtualTour.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VirtualTourFindFirstArgs>(args?: SelectSubset<T, VirtualTourFindFirstArgs<ExtArgs>>): Prisma__VirtualTourClient<$Result.GetResult<Prisma.$VirtualTourPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VirtualTour that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualTourFindFirstOrThrowArgs} args - Arguments to find a VirtualTour
     * @example
     * // Get one VirtualTour
     * const virtualTour = await prisma.virtualTour.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VirtualTourFindFirstOrThrowArgs>(args?: SelectSubset<T, VirtualTourFindFirstOrThrowArgs<ExtArgs>>): Prisma__VirtualTourClient<$Result.GetResult<Prisma.$VirtualTourPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more VirtualTours that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualTourFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VirtualTours
     * const virtualTours = await prisma.virtualTour.findMany()
     * 
     * // Get first 10 VirtualTours
     * const virtualTours = await prisma.virtualTour.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const virtualTourWithIdOnly = await prisma.virtualTour.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VirtualTourFindManyArgs>(args?: SelectSubset<T, VirtualTourFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VirtualTourPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a VirtualTour.
     * @param {VirtualTourCreateArgs} args - Arguments to create a VirtualTour.
     * @example
     * // Create one VirtualTour
     * const VirtualTour = await prisma.virtualTour.create({
     *   data: {
     *     // ... data to create a VirtualTour
     *   }
     * })
     * 
     */
    create<T extends VirtualTourCreateArgs>(args: SelectSubset<T, VirtualTourCreateArgs<ExtArgs>>): Prisma__VirtualTourClient<$Result.GetResult<Prisma.$VirtualTourPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many VirtualTours.
     * @param {VirtualTourCreateManyArgs} args - Arguments to create many VirtualTours.
     * @example
     * // Create many VirtualTours
     * const virtualTour = await prisma.virtualTour.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VirtualTourCreateManyArgs>(args?: SelectSubset<T, VirtualTourCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many VirtualTours and returns the data saved in the database.
     * @param {VirtualTourCreateManyAndReturnArgs} args - Arguments to create many VirtualTours.
     * @example
     * // Create many VirtualTours
     * const virtualTour = await prisma.virtualTour.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many VirtualTours and only return the `id`
     * const virtualTourWithIdOnly = await prisma.virtualTour.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VirtualTourCreateManyAndReturnArgs>(args?: SelectSubset<T, VirtualTourCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VirtualTourPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a VirtualTour.
     * @param {VirtualTourDeleteArgs} args - Arguments to delete one VirtualTour.
     * @example
     * // Delete one VirtualTour
     * const VirtualTour = await prisma.virtualTour.delete({
     *   where: {
     *     // ... filter to delete one VirtualTour
     *   }
     * })
     * 
     */
    delete<T extends VirtualTourDeleteArgs>(args: SelectSubset<T, VirtualTourDeleteArgs<ExtArgs>>): Prisma__VirtualTourClient<$Result.GetResult<Prisma.$VirtualTourPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one VirtualTour.
     * @param {VirtualTourUpdateArgs} args - Arguments to update one VirtualTour.
     * @example
     * // Update one VirtualTour
     * const virtualTour = await prisma.virtualTour.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VirtualTourUpdateArgs>(args: SelectSubset<T, VirtualTourUpdateArgs<ExtArgs>>): Prisma__VirtualTourClient<$Result.GetResult<Prisma.$VirtualTourPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more VirtualTours.
     * @param {VirtualTourDeleteManyArgs} args - Arguments to filter VirtualTours to delete.
     * @example
     * // Delete a few VirtualTours
     * const { count } = await prisma.virtualTour.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VirtualTourDeleteManyArgs>(args?: SelectSubset<T, VirtualTourDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VirtualTours.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualTourUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VirtualTours
     * const virtualTour = await prisma.virtualTour.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VirtualTourUpdateManyArgs>(args: SelectSubset<T, VirtualTourUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VirtualTours and returns the data updated in the database.
     * @param {VirtualTourUpdateManyAndReturnArgs} args - Arguments to update many VirtualTours.
     * @example
     * // Update many VirtualTours
     * const virtualTour = await prisma.virtualTour.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more VirtualTours and only return the `id`
     * const virtualTourWithIdOnly = await prisma.virtualTour.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VirtualTourUpdateManyAndReturnArgs>(args: SelectSubset<T, VirtualTourUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VirtualTourPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one VirtualTour.
     * @param {VirtualTourUpsertArgs} args - Arguments to update or create a VirtualTour.
     * @example
     * // Update or create a VirtualTour
     * const virtualTour = await prisma.virtualTour.upsert({
     *   create: {
     *     // ... data to create a VirtualTour
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VirtualTour we want to update
     *   }
     * })
     */
    upsert<T extends VirtualTourUpsertArgs>(args: SelectSubset<T, VirtualTourUpsertArgs<ExtArgs>>): Prisma__VirtualTourClient<$Result.GetResult<Prisma.$VirtualTourPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of VirtualTours.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualTourCountArgs} args - Arguments to filter VirtualTours to count.
     * @example
     * // Count the number of VirtualTours
     * const count = await prisma.virtualTour.count({
     *   where: {
     *     // ... the filter for the VirtualTours we want to count
     *   }
     * })
    **/
    count<T extends VirtualTourCountArgs>(
      args?: Subset<T, VirtualTourCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VirtualTourCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VirtualTour.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualTourAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VirtualTourAggregateArgs>(args: Subset<T, VirtualTourAggregateArgs>): Prisma.PrismaPromise<GetVirtualTourAggregateType<T>>

    /**
     * Group by VirtualTour.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VirtualTourGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VirtualTourGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VirtualTourGroupByArgs['orderBy'] }
        : { orderBy?: VirtualTourGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VirtualTourGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVirtualTourGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VirtualTour model
   */
  readonly fields: VirtualTourFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VirtualTour.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VirtualTourClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    property<T extends PropertyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PropertyDefaultArgs<ExtArgs>>): Prisma__PropertyClient<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VirtualTour model
   */
  interface VirtualTourFieldRefs {
    readonly id: FieldRef<"VirtualTour", 'String'>
    readonly url: FieldRef<"VirtualTour", 'String'>
    readonly platform: FieldRef<"VirtualTour", 'String'>
    readonly caption: FieldRef<"VirtualTour", 'String'>
    readonly order: FieldRef<"VirtualTour", 'Int'>
    readonly createdAt: FieldRef<"VirtualTour", 'DateTime'>
    readonly propertyId: FieldRef<"VirtualTour", 'String'>
  }
    

  // Custom InputTypes
  /**
   * VirtualTour findUnique
   */
  export type VirtualTourFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualTour
     */
    select?: VirtualTourSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualTour
     */
    omit?: VirtualTourOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualTourInclude<ExtArgs> | null
    /**
     * Filter, which VirtualTour to fetch.
     */
    where: VirtualTourWhereUniqueInput
  }

  /**
   * VirtualTour findUniqueOrThrow
   */
  export type VirtualTourFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualTour
     */
    select?: VirtualTourSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualTour
     */
    omit?: VirtualTourOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualTourInclude<ExtArgs> | null
    /**
     * Filter, which VirtualTour to fetch.
     */
    where: VirtualTourWhereUniqueInput
  }

  /**
   * VirtualTour findFirst
   */
  export type VirtualTourFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualTour
     */
    select?: VirtualTourSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualTour
     */
    omit?: VirtualTourOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualTourInclude<ExtArgs> | null
    /**
     * Filter, which VirtualTour to fetch.
     */
    where?: VirtualTourWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VirtualTours to fetch.
     */
    orderBy?: VirtualTourOrderByWithRelationInput | VirtualTourOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VirtualTours.
     */
    cursor?: VirtualTourWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VirtualTours from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VirtualTours.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VirtualTours.
     */
    distinct?: VirtualTourScalarFieldEnum | VirtualTourScalarFieldEnum[]
  }

  /**
   * VirtualTour findFirstOrThrow
   */
  export type VirtualTourFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualTour
     */
    select?: VirtualTourSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualTour
     */
    omit?: VirtualTourOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualTourInclude<ExtArgs> | null
    /**
     * Filter, which VirtualTour to fetch.
     */
    where?: VirtualTourWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VirtualTours to fetch.
     */
    orderBy?: VirtualTourOrderByWithRelationInput | VirtualTourOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VirtualTours.
     */
    cursor?: VirtualTourWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VirtualTours from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VirtualTours.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VirtualTours.
     */
    distinct?: VirtualTourScalarFieldEnum | VirtualTourScalarFieldEnum[]
  }

  /**
   * VirtualTour findMany
   */
  export type VirtualTourFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualTour
     */
    select?: VirtualTourSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualTour
     */
    omit?: VirtualTourOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualTourInclude<ExtArgs> | null
    /**
     * Filter, which VirtualTours to fetch.
     */
    where?: VirtualTourWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VirtualTours to fetch.
     */
    orderBy?: VirtualTourOrderByWithRelationInput | VirtualTourOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VirtualTours.
     */
    cursor?: VirtualTourWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VirtualTours from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VirtualTours.
     */
    skip?: number
    distinct?: VirtualTourScalarFieldEnum | VirtualTourScalarFieldEnum[]
  }

  /**
   * VirtualTour create
   */
  export type VirtualTourCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualTour
     */
    select?: VirtualTourSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualTour
     */
    omit?: VirtualTourOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualTourInclude<ExtArgs> | null
    /**
     * The data needed to create a VirtualTour.
     */
    data: XOR<VirtualTourCreateInput, VirtualTourUncheckedCreateInput>
  }

  /**
   * VirtualTour createMany
   */
  export type VirtualTourCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VirtualTours.
     */
    data: VirtualTourCreateManyInput | VirtualTourCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VirtualTour createManyAndReturn
   */
  export type VirtualTourCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualTour
     */
    select?: VirtualTourSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualTour
     */
    omit?: VirtualTourOmit<ExtArgs> | null
    /**
     * The data used to create many VirtualTours.
     */
    data: VirtualTourCreateManyInput | VirtualTourCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualTourIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * VirtualTour update
   */
  export type VirtualTourUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualTour
     */
    select?: VirtualTourSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualTour
     */
    omit?: VirtualTourOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualTourInclude<ExtArgs> | null
    /**
     * The data needed to update a VirtualTour.
     */
    data: XOR<VirtualTourUpdateInput, VirtualTourUncheckedUpdateInput>
    /**
     * Choose, which VirtualTour to update.
     */
    where: VirtualTourWhereUniqueInput
  }

  /**
   * VirtualTour updateMany
   */
  export type VirtualTourUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VirtualTours.
     */
    data: XOR<VirtualTourUpdateManyMutationInput, VirtualTourUncheckedUpdateManyInput>
    /**
     * Filter which VirtualTours to update
     */
    where?: VirtualTourWhereInput
    /**
     * Limit how many VirtualTours to update.
     */
    limit?: number
  }

  /**
   * VirtualTour updateManyAndReturn
   */
  export type VirtualTourUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualTour
     */
    select?: VirtualTourSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualTour
     */
    omit?: VirtualTourOmit<ExtArgs> | null
    /**
     * The data used to update VirtualTours.
     */
    data: XOR<VirtualTourUpdateManyMutationInput, VirtualTourUncheckedUpdateManyInput>
    /**
     * Filter which VirtualTours to update
     */
    where?: VirtualTourWhereInput
    /**
     * Limit how many VirtualTours to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualTourIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * VirtualTour upsert
   */
  export type VirtualTourUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualTour
     */
    select?: VirtualTourSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualTour
     */
    omit?: VirtualTourOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualTourInclude<ExtArgs> | null
    /**
     * The filter to search for the VirtualTour to update in case it exists.
     */
    where: VirtualTourWhereUniqueInput
    /**
     * In case the VirtualTour found by the `where` argument doesn't exist, create a new VirtualTour with this data.
     */
    create: XOR<VirtualTourCreateInput, VirtualTourUncheckedCreateInput>
    /**
     * In case the VirtualTour was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VirtualTourUpdateInput, VirtualTourUncheckedUpdateInput>
  }

  /**
   * VirtualTour delete
   */
  export type VirtualTourDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualTour
     */
    select?: VirtualTourSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualTour
     */
    omit?: VirtualTourOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualTourInclude<ExtArgs> | null
    /**
     * Filter which VirtualTour to delete.
     */
    where: VirtualTourWhereUniqueInput
  }

  /**
   * VirtualTour deleteMany
   */
  export type VirtualTourDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VirtualTours to delete
     */
    where?: VirtualTourWhereInput
    /**
     * Limit how many VirtualTours to delete.
     */
    limit?: number
  }

  /**
   * VirtualTour without action
   */
  export type VirtualTourDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VirtualTour
     */
    select?: VirtualTourSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VirtualTour
     */
    omit?: VirtualTourOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VirtualTourInclude<ExtArgs> | null
  }


  /**
   * Model PropertyView
   */

  export type AggregatePropertyView = {
    _count: PropertyViewCountAggregateOutputType | null
    _avg: PropertyViewAvgAggregateOutputType | null
    _sum: PropertyViewSumAggregateOutputType | null
    _min: PropertyViewMinAggregateOutputType | null
    _max: PropertyViewMaxAggregateOutputType | null
  }

  export type PropertyViewAvgAggregateOutputType = {
    viewDuration: number | null
  }

  export type PropertyViewSumAggregateOutputType = {
    viewDuration: number | null
  }

  export type PropertyViewMinAggregateOutputType = {
    id: string | null
    viewedAt: Date | null
    viewDuration: number | null
    ipAddress: string | null
    userAgent: string | null
    userId: string | null
    propertyId: string | null
  }

  export type PropertyViewMaxAggregateOutputType = {
    id: string | null
    viewedAt: Date | null
    viewDuration: number | null
    ipAddress: string | null
    userAgent: string | null
    userId: string | null
    propertyId: string | null
  }

  export type PropertyViewCountAggregateOutputType = {
    id: number
    viewedAt: number
    viewDuration: number
    ipAddress: number
    userAgent: number
    userId: number
    propertyId: number
    _all: number
  }


  export type PropertyViewAvgAggregateInputType = {
    viewDuration?: true
  }

  export type PropertyViewSumAggregateInputType = {
    viewDuration?: true
  }

  export type PropertyViewMinAggregateInputType = {
    id?: true
    viewedAt?: true
    viewDuration?: true
    ipAddress?: true
    userAgent?: true
    userId?: true
    propertyId?: true
  }

  export type PropertyViewMaxAggregateInputType = {
    id?: true
    viewedAt?: true
    viewDuration?: true
    ipAddress?: true
    userAgent?: true
    userId?: true
    propertyId?: true
  }

  export type PropertyViewCountAggregateInputType = {
    id?: true
    viewedAt?: true
    viewDuration?: true
    ipAddress?: true
    userAgent?: true
    userId?: true
    propertyId?: true
    _all?: true
  }

  export type PropertyViewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyView to aggregate.
     */
    where?: PropertyViewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyViews to fetch.
     */
    orderBy?: PropertyViewOrderByWithRelationInput | PropertyViewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PropertyViewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyViews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyViews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PropertyViews
    **/
    _count?: true | PropertyViewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PropertyViewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PropertyViewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PropertyViewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PropertyViewMaxAggregateInputType
  }

  export type GetPropertyViewAggregateType<T extends PropertyViewAggregateArgs> = {
        [P in keyof T & keyof AggregatePropertyView]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePropertyView[P]>
      : GetScalarType<T[P], AggregatePropertyView[P]>
  }




  export type PropertyViewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyViewWhereInput
    orderBy?: PropertyViewOrderByWithAggregationInput | PropertyViewOrderByWithAggregationInput[]
    by: PropertyViewScalarFieldEnum[] | PropertyViewScalarFieldEnum
    having?: PropertyViewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PropertyViewCountAggregateInputType | true
    _avg?: PropertyViewAvgAggregateInputType
    _sum?: PropertyViewSumAggregateInputType
    _min?: PropertyViewMinAggregateInputType
    _max?: PropertyViewMaxAggregateInputType
  }

  export type PropertyViewGroupByOutputType = {
    id: string
    viewedAt: Date
    viewDuration: number | null
    ipAddress: string | null
    userAgent: string | null
    userId: string
    propertyId: string
    _count: PropertyViewCountAggregateOutputType | null
    _avg: PropertyViewAvgAggregateOutputType | null
    _sum: PropertyViewSumAggregateOutputType | null
    _min: PropertyViewMinAggregateOutputType | null
    _max: PropertyViewMaxAggregateOutputType | null
  }

  type GetPropertyViewGroupByPayload<T extends PropertyViewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PropertyViewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PropertyViewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PropertyViewGroupByOutputType[P]>
            : GetScalarType<T[P], PropertyViewGroupByOutputType[P]>
        }
      >
    >


  export type PropertyViewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    viewedAt?: boolean
    viewDuration?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    userId?: boolean
    propertyId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyView"]>

  export type PropertyViewSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    viewedAt?: boolean
    viewDuration?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    userId?: boolean
    propertyId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyView"]>

  export type PropertyViewSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    viewedAt?: boolean
    viewDuration?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    userId?: boolean
    propertyId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyView"]>

  export type PropertyViewSelectScalar = {
    id?: boolean
    viewedAt?: boolean
    viewDuration?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    userId?: boolean
    propertyId?: boolean
  }

  export type PropertyViewOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "viewedAt" | "viewDuration" | "ipAddress" | "userAgent" | "userId" | "propertyId", ExtArgs["result"]["propertyView"]>
  export type PropertyViewInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }
  export type PropertyViewIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }
  export type PropertyViewIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }

  export type $PropertyViewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PropertyView"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      property: Prisma.$PropertyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      viewedAt: Date
      viewDuration: number | null
      ipAddress: string | null
      userAgent: string | null
      userId: string
      propertyId: string
    }, ExtArgs["result"]["propertyView"]>
    composites: {}
  }

  type PropertyViewGetPayload<S extends boolean | null | undefined | PropertyViewDefaultArgs> = $Result.GetResult<Prisma.$PropertyViewPayload, S>

  type PropertyViewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PropertyViewFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PropertyViewCountAggregateInputType | true
    }

  export interface PropertyViewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PropertyView'], meta: { name: 'PropertyView' } }
    /**
     * Find zero or one PropertyView that matches the filter.
     * @param {PropertyViewFindUniqueArgs} args - Arguments to find a PropertyView
     * @example
     * // Get one PropertyView
     * const propertyView = await prisma.propertyView.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PropertyViewFindUniqueArgs>(args: SelectSubset<T, PropertyViewFindUniqueArgs<ExtArgs>>): Prisma__PropertyViewClient<$Result.GetResult<Prisma.$PropertyViewPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PropertyView that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PropertyViewFindUniqueOrThrowArgs} args - Arguments to find a PropertyView
     * @example
     * // Get one PropertyView
     * const propertyView = await prisma.propertyView.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PropertyViewFindUniqueOrThrowArgs>(args: SelectSubset<T, PropertyViewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PropertyViewClient<$Result.GetResult<Prisma.$PropertyViewPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyView that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyViewFindFirstArgs} args - Arguments to find a PropertyView
     * @example
     * // Get one PropertyView
     * const propertyView = await prisma.propertyView.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PropertyViewFindFirstArgs>(args?: SelectSubset<T, PropertyViewFindFirstArgs<ExtArgs>>): Prisma__PropertyViewClient<$Result.GetResult<Prisma.$PropertyViewPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyView that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyViewFindFirstOrThrowArgs} args - Arguments to find a PropertyView
     * @example
     * // Get one PropertyView
     * const propertyView = await prisma.propertyView.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PropertyViewFindFirstOrThrowArgs>(args?: SelectSubset<T, PropertyViewFindFirstOrThrowArgs<ExtArgs>>): Prisma__PropertyViewClient<$Result.GetResult<Prisma.$PropertyViewPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PropertyViews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyViewFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PropertyViews
     * const propertyViews = await prisma.propertyView.findMany()
     * 
     * // Get first 10 PropertyViews
     * const propertyViews = await prisma.propertyView.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const propertyViewWithIdOnly = await prisma.propertyView.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PropertyViewFindManyArgs>(args?: SelectSubset<T, PropertyViewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyViewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PropertyView.
     * @param {PropertyViewCreateArgs} args - Arguments to create a PropertyView.
     * @example
     * // Create one PropertyView
     * const PropertyView = await prisma.propertyView.create({
     *   data: {
     *     // ... data to create a PropertyView
     *   }
     * })
     * 
     */
    create<T extends PropertyViewCreateArgs>(args: SelectSubset<T, PropertyViewCreateArgs<ExtArgs>>): Prisma__PropertyViewClient<$Result.GetResult<Prisma.$PropertyViewPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PropertyViews.
     * @param {PropertyViewCreateManyArgs} args - Arguments to create many PropertyViews.
     * @example
     * // Create many PropertyViews
     * const propertyView = await prisma.propertyView.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PropertyViewCreateManyArgs>(args?: SelectSubset<T, PropertyViewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PropertyViews and returns the data saved in the database.
     * @param {PropertyViewCreateManyAndReturnArgs} args - Arguments to create many PropertyViews.
     * @example
     * // Create many PropertyViews
     * const propertyView = await prisma.propertyView.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PropertyViews and only return the `id`
     * const propertyViewWithIdOnly = await prisma.propertyView.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PropertyViewCreateManyAndReturnArgs>(args?: SelectSubset<T, PropertyViewCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyViewPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PropertyView.
     * @param {PropertyViewDeleteArgs} args - Arguments to delete one PropertyView.
     * @example
     * // Delete one PropertyView
     * const PropertyView = await prisma.propertyView.delete({
     *   where: {
     *     // ... filter to delete one PropertyView
     *   }
     * })
     * 
     */
    delete<T extends PropertyViewDeleteArgs>(args: SelectSubset<T, PropertyViewDeleteArgs<ExtArgs>>): Prisma__PropertyViewClient<$Result.GetResult<Prisma.$PropertyViewPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PropertyView.
     * @param {PropertyViewUpdateArgs} args - Arguments to update one PropertyView.
     * @example
     * // Update one PropertyView
     * const propertyView = await prisma.propertyView.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PropertyViewUpdateArgs>(args: SelectSubset<T, PropertyViewUpdateArgs<ExtArgs>>): Prisma__PropertyViewClient<$Result.GetResult<Prisma.$PropertyViewPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PropertyViews.
     * @param {PropertyViewDeleteManyArgs} args - Arguments to filter PropertyViews to delete.
     * @example
     * // Delete a few PropertyViews
     * const { count } = await prisma.propertyView.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PropertyViewDeleteManyArgs>(args?: SelectSubset<T, PropertyViewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyViews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyViewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PropertyViews
     * const propertyView = await prisma.propertyView.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PropertyViewUpdateManyArgs>(args: SelectSubset<T, PropertyViewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyViews and returns the data updated in the database.
     * @param {PropertyViewUpdateManyAndReturnArgs} args - Arguments to update many PropertyViews.
     * @example
     * // Update many PropertyViews
     * const propertyView = await prisma.propertyView.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PropertyViews and only return the `id`
     * const propertyViewWithIdOnly = await prisma.propertyView.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PropertyViewUpdateManyAndReturnArgs>(args: SelectSubset<T, PropertyViewUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyViewPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PropertyView.
     * @param {PropertyViewUpsertArgs} args - Arguments to update or create a PropertyView.
     * @example
     * // Update or create a PropertyView
     * const propertyView = await prisma.propertyView.upsert({
     *   create: {
     *     // ... data to create a PropertyView
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PropertyView we want to update
     *   }
     * })
     */
    upsert<T extends PropertyViewUpsertArgs>(args: SelectSubset<T, PropertyViewUpsertArgs<ExtArgs>>): Prisma__PropertyViewClient<$Result.GetResult<Prisma.$PropertyViewPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PropertyViews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyViewCountArgs} args - Arguments to filter PropertyViews to count.
     * @example
     * // Count the number of PropertyViews
     * const count = await prisma.propertyView.count({
     *   where: {
     *     // ... the filter for the PropertyViews we want to count
     *   }
     * })
    **/
    count<T extends PropertyViewCountArgs>(
      args?: Subset<T, PropertyViewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PropertyViewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PropertyView.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyViewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PropertyViewAggregateArgs>(args: Subset<T, PropertyViewAggregateArgs>): Prisma.PrismaPromise<GetPropertyViewAggregateType<T>>

    /**
     * Group by PropertyView.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyViewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PropertyViewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PropertyViewGroupByArgs['orderBy'] }
        : { orderBy?: PropertyViewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PropertyViewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPropertyViewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PropertyView model
   */
  readonly fields: PropertyViewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PropertyView.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PropertyViewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    property<T extends PropertyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PropertyDefaultArgs<ExtArgs>>): Prisma__PropertyClient<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PropertyView model
   */
  interface PropertyViewFieldRefs {
    readonly id: FieldRef<"PropertyView", 'String'>
    readonly viewedAt: FieldRef<"PropertyView", 'DateTime'>
    readonly viewDuration: FieldRef<"PropertyView", 'Int'>
    readonly ipAddress: FieldRef<"PropertyView", 'String'>
    readonly userAgent: FieldRef<"PropertyView", 'String'>
    readonly userId: FieldRef<"PropertyView", 'String'>
    readonly propertyId: FieldRef<"PropertyView", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PropertyView findUnique
   */
  export type PropertyViewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyView
     */
    select?: PropertyViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyView
     */
    omit?: PropertyViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewInclude<ExtArgs> | null
    /**
     * Filter, which PropertyView to fetch.
     */
    where: PropertyViewWhereUniqueInput
  }

  /**
   * PropertyView findUniqueOrThrow
   */
  export type PropertyViewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyView
     */
    select?: PropertyViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyView
     */
    omit?: PropertyViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewInclude<ExtArgs> | null
    /**
     * Filter, which PropertyView to fetch.
     */
    where: PropertyViewWhereUniqueInput
  }

  /**
   * PropertyView findFirst
   */
  export type PropertyViewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyView
     */
    select?: PropertyViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyView
     */
    omit?: PropertyViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewInclude<ExtArgs> | null
    /**
     * Filter, which PropertyView to fetch.
     */
    where?: PropertyViewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyViews to fetch.
     */
    orderBy?: PropertyViewOrderByWithRelationInput | PropertyViewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyViews.
     */
    cursor?: PropertyViewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyViews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyViews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyViews.
     */
    distinct?: PropertyViewScalarFieldEnum | PropertyViewScalarFieldEnum[]
  }

  /**
   * PropertyView findFirstOrThrow
   */
  export type PropertyViewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyView
     */
    select?: PropertyViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyView
     */
    omit?: PropertyViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewInclude<ExtArgs> | null
    /**
     * Filter, which PropertyView to fetch.
     */
    where?: PropertyViewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyViews to fetch.
     */
    orderBy?: PropertyViewOrderByWithRelationInput | PropertyViewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyViews.
     */
    cursor?: PropertyViewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyViews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyViews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyViews.
     */
    distinct?: PropertyViewScalarFieldEnum | PropertyViewScalarFieldEnum[]
  }

  /**
   * PropertyView findMany
   */
  export type PropertyViewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyView
     */
    select?: PropertyViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyView
     */
    omit?: PropertyViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewInclude<ExtArgs> | null
    /**
     * Filter, which PropertyViews to fetch.
     */
    where?: PropertyViewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyViews to fetch.
     */
    orderBy?: PropertyViewOrderByWithRelationInput | PropertyViewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PropertyViews.
     */
    cursor?: PropertyViewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyViews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyViews.
     */
    skip?: number
    distinct?: PropertyViewScalarFieldEnum | PropertyViewScalarFieldEnum[]
  }

  /**
   * PropertyView create
   */
  export type PropertyViewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyView
     */
    select?: PropertyViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyView
     */
    omit?: PropertyViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewInclude<ExtArgs> | null
    /**
     * The data needed to create a PropertyView.
     */
    data: XOR<PropertyViewCreateInput, PropertyViewUncheckedCreateInput>
  }

  /**
   * PropertyView createMany
   */
  export type PropertyViewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PropertyViews.
     */
    data: PropertyViewCreateManyInput | PropertyViewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PropertyView createManyAndReturn
   */
  export type PropertyViewCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyView
     */
    select?: PropertyViewSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyView
     */
    omit?: PropertyViewOmit<ExtArgs> | null
    /**
     * The data used to create many PropertyViews.
     */
    data: PropertyViewCreateManyInput | PropertyViewCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PropertyView update
   */
  export type PropertyViewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyView
     */
    select?: PropertyViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyView
     */
    omit?: PropertyViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewInclude<ExtArgs> | null
    /**
     * The data needed to update a PropertyView.
     */
    data: XOR<PropertyViewUpdateInput, PropertyViewUncheckedUpdateInput>
    /**
     * Choose, which PropertyView to update.
     */
    where: PropertyViewWhereUniqueInput
  }

  /**
   * PropertyView updateMany
   */
  export type PropertyViewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PropertyViews.
     */
    data: XOR<PropertyViewUpdateManyMutationInput, PropertyViewUncheckedUpdateManyInput>
    /**
     * Filter which PropertyViews to update
     */
    where?: PropertyViewWhereInput
    /**
     * Limit how many PropertyViews to update.
     */
    limit?: number
  }

  /**
   * PropertyView updateManyAndReturn
   */
  export type PropertyViewUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyView
     */
    select?: PropertyViewSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyView
     */
    omit?: PropertyViewOmit<ExtArgs> | null
    /**
     * The data used to update PropertyViews.
     */
    data: XOR<PropertyViewUpdateManyMutationInput, PropertyViewUncheckedUpdateManyInput>
    /**
     * Filter which PropertyViews to update
     */
    where?: PropertyViewWhereInput
    /**
     * Limit how many PropertyViews to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PropertyView upsert
   */
  export type PropertyViewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyView
     */
    select?: PropertyViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyView
     */
    omit?: PropertyViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewInclude<ExtArgs> | null
    /**
     * The filter to search for the PropertyView to update in case it exists.
     */
    where: PropertyViewWhereUniqueInput
    /**
     * In case the PropertyView found by the `where` argument doesn't exist, create a new PropertyView with this data.
     */
    create: XOR<PropertyViewCreateInput, PropertyViewUncheckedCreateInput>
    /**
     * In case the PropertyView was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PropertyViewUpdateInput, PropertyViewUncheckedUpdateInput>
  }

  /**
   * PropertyView delete
   */
  export type PropertyViewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyView
     */
    select?: PropertyViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyView
     */
    omit?: PropertyViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewInclude<ExtArgs> | null
    /**
     * Filter which PropertyView to delete.
     */
    where: PropertyViewWhereUniqueInput
  }

  /**
   * PropertyView deleteMany
   */
  export type PropertyViewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyViews to delete
     */
    where?: PropertyViewWhereInput
    /**
     * Limit how many PropertyViews to delete.
     */
    limit?: number
  }

  /**
   * PropertyView without action
   */
  export type PropertyViewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyView
     */
    select?: PropertyViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyView
     */
    omit?: PropertyViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewInclude<ExtArgs> | null
  }


  /**
   * Model Favorite
   */

  export type AggregateFavorite = {
    _count: FavoriteCountAggregateOutputType | null
    _avg: FavoriteAvgAggregateOutputType | null
    _sum: FavoriteSumAggregateOutputType | null
    _min: FavoriteMinAggregateOutputType | null
    _max: FavoriteMaxAggregateOutputType | null
  }

  export type FavoriteAvgAggregateOutputType = {
    priority: number | null
  }

  export type FavoriteSumAggregateOutputType = {
    priority: number | null
  }

  export type FavoriteMinAggregateOutputType = {
    id: string | null
    notes: string | null
    priority: number | null
    createdAt: Date | null
    userId: string | null
    propertyId: string | null
    listId: string | null
    favoriteListId: string | null
  }

  export type FavoriteMaxAggregateOutputType = {
    id: string | null
    notes: string | null
    priority: number | null
    createdAt: Date | null
    userId: string | null
    propertyId: string | null
    listId: string | null
    favoriteListId: string | null
  }

  export type FavoriteCountAggregateOutputType = {
    id: number
    notes: number
    priority: number
    createdAt: number
    userId: number
    propertyId: number
    listId: number
    favoriteListId: number
    _all: number
  }


  export type FavoriteAvgAggregateInputType = {
    priority?: true
  }

  export type FavoriteSumAggregateInputType = {
    priority?: true
  }

  export type FavoriteMinAggregateInputType = {
    id?: true
    notes?: true
    priority?: true
    createdAt?: true
    userId?: true
    propertyId?: true
    listId?: true
    favoriteListId?: true
  }

  export type FavoriteMaxAggregateInputType = {
    id?: true
    notes?: true
    priority?: true
    createdAt?: true
    userId?: true
    propertyId?: true
    listId?: true
    favoriteListId?: true
  }

  export type FavoriteCountAggregateInputType = {
    id?: true
    notes?: true
    priority?: true
    createdAt?: true
    userId?: true
    propertyId?: true
    listId?: true
    favoriteListId?: true
    _all?: true
  }

  export type FavoriteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Favorite to aggregate.
     */
    where?: FavoriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favorites to fetch.
     */
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FavoriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favorites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Favorites
    **/
    _count?: true | FavoriteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FavoriteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FavoriteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FavoriteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FavoriteMaxAggregateInputType
  }

  export type GetFavoriteAggregateType<T extends FavoriteAggregateArgs> = {
        [P in keyof T & keyof AggregateFavorite]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFavorite[P]>
      : GetScalarType<T[P], AggregateFavorite[P]>
  }




  export type FavoriteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteWhereInput
    orderBy?: FavoriteOrderByWithAggregationInput | FavoriteOrderByWithAggregationInput[]
    by: FavoriteScalarFieldEnum[] | FavoriteScalarFieldEnum
    having?: FavoriteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FavoriteCountAggregateInputType | true
    _avg?: FavoriteAvgAggregateInputType
    _sum?: FavoriteSumAggregateInputType
    _min?: FavoriteMinAggregateInputType
    _max?: FavoriteMaxAggregateInputType
  }

  export type FavoriteGroupByOutputType = {
    id: string
    notes: string | null
    priority: number | null
    createdAt: Date
    userId: string
    propertyId: string
    listId: string | null
    favoriteListId: string | null
    _count: FavoriteCountAggregateOutputType | null
    _avg: FavoriteAvgAggregateOutputType | null
    _sum: FavoriteSumAggregateOutputType | null
    _min: FavoriteMinAggregateOutputType | null
    _max: FavoriteMaxAggregateOutputType | null
  }

  type GetFavoriteGroupByPayload<T extends FavoriteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FavoriteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FavoriteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FavoriteGroupByOutputType[P]>
            : GetScalarType<T[P], FavoriteGroupByOutputType[P]>
        }
      >
    >


  export type FavoriteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    notes?: boolean
    priority?: boolean
    createdAt?: boolean
    userId?: boolean
    propertyId?: boolean
    listId?: boolean
    favoriteListId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
    list?: boolean | Favorite$listArgs<ExtArgs>
  }, ExtArgs["result"]["favorite"]>

  export type FavoriteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    notes?: boolean
    priority?: boolean
    createdAt?: boolean
    userId?: boolean
    propertyId?: boolean
    listId?: boolean
    favoriteListId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
    list?: boolean | Favorite$listArgs<ExtArgs>
  }, ExtArgs["result"]["favorite"]>

  export type FavoriteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    notes?: boolean
    priority?: boolean
    createdAt?: boolean
    userId?: boolean
    propertyId?: boolean
    listId?: boolean
    favoriteListId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
    list?: boolean | Favorite$listArgs<ExtArgs>
  }, ExtArgs["result"]["favorite"]>

  export type FavoriteSelectScalar = {
    id?: boolean
    notes?: boolean
    priority?: boolean
    createdAt?: boolean
    userId?: boolean
    propertyId?: boolean
    listId?: boolean
    favoriteListId?: boolean
  }

  export type FavoriteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "notes" | "priority" | "createdAt" | "userId" | "propertyId" | "listId" | "favoriteListId", ExtArgs["result"]["favorite"]>
  export type FavoriteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
    list?: boolean | Favorite$listArgs<ExtArgs>
  }
  export type FavoriteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
    list?: boolean | Favorite$listArgs<ExtArgs>
  }
  export type FavoriteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
    list?: boolean | Favorite$listArgs<ExtArgs>
  }

  export type $FavoritePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Favorite"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      property: Prisma.$PropertyPayload<ExtArgs>
      list: Prisma.$FavoriteListPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      notes: string | null
      priority: number | null
      createdAt: Date
      userId: string
      propertyId: string
      listId: string | null
      favoriteListId: string | null
    }, ExtArgs["result"]["favorite"]>
    composites: {}
  }

  type FavoriteGetPayload<S extends boolean | null | undefined | FavoriteDefaultArgs> = $Result.GetResult<Prisma.$FavoritePayload, S>

  type FavoriteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FavoriteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FavoriteCountAggregateInputType | true
    }

  export interface FavoriteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Favorite'], meta: { name: 'Favorite' } }
    /**
     * Find zero or one Favorite that matches the filter.
     * @param {FavoriteFindUniqueArgs} args - Arguments to find a Favorite
     * @example
     * // Get one Favorite
     * const favorite = await prisma.favorite.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FavoriteFindUniqueArgs>(args: SelectSubset<T, FavoriteFindUniqueArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Favorite that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FavoriteFindUniqueOrThrowArgs} args - Arguments to find a Favorite
     * @example
     * // Get one Favorite
     * const favorite = await prisma.favorite.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FavoriteFindUniqueOrThrowArgs>(args: SelectSubset<T, FavoriteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Favorite that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteFindFirstArgs} args - Arguments to find a Favorite
     * @example
     * // Get one Favorite
     * const favorite = await prisma.favorite.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FavoriteFindFirstArgs>(args?: SelectSubset<T, FavoriteFindFirstArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Favorite that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteFindFirstOrThrowArgs} args - Arguments to find a Favorite
     * @example
     * // Get one Favorite
     * const favorite = await prisma.favorite.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FavoriteFindFirstOrThrowArgs>(args?: SelectSubset<T, FavoriteFindFirstOrThrowArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Favorites that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Favorites
     * const favorites = await prisma.favorite.findMany()
     * 
     * // Get first 10 Favorites
     * const favorites = await prisma.favorite.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const favoriteWithIdOnly = await prisma.favorite.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FavoriteFindManyArgs>(args?: SelectSubset<T, FavoriteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Favorite.
     * @param {FavoriteCreateArgs} args - Arguments to create a Favorite.
     * @example
     * // Create one Favorite
     * const Favorite = await prisma.favorite.create({
     *   data: {
     *     // ... data to create a Favorite
     *   }
     * })
     * 
     */
    create<T extends FavoriteCreateArgs>(args: SelectSubset<T, FavoriteCreateArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Favorites.
     * @param {FavoriteCreateManyArgs} args - Arguments to create many Favorites.
     * @example
     * // Create many Favorites
     * const favorite = await prisma.favorite.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FavoriteCreateManyArgs>(args?: SelectSubset<T, FavoriteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Favorites and returns the data saved in the database.
     * @param {FavoriteCreateManyAndReturnArgs} args - Arguments to create many Favorites.
     * @example
     * // Create many Favorites
     * const favorite = await prisma.favorite.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Favorites and only return the `id`
     * const favoriteWithIdOnly = await prisma.favorite.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FavoriteCreateManyAndReturnArgs>(args?: SelectSubset<T, FavoriteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Favorite.
     * @param {FavoriteDeleteArgs} args - Arguments to delete one Favorite.
     * @example
     * // Delete one Favorite
     * const Favorite = await prisma.favorite.delete({
     *   where: {
     *     // ... filter to delete one Favorite
     *   }
     * })
     * 
     */
    delete<T extends FavoriteDeleteArgs>(args: SelectSubset<T, FavoriteDeleteArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Favorite.
     * @param {FavoriteUpdateArgs} args - Arguments to update one Favorite.
     * @example
     * // Update one Favorite
     * const favorite = await prisma.favorite.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FavoriteUpdateArgs>(args: SelectSubset<T, FavoriteUpdateArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Favorites.
     * @param {FavoriteDeleteManyArgs} args - Arguments to filter Favorites to delete.
     * @example
     * // Delete a few Favorites
     * const { count } = await prisma.favorite.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FavoriteDeleteManyArgs>(args?: SelectSubset<T, FavoriteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Favorites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Favorites
     * const favorite = await prisma.favorite.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FavoriteUpdateManyArgs>(args: SelectSubset<T, FavoriteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Favorites and returns the data updated in the database.
     * @param {FavoriteUpdateManyAndReturnArgs} args - Arguments to update many Favorites.
     * @example
     * // Update many Favorites
     * const favorite = await prisma.favorite.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Favorites and only return the `id`
     * const favoriteWithIdOnly = await prisma.favorite.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FavoriteUpdateManyAndReturnArgs>(args: SelectSubset<T, FavoriteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Favorite.
     * @param {FavoriteUpsertArgs} args - Arguments to update or create a Favorite.
     * @example
     * // Update or create a Favorite
     * const favorite = await prisma.favorite.upsert({
     *   create: {
     *     // ... data to create a Favorite
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Favorite we want to update
     *   }
     * })
     */
    upsert<T extends FavoriteUpsertArgs>(args: SelectSubset<T, FavoriteUpsertArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Favorites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteCountArgs} args - Arguments to filter Favorites to count.
     * @example
     * // Count the number of Favorites
     * const count = await prisma.favorite.count({
     *   where: {
     *     // ... the filter for the Favorites we want to count
     *   }
     * })
    **/
    count<T extends FavoriteCountArgs>(
      args?: Subset<T, FavoriteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FavoriteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Favorite.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FavoriteAggregateArgs>(args: Subset<T, FavoriteAggregateArgs>): Prisma.PrismaPromise<GetFavoriteAggregateType<T>>

    /**
     * Group by Favorite.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FavoriteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FavoriteGroupByArgs['orderBy'] }
        : { orderBy?: FavoriteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FavoriteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFavoriteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Favorite model
   */
  readonly fields: FavoriteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Favorite.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FavoriteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    property<T extends PropertyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PropertyDefaultArgs<ExtArgs>>): Prisma__PropertyClient<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    list<T extends Favorite$listArgs<ExtArgs> = {}>(args?: Subset<T, Favorite$listArgs<ExtArgs>>): Prisma__FavoriteListClient<$Result.GetResult<Prisma.$FavoriteListPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Favorite model
   */
  interface FavoriteFieldRefs {
    readonly id: FieldRef<"Favorite", 'String'>
    readonly notes: FieldRef<"Favorite", 'String'>
    readonly priority: FieldRef<"Favorite", 'Int'>
    readonly createdAt: FieldRef<"Favorite", 'DateTime'>
    readonly userId: FieldRef<"Favorite", 'String'>
    readonly propertyId: FieldRef<"Favorite", 'String'>
    readonly listId: FieldRef<"Favorite", 'String'>
    readonly favoriteListId: FieldRef<"Favorite", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Favorite findUnique
   */
  export type FavoriteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter, which Favorite to fetch.
     */
    where: FavoriteWhereUniqueInput
  }

  /**
   * Favorite findUniqueOrThrow
   */
  export type FavoriteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter, which Favorite to fetch.
     */
    where: FavoriteWhereUniqueInput
  }

  /**
   * Favorite findFirst
   */
  export type FavoriteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter, which Favorite to fetch.
     */
    where?: FavoriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favorites to fetch.
     */
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Favorites.
     */
    cursor?: FavoriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favorites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Favorites.
     */
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * Favorite findFirstOrThrow
   */
  export type FavoriteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter, which Favorite to fetch.
     */
    where?: FavoriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favorites to fetch.
     */
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Favorites.
     */
    cursor?: FavoriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favorites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Favorites.
     */
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * Favorite findMany
   */
  export type FavoriteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter, which Favorites to fetch.
     */
    where?: FavoriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favorites to fetch.
     */
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Favorites.
     */
    cursor?: FavoriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favorites.
     */
    skip?: number
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * Favorite create
   */
  export type FavoriteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * The data needed to create a Favorite.
     */
    data: XOR<FavoriteCreateInput, FavoriteUncheckedCreateInput>
  }

  /**
   * Favorite createMany
   */
  export type FavoriteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Favorites.
     */
    data: FavoriteCreateManyInput | FavoriteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Favorite createManyAndReturn
   */
  export type FavoriteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * The data used to create many Favorites.
     */
    data: FavoriteCreateManyInput | FavoriteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Favorite update
   */
  export type FavoriteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * The data needed to update a Favorite.
     */
    data: XOR<FavoriteUpdateInput, FavoriteUncheckedUpdateInput>
    /**
     * Choose, which Favorite to update.
     */
    where: FavoriteWhereUniqueInput
  }

  /**
   * Favorite updateMany
   */
  export type FavoriteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Favorites.
     */
    data: XOR<FavoriteUpdateManyMutationInput, FavoriteUncheckedUpdateManyInput>
    /**
     * Filter which Favorites to update
     */
    where?: FavoriteWhereInput
    /**
     * Limit how many Favorites to update.
     */
    limit?: number
  }

  /**
   * Favorite updateManyAndReturn
   */
  export type FavoriteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * The data used to update Favorites.
     */
    data: XOR<FavoriteUpdateManyMutationInput, FavoriteUncheckedUpdateManyInput>
    /**
     * Filter which Favorites to update
     */
    where?: FavoriteWhereInput
    /**
     * Limit how many Favorites to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Favorite upsert
   */
  export type FavoriteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * The filter to search for the Favorite to update in case it exists.
     */
    where: FavoriteWhereUniqueInput
    /**
     * In case the Favorite found by the `where` argument doesn't exist, create a new Favorite with this data.
     */
    create: XOR<FavoriteCreateInput, FavoriteUncheckedCreateInput>
    /**
     * In case the Favorite was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FavoriteUpdateInput, FavoriteUncheckedUpdateInput>
  }

  /**
   * Favorite delete
   */
  export type FavoriteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter which Favorite to delete.
     */
    where: FavoriteWhereUniqueInput
  }

  /**
   * Favorite deleteMany
   */
  export type FavoriteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Favorites to delete
     */
    where?: FavoriteWhereInput
    /**
     * Limit how many Favorites to delete.
     */
    limit?: number
  }

  /**
   * Favorite.list
   */
  export type Favorite$listArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteList
     */
    select?: FavoriteListSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteList
     */
    omit?: FavoriteListOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteListInclude<ExtArgs> | null
    where?: FavoriteListWhereInput
  }

  /**
   * Favorite without action
   */
  export type FavoriteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
  }


  /**
   * Model FavoriteList
   */

  export type AggregateFavoriteList = {
    _count: FavoriteListCountAggregateOutputType | null
    _min: FavoriteListMinAggregateOutputType | null
    _max: FavoriteListMaxAggregateOutputType | null
  }

  export type FavoriteListMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    isPublic: boolean | null
    isDefault: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: string | null
  }

  export type FavoriteListMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    isPublic: boolean | null
    isDefault: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: string | null
  }

  export type FavoriteListCountAggregateOutputType = {
    id: number
    name: number
    description: number
    isPublic: number
    isDefault: number
    createdAt: number
    updatedAt: number
    userId: number
    _all: number
  }


  export type FavoriteListMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    isPublic?: true
    isDefault?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
  }

  export type FavoriteListMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    isPublic?: true
    isDefault?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
  }

  export type FavoriteListCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    isPublic?: true
    isDefault?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    _all?: true
  }

  export type FavoriteListAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FavoriteList to aggregate.
     */
    where?: FavoriteListWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FavoriteLists to fetch.
     */
    orderBy?: FavoriteListOrderByWithRelationInput | FavoriteListOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FavoriteListWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FavoriteLists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FavoriteLists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FavoriteLists
    **/
    _count?: true | FavoriteListCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FavoriteListMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FavoriteListMaxAggregateInputType
  }

  export type GetFavoriteListAggregateType<T extends FavoriteListAggregateArgs> = {
        [P in keyof T & keyof AggregateFavoriteList]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFavoriteList[P]>
      : GetScalarType<T[P], AggregateFavoriteList[P]>
  }




  export type FavoriteListGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteListWhereInput
    orderBy?: FavoriteListOrderByWithAggregationInput | FavoriteListOrderByWithAggregationInput[]
    by: FavoriteListScalarFieldEnum[] | FavoriteListScalarFieldEnum
    having?: FavoriteListScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FavoriteListCountAggregateInputType | true
    _min?: FavoriteListMinAggregateInputType
    _max?: FavoriteListMaxAggregateInputType
  }

  export type FavoriteListGroupByOutputType = {
    id: string
    name: string
    description: string | null
    isPublic: boolean
    isDefault: boolean
    createdAt: Date
    updatedAt: Date
    userId: string
    _count: FavoriteListCountAggregateOutputType | null
    _min: FavoriteListMinAggregateOutputType | null
    _max: FavoriteListMaxAggregateOutputType | null
  }

  type GetFavoriteListGroupByPayload<T extends FavoriteListGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FavoriteListGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FavoriteListGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FavoriteListGroupByOutputType[P]>
            : GetScalarType<T[P], FavoriteListGroupByOutputType[P]>
        }
      >
    >


  export type FavoriteListSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    isPublic?: boolean
    isDefault?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    favorites?: boolean | FavoriteList$favoritesArgs<ExtArgs>
    _count?: boolean | FavoriteListCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favoriteList"]>

  export type FavoriteListSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    isPublic?: boolean
    isDefault?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favoriteList"]>

  export type FavoriteListSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    isPublic?: boolean
    isDefault?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favoriteList"]>

  export type FavoriteListSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    isPublic?: boolean
    isDefault?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
  }

  export type FavoriteListOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "isPublic" | "isDefault" | "createdAt" | "updatedAt" | "userId", ExtArgs["result"]["favoriteList"]>
  export type FavoriteListInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    favorites?: boolean | FavoriteList$favoritesArgs<ExtArgs>
    _count?: boolean | FavoriteListCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type FavoriteListIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type FavoriteListIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $FavoriteListPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FavoriteList"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      favorites: Prisma.$FavoritePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      isPublic: boolean
      isDefault: boolean
      createdAt: Date
      updatedAt: Date
      userId: string
    }, ExtArgs["result"]["favoriteList"]>
    composites: {}
  }

  type FavoriteListGetPayload<S extends boolean | null | undefined | FavoriteListDefaultArgs> = $Result.GetResult<Prisma.$FavoriteListPayload, S>

  type FavoriteListCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FavoriteListFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FavoriteListCountAggregateInputType | true
    }

  export interface FavoriteListDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FavoriteList'], meta: { name: 'FavoriteList' } }
    /**
     * Find zero or one FavoriteList that matches the filter.
     * @param {FavoriteListFindUniqueArgs} args - Arguments to find a FavoriteList
     * @example
     * // Get one FavoriteList
     * const favoriteList = await prisma.favoriteList.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FavoriteListFindUniqueArgs>(args: SelectSubset<T, FavoriteListFindUniqueArgs<ExtArgs>>): Prisma__FavoriteListClient<$Result.GetResult<Prisma.$FavoriteListPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FavoriteList that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FavoriteListFindUniqueOrThrowArgs} args - Arguments to find a FavoriteList
     * @example
     * // Get one FavoriteList
     * const favoriteList = await prisma.favoriteList.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FavoriteListFindUniqueOrThrowArgs>(args: SelectSubset<T, FavoriteListFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FavoriteListClient<$Result.GetResult<Prisma.$FavoriteListPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FavoriteList that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteListFindFirstArgs} args - Arguments to find a FavoriteList
     * @example
     * // Get one FavoriteList
     * const favoriteList = await prisma.favoriteList.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FavoriteListFindFirstArgs>(args?: SelectSubset<T, FavoriteListFindFirstArgs<ExtArgs>>): Prisma__FavoriteListClient<$Result.GetResult<Prisma.$FavoriteListPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FavoriteList that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteListFindFirstOrThrowArgs} args - Arguments to find a FavoriteList
     * @example
     * // Get one FavoriteList
     * const favoriteList = await prisma.favoriteList.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FavoriteListFindFirstOrThrowArgs>(args?: SelectSubset<T, FavoriteListFindFirstOrThrowArgs<ExtArgs>>): Prisma__FavoriteListClient<$Result.GetResult<Prisma.$FavoriteListPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FavoriteLists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteListFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FavoriteLists
     * const favoriteLists = await prisma.favoriteList.findMany()
     * 
     * // Get first 10 FavoriteLists
     * const favoriteLists = await prisma.favoriteList.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const favoriteListWithIdOnly = await prisma.favoriteList.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FavoriteListFindManyArgs>(args?: SelectSubset<T, FavoriteListFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoriteListPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FavoriteList.
     * @param {FavoriteListCreateArgs} args - Arguments to create a FavoriteList.
     * @example
     * // Create one FavoriteList
     * const FavoriteList = await prisma.favoriteList.create({
     *   data: {
     *     // ... data to create a FavoriteList
     *   }
     * })
     * 
     */
    create<T extends FavoriteListCreateArgs>(args: SelectSubset<T, FavoriteListCreateArgs<ExtArgs>>): Prisma__FavoriteListClient<$Result.GetResult<Prisma.$FavoriteListPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FavoriteLists.
     * @param {FavoriteListCreateManyArgs} args - Arguments to create many FavoriteLists.
     * @example
     * // Create many FavoriteLists
     * const favoriteList = await prisma.favoriteList.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FavoriteListCreateManyArgs>(args?: SelectSubset<T, FavoriteListCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FavoriteLists and returns the data saved in the database.
     * @param {FavoriteListCreateManyAndReturnArgs} args - Arguments to create many FavoriteLists.
     * @example
     * // Create many FavoriteLists
     * const favoriteList = await prisma.favoriteList.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FavoriteLists and only return the `id`
     * const favoriteListWithIdOnly = await prisma.favoriteList.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FavoriteListCreateManyAndReturnArgs>(args?: SelectSubset<T, FavoriteListCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoriteListPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a FavoriteList.
     * @param {FavoriteListDeleteArgs} args - Arguments to delete one FavoriteList.
     * @example
     * // Delete one FavoriteList
     * const FavoriteList = await prisma.favoriteList.delete({
     *   where: {
     *     // ... filter to delete one FavoriteList
     *   }
     * })
     * 
     */
    delete<T extends FavoriteListDeleteArgs>(args: SelectSubset<T, FavoriteListDeleteArgs<ExtArgs>>): Prisma__FavoriteListClient<$Result.GetResult<Prisma.$FavoriteListPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FavoriteList.
     * @param {FavoriteListUpdateArgs} args - Arguments to update one FavoriteList.
     * @example
     * // Update one FavoriteList
     * const favoriteList = await prisma.favoriteList.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FavoriteListUpdateArgs>(args: SelectSubset<T, FavoriteListUpdateArgs<ExtArgs>>): Prisma__FavoriteListClient<$Result.GetResult<Prisma.$FavoriteListPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FavoriteLists.
     * @param {FavoriteListDeleteManyArgs} args - Arguments to filter FavoriteLists to delete.
     * @example
     * // Delete a few FavoriteLists
     * const { count } = await prisma.favoriteList.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FavoriteListDeleteManyArgs>(args?: SelectSubset<T, FavoriteListDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FavoriteLists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteListUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FavoriteLists
     * const favoriteList = await prisma.favoriteList.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FavoriteListUpdateManyArgs>(args: SelectSubset<T, FavoriteListUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FavoriteLists and returns the data updated in the database.
     * @param {FavoriteListUpdateManyAndReturnArgs} args - Arguments to update many FavoriteLists.
     * @example
     * // Update many FavoriteLists
     * const favoriteList = await prisma.favoriteList.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FavoriteLists and only return the `id`
     * const favoriteListWithIdOnly = await prisma.favoriteList.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FavoriteListUpdateManyAndReturnArgs>(args: SelectSubset<T, FavoriteListUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoriteListPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one FavoriteList.
     * @param {FavoriteListUpsertArgs} args - Arguments to update or create a FavoriteList.
     * @example
     * // Update or create a FavoriteList
     * const favoriteList = await prisma.favoriteList.upsert({
     *   create: {
     *     // ... data to create a FavoriteList
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FavoriteList we want to update
     *   }
     * })
     */
    upsert<T extends FavoriteListUpsertArgs>(args: SelectSubset<T, FavoriteListUpsertArgs<ExtArgs>>): Prisma__FavoriteListClient<$Result.GetResult<Prisma.$FavoriteListPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FavoriteLists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteListCountArgs} args - Arguments to filter FavoriteLists to count.
     * @example
     * // Count the number of FavoriteLists
     * const count = await prisma.favoriteList.count({
     *   where: {
     *     // ... the filter for the FavoriteLists we want to count
     *   }
     * })
    **/
    count<T extends FavoriteListCountArgs>(
      args?: Subset<T, FavoriteListCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FavoriteListCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FavoriteList.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteListAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FavoriteListAggregateArgs>(args: Subset<T, FavoriteListAggregateArgs>): Prisma.PrismaPromise<GetFavoriteListAggregateType<T>>

    /**
     * Group by FavoriteList.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteListGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FavoriteListGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FavoriteListGroupByArgs['orderBy'] }
        : { orderBy?: FavoriteListGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FavoriteListGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFavoriteListGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FavoriteList model
   */
  readonly fields: FavoriteListFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FavoriteList.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FavoriteListClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    favorites<T extends FavoriteList$favoritesArgs<ExtArgs> = {}>(args?: Subset<T, FavoriteList$favoritesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FavoriteList model
   */
  interface FavoriteListFieldRefs {
    readonly id: FieldRef<"FavoriteList", 'String'>
    readonly name: FieldRef<"FavoriteList", 'String'>
    readonly description: FieldRef<"FavoriteList", 'String'>
    readonly isPublic: FieldRef<"FavoriteList", 'Boolean'>
    readonly isDefault: FieldRef<"FavoriteList", 'Boolean'>
    readonly createdAt: FieldRef<"FavoriteList", 'DateTime'>
    readonly updatedAt: FieldRef<"FavoriteList", 'DateTime'>
    readonly userId: FieldRef<"FavoriteList", 'String'>
  }
    

  // Custom InputTypes
  /**
   * FavoriteList findUnique
   */
  export type FavoriteListFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteList
     */
    select?: FavoriteListSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteList
     */
    omit?: FavoriteListOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteListInclude<ExtArgs> | null
    /**
     * Filter, which FavoriteList to fetch.
     */
    where: FavoriteListWhereUniqueInput
  }

  /**
   * FavoriteList findUniqueOrThrow
   */
  export type FavoriteListFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteList
     */
    select?: FavoriteListSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteList
     */
    omit?: FavoriteListOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteListInclude<ExtArgs> | null
    /**
     * Filter, which FavoriteList to fetch.
     */
    where: FavoriteListWhereUniqueInput
  }

  /**
   * FavoriteList findFirst
   */
  export type FavoriteListFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteList
     */
    select?: FavoriteListSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteList
     */
    omit?: FavoriteListOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteListInclude<ExtArgs> | null
    /**
     * Filter, which FavoriteList to fetch.
     */
    where?: FavoriteListWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FavoriteLists to fetch.
     */
    orderBy?: FavoriteListOrderByWithRelationInput | FavoriteListOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FavoriteLists.
     */
    cursor?: FavoriteListWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FavoriteLists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FavoriteLists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FavoriteLists.
     */
    distinct?: FavoriteListScalarFieldEnum | FavoriteListScalarFieldEnum[]
  }

  /**
   * FavoriteList findFirstOrThrow
   */
  export type FavoriteListFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteList
     */
    select?: FavoriteListSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteList
     */
    omit?: FavoriteListOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteListInclude<ExtArgs> | null
    /**
     * Filter, which FavoriteList to fetch.
     */
    where?: FavoriteListWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FavoriteLists to fetch.
     */
    orderBy?: FavoriteListOrderByWithRelationInput | FavoriteListOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FavoriteLists.
     */
    cursor?: FavoriteListWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FavoriteLists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FavoriteLists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FavoriteLists.
     */
    distinct?: FavoriteListScalarFieldEnum | FavoriteListScalarFieldEnum[]
  }

  /**
   * FavoriteList findMany
   */
  export type FavoriteListFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteList
     */
    select?: FavoriteListSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteList
     */
    omit?: FavoriteListOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteListInclude<ExtArgs> | null
    /**
     * Filter, which FavoriteLists to fetch.
     */
    where?: FavoriteListWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FavoriteLists to fetch.
     */
    orderBy?: FavoriteListOrderByWithRelationInput | FavoriteListOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FavoriteLists.
     */
    cursor?: FavoriteListWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FavoriteLists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FavoriteLists.
     */
    skip?: number
    distinct?: FavoriteListScalarFieldEnum | FavoriteListScalarFieldEnum[]
  }

  /**
   * FavoriteList create
   */
  export type FavoriteListCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteList
     */
    select?: FavoriteListSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteList
     */
    omit?: FavoriteListOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteListInclude<ExtArgs> | null
    /**
     * The data needed to create a FavoriteList.
     */
    data: XOR<FavoriteListCreateInput, FavoriteListUncheckedCreateInput>
  }

  /**
   * FavoriteList createMany
   */
  export type FavoriteListCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FavoriteLists.
     */
    data: FavoriteListCreateManyInput | FavoriteListCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FavoriteList createManyAndReturn
   */
  export type FavoriteListCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteList
     */
    select?: FavoriteListSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteList
     */
    omit?: FavoriteListOmit<ExtArgs> | null
    /**
     * The data used to create many FavoriteLists.
     */
    data: FavoriteListCreateManyInput | FavoriteListCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteListIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FavoriteList update
   */
  export type FavoriteListUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteList
     */
    select?: FavoriteListSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteList
     */
    omit?: FavoriteListOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteListInclude<ExtArgs> | null
    /**
     * The data needed to update a FavoriteList.
     */
    data: XOR<FavoriteListUpdateInput, FavoriteListUncheckedUpdateInput>
    /**
     * Choose, which FavoriteList to update.
     */
    where: FavoriteListWhereUniqueInput
  }

  /**
   * FavoriteList updateMany
   */
  export type FavoriteListUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FavoriteLists.
     */
    data: XOR<FavoriteListUpdateManyMutationInput, FavoriteListUncheckedUpdateManyInput>
    /**
     * Filter which FavoriteLists to update
     */
    where?: FavoriteListWhereInput
    /**
     * Limit how many FavoriteLists to update.
     */
    limit?: number
  }

  /**
   * FavoriteList updateManyAndReturn
   */
  export type FavoriteListUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteList
     */
    select?: FavoriteListSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteList
     */
    omit?: FavoriteListOmit<ExtArgs> | null
    /**
     * The data used to update FavoriteLists.
     */
    data: XOR<FavoriteListUpdateManyMutationInput, FavoriteListUncheckedUpdateManyInput>
    /**
     * Filter which FavoriteLists to update
     */
    where?: FavoriteListWhereInput
    /**
     * Limit how many FavoriteLists to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteListIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FavoriteList upsert
   */
  export type FavoriteListUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteList
     */
    select?: FavoriteListSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteList
     */
    omit?: FavoriteListOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteListInclude<ExtArgs> | null
    /**
     * The filter to search for the FavoriteList to update in case it exists.
     */
    where: FavoriteListWhereUniqueInput
    /**
     * In case the FavoriteList found by the `where` argument doesn't exist, create a new FavoriteList with this data.
     */
    create: XOR<FavoriteListCreateInput, FavoriteListUncheckedCreateInput>
    /**
     * In case the FavoriteList was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FavoriteListUpdateInput, FavoriteListUncheckedUpdateInput>
  }

  /**
   * FavoriteList delete
   */
  export type FavoriteListDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteList
     */
    select?: FavoriteListSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteList
     */
    omit?: FavoriteListOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteListInclude<ExtArgs> | null
    /**
     * Filter which FavoriteList to delete.
     */
    where: FavoriteListWhereUniqueInput
  }

  /**
   * FavoriteList deleteMany
   */
  export type FavoriteListDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FavoriteLists to delete
     */
    where?: FavoriteListWhereInput
    /**
     * Limit how many FavoriteLists to delete.
     */
    limit?: number
  }

  /**
   * FavoriteList.favorites
   */
  export type FavoriteList$favoritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    where?: FavoriteWhereInput
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    cursor?: FavoriteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * FavoriteList without action
   */
  export type FavoriteListDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteList
     */
    select?: FavoriteListSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FavoriteList
     */
    omit?: FavoriteListOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteListInclude<ExtArgs> | null
  }


  /**
   * Model PropertyRequest
   */

  export type AggregatePropertyRequest = {
    _count: PropertyRequestCountAggregateOutputType | null
    _avg: PropertyRequestAvgAggregateOutputType | null
    _sum: PropertyRequestSumAggregateOutputType | null
    _min: PropertyRequestMinAggregateOutputType | null
    _max: PropertyRequestMaxAggregateOutputType | null
  }

  export type PropertyRequestAvgAggregateOutputType = {
    budget: number | null
  }

  export type PropertyRequestSumAggregateOutputType = {
    budget: number | null
  }

  export type PropertyRequestMinAggregateOutputType = {
    id: string | null
    type: $Enums.RequestType | null
    message: string | null
    status: $Enums.RequestStatus | null
    preferredDate: Date | null
    preferredTime: string | null
    budget: number | null
    timeline: string | null
    sellerResponse: string | null
    responseDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    buyerId: string | null
    propertyId: string | null
    userId: string | null
  }

  export type PropertyRequestMaxAggregateOutputType = {
    id: string | null
    type: $Enums.RequestType | null
    message: string | null
    status: $Enums.RequestStatus | null
    preferredDate: Date | null
    preferredTime: string | null
    budget: number | null
    timeline: string | null
    sellerResponse: string | null
    responseDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    buyerId: string | null
    propertyId: string | null
    userId: string | null
  }

  export type PropertyRequestCountAggregateOutputType = {
    id: number
    type: number
    message: number
    status: number
    preferredDate: number
    preferredTime: number
    budget: number
    timeline: number
    sellerResponse: number
    responseDate: number
    createdAt: number
    updatedAt: number
    buyerId: number
    propertyId: number
    userId: number
    _all: number
  }


  export type PropertyRequestAvgAggregateInputType = {
    budget?: true
  }

  export type PropertyRequestSumAggregateInputType = {
    budget?: true
  }

  export type PropertyRequestMinAggregateInputType = {
    id?: true
    type?: true
    message?: true
    status?: true
    preferredDate?: true
    preferredTime?: true
    budget?: true
    timeline?: true
    sellerResponse?: true
    responseDate?: true
    createdAt?: true
    updatedAt?: true
    buyerId?: true
    propertyId?: true
    userId?: true
  }

  export type PropertyRequestMaxAggregateInputType = {
    id?: true
    type?: true
    message?: true
    status?: true
    preferredDate?: true
    preferredTime?: true
    budget?: true
    timeline?: true
    sellerResponse?: true
    responseDate?: true
    createdAt?: true
    updatedAt?: true
    buyerId?: true
    propertyId?: true
    userId?: true
  }

  export type PropertyRequestCountAggregateInputType = {
    id?: true
    type?: true
    message?: true
    status?: true
    preferredDate?: true
    preferredTime?: true
    budget?: true
    timeline?: true
    sellerResponse?: true
    responseDate?: true
    createdAt?: true
    updatedAt?: true
    buyerId?: true
    propertyId?: true
    userId?: true
    _all?: true
  }

  export type PropertyRequestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyRequest to aggregate.
     */
    where?: PropertyRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyRequests to fetch.
     */
    orderBy?: PropertyRequestOrderByWithRelationInput | PropertyRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PropertyRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PropertyRequests
    **/
    _count?: true | PropertyRequestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PropertyRequestAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PropertyRequestSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PropertyRequestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PropertyRequestMaxAggregateInputType
  }

  export type GetPropertyRequestAggregateType<T extends PropertyRequestAggregateArgs> = {
        [P in keyof T & keyof AggregatePropertyRequest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePropertyRequest[P]>
      : GetScalarType<T[P], AggregatePropertyRequest[P]>
  }




  export type PropertyRequestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyRequestWhereInput
    orderBy?: PropertyRequestOrderByWithAggregationInput | PropertyRequestOrderByWithAggregationInput[]
    by: PropertyRequestScalarFieldEnum[] | PropertyRequestScalarFieldEnum
    having?: PropertyRequestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PropertyRequestCountAggregateInputType | true
    _avg?: PropertyRequestAvgAggregateInputType
    _sum?: PropertyRequestSumAggregateInputType
    _min?: PropertyRequestMinAggregateInputType
    _max?: PropertyRequestMaxAggregateInputType
  }

  export type PropertyRequestGroupByOutputType = {
    id: string
    type: $Enums.RequestType
    message: string
    status: $Enums.RequestStatus
    preferredDate: Date | null
    preferredTime: string | null
    budget: number | null
    timeline: string | null
    sellerResponse: string | null
    responseDate: Date | null
    createdAt: Date
    updatedAt: Date
    buyerId: string
    propertyId: string
    userId: string
    _count: PropertyRequestCountAggregateOutputType | null
    _avg: PropertyRequestAvgAggregateOutputType | null
    _sum: PropertyRequestSumAggregateOutputType | null
    _min: PropertyRequestMinAggregateOutputType | null
    _max: PropertyRequestMaxAggregateOutputType | null
  }

  type GetPropertyRequestGroupByPayload<T extends PropertyRequestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PropertyRequestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PropertyRequestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PropertyRequestGroupByOutputType[P]>
            : GetScalarType<T[P], PropertyRequestGroupByOutputType[P]>
        }
      >
    >


  export type PropertyRequestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    message?: boolean
    status?: boolean
    preferredDate?: boolean
    preferredTime?: boolean
    budget?: boolean
    timeline?: boolean
    sellerResponse?: boolean
    responseDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    buyerId?: boolean
    propertyId?: boolean
    userId?: boolean
    buyer?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
    viewings?: boolean | PropertyRequest$viewingsArgs<ExtArgs>
    payments?: boolean | PropertyRequest$paymentsArgs<ExtArgs>
    _count?: boolean | PropertyRequestCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyRequest"]>

  export type PropertyRequestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    message?: boolean
    status?: boolean
    preferredDate?: boolean
    preferredTime?: boolean
    budget?: boolean
    timeline?: boolean
    sellerResponse?: boolean
    responseDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    buyerId?: boolean
    propertyId?: boolean
    userId?: boolean
    buyer?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyRequest"]>

  export type PropertyRequestSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    message?: boolean
    status?: boolean
    preferredDate?: boolean
    preferredTime?: boolean
    budget?: boolean
    timeline?: boolean
    sellerResponse?: boolean
    responseDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    buyerId?: boolean
    propertyId?: boolean
    userId?: boolean
    buyer?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyRequest"]>

  export type PropertyRequestSelectScalar = {
    id?: boolean
    type?: boolean
    message?: boolean
    status?: boolean
    preferredDate?: boolean
    preferredTime?: boolean
    budget?: boolean
    timeline?: boolean
    sellerResponse?: boolean
    responseDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    buyerId?: boolean
    propertyId?: boolean
    userId?: boolean
  }

  export type PropertyRequestOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type" | "message" | "status" | "preferredDate" | "preferredTime" | "budget" | "timeline" | "sellerResponse" | "responseDate" | "createdAt" | "updatedAt" | "buyerId" | "propertyId" | "userId", ExtArgs["result"]["propertyRequest"]>
  export type PropertyRequestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    buyer?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
    viewings?: boolean | PropertyRequest$viewingsArgs<ExtArgs>
    payments?: boolean | PropertyRequest$paymentsArgs<ExtArgs>
    _count?: boolean | PropertyRequestCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PropertyRequestIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    buyer?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }
  export type PropertyRequestIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    buyer?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }

  export type $PropertyRequestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PropertyRequest"
    objects: {
      buyer: Prisma.$UserPayload<ExtArgs>
      property: Prisma.$PropertyPayload<ExtArgs>
      viewings: Prisma.$PropertyViewingPayload<ExtArgs>[]
      payments: Prisma.$PaymentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      type: $Enums.RequestType
      message: string
      status: $Enums.RequestStatus
      preferredDate: Date | null
      preferredTime: string | null
      budget: number | null
      timeline: string | null
      sellerResponse: string | null
      responseDate: Date | null
      createdAt: Date
      updatedAt: Date
      buyerId: string
      propertyId: string
      userId: string
    }, ExtArgs["result"]["propertyRequest"]>
    composites: {}
  }

  type PropertyRequestGetPayload<S extends boolean | null | undefined | PropertyRequestDefaultArgs> = $Result.GetResult<Prisma.$PropertyRequestPayload, S>

  type PropertyRequestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PropertyRequestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PropertyRequestCountAggregateInputType | true
    }

  export interface PropertyRequestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PropertyRequest'], meta: { name: 'PropertyRequest' } }
    /**
     * Find zero or one PropertyRequest that matches the filter.
     * @param {PropertyRequestFindUniqueArgs} args - Arguments to find a PropertyRequest
     * @example
     * // Get one PropertyRequest
     * const propertyRequest = await prisma.propertyRequest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PropertyRequestFindUniqueArgs>(args: SelectSubset<T, PropertyRequestFindUniqueArgs<ExtArgs>>): Prisma__PropertyRequestClient<$Result.GetResult<Prisma.$PropertyRequestPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PropertyRequest that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PropertyRequestFindUniqueOrThrowArgs} args - Arguments to find a PropertyRequest
     * @example
     * // Get one PropertyRequest
     * const propertyRequest = await prisma.propertyRequest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PropertyRequestFindUniqueOrThrowArgs>(args: SelectSubset<T, PropertyRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PropertyRequestClient<$Result.GetResult<Prisma.$PropertyRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyRequest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyRequestFindFirstArgs} args - Arguments to find a PropertyRequest
     * @example
     * // Get one PropertyRequest
     * const propertyRequest = await prisma.propertyRequest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PropertyRequestFindFirstArgs>(args?: SelectSubset<T, PropertyRequestFindFirstArgs<ExtArgs>>): Prisma__PropertyRequestClient<$Result.GetResult<Prisma.$PropertyRequestPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyRequest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyRequestFindFirstOrThrowArgs} args - Arguments to find a PropertyRequest
     * @example
     * // Get one PropertyRequest
     * const propertyRequest = await prisma.propertyRequest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PropertyRequestFindFirstOrThrowArgs>(args?: SelectSubset<T, PropertyRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma__PropertyRequestClient<$Result.GetResult<Prisma.$PropertyRequestPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PropertyRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyRequestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PropertyRequests
     * const propertyRequests = await prisma.propertyRequest.findMany()
     * 
     * // Get first 10 PropertyRequests
     * const propertyRequests = await prisma.propertyRequest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const propertyRequestWithIdOnly = await prisma.propertyRequest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PropertyRequestFindManyArgs>(args?: SelectSubset<T, PropertyRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PropertyRequest.
     * @param {PropertyRequestCreateArgs} args - Arguments to create a PropertyRequest.
     * @example
     * // Create one PropertyRequest
     * const PropertyRequest = await prisma.propertyRequest.create({
     *   data: {
     *     // ... data to create a PropertyRequest
     *   }
     * })
     * 
     */
    create<T extends PropertyRequestCreateArgs>(args: SelectSubset<T, PropertyRequestCreateArgs<ExtArgs>>): Prisma__PropertyRequestClient<$Result.GetResult<Prisma.$PropertyRequestPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PropertyRequests.
     * @param {PropertyRequestCreateManyArgs} args - Arguments to create many PropertyRequests.
     * @example
     * // Create many PropertyRequests
     * const propertyRequest = await prisma.propertyRequest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PropertyRequestCreateManyArgs>(args?: SelectSubset<T, PropertyRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PropertyRequests and returns the data saved in the database.
     * @param {PropertyRequestCreateManyAndReturnArgs} args - Arguments to create many PropertyRequests.
     * @example
     * // Create many PropertyRequests
     * const propertyRequest = await prisma.propertyRequest.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PropertyRequests and only return the `id`
     * const propertyRequestWithIdOnly = await prisma.propertyRequest.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PropertyRequestCreateManyAndReturnArgs>(args?: SelectSubset<T, PropertyRequestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyRequestPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PropertyRequest.
     * @param {PropertyRequestDeleteArgs} args - Arguments to delete one PropertyRequest.
     * @example
     * // Delete one PropertyRequest
     * const PropertyRequest = await prisma.propertyRequest.delete({
     *   where: {
     *     // ... filter to delete one PropertyRequest
     *   }
     * })
     * 
     */
    delete<T extends PropertyRequestDeleteArgs>(args: SelectSubset<T, PropertyRequestDeleteArgs<ExtArgs>>): Prisma__PropertyRequestClient<$Result.GetResult<Prisma.$PropertyRequestPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PropertyRequest.
     * @param {PropertyRequestUpdateArgs} args - Arguments to update one PropertyRequest.
     * @example
     * // Update one PropertyRequest
     * const propertyRequest = await prisma.propertyRequest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PropertyRequestUpdateArgs>(args: SelectSubset<T, PropertyRequestUpdateArgs<ExtArgs>>): Prisma__PropertyRequestClient<$Result.GetResult<Prisma.$PropertyRequestPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PropertyRequests.
     * @param {PropertyRequestDeleteManyArgs} args - Arguments to filter PropertyRequests to delete.
     * @example
     * // Delete a few PropertyRequests
     * const { count } = await prisma.propertyRequest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PropertyRequestDeleteManyArgs>(args?: SelectSubset<T, PropertyRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyRequestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PropertyRequests
     * const propertyRequest = await prisma.propertyRequest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PropertyRequestUpdateManyArgs>(args: SelectSubset<T, PropertyRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyRequests and returns the data updated in the database.
     * @param {PropertyRequestUpdateManyAndReturnArgs} args - Arguments to update many PropertyRequests.
     * @example
     * // Update many PropertyRequests
     * const propertyRequest = await prisma.propertyRequest.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PropertyRequests and only return the `id`
     * const propertyRequestWithIdOnly = await prisma.propertyRequest.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PropertyRequestUpdateManyAndReturnArgs>(args: SelectSubset<T, PropertyRequestUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyRequestPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PropertyRequest.
     * @param {PropertyRequestUpsertArgs} args - Arguments to update or create a PropertyRequest.
     * @example
     * // Update or create a PropertyRequest
     * const propertyRequest = await prisma.propertyRequest.upsert({
     *   create: {
     *     // ... data to create a PropertyRequest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PropertyRequest we want to update
     *   }
     * })
     */
    upsert<T extends PropertyRequestUpsertArgs>(args: SelectSubset<T, PropertyRequestUpsertArgs<ExtArgs>>): Prisma__PropertyRequestClient<$Result.GetResult<Prisma.$PropertyRequestPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PropertyRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyRequestCountArgs} args - Arguments to filter PropertyRequests to count.
     * @example
     * // Count the number of PropertyRequests
     * const count = await prisma.propertyRequest.count({
     *   where: {
     *     // ... the filter for the PropertyRequests we want to count
     *   }
     * })
    **/
    count<T extends PropertyRequestCountArgs>(
      args?: Subset<T, PropertyRequestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PropertyRequestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PropertyRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PropertyRequestAggregateArgs>(args: Subset<T, PropertyRequestAggregateArgs>): Prisma.PrismaPromise<GetPropertyRequestAggregateType<T>>

    /**
     * Group by PropertyRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyRequestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PropertyRequestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PropertyRequestGroupByArgs['orderBy'] }
        : { orderBy?: PropertyRequestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PropertyRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPropertyRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PropertyRequest model
   */
  readonly fields: PropertyRequestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PropertyRequest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PropertyRequestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    buyer<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    property<T extends PropertyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PropertyDefaultArgs<ExtArgs>>): Prisma__PropertyClient<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    viewings<T extends PropertyRequest$viewingsArgs<ExtArgs> = {}>(args?: Subset<T, PropertyRequest$viewingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyViewingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    payments<T extends PropertyRequest$paymentsArgs<ExtArgs> = {}>(args?: Subset<T, PropertyRequest$paymentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PropertyRequest model
   */
  interface PropertyRequestFieldRefs {
    readonly id: FieldRef<"PropertyRequest", 'String'>
    readonly type: FieldRef<"PropertyRequest", 'RequestType'>
    readonly message: FieldRef<"PropertyRequest", 'String'>
    readonly status: FieldRef<"PropertyRequest", 'RequestStatus'>
    readonly preferredDate: FieldRef<"PropertyRequest", 'DateTime'>
    readonly preferredTime: FieldRef<"PropertyRequest", 'String'>
    readonly budget: FieldRef<"PropertyRequest", 'Float'>
    readonly timeline: FieldRef<"PropertyRequest", 'String'>
    readonly sellerResponse: FieldRef<"PropertyRequest", 'String'>
    readonly responseDate: FieldRef<"PropertyRequest", 'DateTime'>
    readonly createdAt: FieldRef<"PropertyRequest", 'DateTime'>
    readonly updatedAt: FieldRef<"PropertyRequest", 'DateTime'>
    readonly buyerId: FieldRef<"PropertyRequest", 'String'>
    readonly propertyId: FieldRef<"PropertyRequest", 'String'>
    readonly userId: FieldRef<"PropertyRequest", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PropertyRequest findUnique
   */
  export type PropertyRequestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRequest
     */
    select?: PropertyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRequest
     */
    omit?: PropertyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRequestInclude<ExtArgs> | null
    /**
     * Filter, which PropertyRequest to fetch.
     */
    where: PropertyRequestWhereUniqueInput
  }

  /**
   * PropertyRequest findUniqueOrThrow
   */
  export type PropertyRequestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRequest
     */
    select?: PropertyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRequest
     */
    omit?: PropertyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRequestInclude<ExtArgs> | null
    /**
     * Filter, which PropertyRequest to fetch.
     */
    where: PropertyRequestWhereUniqueInput
  }

  /**
   * PropertyRequest findFirst
   */
  export type PropertyRequestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRequest
     */
    select?: PropertyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRequest
     */
    omit?: PropertyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRequestInclude<ExtArgs> | null
    /**
     * Filter, which PropertyRequest to fetch.
     */
    where?: PropertyRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyRequests to fetch.
     */
    orderBy?: PropertyRequestOrderByWithRelationInput | PropertyRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyRequests.
     */
    cursor?: PropertyRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyRequests.
     */
    distinct?: PropertyRequestScalarFieldEnum | PropertyRequestScalarFieldEnum[]
  }

  /**
   * PropertyRequest findFirstOrThrow
   */
  export type PropertyRequestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRequest
     */
    select?: PropertyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRequest
     */
    omit?: PropertyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRequestInclude<ExtArgs> | null
    /**
     * Filter, which PropertyRequest to fetch.
     */
    where?: PropertyRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyRequests to fetch.
     */
    orderBy?: PropertyRequestOrderByWithRelationInput | PropertyRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyRequests.
     */
    cursor?: PropertyRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyRequests.
     */
    distinct?: PropertyRequestScalarFieldEnum | PropertyRequestScalarFieldEnum[]
  }

  /**
   * PropertyRequest findMany
   */
  export type PropertyRequestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRequest
     */
    select?: PropertyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRequest
     */
    omit?: PropertyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRequestInclude<ExtArgs> | null
    /**
     * Filter, which PropertyRequests to fetch.
     */
    where?: PropertyRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyRequests to fetch.
     */
    orderBy?: PropertyRequestOrderByWithRelationInput | PropertyRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PropertyRequests.
     */
    cursor?: PropertyRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyRequests.
     */
    skip?: number
    distinct?: PropertyRequestScalarFieldEnum | PropertyRequestScalarFieldEnum[]
  }

  /**
   * PropertyRequest create
   */
  export type PropertyRequestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRequest
     */
    select?: PropertyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRequest
     */
    omit?: PropertyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRequestInclude<ExtArgs> | null
    /**
     * The data needed to create a PropertyRequest.
     */
    data: XOR<PropertyRequestCreateInput, PropertyRequestUncheckedCreateInput>
  }

  /**
   * PropertyRequest createMany
   */
  export type PropertyRequestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PropertyRequests.
     */
    data: PropertyRequestCreateManyInput | PropertyRequestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PropertyRequest createManyAndReturn
   */
  export type PropertyRequestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRequest
     */
    select?: PropertyRequestSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRequest
     */
    omit?: PropertyRequestOmit<ExtArgs> | null
    /**
     * The data used to create many PropertyRequests.
     */
    data: PropertyRequestCreateManyInput | PropertyRequestCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRequestIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PropertyRequest update
   */
  export type PropertyRequestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRequest
     */
    select?: PropertyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRequest
     */
    omit?: PropertyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRequestInclude<ExtArgs> | null
    /**
     * The data needed to update a PropertyRequest.
     */
    data: XOR<PropertyRequestUpdateInput, PropertyRequestUncheckedUpdateInput>
    /**
     * Choose, which PropertyRequest to update.
     */
    where: PropertyRequestWhereUniqueInput
  }

  /**
   * PropertyRequest updateMany
   */
  export type PropertyRequestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PropertyRequests.
     */
    data: XOR<PropertyRequestUpdateManyMutationInput, PropertyRequestUncheckedUpdateManyInput>
    /**
     * Filter which PropertyRequests to update
     */
    where?: PropertyRequestWhereInput
    /**
     * Limit how many PropertyRequests to update.
     */
    limit?: number
  }

  /**
   * PropertyRequest updateManyAndReturn
   */
  export type PropertyRequestUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRequest
     */
    select?: PropertyRequestSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRequest
     */
    omit?: PropertyRequestOmit<ExtArgs> | null
    /**
     * The data used to update PropertyRequests.
     */
    data: XOR<PropertyRequestUpdateManyMutationInput, PropertyRequestUncheckedUpdateManyInput>
    /**
     * Filter which PropertyRequests to update
     */
    where?: PropertyRequestWhereInput
    /**
     * Limit how many PropertyRequests to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRequestIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PropertyRequest upsert
   */
  export type PropertyRequestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRequest
     */
    select?: PropertyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRequest
     */
    omit?: PropertyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRequestInclude<ExtArgs> | null
    /**
     * The filter to search for the PropertyRequest to update in case it exists.
     */
    where: PropertyRequestWhereUniqueInput
    /**
     * In case the PropertyRequest found by the `where` argument doesn't exist, create a new PropertyRequest with this data.
     */
    create: XOR<PropertyRequestCreateInput, PropertyRequestUncheckedCreateInput>
    /**
     * In case the PropertyRequest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PropertyRequestUpdateInput, PropertyRequestUncheckedUpdateInput>
  }

  /**
   * PropertyRequest delete
   */
  export type PropertyRequestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRequest
     */
    select?: PropertyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRequest
     */
    omit?: PropertyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRequestInclude<ExtArgs> | null
    /**
     * Filter which PropertyRequest to delete.
     */
    where: PropertyRequestWhereUniqueInput
  }

  /**
   * PropertyRequest deleteMany
   */
  export type PropertyRequestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyRequests to delete
     */
    where?: PropertyRequestWhereInput
    /**
     * Limit how many PropertyRequests to delete.
     */
    limit?: number
  }

  /**
   * PropertyRequest.viewings
   */
  export type PropertyRequest$viewingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyViewing
     */
    select?: PropertyViewingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyViewing
     */
    omit?: PropertyViewingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewingInclude<ExtArgs> | null
    where?: PropertyViewingWhereInput
    orderBy?: PropertyViewingOrderByWithRelationInput | PropertyViewingOrderByWithRelationInput[]
    cursor?: PropertyViewingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyViewingScalarFieldEnum | PropertyViewingScalarFieldEnum[]
  }

  /**
   * PropertyRequest.payments
   */
  export type PropertyRequest$paymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    cursor?: PaymentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * PropertyRequest without action
   */
  export type PropertyRequestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRequest
     */
    select?: PropertyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRequest
     */
    omit?: PropertyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRequestInclude<ExtArgs> | null
  }


  /**
   * Model PropertyInquiry
   */

  export type AggregatePropertyInquiry = {
    _count: PropertyInquiryCountAggregateOutputType | null
    _min: PropertyInquiryMinAggregateOutputType | null
    _max: PropertyInquiryMaxAggregateOutputType | null
  }

  export type PropertyInquiryMinAggregateOutputType = {
    id: string | null
    subject: string | null
    message: string | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: string | null
    propertyId: string | null
  }

  export type PropertyInquiryMaxAggregateOutputType = {
    id: string | null
    subject: string | null
    message: string | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: string | null
    propertyId: string | null
  }

  export type PropertyInquiryCountAggregateOutputType = {
    id: number
    subject: number
    message: number
    status: number
    createdAt: number
    updatedAt: number
    userId: number
    propertyId: number
    _all: number
  }


  export type PropertyInquiryMinAggregateInputType = {
    id?: true
    subject?: true
    message?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    propertyId?: true
  }

  export type PropertyInquiryMaxAggregateInputType = {
    id?: true
    subject?: true
    message?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    propertyId?: true
  }

  export type PropertyInquiryCountAggregateInputType = {
    id?: true
    subject?: true
    message?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    propertyId?: true
    _all?: true
  }

  export type PropertyInquiryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyInquiry to aggregate.
     */
    where?: PropertyInquiryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyInquiries to fetch.
     */
    orderBy?: PropertyInquiryOrderByWithRelationInput | PropertyInquiryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PropertyInquiryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyInquiries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyInquiries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PropertyInquiries
    **/
    _count?: true | PropertyInquiryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PropertyInquiryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PropertyInquiryMaxAggregateInputType
  }

  export type GetPropertyInquiryAggregateType<T extends PropertyInquiryAggregateArgs> = {
        [P in keyof T & keyof AggregatePropertyInquiry]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePropertyInquiry[P]>
      : GetScalarType<T[P], AggregatePropertyInquiry[P]>
  }




  export type PropertyInquiryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyInquiryWhereInput
    orderBy?: PropertyInquiryOrderByWithAggregationInput | PropertyInquiryOrderByWithAggregationInput[]
    by: PropertyInquiryScalarFieldEnum[] | PropertyInquiryScalarFieldEnum
    having?: PropertyInquiryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PropertyInquiryCountAggregateInputType | true
    _min?: PropertyInquiryMinAggregateInputType
    _max?: PropertyInquiryMaxAggregateInputType
  }

  export type PropertyInquiryGroupByOutputType = {
    id: string
    subject: string
    message: string
    status: string
    createdAt: Date
    updatedAt: Date
    userId: string
    propertyId: string
    _count: PropertyInquiryCountAggregateOutputType | null
    _min: PropertyInquiryMinAggregateOutputType | null
    _max: PropertyInquiryMaxAggregateOutputType | null
  }

  type GetPropertyInquiryGroupByPayload<T extends PropertyInquiryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PropertyInquiryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PropertyInquiryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PropertyInquiryGroupByOutputType[P]>
            : GetScalarType<T[P], PropertyInquiryGroupByOutputType[P]>
        }
      >
    >


  export type PropertyInquirySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    subject?: boolean
    message?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    propertyId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyInquiry"]>

  export type PropertyInquirySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    subject?: boolean
    message?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    propertyId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyInquiry"]>

  export type PropertyInquirySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    subject?: boolean
    message?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    propertyId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyInquiry"]>

  export type PropertyInquirySelectScalar = {
    id?: boolean
    subject?: boolean
    message?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    propertyId?: boolean
  }

  export type PropertyInquiryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "subject" | "message" | "status" | "createdAt" | "updatedAt" | "userId" | "propertyId", ExtArgs["result"]["propertyInquiry"]>
  export type PropertyInquiryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }
  export type PropertyInquiryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }
  export type PropertyInquiryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }

  export type $PropertyInquiryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PropertyInquiry"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      property: Prisma.$PropertyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      subject: string
      message: string
      status: string
      createdAt: Date
      updatedAt: Date
      userId: string
      propertyId: string
    }, ExtArgs["result"]["propertyInquiry"]>
    composites: {}
  }

  type PropertyInquiryGetPayload<S extends boolean | null | undefined | PropertyInquiryDefaultArgs> = $Result.GetResult<Prisma.$PropertyInquiryPayload, S>

  type PropertyInquiryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PropertyInquiryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PropertyInquiryCountAggregateInputType | true
    }

  export interface PropertyInquiryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PropertyInquiry'], meta: { name: 'PropertyInquiry' } }
    /**
     * Find zero or one PropertyInquiry that matches the filter.
     * @param {PropertyInquiryFindUniqueArgs} args - Arguments to find a PropertyInquiry
     * @example
     * // Get one PropertyInquiry
     * const propertyInquiry = await prisma.propertyInquiry.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PropertyInquiryFindUniqueArgs>(args: SelectSubset<T, PropertyInquiryFindUniqueArgs<ExtArgs>>): Prisma__PropertyInquiryClient<$Result.GetResult<Prisma.$PropertyInquiryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PropertyInquiry that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PropertyInquiryFindUniqueOrThrowArgs} args - Arguments to find a PropertyInquiry
     * @example
     * // Get one PropertyInquiry
     * const propertyInquiry = await prisma.propertyInquiry.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PropertyInquiryFindUniqueOrThrowArgs>(args: SelectSubset<T, PropertyInquiryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PropertyInquiryClient<$Result.GetResult<Prisma.$PropertyInquiryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyInquiry that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyInquiryFindFirstArgs} args - Arguments to find a PropertyInquiry
     * @example
     * // Get one PropertyInquiry
     * const propertyInquiry = await prisma.propertyInquiry.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PropertyInquiryFindFirstArgs>(args?: SelectSubset<T, PropertyInquiryFindFirstArgs<ExtArgs>>): Prisma__PropertyInquiryClient<$Result.GetResult<Prisma.$PropertyInquiryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyInquiry that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyInquiryFindFirstOrThrowArgs} args - Arguments to find a PropertyInquiry
     * @example
     * // Get one PropertyInquiry
     * const propertyInquiry = await prisma.propertyInquiry.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PropertyInquiryFindFirstOrThrowArgs>(args?: SelectSubset<T, PropertyInquiryFindFirstOrThrowArgs<ExtArgs>>): Prisma__PropertyInquiryClient<$Result.GetResult<Prisma.$PropertyInquiryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PropertyInquiries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyInquiryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PropertyInquiries
     * const propertyInquiries = await prisma.propertyInquiry.findMany()
     * 
     * // Get first 10 PropertyInquiries
     * const propertyInquiries = await prisma.propertyInquiry.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const propertyInquiryWithIdOnly = await prisma.propertyInquiry.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PropertyInquiryFindManyArgs>(args?: SelectSubset<T, PropertyInquiryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyInquiryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PropertyInquiry.
     * @param {PropertyInquiryCreateArgs} args - Arguments to create a PropertyInquiry.
     * @example
     * // Create one PropertyInquiry
     * const PropertyInquiry = await prisma.propertyInquiry.create({
     *   data: {
     *     // ... data to create a PropertyInquiry
     *   }
     * })
     * 
     */
    create<T extends PropertyInquiryCreateArgs>(args: SelectSubset<T, PropertyInquiryCreateArgs<ExtArgs>>): Prisma__PropertyInquiryClient<$Result.GetResult<Prisma.$PropertyInquiryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PropertyInquiries.
     * @param {PropertyInquiryCreateManyArgs} args - Arguments to create many PropertyInquiries.
     * @example
     * // Create many PropertyInquiries
     * const propertyInquiry = await prisma.propertyInquiry.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PropertyInquiryCreateManyArgs>(args?: SelectSubset<T, PropertyInquiryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PropertyInquiries and returns the data saved in the database.
     * @param {PropertyInquiryCreateManyAndReturnArgs} args - Arguments to create many PropertyInquiries.
     * @example
     * // Create many PropertyInquiries
     * const propertyInquiry = await prisma.propertyInquiry.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PropertyInquiries and only return the `id`
     * const propertyInquiryWithIdOnly = await prisma.propertyInquiry.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PropertyInquiryCreateManyAndReturnArgs>(args?: SelectSubset<T, PropertyInquiryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyInquiryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PropertyInquiry.
     * @param {PropertyInquiryDeleteArgs} args - Arguments to delete one PropertyInquiry.
     * @example
     * // Delete one PropertyInquiry
     * const PropertyInquiry = await prisma.propertyInquiry.delete({
     *   where: {
     *     // ... filter to delete one PropertyInquiry
     *   }
     * })
     * 
     */
    delete<T extends PropertyInquiryDeleteArgs>(args: SelectSubset<T, PropertyInquiryDeleteArgs<ExtArgs>>): Prisma__PropertyInquiryClient<$Result.GetResult<Prisma.$PropertyInquiryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PropertyInquiry.
     * @param {PropertyInquiryUpdateArgs} args - Arguments to update one PropertyInquiry.
     * @example
     * // Update one PropertyInquiry
     * const propertyInquiry = await prisma.propertyInquiry.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PropertyInquiryUpdateArgs>(args: SelectSubset<T, PropertyInquiryUpdateArgs<ExtArgs>>): Prisma__PropertyInquiryClient<$Result.GetResult<Prisma.$PropertyInquiryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PropertyInquiries.
     * @param {PropertyInquiryDeleteManyArgs} args - Arguments to filter PropertyInquiries to delete.
     * @example
     * // Delete a few PropertyInquiries
     * const { count } = await prisma.propertyInquiry.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PropertyInquiryDeleteManyArgs>(args?: SelectSubset<T, PropertyInquiryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyInquiries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyInquiryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PropertyInquiries
     * const propertyInquiry = await prisma.propertyInquiry.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PropertyInquiryUpdateManyArgs>(args: SelectSubset<T, PropertyInquiryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyInquiries and returns the data updated in the database.
     * @param {PropertyInquiryUpdateManyAndReturnArgs} args - Arguments to update many PropertyInquiries.
     * @example
     * // Update many PropertyInquiries
     * const propertyInquiry = await prisma.propertyInquiry.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PropertyInquiries and only return the `id`
     * const propertyInquiryWithIdOnly = await prisma.propertyInquiry.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PropertyInquiryUpdateManyAndReturnArgs>(args: SelectSubset<T, PropertyInquiryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyInquiryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PropertyInquiry.
     * @param {PropertyInquiryUpsertArgs} args - Arguments to update or create a PropertyInquiry.
     * @example
     * // Update or create a PropertyInquiry
     * const propertyInquiry = await prisma.propertyInquiry.upsert({
     *   create: {
     *     // ... data to create a PropertyInquiry
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PropertyInquiry we want to update
     *   }
     * })
     */
    upsert<T extends PropertyInquiryUpsertArgs>(args: SelectSubset<T, PropertyInquiryUpsertArgs<ExtArgs>>): Prisma__PropertyInquiryClient<$Result.GetResult<Prisma.$PropertyInquiryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PropertyInquiries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyInquiryCountArgs} args - Arguments to filter PropertyInquiries to count.
     * @example
     * // Count the number of PropertyInquiries
     * const count = await prisma.propertyInquiry.count({
     *   where: {
     *     // ... the filter for the PropertyInquiries we want to count
     *   }
     * })
    **/
    count<T extends PropertyInquiryCountArgs>(
      args?: Subset<T, PropertyInquiryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PropertyInquiryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PropertyInquiry.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyInquiryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PropertyInquiryAggregateArgs>(args: Subset<T, PropertyInquiryAggregateArgs>): Prisma.PrismaPromise<GetPropertyInquiryAggregateType<T>>

    /**
     * Group by PropertyInquiry.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyInquiryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PropertyInquiryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PropertyInquiryGroupByArgs['orderBy'] }
        : { orderBy?: PropertyInquiryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PropertyInquiryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPropertyInquiryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PropertyInquiry model
   */
  readonly fields: PropertyInquiryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PropertyInquiry.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PropertyInquiryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    property<T extends PropertyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PropertyDefaultArgs<ExtArgs>>): Prisma__PropertyClient<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PropertyInquiry model
   */
  interface PropertyInquiryFieldRefs {
    readonly id: FieldRef<"PropertyInquiry", 'String'>
    readonly subject: FieldRef<"PropertyInquiry", 'String'>
    readonly message: FieldRef<"PropertyInquiry", 'String'>
    readonly status: FieldRef<"PropertyInquiry", 'String'>
    readonly createdAt: FieldRef<"PropertyInquiry", 'DateTime'>
    readonly updatedAt: FieldRef<"PropertyInquiry", 'DateTime'>
    readonly userId: FieldRef<"PropertyInquiry", 'String'>
    readonly propertyId: FieldRef<"PropertyInquiry", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PropertyInquiry findUnique
   */
  export type PropertyInquiryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyInquiry
     */
    select?: PropertyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyInquiry
     */
    omit?: PropertyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInquiryInclude<ExtArgs> | null
    /**
     * Filter, which PropertyInquiry to fetch.
     */
    where: PropertyInquiryWhereUniqueInput
  }

  /**
   * PropertyInquiry findUniqueOrThrow
   */
  export type PropertyInquiryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyInquiry
     */
    select?: PropertyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyInquiry
     */
    omit?: PropertyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInquiryInclude<ExtArgs> | null
    /**
     * Filter, which PropertyInquiry to fetch.
     */
    where: PropertyInquiryWhereUniqueInput
  }

  /**
   * PropertyInquiry findFirst
   */
  export type PropertyInquiryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyInquiry
     */
    select?: PropertyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyInquiry
     */
    omit?: PropertyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInquiryInclude<ExtArgs> | null
    /**
     * Filter, which PropertyInquiry to fetch.
     */
    where?: PropertyInquiryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyInquiries to fetch.
     */
    orderBy?: PropertyInquiryOrderByWithRelationInput | PropertyInquiryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyInquiries.
     */
    cursor?: PropertyInquiryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyInquiries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyInquiries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyInquiries.
     */
    distinct?: PropertyInquiryScalarFieldEnum | PropertyInquiryScalarFieldEnum[]
  }

  /**
   * PropertyInquiry findFirstOrThrow
   */
  export type PropertyInquiryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyInquiry
     */
    select?: PropertyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyInquiry
     */
    omit?: PropertyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInquiryInclude<ExtArgs> | null
    /**
     * Filter, which PropertyInquiry to fetch.
     */
    where?: PropertyInquiryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyInquiries to fetch.
     */
    orderBy?: PropertyInquiryOrderByWithRelationInput | PropertyInquiryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyInquiries.
     */
    cursor?: PropertyInquiryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyInquiries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyInquiries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyInquiries.
     */
    distinct?: PropertyInquiryScalarFieldEnum | PropertyInquiryScalarFieldEnum[]
  }

  /**
   * PropertyInquiry findMany
   */
  export type PropertyInquiryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyInquiry
     */
    select?: PropertyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyInquiry
     */
    omit?: PropertyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInquiryInclude<ExtArgs> | null
    /**
     * Filter, which PropertyInquiries to fetch.
     */
    where?: PropertyInquiryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyInquiries to fetch.
     */
    orderBy?: PropertyInquiryOrderByWithRelationInput | PropertyInquiryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PropertyInquiries.
     */
    cursor?: PropertyInquiryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyInquiries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyInquiries.
     */
    skip?: number
    distinct?: PropertyInquiryScalarFieldEnum | PropertyInquiryScalarFieldEnum[]
  }

  /**
   * PropertyInquiry create
   */
  export type PropertyInquiryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyInquiry
     */
    select?: PropertyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyInquiry
     */
    omit?: PropertyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInquiryInclude<ExtArgs> | null
    /**
     * The data needed to create a PropertyInquiry.
     */
    data: XOR<PropertyInquiryCreateInput, PropertyInquiryUncheckedCreateInput>
  }

  /**
   * PropertyInquiry createMany
   */
  export type PropertyInquiryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PropertyInquiries.
     */
    data: PropertyInquiryCreateManyInput | PropertyInquiryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PropertyInquiry createManyAndReturn
   */
  export type PropertyInquiryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyInquiry
     */
    select?: PropertyInquirySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyInquiry
     */
    omit?: PropertyInquiryOmit<ExtArgs> | null
    /**
     * The data used to create many PropertyInquiries.
     */
    data: PropertyInquiryCreateManyInput | PropertyInquiryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInquiryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PropertyInquiry update
   */
  export type PropertyInquiryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyInquiry
     */
    select?: PropertyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyInquiry
     */
    omit?: PropertyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInquiryInclude<ExtArgs> | null
    /**
     * The data needed to update a PropertyInquiry.
     */
    data: XOR<PropertyInquiryUpdateInput, PropertyInquiryUncheckedUpdateInput>
    /**
     * Choose, which PropertyInquiry to update.
     */
    where: PropertyInquiryWhereUniqueInput
  }

  /**
   * PropertyInquiry updateMany
   */
  export type PropertyInquiryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PropertyInquiries.
     */
    data: XOR<PropertyInquiryUpdateManyMutationInput, PropertyInquiryUncheckedUpdateManyInput>
    /**
     * Filter which PropertyInquiries to update
     */
    where?: PropertyInquiryWhereInput
    /**
     * Limit how many PropertyInquiries to update.
     */
    limit?: number
  }

  /**
   * PropertyInquiry updateManyAndReturn
   */
  export type PropertyInquiryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyInquiry
     */
    select?: PropertyInquirySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyInquiry
     */
    omit?: PropertyInquiryOmit<ExtArgs> | null
    /**
     * The data used to update PropertyInquiries.
     */
    data: XOR<PropertyInquiryUpdateManyMutationInput, PropertyInquiryUncheckedUpdateManyInput>
    /**
     * Filter which PropertyInquiries to update
     */
    where?: PropertyInquiryWhereInput
    /**
     * Limit how many PropertyInquiries to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInquiryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PropertyInquiry upsert
   */
  export type PropertyInquiryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyInquiry
     */
    select?: PropertyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyInquiry
     */
    omit?: PropertyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInquiryInclude<ExtArgs> | null
    /**
     * The filter to search for the PropertyInquiry to update in case it exists.
     */
    where: PropertyInquiryWhereUniqueInput
    /**
     * In case the PropertyInquiry found by the `where` argument doesn't exist, create a new PropertyInquiry with this data.
     */
    create: XOR<PropertyInquiryCreateInput, PropertyInquiryUncheckedCreateInput>
    /**
     * In case the PropertyInquiry was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PropertyInquiryUpdateInput, PropertyInquiryUncheckedUpdateInput>
  }

  /**
   * PropertyInquiry delete
   */
  export type PropertyInquiryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyInquiry
     */
    select?: PropertyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyInquiry
     */
    omit?: PropertyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInquiryInclude<ExtArgs> | null
    /**
     * Filter which PropertyInquiry to delete.
     */
    where: PropertyInquiryWhereUniqueInput
  }

  /**
   * PropertyInquiry deleteMany
   */
  export type PropertyInquiryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyInquiries to delete
     */
    where?: PropertyInquiryWhereInput
    /**
     * Limit how many PropertyInquiries to delete.
     */
    limit?: number
  }

  /**
   * PropertyInquiry without action
   */
  export type PropertyInquiryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyInquiry
     */
    select?: PropertyInquirySelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyInquiry
     */
    omit?: PropertyInquiryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInquiryInclude<ExtArgs> | null
  }


  /**
   * Model PropertyComparison
   */

  export type AggregatePropertyComparison = {
    _count: PropertyComparisonCountAggregateOutputType | null
    _min: PropertyComparisonMinAggregateOutputType | null
    _max: PropertyComparisonMaxAggregateOutputType | null
  }

  export type PropertyComparisonMinAggregateOutputType = {
    id: string | null
    name: string | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: string | null
  }

  export type PropertyComparisonMaxAggregateOutputType = {
    id: string | null
    name: string | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: string | null
  }

  export type PropertyComparisonCountAggregateOutputType = {
    id: number
    name: number
    notes: number
    createdAt: number
    updatedAt: number
    userId: number
    _all: number
  }


  export type PropertyComparisonMinAggregateInputType = {
    id?: true
    name?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
  }

  export type PropertyComparisonMaxAggregateInputType = {
    id?: true
    name?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
  }

  export type PropertyComparisonCountAggregateInputType = {
    id?: true
    name?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    _all?: true
  }

  export type PropertyComparisonAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyComparison to aggregate.
     */
    where?: PropertyComparisonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyComparisons to fetch.
     */
    orderBy?: PropertyComparisonOrderByWithRelationInput | PropertyComparisonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PropertyComparisonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyComparisons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyComparisons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PropertyComparisons
    **/
    _count?: true | PropertyComparisonCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PropertyComparisonMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PropertyComparisonMaxAggregateInputType
  }

  export type GetPropertyComparisonAggregateType<T extends PropertyComparisonAggregateArgs> = {
        [P in keyof T & keyof AggregatePropertyComparison]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePropertyComparison[P]>
      : GetScalarType<T[P], AggregatePropertyComparison[P]>
  }




  export type PropertyComparisonGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyComparisonWhereInput
    orderBy?: PropertyComparisonOrderByWithAggregationInput | PropertyComparisonOrderByWithAggregationInput[]
    by: PropertyComparisonScalarFieldEnum[] | PropertyComparisonScalarFieldEnum
    having?: PropertyComparisonScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PropertyComparisonCountAggregateInputType | true
    _min?: PropertyComparisonMinAggregateInputType
    _max?: PropertyComparisonMaxAggregateInputType
  }

  export type PropertyComparisonGroupByOutputType = {
    id: string
    name: string
    notes: string | null
    createdAt: Date
    updatedAt: Date
    userId: string
    _count: PropertyComparisonCountAggregateOutputType | null
    _min: PropertyComparisonMinAggregateOutputType | null
    _max: PropertyComparisonMaxAggregateOutputType | null
  }

  type GetPropertyComparisonGroupByPayload<T extends PropertyComparisonGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PropertyComparisonGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PropertyComparisonGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PropertyComparisonGroupByOutputType[P]>
            : GetScalarType<T[P], PropertyComparisonGroupByOutputType[P]>
        }
      >
    >


  export type PropertyComparisonSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    PropertyComparisonProperties?: boolean | PropertyComparison$PropertyComparisonPropertiesArgs<ExtArgs>
    _count?: boolean | PropertyComparisonCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyComparison"]>

  export type PropertyComparisonSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyComparison"]>

  export type PropertyComparisonSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyComparison"]>

  export type PropertyComparisonSelectScalar = {
    id?: boolean
    name?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
  }

  export type PropertyComparisonOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "notes" | "createdAt" | "updatedAt" | "userId", ExtArgs["result"]["propertyComparison"]>
  export type PropertyComparisonInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    PropertyComparisonProperties?: boolean | PropertyComparison$PropertyComparisonPropertiesArgs<ExtArgs>
    _count?: boolean | PropertyComparisonCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PropertyComparisonIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type PropertyComparisonIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $PropertyComparisonPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PropertyComparison"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      PropertyComparisonProperties: Prisma.$PropertyComparisonPropertiesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      notes: string | null
      createdAt: Date
      updatedAt: Date
      userId: string
    }, ExtArgs["result"]["propertyComparison"]>
    composites: {}
  }

  type PropertyComparisonGetPayload<S extends boolean | null | undefined | PropertyComparisonDefaultArgs> = $Result.GetResult<Prisma.$PropertyComparisonPayload, S>

  type PropertyComparisonCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PropertyComparisonFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PropertyComparisonCountAggregateInputType | true
    }

  export interface PropertyComparisonDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PropertyComparison'], meta: { name: 'PropertyComparison' } }
    /**
     * Find zero or one PropertyComparison that matches the filter.
     * @param {PropertyComparisonFindUniqueArgs} args - Arguments to find a PropertyComparison
     * @example
     * // Get one PropertyComparison
     * const propertyComparison = await prisma.propertyComparison.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PropertyComparisonFindUniqueArgs>(args: SelectSubset<T, PropertyComparisonFindUniqueArgs<ExtArgs>>): Prisma__PropertyComparisonClient<$Result.GetResult<Prisma.$PropertyComparisonPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PropertyComparison that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PropertyComparisonFindUniqueOrThrowArgs} args - Arguments to find a PropertyComparison
     * @example
     * // Get one PropertyComparison
     * const propertyComparison = await prisma.propertyComparison.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PropertyComparisonFindUniqueOrThrowArgs>(args: SelectSubset<T, PropertyComparisonFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PropertyComparisonClient<$Result.GetResult<Prisma.$PropertyComparisonPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyComparison that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyComparisonFindFirstArgs} args - Arguments to find a PropertyComparison
     * @example
     * // Get one PropertyComparison
     * const propertyComparison = await prisma.propertyComparison.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PropertyComparisonFindFirstArgs>(args?: SelectSubset<T, PropertyComparisonFindFirstArgs<ExtArgs>>): Prisma__PropertyComparisonClient<$Result.GetResult<Prisma.$PropertyComparisonPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyComparison that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyComparisonFindFirstOrThrowArgs} args - Arguments to find a PropertyComparison
     * @example
     * // Get one PropertyComparison
     * const propertyComparison = await prisma.propertyComparison.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PropertyComparisonFindFirstOrThrowArgs>(args?: SelectSubset<T, PropertyComparisonFindFirstOrThrowArgs<ExtArgs>>): Prisma__PropertyComparisonClient<$Result.GetResult<Prisma.$PropertyComparisonPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PropertyComparisons that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyComparisonFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PropertyComparisons
     * const propertyComparisons = await prisma.propertyComparison.findMany()
     * 
     * // Get first 10 PropertyComparisons
     * const propertyComparisons = await prisma.propertyComparison.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const propertyComparisonWithIdOnly = await prisma.propertyComparison.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PropertyComparisonFindManyArgs>(args?: SelectSubset<T, PropertyComparisonFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyComparisonPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PropertyComparison.
     * @param {PropertyComparisonCreateArgs} args - Arguments to create a PropertyComparison.
     * @example
     * // Create one PropertyComparison
     * const PropertyComparison = await prisma.propertyComparison.create({
     *   data: {
     *     // ... data to create a PropertyComparison
     *   }
     * })
     * 
     */
    create<T extends PropertyComparisonCreateArgs>(args: SelectSubset<T, PropertyComparisonCreateArgs<ExtArgs>>): Prisma__PropertyComparisonClient<$Result.GetResult<Prisma.$PropertyComparisonPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PropertyComparisons.
     * @param {PropertyComparisonCreateManyArgs} args - Arguments to create many PropertyComparisons.
     * @example
     * // Create many PropertyComparisons
     * const propertyComparison = await prisma.propertyComparison.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PropertyComparisonCreateManyArgs>(args?: SelectSubset<T, PropertyComparisonCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PropertyComparisons and returns the data saved in the database.
     * @param {PropertyComparisonCreateManyAndReturnArgs} args - Arguments to create many PropertyComparisons.
     * @example
     * // Create many PropertyComparisons
     * const propertyComparison = await prisma.propertyComparison.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PropertyComparisons and only return the `id`
     * const propertyComparisonWithIdOnly = await prisma.propertyComparison.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PropertyComparisonCreateManyAndReturnArgs>(args?: SelectSubset<T, PropertyComparisonCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyComparisonPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PropertyComparison.
     * @param {PropertyComparisonDeleteArgs} args - Arguments to delete one PropertyComparison.
     * @example
     * // Delete one PropertyComparison
     * const PropertyComparison = await prisma.propertyComparison.delete({
     *   where: {
     *     // ... filter to delete one PropertyComparison
     *   }
     * })
     * 
     */
    delete<T extends PropertyComparisonDeleteArgs>(args: SelectSubset<T, PropertyComparisonDeleteArgs<ExtArgs>>): Prisma__PropertyComparisonClient<$Result.GetResult<Prisma.$PropertyComparisonPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PropertyComparison.
     * @param {PropertyComparisonUpdateArgs} args - Arguments to update one PropertyComparison.
     * @example
     * // Update one PropertyComparison
     * const propertyComparison = await prisma.propertyComparison.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PropertyComparisonUpdateArgs>(args: SelectSubset<T, PropertyComparisonUpdateArgs<ExtArgs>>): Prisma__PropertyComparisonClient<$Result.GetResult<Prisma.$PropertyComparisonPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PropertyComparisons.
     * @param {PropertyComparisonDeleteManyArgs} args - Arguments to filter PropertyComparisons to delete.
     * @example
     * // Delete a few PropertyComparisons
     * const { count } = await prisma.propertyComparison.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PropertyComparisonDeleteManyArgs>(args?: SelectSubset<T, PropertyComparisonDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyComparisons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyComparisonUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PropertyComparisons
     * const propertyComparison = await prisma.propertyComparison.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PropertyComparisonUpdateManyArgs>(args: SelectSubset<T, PropertyComparisonUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyComparisons and returns the data updated in the database.
     * @param {PropertyComparisonUpdateManyAndReturnArgs} args - Arguments to update many PropertyComparisons.
     * @example
     * // Update many PropertyComparisons
     * const propertyComparison = await prisma.propertyComparison.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PropertyComparisons and only return the `id`
     * const propertyComparisonWithIdOnly = await prisma.propertyComparison.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PropertyComparisonUpdateManyAndReturnArgs>(args: SelectSubset<T, PropertyComparisonUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyComparisonPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PropertyComparison.
     * @param {PropertyComparisonUpsertArgs} args - Arguments to update or create a PropertyComparison.
     * @example
     * // Update or create a PropertyComparison
     * const propertyComparison = await prisma.propertyComparison.upsert({
     *   create: {
     *     // ... data to create a PropertyComparison
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PropertyComparison we want to update
     *   }
     * })
     */
    upsert<T extends PropertyComparisonUpsertArgs>(args: SelectSubset<T, PropertyComparisonUpsertArgs<ExtArgs>>): Prisma__PropertyComparisonClient<$Result.GetResult<Prisma.$PropertyComparisonPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PropertyComparisons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyComparisonCountArgs} args - Arguments to filter PropertyComparisons to count.
     * @example
     * // Count the number of PropertyComparisons
     * const count = await prisma.propertyComparison.count({
     *   where: {
     *     // ... the filter for the PropertyComparisons we want to count
     *   }
     * })
    **/
    count<T extends PropertyComparisonCountArgs>(
      args?: Subset<T, PropertyComparisonCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PropertyComparisonCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PropertyComparison.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyComparisonAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PropertyComparisonAggregateArgs>(args: Subset<T, PropertyComparisonAggregateArgs>): Prisma.PrismaPromise<GetPropertyComparisonAggregateType<T>>

    /**
     * Group by PropertyComparison.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyComparisonGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PropertyComparisonGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PropertyComparisonGroupByArgs['orderBy'] }
        : { orderBy?: PropertyComparisonGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PropertyComparisonGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPropertyComparisonGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PropertyComparison model
   */
  readonly fields: PropertyComparisonFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PropertyComparison.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PropertyComparisonClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    PropertyComparisonProperties<T extends PropertyComparison$PropertyComparisonPropertiesArgs<ExtArgs> = {}>(args?: Subset<T, PropertyComparison$PropertyComparisonPropertiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyComparisonPropertiesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PropertyComparison model
   */
  interface PropertyComparisonFieldRefs {
    readonly id: FieldRef<"PropertyComparison", 'String'>
    readonly name: FieldRef<"PropertyComparison", 'String'>
    readonly notes: FieldRef<"PropertyComparison", 'String'>
    readonly createdAt: FieldRef<"PropertyComparison", 'DateTime'>
    readonly updatedAt: FieldRef<"PropertyComparison", 'DateTime'>
    readonly userId: FieldRef<"PropertyComparison", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PropertyComparison findUnique
   */
  export type PropertyComparisonFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparison
     */
    select?: PropertyComparisonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparison
     */
    omit?: PropertyComparisonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonInclude<ExtArgs> | null
    /**
     * Filter, which PropertyComparison to fetch.
     */
    where: PropertyComparisonWhereUniqueInput
  }

  /**
   * PropertyComparison findUniqueOrThrow
   */
  export type PropertyComparisonFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparison
     */
    select?: PropertyComparisonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparison
     */
    omit?: PropertyComparisonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonInclude<ExtArgs> | null
    /**
     * Filter, which PropertyComparison to fetch.
     */
    where: PropertyComparisonWhereUniqueInput
  }

  /**
   * PropertyComparison findFirst
   */
  export type PropertyComparisonFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparison
     */
    select?: PropertyComparisonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparison
     */
    omit?: PropertyComparisonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonInclude<ExtArgs> | null
    /**
     * Filter, which PropertyComparison to fetch.
     */
    where?: PropertyComparisonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyComparisons to fetch.
     */
    orderBy?: PropertyComparisonOrderByWithRelationInput | PropertyComparisonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyComparisons.
     */
    cursor?: PropertyComparisonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyComparisons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyComparisons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyComparisons.
     */
    distinct?: PropertyComparisonScalarFieldEnum | PropertyComparisonScalarFieldEnum[]
  }

  /**
   * PropertyComparison findFirstOrThrow
   */
  export type PropertyComparisonFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparison
     */
    select?: PropertyComparisonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparison
     */
    omit?: PropertyComparisonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonInclude<ExtArgs> | null
    /**
     * Filter, which PropertyComparison to fetch.
     */
    where?: PropertyComparisonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyComparisons to fetch.
     */
    orderBy?: PropertyComparisonOrderByWithRelationInput | PropertyComparisonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyComparisons.
     */
    cursor?: PropertyComparisonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyComparisons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyComparisons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyComparisons.
     */
    distinct?: PropertyComparisonScalarFieldEnum | PropertyComparisonScalarFieldEnum[]
  }

  /**
   * PropertyComparison findMany
   */
  export type PropertyComparisonFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparison
     */
    select?: PropertyComparisonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparison
     */
    omit?: PropertyComparisonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonInclude<ExtArgs> | null
    /**
     * Filter, which PropertyComparisons to fetch.
     */
    where?: PropertyComparisonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyComparisons to fetch.
     */
    orderBy?: PropertyComparisonOrderByWithRelationInput | PropertyComparisonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PropertyComparisons.
     */
    cursor?: PropertyComparisonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyComparisons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyComparisons.
     */
    skip?: number
    distinct?: PropertyComparisonScalarFieldEnum | PropertyComparisonScalarFieldEnum[]
  }

  /**
   * PropertyComparison create
   */
  export type PropertyComparisonCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparison
     */
    select?: PropertyComparisonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparison
     */
    omit?: PropertyComparisonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonInclude<ExtArgs> | null
    /**
     * The data needed to create a PropertyComparison.
     */
    data: XOR<PropertyComparisonCreateInput, PropertyComparisonUncheckedCreateInput>
  }

  /**
   * PropertyComparison createMany
   */
  export type PropertyComparisonCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PropertyComparisons.
     */
    data: PropertyComparisonCreateManyInput | PropertyComparisonCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PropertyComparison createManyAndReturn
   */
  export type PropertyComparisonCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparison
     */
    select?: PropertyComparisonSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparison
     */
    omit?: PropertyComparisonOmit<ExtArgs> | null
    /**
     * The data used to create many PropertyComparisons.
     */
    data: PropertyComparisonCreateManyInput | PropertyComparisonCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PropertyComparison update
   */
  export type PropertyComparisonUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparison
     */
    select?: PropertyComparisonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparison
     */
    omit?: PropertyComparisonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonInclude<ExtArgs> | null
    /**
     * The data needed to update a PropertyComparison.
     */
    data: XOR<PropertyComparisonUpdateInput, PropertyComparisonUncheckedUpdateInput>
    /**
     * Choose, which PropertyComparison to update.
     */
    where: PropertyComparisonWhereUniqueInput
  }

  /**
   * PropertyComparison updateMany
   */
  export type PropertyComparisonUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PropertyComparisons.
     */
    data: XOR<PropertyComparisonUpdateManyMutationInput, PropertyComparisonUncheckedUpdateManyInput>
    /**
     * Filter which PropertyComparisons to update
     */
    where?: PropertyComparisonWhereInput
    /**
     * Limit how many PropertyComparisons to update.
     */
    limit?: number
  }

  /**
   * PropertyComparison updateManyAndReturn
   */
  export type PropertyComparisonUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparison
     */
    select?: PropertyComparisonSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparison
     */
    omit?: PropertyComparisonOmit<ExtArgs> | null
    /**
     * The data used to update PropertyComparisons.
     */
    data: XOR<PropertyComparisonUpdateManyMutationInput, PropertyComparisonUncheckedUpdateManyInput>
    /**
     * Filter which PropertyComparisons to update
     */
    where?: PropertyComparisonWhereInput
    /**
     * Limit how many PropertyComparisons to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PropertyComparison upsert
   */
  export type PropertyComparisonUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparison
     */
    select?: PropertyComparisonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparison
     */
    omit?: PropertyComparisonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonInclude<ExtArgs> | null
    /**
     * The filter to search for the PropertyComparison to update in case it exists.
     */
    where: PropertyComparisonWhereUniqueInput
    /**
     * In case the PropertyComparison found by the `where` argument doesn't exist, create a new PropertyComparison with this data.
     */
    create: XOR<PropertyComparisonCreateInput, PropertyComparisonUncheckedCreateInput>
    /**
     * In case the PropertyComparison was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PropertyComparisonUpdateInput, PropertyComparisonUncheckedUpdateInput>
  }

  /**
   * PropertyComparison delete
   */
  export type PropertyComparisonDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparison
     */
    select?: PropertyComparisonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparison
     */
    omit?: PropertyComparisonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonInclude<ExtArgs> | null
    /**
     * Filter which PropertyComparison to delete.
     */
    where: PropertyComparisonWhereUniqueInput
  }

  /**
   * PropertyComparison deleteMany
   */
  export type PropertyComparisonDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyComparisons to delete
     */
    where?: PropertyComparisonWhereInput
    /**
     * Limit how many PropertyComparisons to delete.
     */
    limit?: number
  }

  /**
   * PropertyComparison.PropertyComparisonProperties
   */
  export type PropertyComparison$PropertyComparisonPropertiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparisonProperties
     */
    select?: PropertyComparisonPropertiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparisonProperties
     */
    omit?: PropertyComparisonPropertiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonPropertiesInclude<ExtArgs> | null
    where?: PropertyComparisonPropertiesWhereInput
    orderBy?: PropertyComparisonPropertiesOrderByWithRelationInput | PropertyComparisonPropertiesOrderByWithRelationInput[]
    cursor?: PropertyComparisonPropertiesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PropertyComparisonPropertiesScalarFieldEnum | PropertyComparisonPropertiesScalarFieldEnum[]
  }

  /**
   * PropertyComparison without action
   */
  export type PropertyComparisonDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparison
     */
    select?: PropertyComparisonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparison
     */
    omit?: PropertyComparisonOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonInclude<ExtArgs> | null
  }


  /**
   * Model PropertyComparisonProperties
   */

  export type AggregatePropertyComparisonProperties = {
    _count: PropertyComparisonPropertiesCountAggregateOutputType | null
    _min: PropertyComparisonPropertiesMinAggregateOutputType | null
    _max: PropertyComparisonPropertiesMaxAggregateOutputType | null
  }

  export type PropertyComparisonPropertiesMinAggregateOutputType = {
    id: string | null
    propertyComparisonId: string | null
    propertyId: string | null
  }

  export type PropertyComparisonPropertiesMaxAggregateOutputType = {
    id: string | null
    propertyComparisonId: string | null
    propertyId: string | null
  }

  export type PropertyComparisonPropertiesCountAggregateOutputType = {
    id: number
    propertyComparisonId: number
    propertyId: number
    _all: number
  }


  export type PropertyComparisonPropertiesMinAggregateInputType = {
    id?: true
    propertyComparisonId?: true
    propertyId?: true
  }

  export type PropertyComparisonPropertiesMaxAggregateInputType = {
    id?: true
    propertyComparisonId?: true
    propertyId?: true
  }

  export type PropertyComparisonPropertiesCountAggregateInputType = {
    id?: true
    propertyComparisonId?: true
    propertyId?: true
    _all?: true
  }

  export type PropertyComparisonPropertiesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyComparisonProperties to aggregate.
     */
    where?: PropertyComparisonPropertiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyComparisonProperties to fetch.
     */
    orderBy?: PropertyComparisonPropertiesOrderByWithRelationInput | PropertyComparisonPropertiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PropertyComparisonPropertiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyComparisonProperties from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyComparisonProperties.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PropertyComparisonProperties
    **/
    _count?: true | PropertyComparisonPropertiesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PropertyComparisonPropertiesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PropertyComparisonPropertiesMaxAggregateInputType
  }

  export type GetPropertyComparisonPropertiesAggregateType<T extends PropertyComparisonPropertiesAggregateArgs> = {
        [P in keyof T & keyof AggregatePropertyComparisonProperties]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePropertyComparisonProperties[P]>
      : GetScalarType<T[P], AggregatePropertyComparisonProperties[P]>
  }




  export type PropertyComparisonPropertiesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyComparisonPropertiesWhereInput
    orderBy?: PropertyComparisonPropertiesOrderByWithAggregationInput | PropertyComparisonPropertiesOrderByWithAggregationInput[]
    by: PropertyComparisonPropertiesScalarFieldEnum[] | PropertyComparisonPropertiesScalarFieldEnum
    having?: PropertyComparisonPropertiesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PropertyComparisonPropertiesCountAggregateInputType | true
    _min?: PropertyComparisonPropertiesMinAggregateInputType
    _max?: PropertyComparisonPropertiesMaxAggregateInputType
  }

  export type PropertyComparisonPropertiesGroupByOutputType = {
    id: string
    propertyComparisonId: string
    propertyId: string
    _count: PropertyComparisonPropertiesCountAggregateOutputType | null
    _min: PropertyComparisonPropertiesMinAggregateOutputType | null
    _max: PropertyComparisonPropertiesMaxAggregateOutputType | null
  }

  type GetPropertyComparisonPropertiesGroupByPayload<T extends PropertyComparisonPropertiesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PropertyComparisonPropertiesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PropertyComparisonPropertiesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PropertyComparisonPropertiesGroupByOutputType[P]>
            : GetScalarType<T[P], PropertyComparisonPropertiesGroupByOutputType[P]>
        }
      >
    >


  export type PropertyComparisonPropertiesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    propertyComparisonId?: boolean
    propertyId?: boolean
    propertyComparison?: boolean | PropertyComparisonDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyComparisonProperties"]>

  export type PropertyComparisonPropertiesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    propertyComparisonId?: boolean
    propertyId?: boolean
    propertyComparison?: boolean | PropertyComparisonDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyComparisonProperties"]>

  export type PropertyComparisonPropertiesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    propertyComparisonId?: boolean
    propertyId?: boolean
    propertyComparison?: boolean | PropertyComparisonDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyComparisonProperties"]>

  export type PropertyComparisonPropertiesSelectScalar = {
    id?: boolean
    propertyComparisonId?: boolean
    propertyId?: boolean
  }

  export type PropertyComparisonPropertiesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "propertyComparisonId" | "propertyId", ExtArgs["result"]["propertyComparisonProperties"]>
  export type PropertyComparisonPropertiesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    propertyComparison?: boolean | PropertyComparisonDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }
  export type PropertyComparisonPropertiesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    propertyComparison?: boolean | PropertyComparisonDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }
  export type PropertyComparisonPropertiesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    propertyComparison?: boolean | PropertyComparisonDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }

  export type $PropertyComparisonPropertiesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PropertyComparisonProperties"
    objects: {
      propertyComparison: Prisma.$PropertyComparisonPayload<ExtArgs>
      property: Prisma.$PropertyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      propertyComparisonId: string
      propertyId: string
    }, ExtArgs["result"]["propertyComparisonProperties"]>
    composites: {}
  }

  type PropertyComparisonPropertiesGetPayload<S extends boolean | null | undefined | PropertyComparisonPropertiesDefaultArgs> = $Result.GetResult<Prisma.$PropertyComparisonPropertiesPayload, S>

  type PropertyComparisonPropertiesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PropertyComparisonPropertiesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PropertyComparisonPropertiesCountAggregateInputType | true
    }

  export interface PropertyComparisonPropertiesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PropertyComparisonProperties'], meta: { name: 'PropertyComparisonProperties' } }
    /**
     * Find zero or one PropertyComparisonProperties that matches the filter.
     * @param {PropertyComparisonPropertiesFindUniqueArgs} args - Arguments to find a PropertyComparisonProperties
     * @example
     * // Get one PropertyComparisonProperties
     * const propertyComparisonProperties = await prisma.propertyComparisonProperties.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PropertyComparisonPropertiesFindUniqueArgs>(args: SelectSubset<T, PropertyComparisonPropertiesFindUniqueArgs<ExtArgs>>): Prisma__PropertyComparisonPropertiesClient<$Result.GetResult<Prisma.$PropertyComparisonPropertiesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PropertyComparisonProperties that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PropertyComparisonPropertiesFindUniqueOrThrowArgs} args - Arguments to find a PropertyComparisonProperties
     * @example
     * // Get one PropertyComparisonProperties
     * const propertyComparisonProperties = await prisma.propertyComparisonProperties.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PropertyComparisonPropertiesFindUniqueOrThrowArgs>(args: SelectSubset<T, PropertyComparisonPropertiesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PropertyComparisonPropertiesClient<$Result.GetResult<Prisma.$PropertyComparisonPropertiesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyComparisonProperties that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyComparisonPropertiesFindFirstArgs} args - Arguments to find a PropertyComparisonProperties
     * @example
     * // Get one PropertyComparisonProperties
     * const propertyComparisonProperties = await prisma.propertyComparisonProperties.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PropertyComparisonPropertiesFindFirstArgs>(args?: SelectSubset<T, PropertyComparisonPropertiesFindFirstArgs<ExtArgs>>): Prisma__PropertyComparisonPropertiesClient<$Result.GetResult<Prisma.$PropertyComparisonPropertiesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyComparisonProperties that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyComparisonPropertiesFindFirstOrThrowArgs} args - Arguments to find a PropertyComparisonProperties
     * @example
     * // Get one PropertyComparisonProperties
     * const propertyComparisonProperties = await prisma.propertyComparisonProperties.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PropertyComparisonPropertiesFindFirstOrThrowArgs>(args?: SelectSubset<T, PropertyComparisonPropertiesFindFirstOrThrowArgs<ExtArgs>>): Prisma__PropertyComparisonPropertiesClient<$Result.GetResult<Prisma.$PropertyComparisonPropertiesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PropertyComparisonProperties that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyComparisonPropertiesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PropertyComparisonProperties
     * const propertyComparisonProperties = await prisma.propertyComparisonProperties.findMany()
     * 
     * // Get first 10 PropertyComparisonProperties
     * const propertyComparisonProperties = await prisma.propertyComparisonProperties.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const propertyComparisonPropertiesWithIdOnly = await prisma.propertyComparisonProperties.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PropertyComparisonPropertiesFindManyArgs>(args?: SelectSubset<T, PropertyComparisonPropertiesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyComparisonPropertiesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PropertyComparisonProperties.
     * @param {PropertyComparisonPropertiesCreateArgs} args - Arguments to create a PropertyComparisonProperties.
     * @example
     * // Create one PropertyComparisonProperties
     * const PropertyComparisonProperties = await prisma.propertyComparisonProperties.create({
     *   data: {
     *     // ... data to create a PropertyComparisonProperties
     *   }
     * })
     * 
     */
    create<T extends PropertyComparisonPropertiesCreateArgs>(args: SelectSubset<T, PropertyComparisonPropertiesCreateArgs<ExtArgs>>): Prisma__PropertyComparisonPropertiesClient<$Result.GetResult<Prisma.$PropertyComparisonPropertiesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PropertyComparisonProperties.
     * @param {PropertyComparisonPropertiesCreateManyArgs} args - Arguments to create many PropertyComparisonProperties.
     * @example
     * // Create many PropertyComparisonProperties
     * const propertyComparisonProperties = await prisma.propertyComparisonProperties.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PropertyComparisonPropertiesCreateManyArgs>(args?: SelectSubset<T, PropertyComparisonPropertiesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PropertyComparisonProperties and returns the data saved in the database.
     * @param {PropertyComparisonPropertiesCreateManyAndReturnArgs} args - Arguments to create many PropertyComparisonProperties.
     * @example
     * // Create many PropertyComparisonProperties
     * const propertyComparisonProperties = await prisma.propertyComparisonProperties.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PropertyComparisonProperties and only return the `id`
     * const propertyComparisonPropertiesWithIdOnly = await prisma.propertyComparisonProperties.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PropertyComparisonPropertiesCreateManyAndReturnArgs>(args?: SelectSubset<T, PropertyComparisonPropertiesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyComparisonPropertiesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PropertyComparisonProperties.
     * @param {PropertyComparisonPropertiesDeleteArgs} args - Arguments to delete one PropertyComparisonProperties.
     * @example
     * // Delete one PropertyComparisonProperties
     * const PropertyComparisonProperties = await prisma.propertyComparisonProperties.delete({
     *   where: {
     *     // ... filter to delete one PropertyComparisonProperties
     *   }
     * })
     * 
     */
    delete<T extends PropertyComparisonPropertiesDeleteArgs>(args: SelectSubset<T, PropertyComparisonPropertiesDeleteArgs<ExtArgs>>): Prisma__PropertyComparisonPropertiesClient<$Result.GetResult<Prisma.$PropertyComparisonPropertiesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PropertyComparisonProperties.
     * @param {PropertyComparisonPropertiesUpdateArgs} args - Arguments to update one PropertyComparisonProperties.
     * @example
     * // Update one PropertyComparisonProperties
     * const propertyComparisonProperties = await prisma.propertyComparisonProperties.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PropertyComparisonPropertiesUpdateArgs>(args: SelectSubset<T, PropertyComparisonPropertiesUpdateArgs<ExtArgs>>): Prisma__PropertyComparisonPropertiesClient<$Result.GetResult<Prisma.$PropertyComparisonPropertiesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PropertyComparisonProperties.
     * @param {PropertyComparisonPropertiesDeleteManyArgs} args - Arguments to filter PropertyComparisonProperties to delete.
     * @example
     * // Delete a few PropertyComparisonProperties
     * const { count } = await prisma.propertyComparisonProperties.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PropertyComparisonPropertiesDeleteManyArgs>(args?: SelectSubset<T, PropertyComparisonPropertiesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyComparisonProperties.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyComparisonPropertiesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PropertyComparisonProperties
     * const propertyComparisonProperties = await prisma.propertyComparisonProperties.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PropertyComparisonPropertiesUpdateManyArgs>(args: SelectSubset<T, PropertyComparisonPropertiesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyComparisonProperties and returns the data updated in the database.
     * @param {PropertyComparisonPropertiesUpdateManyAndReturnArgs} args - Arguments to update many PropertyComparisonProperties.
     * @example
     * // Update many PropertyComparisonProperties
     * const propertyComparisonProperties = await prisma.propertyComparisonProperties.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PropertyComparisonProperties and only return the `id`
     * const propertyComparisonPropertiesWithIdOnly = await prisma.propertyComparisonProperties.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PropertyComparisonPropertiesUpdateManyAndReturnArgs>(args: SelectSubset<T, PropertyComparisonPropertiesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyComparisonPropertiesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PropertyComparisonProperties.
     * @param {PropertyComparisonPropertiesUpsertArgs} args - Arguments to update or create a PropertyComparisonProperties.
     * @example
     * // Update or create a PropertyComparisonProperties
     * const propertyComparisonProperties = await prisma.propertyComparisonProperties.upsert({
     *   create: {
     *     // ... data to create a PropertyComparisonProperties
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PropertyComparisonProperties we want to update
     *   }
     * })
     */
    upsert<T extends PropertyComparisonPropertiesUpsertArgs>(args: SelectSubset<T, PropertyComparisonPropertiesUpsertArgs<ExtArgs>>): Prisma__PropertyComparisonPropertiesClient<$Result.GetResult<Prisma.$PropertyComparisonPropertiesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PropertyComparisonProperties.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyComparisonPropertiesCountArgs} args - Arguments to filter PropertyComparisonProperties to count.
     * @example
     * // Count the number of PropertyComparisonProperties
     * const count = await prisma.propertyComparisonProperties.count({
     *   where: {
     *     // ... the filter for the PropertyComparisonProperties we want to count
     *   }
     * })
    **/
    count<T extends PropertyComparisonPropertiesCountArgs>(
      args?: Subset<T, PropertyComparisonPropertiesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PropertyComparisonPropertiesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PropertyComparisonProperties.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyComparisonPropertiesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PropertyComparisonPropertiesAggregateArgs>(args: Subset<T, PropertyComparisonPropertiesAggregateArgs>): Prisma.PrismaPromise<GetPropertyComparisonPropertiesAggregateType<T>>

    /**
     * Group by PropertyComparisonProperties.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyComparisonPropertiesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PropertyComparisonPropertiesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PropertyComparisonPropertiesGroupByArgs['orderBy'] }
        : { orderBy?: PropertyComparisonPropertiesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PropertyComparisonPropertiesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPropertyComparisonPropertiesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PropertyComparisonProperties model
   */
  readonly fields: PropertyComparisonPropertiesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PropertyComparisonProperties.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PropertyComparisonPropertiesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    propertyComparison<T extends PropertyComparisonDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PropertyComparisonDefaultArgs<ExtArgs>>): Prisma__PropertyComparisonClient<$Result.GetResult<Prisma.$PropertyComparisonPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    property<T extends PropertyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PropertyDefaultArgs<ExtArgs>>): Prisma__PropertyClient<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PropertyComparisonProperties model
   */
  interface PropertyComparisonPropertiesFieldRefs {
    readonly id: FieldRef<"PropertyComparisonProperties", 'String'>
    readonly propertyComparisonId: FieldRef<"PropertyComparisonProperties", 'String'>
    readonly propertyId: FieldRef<"PropertyComparisonProperties", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PropertyComparisonProperties findUnique
   */
  export type PropertyComparisonPropertiesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparisonProperties
     */
    select?: PropertyComparisonPropertiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparisonProperties
     */
    omit?: PropertyComparisonPropertiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonPropertiesInclude<ExtArgs> | null
    /**
     * Filter, which PropertyComparisonProperties to fetch.
     */
    where: PropertyComparisonPropertiesWhereUniqueInput
  }

  /**
   * PropertyComparisonProperties findUniqueOrThrow
   */
  export type PropertyComparisonPropertiesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparisonProperties
     */
    select?: PropertyComparisonPropertiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparisonProperties
     */
    omit?: PropertyComparisonPropertiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonPropertiesInclude<ExtArgs> | null
    /**
     * Filter, which PropertyComparisonProperties to fetch.
     */
    where: PropertyComparisonPropertiesWhereUniqueInput
  }

  /**
   * PropertyComparisonProperties findFirst
   */
  export type PropertyComparisonPropertiesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparisonProperties
     */
    select?: PropertyComparisonPropertiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparisonProperties
     */
    omit?: PropertyComparisonPropertiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonPropertiesInclude<ExtArgs> | null
    /**
     * Filter, which PropertyComparisonProperties to fetch.
     */
    where?: PropertyComparisonPropertiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyComparisonProperties to fetch.
     */
    orderBy?: PropertyComparisonPropertiesOrderByWithRelationInput | PropertyComparisonPropertiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyComparisonProperties.
     */
    cursor?: PropertyComparisonPropertiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyComparisonProperties from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyComparisonProperties.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyComparisonProperties.
     */
    distinct?: PropertyComparisonPropertiesScalarFieldEnum | PropertyComparisonPropertiesScalarFieldEnum[]
  }

  /**
   * PropertyComparisonProperties findFirstOrThrow
   */
  export type PropertyComparisonPropertiesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparisonProperties
     */
    select?: PropertyComparisonPropertiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparisonProperties
     */
    omit?: PropertyComparisonPropertiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonPropertiesInclude<ExtArgs> | null
    /**
     * Filter, which PropertyComparisonProperties to fetch.
     */
    where?: PropertyComparisonPropertiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyComparisonProperties to fetch.
     */
    orderBy?: PropertyComparisonPropertiesOrderByWithRelationInput | PropertyComparisonPropertiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyComparisonProperties.
     */
    cursor?: PropertyComparisonPropertiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyComparisonProperties from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyComparisonProperties.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyComparisonProperties.
     */
    distinct?: PropertyComparisonPropertiesScalarFieldEnum | PropertyComparisonPropertiesScalarFieldEnum[]
  }

  /**
   * PropertyComparisonProperties findMany
   */
  export type PropertyComparisonPropertiesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparisonProperties
     */
    select?: PropertyComparisonPropertiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparisonProperties
     */
    omit?: PropertyComparisonPropertiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonPropertiesInclude<ExtArgs> | null
    /**
     * Filter, which PropertyComparisonProperties to fetch.
     */
    where?: PropertyComparisonPropertiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyComparisonProperties to fetch.
     */
    orderBy?: PropertyComparisonPropertiesOrderByWithRelationInput | PropertyComparisonPropertiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PropertyComparisonProperties.
     */
    cursor?: PropertyComparisonPropertiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyComparisonProperties from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyComparisonProperties.
     */
    skip?: number
    distinct?: PropertyComparisonPropertiesScalarFieldEnum | PropertyComparisonPropertiesScalarFieldEnum[]
  }

  /**
   * PropertyComparisonProperties create
   */
  export type PropertyComparisonPropertiesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparisonProperties
     */
    select?: PropertyComparisonPropertiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparisonProperties
     */
    omit?: PropertyComparisonPropertiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonPropertiesInclude<ExtArgs> | null
    /**
     * The data needed to create a PropertyComparisonProperties.
     */
    data: XOR<PropertyComparisonPropertiesCreateInput, PropertyComparisonPropertiesUncheckedCreateInput>
  }

  /**
   * PropertyComparisonProperties createMany
   */
  export type PropertyComparisonPropertiesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PropertyComparisonProperties.
     */
    data: PropertyComparisonPropertiesCreateManyInput | PropertyComparisonPropertiesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PropertyComparisonProperties createManyAndReturn
   */
  export type PropertyComparisonPropertiesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparisonProperties
     */
    select?: PropertyComparisonPropertiesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparisonProperties
     */
    omit?: PropertyComparisonPropertiesOmit<ExtArgs> | null
    /**
     * The data used to create many PropertyComparisonProperties.
     */
    data: PropertyComparisonPropertiesCreateManyInput | PropertyComparisonPropertiesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonPropertiesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PropertyComparisonProperties update
   */
  export type PropertyComparisonPropertiesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparisonProperties
     */
    select?: PropertyComparisonPropertiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparisonProperties
     */
    omit?: PropertyComparisonPropertiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonPropertiesInclude<ExtArgs> | null
    /**
     * The data needed to update a PropertyComparisonProperties.
     */
    data: XOR<PropertyComparisonPropertiesUpdateInput, PropertyComparisonPropertiesUncheckedUpdateInput>
    /**
     * Choose, which PropertyComparisonProperties to update.
     */
    where: PropertyComparisonPropertiesWhereUniqueInput
  }

  /**
   * PropertyComparisonProperties updateMany
   */
  export type PropertyComparisonPropertiesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PropertyComparisonProperties.
     */
    data: XOR<PropertyComparisonPropertiesUpdateManyMutationInput, PropertyComparisonPropertiesUncheckedUpdateManyInput>
    /**
     * Filter which PropertyComparisonProperties to update
     */
    where?: PropertyComparisonPropertiesWhereInput
    /**
     * Limit how many PropertyComparisonProperties to update.
     */
    limit?: number
  }

  /**
   * PropertyComparisonProperties updateManyAndReturn
   */
  export type PropertyComparisonPropertiesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparisonProperties
     */
    select?: PropertyComparisonPropertiesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparisonProperties
     */
    omit?: PropertyComparisonPropertiesOmit<ExtArgs> | null
    /**
     * The data used to update PropertyComparisonProperties.
     */
    data: XOR<PropertyComparisonPropertiesUpdateManyMutationInput, PropertyComparisonPropertiesUncheckedUpdateManyInput>
    /**
     * Filter which PropertyComparisonProperties to update
     */
    where?: PropertyComparisonPropertiesWhereInput
    /**
     * Limit how many PropertyComparisonProperties to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonPropertiesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PropertyComparisonProperties upsert
   */
  export type PropertyComparisonPropertiesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparisonProperties
     */
    select?: PropertyComparisonPropertiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparisonProperties
     */
    omit?: PropertyComparisonPropertiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonPropertiesInclude<ExtArgs> | null
    /**
     * The filter to search for the PropertyComparisonProperties to update in case it exists.
     */
    where: PropertyComparisonPropertiesWhereUniqueInput
    /**
     * In case the PropertyComparisonProperties found by the `where` argument doesn't exist, create a new PropertyComparisonProperties with this data.
     */
    create: XOR<PropertyComparisonPropertiesCreateInput, PropertyComparisonPropertiesUncheckedCreateInput>
    /**
     * In case the PropertyComparisonProperties was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PropertyComparisonPropertiesUpdateInput, PropertyComparisonPropertiesUncheckedUpdateInput>
  }

  /**
   * PropertyComparisonProperties delete
   */
  export type PropertyComparisonPropertiesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparisonProperties
     */
    select?: PropertyComparisonPropertiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparisonProperties
     */
    omit?: PropertyComparisonPropertiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonPropertiesInclude<ExtArgs> | null
    /**
     * Filter which PropertyComparisonProperties to delete.
     */
    where: PropertyComparisonPropertiesWhereUniqueInput
  }

  /**
   * PropertyComparisonProperties deleteMany
   */
  export type PropertyComparisonPropertiesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyComparisonProperties to delete
     */
    where?: PropertyComparisonPropertiesWhereInput
    /**
     * Limit how many PropertyComparisonProperties to delete.
     */
    limit?: number
  }

  /**
   * PropertyComparisonProperties without action
   */
  export type PropertyComparisonPropertiesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComparisonProperties
     */
    select?: PropertyComparisonPropertiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComparisonProperties
     */
    omit?: PropertyComparisonPropertiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyComparisonPropertiesInclude<ExtArgs> | null
  }


  /**
   * Model PropertyReview
   */

  export type AggregatePropertyReview = {
    _count: PropertyReviewCountAggregateOutputType | null
    _avg: PropertyReviewAvgAggregateOutputType | null
    _sum: PropertyReviewSumAggregateOutputType | null
    _min: PropertyReviewMinAggregateOutputType | null
    _max: PropertyReviewMaxAggregateOutputType | null
  }

  export type PropertyReviewAvgAggregateOutputType = {
    rating: number | null
  }

  export type PropertyReviewSumAggregateOutputType = {
    rating: number | null
  }

  export type PropertyReviewMinAggregateOutputType = {
    id: string | null
    rating: number | null
    title: string | null
    comment: string | null
    isVerified: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    reviewerId: string | null
    propertyId: string | null
    userId: string | null
  }

  export type PropertyReviewMaxAggregateOutputType = {
    id: string | null
    rating: number | null
    title: string | null
    comment: string | null
    isVerified: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    reviewerId: string | null
    propertyId: string | null
    userId: string | null
  }

  export type PropertyReviewCountAggregateOutputType = {
    id: number
    rating: number
    title: number
    comment: number
    isVerified: number
    createdAt: number
    updatedAt: number
    reviewerId: number
    propertyId: number
    userId: number
    _all: number
  }


  export type PropertyReviewAvgAggregateInputType = {
    rating?: true
  }

  export type PropertyReviewSumAggregateInputType = {
    rating?: true
  }

  export type PropertyReviewMinAggregateInputType = {
    id?: true
    rating?: true
    title?: true
    comment?: true
    isVerified?: true
    createdAt?: true
    updatedAt?: true
    reviewerId?: true
    propertyId?: true
    userId?: true
  }

  export type PropertyReviewMaxAggregateInputType = {
    id?: true
    rating?: true
    title?: true
    comment?: true
    isVerified?: true
    createdAt?: true
    updatedAt?: true
    reviewerId?: true
    propertyId?: true
    userId?: true
  }

  export type PropertyReviewCountAggregateInputType = {
    id?: true
    rating?: true
    title?: true
    comment?: true
    isVerified?: true
    createdAt?: true
    updatedAt?: true
    reviewerId?: true
    propertyId?: true
    userId?: true
    _all?: true
  }

  export type PropertyReviewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyReview to aggregate.
     */
    where?: PropertyReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyReviews to fetch.
     */
    orderBy?: PropertyReviewOrderByWithRelationInput | PropertyReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PropertyReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyReviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyReviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PropertyReviews
    **/
    _count?: true | PropertyReviewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PropertyReviewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PropertyReviewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PropertyReviewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PropertyReviewMaxAggregateInputType
  }

  export type GetPropertyReviewAggregateType<T extends PropertyReviewAggregateArgs> = {
        [P in keyof T & keyof AggregatePropertyReview]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePropertyReview[P]>
      : GetScalarType<T[P], AggregatePropertyReview[P]>
  }




  export type PropertyReviewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyReviewWhereInput
    orderBy?: PropertyReviewOrderByWithAggregationInput | PropertyReviewOrderByWithAggregationInput[]
    by: PropertyReviewScalarFieldEnum[] | PropertyReviewScalarFieldEnum
    having?: PropertyReviewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PropertyReviewCountAggregateInputType | true
    _avg?: PropertyReviewAvgAggregateInputType
    _sum?: PropertyReviewSumAggregateInputType
    _min?: PropertyReviewMinAggregateInputType
    _max?: PropertyReviewMaxAggregateInputType
  }

  export type PropertyReviewGroupByOutputType = {
    id: string
    rating: number
    title: string
    comment: string
    isVerified: boolean
    createdAt: Date
    updatedAt: Date
    reviewerId: string
    propertyId: string
    userId: string
    _count: PropertyReviewCountAggregateOutputType | null
    _avg: PropertyReviewAvgAggregateOutputType | null
    _sum: PropertyReviewSumAggregateOutputType | null
    _min: PropertyReviewMinAggregateOutputType | null
    _max: PropertyReviewMaxAggregateOutputType | null
  }

  type GetPropertyReviewGroupByPayload<T extends PropertyReviewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PropertyReviewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PropertyReviewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PropertyReviewGroupByOutputType[P]>
            : GetScalarType<T[P], PropertyReviewGroupByOutputType[P]>
        }
      >
    >


  export type PropertyReviewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rating?: boolean
    title?: boolean
    comment?: boolean
    isVerified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    reviewerId?: boolean
    propertyId?: boolean
    userId?: boolean
    reviewer?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyReview"]>

  export type PropertyReviewSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rating?: boolean
    title?: boolean
    comment?: boolean
    isVerified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    reviewerId?: boolean
    propertyId?: boolean
    userId?: boolean
    reviewer?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyReview"]>

  export type PropertyReviewSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rating?: boolean
    title?: boolean
    comment?: boolean
    isVerified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    reviewerId?: boolean
    propertyId?: boolean
    userId?: boolean
    reviewer?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyReview"]>

  export type PropertyReviewSelectScalar = {
    id?: boolean
    rating?: boolean
    title?: boolean
    comment?: boolean
    isVerified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    reviewerId?: boolean
    propertyId?: boolean
    userId?: boolean
  }

  export type PropertyReviewOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "rating" | "title" | "comment" | "isVerified" | "createdAt" | "updatedAt" | "reviewerId" | "propertyId" | "userId", ExtArgs["result"]["propertyReview"]>
  export type PropertyReviewInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reviewer?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }
  export type PropertyReviewIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reviewer?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }
  export type PropertyReviewIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reviewer?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }

  export type $PropertyReviewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PropertyReview"
    objects: {
      reviewer: Prisma.$UserPayload<ExtArgs>
      property: Prisma.$PropertyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      rating: number
      title: string
      comment: string
      isVerified: boolean
      createdAt: Date
      updatedAt: Date
      reviewerId: string
      propertyId: string
      userId: string
    }, ExtArgs["result"]["propertyReview"]>
    composites: {}
  }

  type PropertyReviewGetPayload<S extends boolean | null | undefined | PropertyReviewDefaultArgs> = $Result.GetResult<Prisma.$PropertyReviewPayload, S>

  type PropertyReviewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PropertyReviewFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PropertyReviewCountAggregateInputType | true
    }

  export interface PropertyReviewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PropertyReview'], meta: { name: 'PropertyReview' } }
    /**
     * Find zero or one PropertyReview that matches the filter.
     * @param {PropertyReviewFindUniqueArgs} args - Arguments to find a PropertyReview
     * @example
     * // Get one PropertyReview
     * const propertyReview = await prisma.propertyReview.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PropertyReviewFindUniqueArgs>(args: SelectSubset<T, PropertyReviewFindUniqueArgs<ExtArgs>>): Prisma__PropertyReviewClient<$Result.GetResult<Prisma.$PropertyReviewPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PropertyReview that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PropertyReviewFindUniqueOrThrowArgs} args - Arguments to find a PropertyReview
     * @example
     * // Get one PropertyReview
     * const propertyReview = await prisma.propertyReview.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PropertyReviewFindUniqueOrThrowArgs>(args: SelectSubset<T, PropertyReviewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PropertyReviewClient<$Result.GetResult<Prisma.$PropertyReviewPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyReview that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyReviewFindFirstArgs} args - Arguments to find a PropertyReview
     * @example
     * // Get one PropertyReview
     * const propertyReview = await prisma.propertyReview.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PropertyReviewFindFirstArgs>(args?: SelectSubset<T, PropertyReviewFindFirstArgs<ExtArgs>>): Prisma__PropertyReviewClient<$Result.GetResult<Prisma.$PropertyReviewPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyReview that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyReviewFindFirstOrThrowArgs} args - Arguments to find a PropertyReview
     * @example
     * // Get one PropertyReview
     * const propertyReview = await prisma.propertyReview.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PropertyReviewFindFirstOrThrowArgs>(args?: SelectSubset<T, PropertyReviewFindFirstOrThrowArgs<ExtArgs>>): Prisma__PropertyReviewClient<$Result.GetResult<Prisma.$PropertyReviewPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PropertyReviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyReviewFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PropertyReviews
     * const propertyReviews = await prisma.propertyReview.findMany()
     * 
     * // Get first 10 PropertyReviews
     * const propertyReviews = await prisma.propertyReview.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const propertyReviewWithIdOnly = await prisma.propertyReview.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PropertyReviewFindManyArgs>(args?: SelectSubset<T, PropertyReviewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PropertyReview.
     * @param {PropertyReviewCreateArgs} args - Arguments to create a PropertyReview.
     * @example
     * // Create one PropertyReview
     * const PropertyReview = await prisma.propertyReview.create({
     *   data: {
     *     // ... data to create a PropertyReview
     *   }
     * })
     * 
     */
    create<T extends PropertyReviewCreateArgs>(args: SelectSubset<T, PropertyReviewCreateArgs<ExtArgs>>): Prisma__PropertyReviewClient<$Result.GetResult<Prisma.$PropertyReviewPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PropertyReviews.
     * @param {PropertyReviewCreateManyArgs} args - Arguments to create many PropertyReviews.
     * @example
     * // Create many PropertyReviews
     * const propertyReview = await prisma.propertyReview.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PropertyReviewCreateManyArgs>(args?: SelectSubset<T, PropertyReviewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PropertyReviews and returns the data saved in the database.
     * @param {PropertyReviewCreateManyAndReturnArgs} args - Arguments to create many PropertyReviews.
     * @example
     * // Create many PropertyReviews
     * const propertyReview = await prisma.propertyReview.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PropertyReviews and only return the `id`
     * const propertyReviewWithIdOnly = await prisma.propertyReview.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PropertyReviewCreateManyAndReturnArgs>(args?: SelectSubset<T, PropertyReviewCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyReviewPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PropertyReview.
     * @param {PropertyReviewDeleteArgs} args - Arguments to delete one PropertyReview.
     * @example
     * // Delete one PropertyReview
     * const PropertyReview = await prisma.propertyReview.delete({
     *   where: {
     *     // ... filter to delete one PropertyReview
     *   }
     * })
     * 
     */
    delete<T extends PropertyReviewDeleteArgs>(args: SelectSubset<T, PropertyReviewDeleteArgs<ExtArgs>>): Prisma__PropertyReviewClient<$Result.GetResult<Prisma.$PropertyReviewPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PropertyReview.
     * @param {PropertyReviewUpdateArgs} args - Arguments to update one PropertyReview.
     * @example
     * // Update one PropertyReview
     * const propertyReview = await prisma.propertyReview.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PropertyReviewUpdateArgs>(args: SelectSubset<T, PropertyReviewUpdateArgs<ExtArgs>>): Prisma__PropertyReviewClient<$Result.GetResult<Prisma.$PropertyReviewPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PropertyReviews.
     * @param {PropertyReviewDeleteManyArgs} args - Arguments to filter PropertyReviews to delete.
     * @example
     * // Delete a few PropertyReviews
     * const { count } = await prisma.propertyReview.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PropertyReviewDeleteManyArgs>(args?: SelectSubset<T, PropertyReviewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyReviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyReviewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PropertyReviews
     * const propertyReview = await prisma.propertyReview.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PropertyReviewUpdateManyArgs>(args: SelectSubset<T, PropertyReviewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyReviews and returns the data updated in the database.
     * @param {PropertyReviewUpdateManyAndReturnArgs} args - Arguments to update many PropertyReviews.
     * @example
     * // Update many PropertyReviews
     * const propertyReview = await prisma.propertyReview.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PropertyReviews and only return the `id`
     * const propertyReviewWithIdOnly = await prisma.propertyReview.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PropertyReviewUpdateManyAndReturnArgs>(args: SelectSubset<T, PropertyReviewUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyReviewPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PropertyReview.
     * @param {PropertyReviewUpsertArgs} args - Arguments to update or create a PropertyReview.
     * @example
     * // Update or create a PropertyReview
     * const propertyReview = await prisma.propertyReview.upsert({
     *   create: {
     *     // ... data to create a PropertyReview
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PropertyReview we want to update
     *   }
     * })
     */
    upsert<T extends PropertyReviewUpsertArgs>(args: SelectSubset<T, PropertyReviewUpsertArgs<ExtArgs>>): Prisma__PropertyReviewClient<$Result.GetResult<Prisma.$PropertyReviewPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PropertyReviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyReviewCountArgs} args - Arguments to filter PropertyReviews to count.
     * @example
     * // Count the number of PropertyReviews
     * const count = await prisma.propertyReview.count({
     *   where: {
     *     // ... the filter for the PropertyReviews we want to count
     *   }
     * })
    **/
    count<T extends PropertyReviewCountArgs>(
      args?: Subset<T, PropertyReviewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PropertyReviewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PropertyReview.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyReviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PropertyReviewAggregateArgs>(args: Subset<T, PropertyReviewAggregateArgs>): Prisma.PrismaPromise<GetPropertyReviewAggregateType<T>>

    /**
     * Group by PropertyReview.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyReviewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PropertyReviewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PropertyReviewGroupByArgs['orderBy'] }
        : { orderBy?: PropertyReviewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PropertyReviewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPropertyReviewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PropertyReview model
   */
  readonly fields: PropertyReviewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PropertyReview.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PropertyReviewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reviewer<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    property<T extends PropertyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PropertyDefaultArgs<ExtArgs>>): Prisma__PropertyClient<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PropertyReview model
   */
  interface PropertyReviewFieldRefs {
    readonly id: FieldRef<"PropertyReview", 'String'>
    readonly rating: FieldRef<"PropertyReview", 'Int'>
    readonly title: FieldRef<"PropertyReview", 'String'>
    readonly comment: FieldRef<"PropertyReview", 'String'>
    readonly isVerified: FieldRef<"PropertyReview", 'Boolean'>
    readonly createdAt: FieldRef<"PropertyReview", 'DateTime'>
    readonly updatedAt: FieldRef<"PropertyReview", 'DateTime'>
    readonly reviewerId: FieldRef<"PropertyReview", 'String'>
    readonly propertyId: FieldRef<"PropertyReview", 'String'>
    readonly userId: FieldRef<"PropertyReview", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PropertyReview findUnique
   */
  export type PropertyReviewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyReview
     */
    select?: PropertyReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyReview
     */
    omit?: PropertyReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyReviewInclude<ExtArgs> | null
    /**
     * Filter, which PropertyReview to fetch.
     */
    where: PropertyReviewWhereUniqueInput
  }

  /**
   * PropertyReview findUniqueOrThrow
   */
  export type PropertyReviewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyReview
     */
    select?: PropertyReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyReview
     */
    omit?: PropertyReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyReviewInclude<ExtArgs> | null
    /**
     * Filter, which PropertyReview to fetch.
     */
    where: PropertyReviewWhereUniqueInput
  }

  /**
   * PropertyReview findFirst
   */
  export type PropertyReviewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyReview
     */
    select?: PropertyReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyReview
     */
    omit?: PropertyReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyReviewInclude<ExtArgs> | null
    /**
     * Filter, which PropertyReview to fetch.
     */
    where?: PropertyReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyReviews to fetch.
     */
    orderBy?: PropertyReviewOrderByWithRelationInput | PropertyReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyReviews.
     */
    cursor?: PropertyReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyReviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyReviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyReviews.
     */
    distinct?: PropertyReviewScalarFieldEnum | PropertyReviewScalarFieldEnum[]
  }

  /**
   * PropertyReview findFirstOrThrow
   */
  export type PropertyReviewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyReview
     */
    select?: PropertyReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyReview
     */
    omit?: PropertyReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyReviewInclude<ExtArgs> | null
    /**
     * Filter, which PropertyReview to fetch.
     */
    where?: PropertyReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyReviews to fetch.
     */
    orderBy?: PropertyReviewOrderByWithRelationInput | PropertyReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyReviews.
     */
    cursor?: PropertyReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyReviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyReviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyReviews.
     */
    distinct?: PropertyReviewScalarFieldEnum | PropertyReviewScalarFieldEnum[]
  }

  /**
   * PropertyReview findMany
   */
  export type PropertyReviewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyReview
     */
    select?: PropertyReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyReview
     */
    omit?: PropertyReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyReviewInclude<ExtArgs> | null
    /**
     * Filter, which PropertyReviews to fetch.
     */
    where?: PropertyReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyReviews to fetch.
     */
    orderBy?: PropertyReviewOrderByWithRelationInput | PropertyReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PropertyReviews.
     */
    cursor?: PropertyReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyReviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyReviews.
     */
    skip?: number
    distinct?: PropertyReviewScalarFieldEnum | PropertyReviewScalarFieldEnum[]
  }

  /**
   * PropertyReview create
   */
  export type PropertyReviewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyReview
     */
    select?: PropertyReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyReview
     */
    omit?: PropertyReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyReviewInclude<ExtArgs> | null
    /**
     * The data needed to create a PropertyReview.
     */
    data: XOR<PropertyReviewCreateInput, PropertyReviewUncheckedCreateInput>
  }

  /**
   * PropertyReview createMany
   */
  export type PropertyReviewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PropertyReviews.
     */
    data: PropertyReviewCreateManyInput | PropertyReviewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PropertyReview createManyAndReturn
   */
  export type PropertyReviewCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyReview
     */
    select?: PropertyReviewSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyReview
     */
    omit?: PropertyReviewOmit<ExtArgs> | null
    /**
     * The data used to create many PropertyReviews.
     */
    data: PropertyReviewCreateManyInput | PropertyReviewCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyReviewIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PropertyReview update
   */
  export type PropertyReviewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyReview
     */
    select?: PropertyReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyReview
     */
    omit?: PropertyReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyReviewInclude<ExtArgs> | null
    /**
     * The data needed to update a PropertyReview.
     */
    data: XOR<PropertyReviewUpdateInput, PropertyReviewUncheckedUpdateInput>
    /**
     * Choose, which PropertyReview to update.
     */
    where: PropertyReviewWhereUniqueInput
  }

  /**
   * PropertyReview updateMany
   */
  export type PropertyReviewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PropertyReviews.
     */
    data: XOR<PropertyReviewUpdateManyMutationInput, PropertyReviewUncheckedUpdateManyInput>
    /**
     * Filter which PropertyReviews to update
     */
    where?: PropertyReviewWhereInput
    /**
     * Limit how many PropertyReviews to update.
     */
    limit?: number
  }

  /**
   * PropertyReview updateManyAndReturn
   */
  export type PropertyReviewUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyReview
     */
    select?: PropertyReviewSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyReview
     */
    omit?: PropertyReviewOmit<ExtArgs> | null
    /**
     * The data used to update PropertyReviews.
     */
    data: XOR<PropertyReviewUpdateManyMutationInput, PropertyReviewUncheckedUpdateManyInput>
    /**
     * Filter which PropertyReviews to update
     */
    where?: PropertyReviewWhereInput
    /**
     * Limit how many PropertyReviews to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyReviewIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PropertyReview upsert
   */
  export type PropertyReviewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyReview
     */
    select?: PropertyReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyReview
     */
    omit?: PropertyReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyReviewInclude<ExtArgs> | null
    /**
     * The filter to search for the PropertyReview to update in case it exists.
     */
    where: PropertyReviewWhereUniqueInput
    /**
     * In case the PropertyReview found by the `where` argument doesn't exist, create a new PropertyReview with this data.
     */
    create: XOR<PropertyReviewCreateInput, PropertyReviewUncheckedCreateInput>
    /**
     * In case the PropertyReview was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PropertyReviewUpdateInput, PropertyReviewUncheckedUpdateInput>
  }

  /**
   * PropertyReview delete
   */
  export type PropertyReviewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyReview
     */
    select?: PropertyReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyReview
     */
    omit?: PropertyReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyReviewInclude<ExtArgs> | null
    /**
     * Filter which PropertyReview to delete.
     */
    where: PropertyReviewWhereUniqueInput
  }

  /**
   * PropertyReview deleteMany
   */
  export type PropertyReviewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyReviews to delete
     */
    where?: PropertyReviewWhereInput
    /**
     * Limit how many PropertyReviews to delete.
     */
    limit?: number
  }

  /**
   * PropertyReview without action
   */
  export type PropertyReviewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyReview
     */
    select?: PropertyReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyReview
     */
    omit?: PropertyReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyReviewInclude<ExtArgs> | null
  }


  /**
   * Model PropertyComment
   */

  export type AggregatePropertyComment = {
    _count: PropertyCommentCountAggregateOutputType | null
    _min: PropertyCommentMinAggregateOutputType | null
    _max: PropertyCommentMaxAggregateOutputType | null
  }

  export type PropertyCommentMinAggregateOutputType = {
    id: string | null
    content: string | null
    isPublic: boolean | null
    isModerated: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    authorId: string | null
    propertyId: string | null
    userId: string | null
  }

  export type PropertyCommentMaxAggregateOutputType = {
    id: string | null
    content: string | null
    isPublic: boolean | null
    isModerated: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    authorId: string | null
    propertyId: string | null
    userId: string | null
  }

  export type PropertyCommentCountAggregateOutputType = {
    id: number
    content: number
    isPublic: number
    isModerated: number
    createdAt: number
    updatedAt: number
    authorId: number
    propertyId: number
    userId: number
    _all: number
  }


  export type PropertyCommentMinAggregateInputType = {
    id?: true
    content?: true
    isPublic?: true
    isModerated?: true
    createdAt?: true
    updatedAt?: true
    authorId?: true
    propertyId?: true
    userId?: true
  }

  export type PropertyCommentMaxAggregateInputType = {
    id?: true
    content?: true
    isPublic?: true
    isModerated?: true
    createdAt?: true
    updatedAt?: true
    authorId?: true
    propertyId?: true
    userId?: true
  }

  export type PropertyCommentCountAggregateInputType = {
    id?: true
    content?: true
    isPublic?: true
    isModerated?: true
    createdAt?: true
    updatedAt?: true
    authorId?: true
    propertyId?: true
    userId?: true
    _all?: true
  }

  export type PropertyCommentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyComment to aggregate.
     */
    where?: PropertyCommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyComments to fetch.
     */
    orderBy?: PropertyCommentOrderByWithRelationInput | PropertyCommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PropertyCommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyComments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyComments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PropertyComments
    **/
    _count?: true | PropertyCommentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PropertyCommentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PropertyCommentMaxAggregateInputType
  }

  export type GetPropertyCommentAggregateType<T extends PropertyCommentAggregateArgs> = {
        [P in keyof T & keyof AggregatePropertyComment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePropertyComment[P]>
      : GetScalarType<T[P], AggregatePropertyComment[P]>
  }




  export type PropertyCommentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyCommentWhereInput
    orderBy?: PropertyCommentOrderByWithAggregationInput | PropertyCommentOrderByWithAggregationInput[]
    by: PropertyCommentScalarFieldEnum[] | PropertyCommentScalarFieldEnum
    having?: PropertyCommentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PropertyCommentCountAggregateInputType | true
    _min?: PropertyCommentMinAggregateInputType
    _max?: PropertyCommentMaxAggregateInputType
  }

  export type PropertyCommentGroupByOutputType = {
    id: string
    content: string
    isPublic: boolean
    isModerated: boolean
    createdAt: Date
    updatedAt: Date
    authorId: string
    propertyId: string
    userId: string
    _count: PropertyCommentCountAggregateOutputType | null
    _min: PropertyCommentMinAggregateOutputType | null
    _max: PropertyCommentMaxAggregateOutputType | null
  }

  type GetPropertyCommentGroupByPayload<T extends PropertyCommentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PropertyCommentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PropertyCommentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PropertyCommentGroupByOutputType[P]>
            : GetScalarType<T[P], PropertyCommentGroupByOutputType[P]>
        }
      >
    >


  export type PropertyCommentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    isPublic?: boolean
    isModerated?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    authorId?: boolean
    propertyId?: boolean
    userId?: boolean
    author?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyComment"]>

  export type PropertyCommentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    isPublic?: boolean
    isModerated?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    authorId?: boolean
    propertyId?: boolean
    userId?: boolean
    author?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyComment"]>

  export type PropertyCommentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    isPublic?: boolean
    isModerated?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    authorId?: boolean
    propertyId?: boolean
    userId?: boolean
    author?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyComment"]>

  export type PropertyCommentSelectScalar = {
    id?: boolean
    content?: boolean
    isPublic?: boolean
    isModerated?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    authorId?: boolean
    propertyId?: boolean
    userId?: boolean
  }

  export type PropertyCommentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "content" | "isPublic" | "isModerated" | "createdAt" | "updatedAt" | "authorId" | "propertyId" | "userId", ExtArgs["result"]["propertyComment"]>
  export type PropertyCommentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }
  export type PropertyCommentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }
  export type PropertyCommentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | PropertyDefaultArgs<ExtArgs>
  }

  export type $PropertyCommentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PropertyComment"
    objects: {
      author: Prisma.$UserPayload<ExtArgs>
      property: Prisma.$PropertyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      content: string
      isPublic: boolean
      isModerated: boolean
      createdAt: Date
      updatedAt: Date
      authorId: string
      propertyId: string
      userId: string
    }, ExtArgs["result"]["propertyComment"]>
    composites: {}
  }

  type PropertyCommentGetPayload<S extends boolean | null | undefined | PropertyCommentDefaultArgs> = $Result.GetResult<Prisma.$PropertyCommentPayload, S>

  type PropertyCommentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PropertyCommentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PropertyCommentCountAggregateInputType | true
    }

  export interface PropertyCommentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PropertyComment'], meta: { name: 'PropertyComment' } }
    /**
     * Find zero or one PropertyComment that matches the filter.
     * @param {PropertyCommentFindUniqueArgs} args - Arguments to find a PropertyComment
     * @example
     * // Get one PropertyComment
     * const propertyComment = await prisma.propertyComment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PropertyCommentFindUniqueArgs>(args: SelectSubset<T, PropertyCommentFindUniqueArgs<ExtArgs>>): Prisma__PropertyCommentClient<$Result.GetResult<Prisma.$PropertyCommentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PropertyComment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PropertyCommentFindUniqueOrThrowArgs} args - Arguments to find a PropertyComment
     * @example
     * // Get one PropertyComment
     * const propertyComment = await prisma.propertyComment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PropertyCommentFindUniqueOrThrowArgs>(args: SelectSubset<T, PropertyCommentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PropertyCommentClient<$Result.GetResult<Prisma.$PropertyCommentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyComment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyCommentFindFirstArgs} args - Arguments to find a PropertyComment
     * @example
     * // Get one PropertyComment
     * const propertyComment = await prisma.propertyComment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PropertyCommentFindFirstArgs>(args?: SelectSubset<T, PropertyCommentFindFirstArgs<ExtArgs>>): Prisma__PropertyCommentClient<$Result.GetResult<Prisma.$PropertyCommentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyComment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyCommentFindFirstOrThrowArgs} args - Arguments to find a PropertyComment
     * @example
     * // Get one PropertyComment
     * const propertyComment = await prisma.propertyComment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PropertyCommentFindFirstOrThrowArgs>(args?: SelectSubset<T, PropertyCommentFindFirstOrThrowArgs<ExtArgs>>): Prisma__PropertyCommentClient<$Result.GetResult<Prisma.$PropertyCommentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PropertyComments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyCommentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PropertyComments
     * const propertyComments = await prisma.propertyComment.findMany()
     * 
     * // Get first 10 PropertyComments
     * const propertyComments = await prisma.propertyComment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const propertyCommentWithIdOnly = await prisma.propertyComment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PropertyCommentFindManyArgs>(args?: SelectSubset<T, PropertyCommentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyCommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PropertyComment.
     * @param {PropertyCommentCreateArgs} args - Arguments to create a PropertyComment.
     * @example
     * // Create one PropertyComment
     * const PropertyComment = await prisma.propertyComment.create({
     *   data: {
     *     // ... data to create a PropertyComment
     *   }
     * })
     * 
     */
    create<T extends PropertyCommentCreateArgs>(args: SelectSubset<T, PropertyCommentCreateArgs<ExtArgs>>): Prisma__PropertyCommentClient<$Result.GetResult<Prisma.$PropertyCommentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PropertyComments.
     * @param {PropertyCommentCreateManyArgs} args - Arguments to create many PropertyComments.
     * @example
     * // Create many PropertyComments
     * const propertyComment = await prisma.propertyComment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PropertyCommentCreateManyArgs>(args?: SelectSubset<T, PropertyCommentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PropertyComments and returns the data saved in the database.
     * @param {PropertyCommentCreateManyAndReturnArgs} args - Arguments to create many PropertyComments.
     * @example
     * // Create many PropertyComments
     * const propertyComment = await prisma.propertyComment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PropertyComments and only return the `id`
     * const propertyCommentWithIdOnly = await prisma.propertyComment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PropertyCommentCreateManyAndReturnArgs>(args?: SelectSubset<T, PropertyCommentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyCommentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PropertyComment.
     * @param {PropertyCommentDeleteArgs} args - Arguments to delete one PropertyComment.
     * @example
     * // Delete one PropertyComment
     * const PropertyComment = await prisma.propertyComment.delete({
     *   where: {
     *     // ... filter to delete one PropertyComment
     *   }
     * })
     * 
     */
    delete<T extends PropertyCommentDeleteArgs>(args: SelectSubset<T, PropertyCommentDeleteArgs<ExtArgs>>): Prisma__PropertyCommentClient<$Result.GetResult<Prisma.$PropertyCommentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PropertyComment.
     * @param {PropertyCommentUpdateArgs} args - Arguments to update one PropertyComment.
     * @example
     * // Update one PropertyComment
     * const propertyComment = await prisma.propertyComment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PropertyCommentUpdateArgs>(args: SelectSubset<T, PropertyCommentUpdateArgs<ExtArgs>>): Prisma__PropertyCommentClient<$Result.GetResult<Prisma.$PropertyCommentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PropertyComments.
     * @param {PropertyCommentDeleteManyArgs} args - Arguments to filter PropertyComments to delete.
     * @example
     * // Delete a few PropertyComments
     * const { count } = await prisma.propertyComment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PropertyCommentDeleteManyArgs>(args?: SelectSubset<T, PropertyCommentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyComments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyCommentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PropertyComments
     * const propertyComment = await prisma.propertyComment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PropertyCommentUpdateManyArgs>(args: SelectSubset<T, PropertyCommentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyComments and returns the data updated in the database.
     * @param {PropertyCommentUpdateManyAndReturnArgs} args - Arguments to update many PropertyComments.
     * @example
     * // Update many PropertyComments
     * const propertyComment = await prisma.propertyComment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PropertyComments and only return the `id`
     * const propertyCommentWithIdOnly = await prisma.propertyComment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PropertyCommentUpdateManyAndReturnArgs>(args: SelectSubset<T, PropertyCommentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyCommentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PropertyComment.
     * @param {PropertyCommentUpsertArgs} args - Arguments to update or create a PropertyComment.
     * @example
     * // Update or create a PropertyComment
     * const propertyComment = await prisma.propertyComment.upsert({
     *   create: {
     *     // ... data to create a PropertyComment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PropertyComment we want to update
     *   }
     * })
     */
    upsert<T extends PropertyCommentUpsertArgs>(args: SelectSubset<T, PropertyCommentUpsertArgs<ExtArgs>>): Prisma__PropertyCommentClient<$Result.GetResult<Prisma.$PropertyCommentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PropertyComments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyCommentCountArgs} args - Arguments to filter PropertyComments to count.
     * @example
     * // Count the number of PropertyComments
     * const count = await prisma.propertyComment.count({
     *   where: {
     *     // ... the filter for the PropertyComments we want to count
     *   }
     * })
    **/
    count<T extends PropertyCommentCountArgs>(
      args?: Subset<T, PropertyCommentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PropertyCommentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PropertyComment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyCommentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PropertyCommentAggregateArgs>(args: Subset<T, PropertyCommentAggregateArgs>): Prisma.PrismaPromise<GetPropertyCommentAggregateType<T>>

    /**
     * Group by PropertyComment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyCommentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PropertyCommentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PropertyCommentGroupByArgs['orderBy'] }
        : { orderBy?: PropertyCommentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PropertyCommentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPropertyCommentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PropertyComment model
   */
  readonly fields: PropertyCommentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PropertyComment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PropertyCommentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    author<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    property<T extends PropertyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PropertyDefaultArgs<ExtArgs>>): Prisma__PropertyClient<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PropertyComment model
   */
  interface PropertyCommentFieldRefs {
    readonly id: FieldRef<"PropertyComment", 'String'>
    readonly content: FieldRef<"PropertyComment", 'String'>
    readonly isPublic: FieldRef<"PropertyComment", 'Boolean'>
    readonly isModerated: FieldRef<"PropertyComment", 'Boolean'>
    readonly createdAt: FieldRef<"PropertyComment", 'DateTime'>
    readonly updatedAt: FieldRef<"PropertyComment", 'DateTime'>
    readonly authorId: FieldRef<"PropertyComment", 'String'>
    readonly propertyId: FieldRef<"PropertyComment", 'String'>
    readonly userId: FieldRef<"PropertyComment", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PropertyComment findUnique
   */
  export type PropertyCommentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComment
     */
    select?: PropertyCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComment
     */
    omit?: PropertyCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyCommentInclude<ExtArgs> | null
    /**
     * Filter, which PropertyComment to fetch.
     */
    where: PropertyCommentWhereUniqueInput
  }

  /**
   * PropertyComment findUniqueOrThrow
   */
  export type PropertyCommentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComment
     */
    select?: PropertyCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComment
     */
    omit?: PropertyCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyCommentInclude<ExtArgs> | null
    /**
     * Filter, which PropertyComment to fetch.
     */
    where: PropertyCommentWhereUniqueInput
  }

  /**
   * PropertyComment findFirst
   */
  export type PropertyCommentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComment
     */
    select?: PropertyCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComment
     */
    omit?: PropertyCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyCommentInclude<ExtArgs> | null
    /**
     * Filter, which PropertyComment to fetch.
     */
    where?: PropertyCommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyComments to fetch.
     */
    orderBy?: PropertyCommentOrderByWithRelationInput | PropertyCommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyComments.
     */
    cursor?: PropertyCommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyComments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyComments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyComments.
     */
    distinct?: PropertyCommentScalarFieldEnum | PropertyCommentScalarFieldEnum[]
  }

  /**
   * PropertyComment findFirstOrThrow
   */
  export type PropertyCommentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComment
     */
    select?: PropertyCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComment
     */
    omit?: PropertyCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyCommentInclude<ExtArgs> | null
    /**
     * Filter, which PropertyComment to fetch.
     */
    where?: PropertyCommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyComments to fetch.
     */
    orderBy?: PropertyCommentOrderByWithRelationInput | PropertyCommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyComments.
     */
    cursor?: PropertyCommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyComments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyComments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyComments.
     */
    distinct?: PropertyCommentScalarFieldEnum | PropertyCommentScalarFieldEnum[]
  }

  /**
   * PropertyComment findMany
   */
  export type PropertyCommentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComment
     */
    select?: PropertyCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComment
     */
    omit?: PropertyCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyCommentInclude<ExtArgs> | null
    /**
     * Filter, which PropertyComments to fetch.
     */
    where?: PropertyCommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyComments to fetch.
     */
    orderBy?: PropertyCommentOrderByWithRelationInput | PropertyCommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PropertyComments.
     */
    cursor?: PropertyCommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyComments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyComments.
     */
    skip?: number
    distinct?: PropertyCommentScalarFieldEnum | PropertyCommentScalarFieldEnum[]
  }

  /**
   * PropertyComment create
   */
  export type PropertyCommentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComment
     */
    select?: PropertyCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComment
     */
    omit?: PropertyCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyCommentInclude<ExtArgs> | null
    /**
     * The data needed to create a PropertyComment.
     */
    data: XOR<PropertyCommentCreateInput, PropertyCommentUncheckedCreateInput>
  }

  /**
   * PropertyComment createMany
   */
  export type PropertyCommentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PropertyComments.
     */
    data: PropertyCommentCreateManyInput | PropertyCommentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PropertyComment createManyAndReturn
   */
  export type PropertyCommentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComment
     */
    select?: PropertyCommentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComment
     */
    omit?: PropertyCommentOmit<ExtArgs> | null
    /**
     * The data used to create many PropertyComments.
     */
    data: PropertyCommentCreateManyInput | PropertyCommentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyCommentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PropertyComment update
   */
  export type PropertyCommentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComment
     */
    select?: PropertyCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComment
     */
    omit?: PropertyCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyCommentInclude<ExtArgs> | null
    /**
     * The data needed to update a PropertyComment.
     */
    data: XOR<PropertyCommentUpdateInput, PropertyCommentUncheckedUpdateInput>
    /**
     * Choose, which PropertyComment to update.
     */
    where: PropertyCommentWhereUniqueInput
  }

  /**
   * PropertyComment updateMany
   */
  export type PropertyCommentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PropertyComments.
     */
    data: XOR<PropertyCommentUpdateManyMutationInput, PropertyCommentUncheckedUpdateManyInput>
    /**
     * Filter which PropertyComments to update
     */
    where?: PropertyCommentWhereInput
    /**
     * Limit how many PropertyComments to update.
     */
    limit?: number
  }

  /**
   * PropertyComment updateManyAndReturn
   */
  export type PropertyCommentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComment
     */
    select?: PropertyCommentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComment
     */
    omit?: PropertyCommentOmit<ExtArgs> | null
    /**
     * The data used to update PropertyComments.
     */
    data: XOR<PropertyCommentUpdateManyMutationInput, PropertyCommentUncheckedUpdateManyInput>
    /**
     * Filter which PropertyComments to update
     */
    where?: PropertyCommentWhereInput
    /**
     * Limit how many PropertyComments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyCommentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PropertyComment upsert
   */
  export type PropertyCommentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComment
     */
    select?: PropertyCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComment
     */
    omit?: PropertyCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyCommentInclude<ExtArgs> | null
    /**
     * The filter to search for the PropertyComment to update in case it exists.
     */
    where: PropertyCommentWhereUniqueInput
    /**
     * In case the PropertyComment found by the `where` argument doesn't exist, create a new PropertyComment with this data.
     */
    create: XOR<PropertyCommentCreateInput, PropertyCommentUncheckedCreateInput>
    /**
     * In case the PropertyComment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PropertyCommentUpdateInput, PropertyCommentUncheckedUpdateInput>
  }

  /**
   * PropertyComment delete
   */
  export type PropertyCommentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComment
     */
    select?: PropertyCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComment
     */
    omit?: PropertyCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyCommentInclude<ExtArgs> | null
    /**
     * Filter which PropertyComment to delete.
     */
    where: PropertyCommentWhereUniqueInput
  }

  /**
   * PropertyComment deleteMany
   */
  export type PropertyCommentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyComments to delete
     */
    where?: PropertyCommentWhereInput
    /**
     * Limit how many PropertyComments to delete.
     */
    limit?: number
  }

  /**
   * PropertyComment without action
   */
  export type PropertyCommentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyComment
     */
    select?: PropertyCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyComment
     */
    omit?: PropertyCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyCommentInclude<ExtArgs> | null
  }


  /**
   * Model PropertyViewing
   */

  export type AggregatePropertyViewing = {
    _count: PropertyViewingCountAggregateOutputType | null
    _avg: PropertyViewingAvgAggregateOutputType | null
    _sum: PropertyViewingSumAggregateOutputType | null
    _min: PropertyViewingMinAggregateOutputType | null
    _max: PropertyViewingMaxAggregateOutputType | null
  }

  export type PropertyViewingAvgAggregateOutputType = {
    duration: number | null
  }

  export type PropertyViewingSumAggregateOutputType = {
    duration: number | null
  }

  export type PropertyViewingMinAggregateOutputType = {
    id: string | null
    scheduledAt: Date | null
    duration: number | null
    status: string | null
    notes: string | null
    buyerNotes: string | null
    location: string | null
    createdAt: Date | null
    updatedAt: Date | null
    propertyId: string | null
    sellerId: string | null
    buyerId: string | null
    requestId: string | null
    propertyRequestId: string | null
  }

  export type PropertyViewingMaxAggregateOutputType = {
    id: string | null
    scheduledAt: Date | null
    duration: number | null
    status: string | null
    notes: string | null
    buyerNotes: string | null
    location: string | null
    createdAt: Date | null
    updatedAt: Date | null
    propertyId: string | null
    sellerId: string | null
    buyerId: string | null
    requestId: string | null
    propertyRequestId: string | null
  }

  export type PropertyViewingCountAggregateOutputType = {
    id: number
    scheduledAt: number
    duration: number
    status: number
    notes: number
    buyerNotes: number
    location: number
    createdAt: number
    updatedAt: number
    propertyId: number
    sellerId: number
    buyerId: number
    requestId: number
    propertyRequestId: number
    _all: number
  }


  export type PropertyViewingAvgAggregateInputType = {
    duration?: true
  }

  export type PropertyViewingSumAggregateInputType = {
    duration?: true
  }

  export type PropertyViewingMinAggregateInputType = {
    id?: true
    scheduledAt?: true
    duration?: true
    status?: true
    notes?: true
    buyerNotes?: true
    location?: true
    createdAt?: true
    updatedAt?: true
    propertyId?: true
    sellerId?: true
    buyerId?: true
    requestId?: true
    propertyRequestId?: true
  }

  export type PropertyViewingMaxAggregateInputType = {
    id?: true
    scheduledAt?: true
    duration?: true
    status?: true
    notes?: true
    buyerNotes?: true
    location?: true
    createdAt?: true
    updatedAt?: true
    propertyId?: true
    sellerId?: true
    buyerId?: true
    requestId?: true
    propertyRequestId?: true
  }

  export type PropertyViewingCountAggregateInputType = {
    id?: true
    scheduledAt?: true
    duration?: true
    status?: true
    notes?: true
    buyerNotes?: true
    location?: true
    createdAt?: true
    updatedAt?: true
    propertyId?: true
    sellerId?: true
    buyerId?: true
    requestId?: true
    propertyRequestId?: true
    _all?: true
  }

  export type PropertyViewingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyViewing to aggregate.
     */
    where?: PropertyViewingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyViewings to fetch.
     */
    orderBy?: PropertyViewingOrderByWithRelationInput | PropertyViewingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PropertyViewingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyViewings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyViewings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PropertyViewings
    **/
    _count?: true | PropertyViewingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PropertyViewingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PropertyViewingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PropertyViewingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PropertyViewingMaxAggregateInputType
  }

  export type GetPropertyViewingAggregateType<T extends PropertyViewingAggregateArgs> = {
        [P in keyof T & keyof AggregatePropertyViewing]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePropertyViewing[P]>
      : GetScalarType<T[P], AggregatePropertyViewing[P]>
  }




  export type PropertyViewingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyViewingWhereInput
    orderBy?: PropertyViewingOrderByWithAggregationInput | PropertyViewingOrderByWithAggregationInput[]
    by: PropertyViewingScalarFieldEnum[] | PropertyViewingScalarFieldEnum
    having?: PropertyViewingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PropertyViewingCountAggregateInputType | true
    _avg?: PropertyViewingAvgAggregateInputType
    _sum?: PropertyViewingSumAggregateInputType
    _min?: PropertyViewingMinAggregateInputType
    _max?: PropertyViewingMaxAggregateInputType
  }

  export type PropertyViewingGroupByOutputType = {
    id: string
    scheduledAt: Date
    duration: number
    status: string
    notes: string | null
    buyerNotes: string | null
    location: string | null
    createdAt: Date
    updatedAt: Date
    propertyId: string
    sellerId: string
    buyerId: string | null
    requestId: string | null
    propertyRequestId: string | null
    _count: PropertyViewingCountAggregateOutputType | null
    _avg: PropertyViewingAvgAggregateOutputType | null
    _sum: PropertyViewingSumAggregateOutputType | null
    _min: PropertyViewingMinAggregateOutputType | null
    _max: PropertyViewingMaxAggregateOutputType | null
  }

  type GetPropertyViewingGroupByPayload<T extends PropertyViewingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PropertyViewingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PropertyViewingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PropertyViewingGroupByOutputType[P]>
            : GetScalarType<T[P], PropertyViewingGroupByOutputType[P]>
        }
      >
    >


  export type PropertyViewingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    scheduledAt?: boolean
    duration?: boolean
    status?: boolean
    notes?: boolean
    buyerNotes?: boolean
    location?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    propertyId?: boolean
    sellerId?: boolean
    buyerId?: boolean
    requestId?: boolean
    propertyRequestId?: boolean
    property?: boolean | PropertyDefaultArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
    buyer?: boolean | PropertyViewing$buyerArgs<ExtArgs>
    request?: boolean | PropertyViewing$requestArgs<ExtArgs>
  }, ExtArgs["result"]["propertyViewing"]>

  export type PropertyViewingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    scheduledAt?: boolean
    duration?: boolean
    status?: boolean
    notes?: boolean
    buyerNotes?: boolean
    location?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    propertyId?: boolean
    sellerId?: boolean
    buyerId?: boolean
    requestId?: boolean
    propertyRequestId?: boolean
    property?: boolean | PropertyDefaultArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
    buyer?: boolean | PropertyViewing$buyerArgs<ExtArgs>
    request?: boolean | PropertyViewing$requestArgs<ExtArgs>
  }, ExtArgs["result"]["propertyViewing"]>

  export type PropertyViewingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    scheduledAt?: boolean
    duration?: boolean
    status?: boolean
    notes?: boolean
    buyerNotes?: boolean
    location?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    propertyId?: boolean
    sellerId?: boolean
    buyerId?: boolean
    requestId?: boolean
    propertyRequestId?: boolean
    property?: boolean | PropertyDefaultArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
    buyer?: boolean | PropertyViewing$buyerArgs<ExtArgs>
    request?: boolean | PropertyViewing$requestArgs<ExtArgs>
  }, ExtArgs["result"]["propertyViewing"]>

  export type PropertyViewingSelectScalar = {
    id?: boolean
    scheduledAt?: boolean
    duration?: boolean
    status?: boolean
    notes?: boolean
    buyerNotes?: boolean
    location?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    propertyId?: boolean
    sellerId?: boolean
    buyerId?: boolean
    requestId?: boolean
    propertyRequestId?: boolean
  }

  export type PropertyViewingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "scheduledAt" | "duration" | "status" | "notes" | "buyerNotes" | "location" | "createdAt" | "updatedAt" | "propertyId" | "sellerId" | "buyerId" | "requestId" | "propertyRequestId", ExtArgs["result"]["propertyViewing"]>
  export type PropertyViewingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    property?: boolean | PropertyDefaultArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
    buyer?: boolean | PropertyViewing$buyerArgs<ExtArgs>
    request?: boolean | PropertyViewing$requestArgs<ExtArgs>
  }
  export type PropertyViewingIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    property?: boolean | PropertyDefaultArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
    buyer?: boolean | PropertyViewing$buyerArgs<ExtArgs>
    request?: boolean | PropertyViewing$requestArgs<ExtArgs>
  }
  export type PropertyViewingIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    property?: boolean | PropertyDefaultArgs<ExtArgs>
    seller?: boolean | UserDefaultArgs<ExtArgs>
    buyer?: boolean | PropertyViewing$buyerArgs<ExtArgs>
    request?: boolean | PropertyViewing$requestArgs<ExtArgs>
  }

  export type $PropertyViewingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PropertyViewing"
    objects: {
      property: Prisma.$PropertyPayload<ExtArgs>
      seller: Prisma.$UserPayload<ExtArgs>
      buyer: Prisma.$UserPayload<ExtArgs> | null
      request: Prisma.$PropertyRequestPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      scheduledAt: Date
      duration: number
      status: string
      notes: string | null
      buyerNotes: string | null
      location: string | null
      createdAt: Date
      updatedAt: Date
      propertyId: string
      sellerId: string
      buyerId: string | null
      requestId: string | null
      propertyRequestId: string | null
    }, ExtArgs["result"]["propertyViewing"]>
    composites: {}
  }

  type PropertyViewingGetPayload<S extends boolean | null | undefined | PropertyViewingDefaultArgs> = $Result.GetResult<Prisma.$PropertyViewingPayload, S>

  type PropertyViewingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PropertyViewingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PropertyViewingCountAggregateInputType | true
    }

  export interface PropertyViewingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PropertyViewing'], meta: { name: 'PropertyViewing' } }
    /**
     * Find zero or one PropertyViewing that matches the filter.
     * @param {PropertyViewingFindUniqueArgs} args - Arguments to find a PropertyViewing
     * @example
     * // Get one PropertyViewing
     * const propertyViewing = await prisma.propertyViewing.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PropertyViewingFindUniqueArgs>(args: SelectSubset<T, PropertyViewingFindUniqueArgs<ExtArgs>>): Prisma__PropertyViewingClient<$Result.GetResult<Prisma.$PropertyViewingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PropertyViewing that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PropertyViewingFindUniqueOrThrowArgs} args - Arguments to find a PropertyViewing
     * @example
     * // Get one PropertyViewing
     * const propertyViewing = await prisma.propertyViewing.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PropertyViewingFindUniqueOrThrowArgs>(args: SelectSubset<T, PropertyViewingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PropertyViewingClient<$Result.GetResult<Prisma.$PropertyViewingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyViewing that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyViewingFindFirstArgs} args - Arguments to find a PropertyViewing
     * @example
     * // Get one PropertyViewing
     * const propertyViewing = await prisma.propertyViewing.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PropertyViewingFindFirstArgs>(args?: SelectSubset<T, PropertyViewingFindFirstArgs<ExtArgs>>): Prisma__PropertyViewingClient<$Result.GetResult<Prisma.$PropertyViewingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyViewing that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyViewingFindFirstOrThrowArgs} args - Arguments to find a PropertyViewing
     * @example
     * // Get one PropertyViewing
     * const propertyViewing = await prisma.propertyViewing.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PropertyViewingFindFirstOrThrowArgs>(args?: SelectSubset<T, PropertyViewingFindFirstOrThrowArgs<ExtArgs>>): Prisma__PropertyViewingClient<$Result.GetResult<Prisma.$PropertyViewingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PropertyViewings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyViewingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PropertyViewings
     * const propertyViewings = await prisma.propertyViewing.findMany()
     * 
     * // Get first 10 PropertyViewings
     * const propertyViewings = await prisma.propertyViewing.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const propertyViewingWithIdOnly = await prisma.propertyViewing.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PropertyViewingFindManyArgs>(args?: SelectSubset<T, PropertyViewingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyViewingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PropertyViewing.
     * @param {PropertyViewingCreateArgs} args - Arguments to create a PropertyViewing.
     * @example
     * // Create one PropertyViewing
     * const PropertyViewing = await prisma.propertyViewing.create({
     *   data: {
     *     // ... data to create a PropertyViewing
     *   }
     * })
     * 
     */
    create<T extends PropertyViewingCreateArgs>(args: SelectSubset<T, PropertyViewingCreateArgs<ExtArgs>>): Prisma__PropertyViewingClient<$Result.GetResult<Prisma.$PropertyViewingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PropertyViewings.
     * @param {PropertyViewingCreateManyArgs} args - Arguments to create many PropertyViewings.
     * @example
     * // Create many PropertyViewings
     * const propertyViewing = await prisma.propertyViewing.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PropertyViewingCreateManyArgs>(args?: SelectSubset<T, PropertyViewingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PropertyViewings and returns the data saved in the database.
     * @param {PropertyViewingCreateManyAndReturnArgs} args - Arguments to create many PropertyViewings.
     * @example
     * // Create many PropertyViewings
     * const propertyViewing = await prisma.propertyViewing.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PropertyViewings and only return the `id`
     * const propertyViewingWithIdOnly = await prisma.propertyViewing.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PropertyViewingCreateManyAndReturnArgs>(args?: SelectSubset<T, PropertyViewingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyViewingPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PropertyViewing.
     * @param {PropertyViewingDeleteArgs} args - Arguments to delete one PropertyViewing.
     * @example
     * // Delete one PropertyViewing
     * const PropertyViewing = await prisma.propertyViewing.delete({
     *   where: {
     *     // ... filter to delete one PropertyViewing
     *   }
     * })
     * 
     */
    delete<T extends PropertyViewingDeleteArgs>(args: SelectSubset<T, PropertyViewingDeleteArgs<ExtArgs>>): Prisma__PropertyViewingClient<$Result.GetResult<Prisma.$PropertyViewingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PropertyViewing.
     * @param {PropertyViewingUpdateArgs} args - Arguments to update one PropertyViewing.
     * @example
     * // Update one PropertyViewing
     * const propertyViewing = await prisma.propertyViewing.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PropertyViewingUpdateArgs>(args: SelectSubset<T, PropertyViewingUpdateArgs<ExtArgs>>): Prisma__PropertyViewingClient<$Result.GetResult<Prisma.$PropertyViewingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PropertyViewings.
     * @param {PropertyViewingDeleteManyArgs} args - Arguments to filter PropertyViewings to delete.
     * @example
     * // Delete a few PropertyViewings
     * const { count } = await prisma.propertyViewing.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PropertyViewingDeleteManyArgs>(args?: SelectSubset<T, PropertyViewingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyViewings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyViewingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PropertyViewings
     * const propertyViewing = await prisma.propertyViewing.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PropertyViewingUpdateManyArgs>(args: SelectSubset<T, PropertyViewingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyViewings and returns the data updated in the database.
     * @param {PropertyViewingUpdateManyAndReturnArgs} args - Arguments to update many PropertyViewings.
     * @example
     * // Update many PropertyViewings
     * const propertyViewing = await prisma.propertyViewing.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PropertyViewings and only return the `id`
     * const propertyViewingWithIdOnly = await prisma.propertyViewing.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PropertyViewingUpdateManyAndReturnArgs>(args: SelectSubset<T, PropertyViewingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyViewingPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PropertyViewing.
     * @param {PropertyViewingUpsertArgs} args - Arguments to update or create a PropertyViewing.
     * @example
     * // Update or create a PropertyViewing
     * const propertyViewing = await prisma.propertyViewing.upsert({
     *   create: {
     *     // ... data to create a PropertyViewing
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PropertyViewing we want to update
     *   }
     * })
     */
    upsert<T extends PropertyViewingUpsertArgs>(args: SelectSubset<T, PropertyViewingUpsertArgs<ExtArgs>>): Prisma__PropertyViewingClient<$Result.GetResult<Prisma.$PropertyViewingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PropertyViewings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyViewingCountArgs} args - Arguments to filter PropertyViewings to count.
     * @example
     * // Count the number of PropertyViewings
     * const count = await prisma.propertyViewing.count({
     *   where: {
     *     // ... the filter for the PropertyViewings we want to count
     *   }
     * })
    **/
    count<T extends PropertyViewingCountArgs>(
      args?: Subset<T, PropertyViewingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PropertyViewingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PropertyViewing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyViewingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PropertyViewingAggregateArgs>(args: Subset<T, PropertyViewingAggregateArgs>): Prisma.PrismaPromise<GetPropertyViewingAggregateType<T>>

    /**
     * Group by PropertyViewing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyViewingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PropertyViewingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PropertyViewingGroupByArgs['orderBy'] }
        : { orderBy?: PropertyViewingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PropertyViewingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPropertyViewingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PropertyViewing model
   */
  readonly fields: PropertyViewingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PropertyViewing.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PropertyViewingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    property<T extends PropertyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PropertyDefaultArgs<ExtArgs>>): Prisma__PropertyClient<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    seller<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    buyer<T extends PropertyViewing$buyerArgs<ExtArgs> = {}>(args?: Subset<T, PropertyViewing$buyerArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    request<T extends PropertyViewing$requestArgs<ExtArgs> = {}>(args?: Subset<T, PropertyViewing$requestArgs<ExtArgs>>): Prisma__PropertyRequestClient<$Result.GetResult<Prisma.$PropertyRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PropertyViewing model
   */
  interface PropertyViewingFieldRefs {
    readonly id: FieldRef<"PropertyViewing", 'String'>
    readonly scheduledAt: FieldRef<"PropertyViewing", 'DateTime'>
    readonly duration: FieldRef<"PropertyViewing", 'Int'>
    readonly status: FieldRef<"PropertyViewing", 'String'>
    readonly notes: FieldRef<"PropertyViewing", 'String'>
    readonly buyerNotes: FieldRef<"PropertyViewing", 'String'>
    readonly location: FieldRef<"PropertyViewing", 'String'>
    readonly createdAt: FieldRef<"PropertyViewing", 'DateTime'>
    readonly updatedAt: FieldRef<"PropertyViewing", 'DateTime'>
    readonly propertyId: FieldRef<"PropertyViewing", 'String'>
    readonly sellerId: FieldRef<"PropertyViewing", 'String'>
    readonly buyerId: FieldRef<"PropertyViewing", 'String'>
    readonly requestId: FieldRef<"PropertyViewing", 'String'>
    readonly propertyRequestId: FieldRef<"PropertyViewing", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PropertyViewing findUnique
   */
  export type PropertyViewingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyViewing
     */
    select?: PropertyViewingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyViewing
     */
    omit?: PropertyViewingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewingInclude<ExtArgs> | null
    /**
     * Filter, which PropertyViewing to fetch.
     */
    where: PropertyViewingWhereUniqueInput
  }

  /**
   * PropertyViewing findUniqueOrThrow
   */
  export type PropertyViewingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyViewing
     */
    select?: PropertyViewingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyViewing
     */
    omit?: PropertyViewingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewingInclude<ExtArgs> | null
    /**
     * Filter, which PropertyViewing to fetch.
     */
    where: PropertyViewingWhereUniqueInput
  }

  /**
   * PropertyViewing findFirst
   */
  export type PropertyViewingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyViewing
     */
    select?: PropertyViewingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyViewing
     */
    omit?: PropertyViewingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewingInclude<ExtArgs> | null
    /**
     * Filter, which PropertyViewing to fetch.
     */
    where?: PropertyViewingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyViewings to fetch.
     */
    orderBy?: PropertyViewingOrderByWithRelationInput | PropertyViewingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyViewings.
     */
    cursor?: PropertyViewingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyViewings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyViewings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyViewings.
     */
    distinct?: PropertyViewingScalarFieldEnum | PropertyViewingScalarFieldEnum[]
  }

  /**
   * PropertyViewing findFirstOrThrow
   */
  export type PropertyViewingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyViewing
     */
    select?: PropertyViewingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyViewing
     */
    omit?: PropertyViewingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewingInclude<ExtArgs> | null
    /**
     * Filter, which PropertyViewing to fetch.
     */
    where?: PropertyViewingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyViewings to fetch.
     */
    orderBy?: PropertyViewingOrderByWithRelationInput | PropertyViewingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyViewings.
     */
    cursor?: PropertyViewingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyViewings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyViewings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyViewings.
     */
    distinct?: PropertyViewingScalarFieldEnum | PropertyViewingScalarFieldEnum[]
  }

  /**
   * PropertyViewing findMany
   */
  export type PropertyViewingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyViewing
     */
    select?: PropertyViewingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyViewing
     */
    omit?: PropertyViewingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewingInclude<ExtArgs> | null
    /**
     * Filter, which PropertyViewings to fetch.
     */
    where?: PropertyViewingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyViewings to fetch.
     */
    orderBy?: PropertyViewingOrderByWithRelationInput | PropertyViewingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PropertyViewings.
     */
    cursor?: PropertyViewingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyViewings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyViewings.
     */
    skip?: number
    distinct?: PropertyViewingScalarFieldEnum | PropertyViewingScalarFieldEnum[]
  }

  /**
   * PropertyViewing create
   */
  export type PropertyViewingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyViewing
     */
    select?: PropertyViewingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyViewing
     */
    omit?: PropertyViewingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewingInclude<ExtArgs> | null
    /**
     * The data needed to create a PropertyViewing.
     */
    data: XOR<PropertyViewingCreateInput, PropertyViewingUncheckedCreateInput>
  }

  /**
   * PropertyViewing createMany
   */
  export type PropertyViewingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PropertyViewings.
     */
    data: PropertyViewingCreateManyInput | PropertyViewingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PropertyViewing createManyAndReturn
   */
  export type PropertyViewingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyViewing
     */
    select?: PropertyViewingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyViewing
     */
    omit?: PropertyViewingOmit<ExtArgs> | null
    /**
     * The data used to create many PropertyViewings.
     */
    data: PropertyViewingCreateManyInput | PropertyViewingCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewingIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PropertyViewing update
   */
  export type PropertyViewingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyViewing
     */
    select?: PropertyViewingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyViewing
     */
    omit?: PropertyViewingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewingInclude<ExtArgs> | null
    /**
     * The data needed to update a PropertyViewing.
     */
    data: XOR<PropertyViewingUpdateInput, PropertyViewingUncheckedUpdateInput>
    /**
     * Choose, which PropertyViewing to update.
     */
    where: PropertyViewingWhereUniqueInput
  }

  /**
   * PropertyViewing updateMany
   */
  export type PropertyViewingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PropertyViewings.
     */
    data: XOR<PropertyViewingUpdateManyMutationInput, PropertyViewingUncheckedUpdateManyInput>
    /**
     * Filter which PropertyViewings to update
     */
    where?: PropertyViewingWhereInput
    /**
     * Limit how many PropertyViewings to update.
     */
    limit?: number
  }

  /**
   * PropertyViewing updateManyAndReturn
   */
  export type PropertyViewingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyViewing
     */
    select?: PropertyViewingSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyViewing
     */
    omit?: PropertyViewingOmit<ExtArgs> | null
    /**
     * The data used to update PropertyViewings.
     */
    data: XOR<PropertyViewingUpdateManyMutationInput, PropertyViewingUncheckedUpdateManyInput>
    /**
     * Filter which PropertyViewings to update
     */
    where?: PropertyViewingWhereInput
    /**
     * Limit how many PropertyViewings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewingIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PropertyViewing upsert
   */
  export type PropertyViewingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyViewing
     */
    select?: PropertyViewingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyViewing
     */
    omit?: PropertyViewingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewingInclude<ExtArgs> | null
    /**
     * The filter to search for the PropertyViewing to update in case it exists.
     */
    where: PropertyViewingWhereUniqueInput
    /**
     * In case the PropertyViewing found by the `where` argument doesn't exist, create a new PropertyViewing with this data.
     */
    create: XOR<PropertyViewingCreateInput, PropertyViewingUncheckedCreateInput>
    /**
     * In case the PropertyViewing was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PropertyViewingUpdateInput, PropertyViewingUncheckedUpdateInput>
  }

  /**
   * PropertyViewing delete
   */
  export type PropertyViewingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyViewing
     */
    select?: PropertyViewingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyViewing
     */
    omit?: PropertyViewingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewingInclude<ExtArgs> | null
    /**
     * Filter which PropertyViewing to delete.
     */
    where: PropertyViewingWhereUniqueInput
  }

  /**
   * PropertyViewing deleteMany
   */
  export type PropertyViewingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyViewings to delete
     */
    where?: PropertyViewingWhereInput
    /**
     * Limit how many PropertyViewings to delete.
     */
    limit?: number
  }

  /**
   * PropertyViewing.buyer
   */
  export type PropertyViewing$buyerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * PropertyViewing.request
   */
  export type PropertyViewing$requestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRequest
     */
    select?: PropertyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRequest
     */
    omit?: PropertyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRequestInclude<ExtArgs> | null
    where?: PropertyRequestWhereInput
  }

  /**
   * PropertyViewing without action
   */
  export type PropertyViewingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyViewing
     */
    select?: PropertyViewingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyViewing
     */
    omit?: PropertyViewingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyViewingInclude<ExtArgs> | null
  }


  /**
   * Model PropertyAnalytics
   */

  export type AggregatePropertyAnalytics = {
    _count: PropertyAnalyticsCountAggregateOutputType | null
    _avg: PropertyAnalyticsAvgAggregateOutputType | null
    _sum: PropertyAnalyticsSumAggregateOutputType | null
    _min: PropertyAnalyticsMinAggregateOutputType | null
    _max: PropertyAnalyticsMaxAggregateOutputType | null
  }

  export type PropertyAnalyticsAvgAggregateOutputType = {
    totalViews: number | null
    uniqueViews: number | null
    totalFavorites: number | null
    totalRequests: number | null
    totalInquiries: number | null
    averageViewDuration: number | null
    bounceRate: number | null
    conversionRate: number | null
    viewsThisWeek: number | null
    viewsThisMonth: number | null
    viewsThisYear: number | null
  }

  export type PropertyAnalyticsSumAggregateOutputType = {
    totalViews: number | null
    uniqueViews: number | null
    totalFavorites: number | null
    totalRequests: number | null
    totalInquiries: number | null
    averageViewDuration: number | null
    bounceRate: number | null
    conversionRate: number | null
    viewsThisWeek: number | null
    viewsThisMonth: number | null
    viewsThisYear: number | null
  }

  export type PropertyAnalyticsMinAggregateOutputType = {
    id: string | null
    totalViews: number | null
    uniqueViews: number | null
    totalFavorites: number | null
    totalRequests: number | null
    totalInquiries: number | null
    averageViewDuration: number | null
    bounceRate: number | null
    conversionRate: number | null
    viewsThisWeek: number | null
    viewsThisMonth: number | null
    viewsThisYear: number | null
    lastCalculated: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    propertyId: string | null
    userId: string | null
  }

  export type PropertyAnalyticsMaxAggregateOutputType = {
    id: string | null
    totalViews: number | null
    uniqueViews: number | null
    totalFavorites: number | null
    totalRequests: number | null
    totalInquiries: number | null
    averageViewDuration: number | null
    bounceRate: number | null
    conversionRate: number | null
    viewsThisWeek: number | null
    viewsThisMonth: number | null
    viewsThisYear: number | null
    lastCalculated: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    propertyId: string | null
    userId: string | null
  }

  export type PropertyAnalyticsCountAggregateOutputType = {
    id: number
    totalViews: number
    uniqueViews: number
    totalFavorites: number
    totalRequests: number
    totalInquiries: number
    averageViewDuration: number
    bounceRate: number
    conversionRate: number
    viewsThisWeek: number
    viewsThisMonth: number
    viewsThisYear: number
    lastCalculated: number
    createdAt: number
    updatedAt: number
    propertyId: number
    userId: number
    _all: number
  }


  export type PropertyAnalyticsAvgAggregateInputType = {
    totalViews?: true
    uniqueViews?: true
    totalFavorites?: true
    totalRequests?: true
    totalInquiries?: true
    averageViewDuration?: true
    bounceRate?: true
    conversionRate?: true
    viewsThisWeek?: true
    viewsThisMonth?: true
    viewsThisYear?: true
  }

  export type PropertyAnalyticsSumAggregateInputType = {
    totalViews?: true
    uniqueViews?: true
    totalFavorites?: true
    totalRequests?: true
    totalInquiries?: true
    averageViewDuration?: true
    bounceRate?: true
    conversionRate?: true
    viewsThisWeek?: true
    viewsThisMonth?: true
    viewsThisYear?: true
  }

  export type PropertyAnalyticsMinAggregateInputType = {
    id?: true
    totalViews?: true
    uniqueViews?: true
    totalFavorites?: true
    totalRequests?: true
    totalInquiries?: true
    averageViewDuration?: true
    bounceRate?: true
    conversionRate?: true
    viewsThisWeek?: true
    viewsThisMonth?: true
    viewsThisYear?: true
    lastCalculated?: true
    createdAt?: true
    updatedAt?: true
    propertyId?: true
    userId?: true
  }

  export type PropertyAnalyticsMaxAggregateInputType = {
    id?: true
    totalViews?: true
    uniqueViews?: true
    totalFavorites?: true
    totalRequests?: true
    totalInquiries?: true
    averageViewDuration?: true
    bounceRate?: true
    conversionRate?: true
    viewsThisWeek?: true
    viewsThisMonth?: true
    viewsThisYear?: true
    lastCalculated?: true
    createdAt?: true
    updatedAt?: true
    propertyId?: true
    userId?: true
  }

  export type PropertyAnalyticsCountAggregateInputType = {
    id?: true
    totalViews?: true
    uniqueViews?: true
    totalFavorites?: true
    totalRequests?: true
    totalInquiries?: true
    averageViewDuration?: true
    bounceRate?: true
    conversionRate?: true
    viewsThisWeek?: true
    viewsThisMonth?: true
    viewsThisYear?: true
    lastCalculated?: true
    createdAt?: true
    updatedAt?: true
    propertyId?: true
    userId?: true
    _all?: true
  }

  export type PropertyAnalyticsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyAnalytics to aggregate.
     */
    where?: PropertyAnalyticsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyAnalytics to fetch.
     */
    orderBy?: PropertyAnalyticsOrderByWithRelationInput | PropertyAnalyticsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PropertyAnalyticsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyAnalytics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyAnalytics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PropertyAnalytics
    **/
    _count?: true | PropertyAnalyticsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PropertyAnalyticsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PropertyAnalyticsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PropertyAnalyticsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PropertyAnalyticsMaxAggregateInputType
  }

  export type GetPropertyAnalyticsAggregateType<T extends PropertyAnalyticsAggregateArgs> = {
        [P in keyof T & keyof AggregatePropertyAnalytics]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePropertyAnalytics[P]>
      : GetScalarType<T[P], AggregatePropertyAnalytics[P]>
  }




  export type PropertyAnalyticsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyAnalyticsWhereInput
    orderBy?: PropertyAnalyticsOrderByWithAggregationInput | PropertyAnalyticsOrderByWithAggregationInput[]
    by: PropertyAnalyticsScalarFieldEnum[] | PropertyAnalyticsScalarFieldEnum
    having?: PropertyAnalyticsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PropertyAnalyticsCountAggregateInputType | true
    _avg?: PropertyAnalyticsAvgAggregateInputType
    _sum?: PropertyAnalyticsSumAggregateInputType
    _min?: PropertyAnalyticsMinAggregateInputType
    _max?: PropertyAnalyticsMaxAggregateInputType
  }

  export type PropertyAnalyticsGroupByOutputType = {
    id: string
    totalViews: number
    uniqueViews: number
    totalFavorites: number
    totalRequests: number
    totalInquiries: number
    averageViewDuration: number
    bounceRate: number
    conversionRate: number
    viewsThisWeek: number
    viewsThisMonth: number
    viewsThisYear: number
    lastCalculated: Date
    createdAt: Date
    updatedAt: Date
    propertyId: string
    userId: string | null
    _count: PropertyAnalyticsCountAggregateOutputType | null
    _avg: PropertyAnalyticsAvgAggregateOutputType | null
    _sum: PropertyAnalyticsSumAggregateOutputType | null
    _min: PropertyAnalyticsMinAggregateOutputType | null
    _max: PropertyAnalyticsMaxAggregateOutputType | null
  }

  type GetPropertyAnalyticsGroupByPayload<T extends PropertyAnalyticsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PropertyAnalyticsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PropertyAnalyticsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PropertyAnalyticsGroupByOutputType[P]>
            : GetScalarType<T[P], PropertyAnalyticsGroupByOutputType[P]>
        }
      >
    >


  export type PropertyAnalyticsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    totalViews?: boolean
    uniqueViews?: boolean
    totalFavorites?: boolean
    totalRequests?: boolean
    totalInquiries?: boolean
    averageViewDuration?: boolean
    bounceRate?: boolean
    conversionRate?: boolean
    viewsThisWeek?: boolean
    viewsThisMonth?: boolean
    viewsThisYear?: boolean
    lastCalculated?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    propertyId?: boolean
    userId?: boolean
    property?: boolean | PropertyDefaultArgs<ExtArgs>
    User?: boolean | PropertyAnalytics$UserArgs<ExtArgs>
  }, ExtArgs["result"]["propertyAnalytics"]>

  export type PropertyAnalyticsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    totalViews?: boolean
    uniqueViews?: boolean
    totalFavorites?: boolean
    totalRequests?: boolean
    totalInquiries?: boolean
    averageViewDuration?: boolean
    bounceRate?: boolean
    conversionRate?: boolean
    viewsThisWeek?: boolean
    viewsThisMonth?: boolean
    viewsThisYear?: boolean
    lastCalculated?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    propertyId?: boolean
    userId?: boolean
    property?: boolean | PropertyDefaultArgs<ExtArgs>
    User?: boolean | PropertyAnalytics$UserArgs<ExtArgs>
  }, ExtArgs["result"]["propertyAnalytics"]>

  export type PropertyAnalyticsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    totalViews?: boolean
    uniqueViews?: boolean
    totalFavorites?: boolean
    totalRequests?: boolean
    totalInquiries?: boolean
    averageViewDuration?: boolean
    bounceRate?: boolean
    conversionRate?: boolean
    viewsThisWeek?: boolean
    viewsThisMonth?: boolean
    viewsThisYear?: boolean
    lastCalculated?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    propertyId?: boolean
    userId?: boolean
    property?: boolean | PropertyDefaultArgs<ExtArgs>
    User?: boolean | PropertyAnalytics$UserArgs<ExtArgs>
  }, ExtArgs["result"]["propertyAnalytics"]>

  export type PropertyAnalyticsSelectScalar = {
    id?: boolean
    totalViews?: boolean
    uniqueViews?: boolean
    totalFavorites?: boolean
    totalRequests?: boolean
    totalInquiries?: boolean
    averageViewDuration?: boolean
    bounceRate?: boolean
    conversionRate?: boolean
    viewsThisWeek?: boolean
    viewsThisMonth?: boolean
    viewsThisYear?: boolean
    lastCalculated?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    propertyId?: boolean
    userId?: boolean
  }

  export type PropertyAnalyticsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "totalViews" | "uniqueViews" | "totalFavorites" | "totalRequests" | "totalInquiries" | "averageViewDuration" | "bounceRate" | "conversionRate" | "viewsThisWeek" | "viewsThisMonth" | "viewsThisYear" | "lastCalculated" | "createdAt" | "updatedAt" | "propertyId" | "userId", ExtArgs["result"]["propertyAnalytics"]>
  export type PropertyAnalyticsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    property?: boolean | PropertyDefaultArgs<ExtArgs>
    User?: boolean | PropertyAnalytics$UserArgs<ExtArgs>
  }
  export type PropertyAnalyticsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    property?: boolean | PropertyDefaultArgs<ExtArgs>
    User?: boolean | PropertyAnalytics$UserArgs<ExtArgs>
  }
  export type PropertyAnalyticsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    property?: boolean | PropertyDefaultArgs<ExtArgs>
    User?: boolean | PropertyAnalytics$UserArgs<ExtArgs>
  }

  export type $PropertyAnalyticsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PropertyAnalytics"
    objects: {
      property: Prisma.$PropertyPayload<ExtArgs>
      User: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      totalViews: number
      uniqueViews: number
      totalFavorites: number
      totalRequests: number
      totalInquiries: number
      averageViewDuration: number
      bounceRate: number
      conversionRate: number
      viewsThisWeek: number
      viewsThisMonth: number
      viewsThisYear: number
      lastCalculated: Date
      createdAt: Date
      updatedAt: Date
      propertyId: string
      userId: string | null
    }, ExtArgs["result"]["propertyAnalytics"]>
    composites: {}
  }

  type PropertyAnalyticsGetPayload<S extends boolean | null | undefined | PropertyAnalyticsDefaultArgs> = $Result.GetResult<Prisma.$PropertyAnalyticsPayload, S>

  type PropertyAnalyticsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PropertyAnalyticsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PropertyAnalyticsCountAggregateInputType | true
    }

  export interface PropertyAnalyticsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PropertyAnalytics'], meta: { name: 'PropertyAnalytics' } }
    /**
     * Find zero or one PropertyAnalytics that matches the filter.
     * @param {PropertyAnalyticsFindUniqueArgs} args - Arguments to find a PropertyAnalytics
     * @example
     * // Get one PropertyAnalytics
     * const propertyAnalytics = await prisma.propertyAnalytics.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PropertyAnalyticsFindUniqueArgs>(args: SelectSubset<T, PropertyAnalyticsFindUniqueArgs<ExtArgs>>): Prisma__PropertyAnalyticsClient<$Result.GetResult<Prisma.$PropertyAnalyticsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PropertyAnalytics that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PropertyAnalyticsFindUniqueOrThrowArgs} args - Arguments to find a PropertyAnalytics
     * @example
     * // Get one PropertyAnalytics
     * const propertyAnalytics = await prisma.propertyAnalytics.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PropertyAnalyticsFindUniqueOrThrowArgs>(args: SelectSubset<T, PropertyAnalyticsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PropertyAnalyticsClient<$Result.GetResult<Prisma.$PropertyAnalyticsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyAnalytics that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyAnalyticsFindFirstArgs} args - Arguments to find a PropertyAnalytics
     * @example
     * // Get one PropertyAnalytics
     * const propertyAnalytics = await prisma.propertyAnalytics.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PropertyAnalyticsFindFirstArgs>(args?: SelectSubset<T, PropertyAnalyticsFindFirstArgs<ExtArgs>>): Prisma__PropertyAnalyticsClient<$Result.GetResult<Prisma.$PropertyAnalyticsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyAnalytics that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyAnalyticsFindFirstOrThrowArgs} args - Arguments to find a PropertyAnalytics
     * @example
     * // Get one PropertyAnalytics
     * const propertyAnalytics = await prisma.propertyAnalytics.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PropertyAnalyticsFindFirstOrThrowArgs>(args?: SelectSubset<T, PropertyAnalyticsFindFirstOrThrowArgs<ExtArgs>>): Prisma__PropertyAnalyticsClient<$Result.GetResult<Prisma.$PropertyAnalyticsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PropertyAnalytics that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyAnalyticsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PropertyAnalytics
     * const propertyAnalytics = await prisma.propertyAnalytics.findMany()
     * 
     * // Get first 10 PropertyAnalytics
     * const propertyAnalytics = await prisma.propertyAnalytics.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const propertyAnalyticsWithIdOnly = await prisma.propertyAnalytics.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PropertyAnalyticsFindManyArgs>(args?: SelectSubset<T, PropertyAnalyticsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyAnalyticsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PropertyAnalytics.
     * @param {PropertyAnalyticsCreateArgs} args - Arguments to create a PropertyAnalytics.
     * @example
     * // Create one PropertyAnalytics
     * const PropertyAnalytics = await prisma.propertyAnalytics.create({
     *   data: {
     *     // ... data to create a PropertyAnalytics
     *   }
     * })
     * 
     */
    create<T extends PropertyAnalyticsCreateArgs>(args: SelectSubset<T, PropertyAnalyticsCreateArgs<ExtArgs>>): Prisma__PropertyAnalyticsClient<$Result.GetResult<Prisma.$PropertyAnalyticsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PropertyAnalytics.
     * @param {PropertyAnalyticsCreateManyArgs} args - Arguments to create many PropertyAnalytics.
     * @example
     * // Create many PropertyAnalytics
     * const propertyAnalytics = await prisma.propertyAnalytics.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PropertyAnalyticsCreateManyArgs>(args?: SelectSubset<T, PropertyAnalyticsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PropertyAnalytics and returns the data saved in the database.
     * @param {PropertyAnalyticsCreateManyAndReturnArgs} args - Arguments to create many PropertyAnalytics.
     * @example
     * // Create many PropertyAnalytics
     * const propertyAnalytics = await prisma.propertyAnalytics.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PropertyAnalytics and only return the `id`
     * const propertyAnalyticsWithIdOnly = await prisma.propertyAnalytics.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PropertyAnalyticsCreateManyAndReturnArgs>(args?: SelectSubset<T, PropertyAnalyticsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyAnalyticsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PropertyAnalytics.
     * @param {PropertyAnalyticsDeleteArgs} args - Arguments to delete one PropertyAnalytics.
     * @example
     * // Delete one PropertyAnalytics
     * const PropertyAnalytics = await prisma.propertyAnalytics.delete({
     *   where: {
     *     // ... filter to delete one PropertyAnalytics
     *   }
     * })
     * 
     */
    delete<T extends PropertyAnalyticsDeleteArgs>(args: SelectSubset<T, PropertyAnalyticsDeleteArgs<ExtArgs>>): Prisma__PropertyAnalyticsClient<$Result.GetResult<Prisma.$PropertyAnalyticsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PropertyAnalytics.
     * @param {PropertyAnalyticsUpdateArgs} args - Arguments to update one PropertyAnalytics.
     * @example
     * // Update one PropertyAnalytics
     * const propertyAnalytics = await prisma.propertyAnalytics.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PropertyAnalyticsUpdateArgs>(args: SelectSubset<T, PropertyAnalyticsUpdateArgs<ExtArgs>>): Prisma__PropertyAnalyticsClient<$Result.GetResult<Prisma.$PropertyAnalyticsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PropertyAnalytics.
     * @param {PropertyAnalyticsDeleteManyArgs} args - Arguments to filter PropertyAnalytics to delete.
     * @example
     * // Delete a few PropertyAnalytics
     * const { count } = await prisma.propertyAnalytics.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PropertyAnalyticsDeleteManyArgs>(args?: SelectSubset<T, PropertyAnalyticsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyAnalytics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyAnalyticsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PropertyAnalytics
     * const propertyAnalytics = await prisma.propertyAnalytics.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PropertyAnalyticsUpdateManyArgs>(args: SelectSubset<T, PropertyAnalyticsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyAnalytics and returns the data updated in the database.
     * @param {PropertyAnalyticsUpdateManyAndReturnArgs} args - Arguments to update many PropertyAnalytics.
     * @example
     * // Update many PropertyAnalytics
     * const propertyAnalytics = await prisma.propertyAnalytics.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PropertyAnalytics and only return the `id`
     * const propertyAnalyticsWithIdOnly = await prisma.propertyAnalytics.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PropertyAnalyticsUpdateManyAndReturnArgs>(args: SelectSubset<T, PropertyAnalyticsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyAnalyticsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PropertyAnalytics.
     * @param {PropertyAnalyticsUpsertArgs} args - Arguments to update or create a PropertyAnalytics.
     * @example
     * // Update or create a PropertyAnalytics
     * const propertyAnalytics = await prisma.propertyAnalytics.upsert({
     *   create: {
     *     // ... data to create a PropertyAnalytics
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PropertyAnalytics we want to update
     *   }
     * })
     */
    upsert<T extends PropertyAnalyticsUpsertArgs>(args: SelectSubset<T, PropertyAnalyticsUpsertArgs<ExtArgs>>): Prisma__PropertyAnalyticsClient<$Result.GetResult<Prisma.$PropertyAnalyticsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PropertyAnalytics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyAnalyticsCountArgs} args - Arguments to filter PropertyAnalytics to count.
     * @example
     * // Count the number of PropertyAnalytics
     * const count = await prisma.propertyAnalytics.count({
     *   where: {
     *     // ... the filter for the PropertyAnalytics we want to count
     *   }
     * })
    **/
    count<T extends PropertyAnalyticsCountArgs>(
      args?: Subset<T, PropertyAnalyticsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PropertyAnalyticsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PropertyAnalytics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyAnalyticsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PropertyAnalyticsAggregateArgs>(args: Subset<T, PropertyAnalyticsAggregateArgs>): Prisma.PrismaPromise<GetPropertyAnalyticsAggregateType<T>>

    /**
     * Group by PropertyAnalytics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyAnalyticsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PropertyAnalyticsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PropertyAnalyticsGroupByArgs['orderBy'] }
        : { orderBy?: PropertyAnalyticsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PropertyAnalyticsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPropertyAnalyticsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PropertyAnalytics model
   */
  readonly fields: PropertyAnalyticsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PropertyAnalytics.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PropertyAnalyticsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    property<T extends PropertyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PropertyDefaultArgs<ExtArgs>>): Prisma__PropertyClient<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    User<T extends PropertyAnalytics$UserArgs<ExtArgs> = {}>(args?: Subset<T, PropertyAnalytics$UserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PropertyAnalytics model
   */
  interface PropertyAnalyticsFieldRefs {
    readonly id: FieldRef<"PropertyAnalytics", 'String'>
    readonly totalViews: FieldRef<"PropertyAnalytics", 'Int'>
    readonly uniqueViews: FieldRef<"PropertyAnalytics", 'Int'>
    readonly totalFavorites: FieldRef<"PropertyAnalytics", 'Int'>
    readonly totalRequests: FieldRef<"PropertyAnalytics", 'Int'>
    readonly totalInquiries: FieldRef<"PropertyAnalytics", 'Int'>
    readonly averageViewDuration: FieldRef<"PropertyAnalytics", 'Float'>
    readonly bounceRate: FieldRef<"PropertyAnalytics", 'Float'>
    readonly conversionRate: FieldRef<"PropertyAnalytics", 'Float'>
    readonly viewsThisWeek: FieldRef<"PropertyAnalytics", 'Int'>
    readonly viewsThisMonth: FieldRef<"PropertyAnalytics", 'Int'>
    readonly viewsThisYear: FieldRef<"PropertyAnalytics", 'Int'>
    readonly lastCalculated: FieldRef<"PropertyAnalytics", 'DateTime'>
    readonly createdAt: FieldRef<"PropertyAnalytics", 'DateTime'>
    readonly updatedAt: FieldRef<"PropertyAnalytics", 'DateTime'>
    readonly propertyId: FieldRef<"PropertyAnalytics", 'String'>
    readonly userId: FieldRef<"PropertyAnalytics", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PropertyAnalytics findUnique
   */
  export type PropertyAnalyticsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyAnalytics
     */
    select?: PropertyAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyAnalytics
     */
    omit?: PropertyAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyAnalyticsInclude<ExtArgs> | null
    /**
     * Filter, which PropertyAnalytics to fetch.
     */
    where: PropertyAnalyticsWhereUniqueInput
  }

  /**
   * PropertyAnalytics findUniqueOrThrow
   */
  export type PropertyAnalyticsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyAnalytics
     */
    select?: PropertyAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyAnalytics
     */
    omit?: PropertyAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyAnalyticsInclude<ExtArgs> | null
    /**
     * Filter, which PropertyAnalytics to fetch.
     */
    where: PropertyAnalyticsWhereUniqueInput
  }

  /**
   * PropertyAnalytics findFirst
   */
  export type PropertyAnalyticsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyAnalytics
     */
    select?: PropertyAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyAnalytics
     */
    omit?: PropertyAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyAnalyticsInclude<ExtArgs> | null
    /**
     * Filter, which PropertyAnalytics to fetch.
     */
    where?: PropertyAnalyticsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyAnalytics to fetch.
     */
    orderBy?: PropertyAnalyticsOrderByWithRelationInput | PropertyAnalyticsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyAnalytics.
     */
    cursor?: PropertyAnalyticsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyAnalytics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyAnalytics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyAnalytics.
     */
    distinct?: PropertyAnalyticsScalarFieldEnum | PropertyAnalyticsScalarFieldEnum[]
  }

  /**
   * PropertyAnalytics findFirstOrThrow
   */
  export type PropertyAnalyticsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyAnalytics
     */
    select?: PropertyAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyAnalytics
     */
    omit?: PropertyAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyAnalyticsInclude<ExtArgs> | null
    /**
     * Filter, which PropertyAnalytics to fetch.
     */
    where?: PropertyAnalyticsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyAnalytics to fetch.
     */
    orderBy?: PropertyAnalyticsOrderByWithRelationInput | PropertyAnalyticsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyAnalytics.
     */
    cursor?: PropertyAnalyticsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyAnalytics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyAnalytics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyAnalytics.
     */
    distinct?: PropertyAnalyticsScalarFieldEnum | PropertyAnalyticsScalarFieldEnum[]
  }

  /**
   * PropertyAnalytics findMany
   */
  export type PropertyAnalyticsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyAnalytics
     */
    select?: PropertyAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyAnalytics
     */
    omit?: PropertyAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyAnalyticsInclude<ExtArgs> | null
    /**
     * Filter, which PropertyAnalytics to fetch.
     */
    where?: PropertyAnalyticsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyAnalytics to fetch.
     */
    orderBy?: PropertyAnalyticsOrderByWithRelationInput | PropertyAnalyticsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PropertyAnalytics.
     */
    cursor?: PropertyAnalyticsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyAnalytics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyAnalytics.
     */
    skip?: number
    distinct?: PropertyAnalyticsScalarFieldEnum | PropertyAnalyticsScalarFieldEnum[]
  }

  /**
   * PropertyAnalytics create
   */
  export type PropertyAnalyticsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyAnalytics
     */
    select?: PropertyAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyAnalytics
     */
    omit?: PropertyAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyAnalyticsInclude<ExtArgs> | null
    /**
     * The data needed to create a PropertyAnalytics.
     */
    data: XOR<PropertyAnalyticsCreateInput, PropertyAnalyticsUncheckedCreateInput>
  }

  /**
   * PropertyAnalytics createMany
   */
  export type PropertyAnalyticsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PropertyAnalytics.
     */
    data: PropertyAnalyticsCreateManyInput | PropertyAnalyticsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PropertyAnalytics createManyAndReturn
   */
  export type PropertyAnalyticsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyAnalytics
     */
    select?: PropertyAnalyticsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyAnalytics
     */
    omit?: PropertyAnalyticsOmit<ExtArgs> | null
    /**
     * The data used to create many PropertyAnalytics.
     */
    data: PropertyAnalyticsCreateManyInput | PropertyAnalyticsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyAnalyticsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PropertyAnalytics update
   */
  export type PropertyAnalyticsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyAnalytics
     */
    select?: PropertyAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyAnalytics
     */
    omit?: PropertyAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyAnalyticsInclude<ExtArgs> | null
    /**
     * The data needed to update a PropertyAnalytics.
     */
    data: XOR<PropertyAnalyticsUpdateInput, PropertyAnalyticsUncheckedUpdateInput>
    /**
     * Choose, which PropertyAnalytics to update.
     */
    where: PropertyAnalyticsWhereUniqueInput
  }

  /**
   * PropertyAnalytics updateMany
   */
  export type PropertyAnalyticsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PropertyAnalytics.
     */
    data: XOR<PropertyAnalyticsUpdateManyMutationInput, PropertyAnalyticsUncheckedUpdateManyInput>
    /**
     * Filter which PropertyAnalytics to update
     */
    where?: PropertyAnalyticsWhereInput
    /**
     * Limit how many PropertyAnalytics to update.
     */
    limit?: number
  }

  /**
   * PropertyAnalytics updateManyAndReturn
   */
  export type PropertyAnalyticsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyAnalytics
     */
    select?: PropertyAnalyticsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyAnalytics
     */
    omit?: PropertyAnalyticsOmit<ExtArgs> | null
    /**
     * The data used to update PropertyAnalytics.
     */
    data: XOR<PropertyAnalyticsUpdateManyMutationInput, PropertyAnalyticsUncheckedUpdateManyInput>
    /**
     * Filter which PropertyAnalytics to update
     */
    where?: PropertyAnalyticsWhereInput
    /**
     * Limit how many PropertyAnalytics to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyAnalyticsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PropertyAnalytics upsert
   */
  export type PropertyAnalyticsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyAnalytics
     */
    select?: PropertyAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyAnalytics
     */
    omit?: PropertyAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyAnalyticsInclude<ExtArgs> | null
    /**
     * The filter to search for the PropertyAnalytics to update in case it exists.
     */
    where: PropertyAnalyticsWhereUniqueInput
    /**
     * In case the PropertyAnalytics found by the `where` argument doesn't exist, create a new PropertyAnalytics with this data.
     */
    create: XOR<PropertyAnalyticsCreateInput, PropertyAnalyticsUncheckedCreateInput>
    /**
     * In case the PropertyAnalytics was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PropertyAnalyticsUpdateInput, PropertyAnalyticsUncheckedUpdateInput>
  }

  /**
   * PropertyAnalytics delete
   */
  export type PropertyAnalyticsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyAnalytics
     */
    select?: PropertyAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyAnalytics
     */
    omit?: PropertyAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyAnalyticsInclude<ExtArgs> | null
    /**
     * Filter which PropertyAnalytics to delete.
     */
    where: PropertyAnalyticsWhereUniqueInput
  }

  /**
   * PropertyAnalytics deleteMany
   */
  export type PropertyAnalyticsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyAnalytics to delete
     */
    where?: PropertyAnalyticsWhereInput
    /**
     * Limit how many PropertyAnalytics to delete.
     */
    limit?: number
  }

  /**
   * PropertyAnalytics.User
   */
  export type PropertyAnalytics$UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * PropertyAnalytics without action
   */
  export type PropertyAnalyticsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyAnalytics
     */
    select?: PropertyAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyAnalytics
     */
    omit?: PropertyAnalyticsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyAnalyticsInclude<ExtArgs> | null
  }


  /**
   * Model AdminAction
   */

  export type AggregateAdminAction = {
    _count: AdminActionCountAggregateOutputType | null
    _min: AdminActionMinAggregateOutputType | null
    _max: AdminActionMaxAggregateOutputType | null
  }

  export type AdminActionMinAggregateOutputType = {
    id: string | null
    action: string | null
    details: string | null
    createdAt: Date | null
    adminId: string | null
    propertyId: string | null
    userId: string | null
    agencyId: string | null
  }

  export type AdminActionMaxAggregateOutputType = {
    id: string | null
    action: string | null
    details: string | null
    createdAt: Date | null
    adminId: string | null
    propertyId: string | null
    userId: string | null
    agencyId: string | null
  }

  export type AdminActionCountAggregateOutputType = {
    id: number
    action: number
    details: number
    metadata: number
    createdAt: number
    adminId: number
    propertyId: number
    userId: number
    agencyId: number
    _all: number
  }


  export type AdminActionMinAggregateInputType = {
    id?: true
    action?: true
    details?: true
    createdAt?: true
    adminId?: true
    propertyId?: true
    userId?: true
    agencyId?: true
  }

  export type AdminActionMaxAggregateInputType = {
    id?: true
    action?: true
    details?: true
    createdAt?: true
    adminId?: true
    propertyId?: true
    userId?: true
    agencyId?: true
  }

  export type AdminActionCountAggregateInputType = {
    id?: true
    action?: true
    details?: true
    metadata?: true
    createdAt?: true
    adminId?: true
    propertyId?: true
    userId?: true
    agencyId?: true
    _all?: true
  }

  export type AdminActionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AdminAction to aggregate.
     */
    where?: AdminActionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdminActions to fetch.
     */
    orderBy?: AdminActionOrderByWithRelationInput | AdminActionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AdminActionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdminActions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdminActions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AdminActions
    **/
    _count?: true | AdminActionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdminActionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdminActionMaxAggregateInputType
  }

  export type GetAdminActionAggregateType<T extends AdminActionAggregateArgs> = {
        [P in keyof T & keyof AggregateAdminAction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdminAction[P]>
      : GetScalarType<T[P], AggregateAdminAction[P]>
  }




  export type AdminActionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdminActionWhereInput
    orderBy?: AdminActionOrderByWithAggregationInput | AdminActionOrderByWithAggregationInput[]
    by: AdminActionScalarFieldEnum[] | AdminActionScalarFieldEnum
    having?: AdminActionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdminActionCountAggregateInputType | true
    _min?: AdminActionMinAggregateInputType
    _max?: AdminActionMaxAggregateInputType
  }

  export type AdminActionGroupByOutputType = {
    id: string
    action: string
    details: string | null
    metadata: JsonValue | null
    createdAt: Date
    adminId: string
    propertyId: string | null
    userId: string | null
    agencyId: string | null
    _count: AdminActionCountAggregateOutputType | null
    _min: AdminActionMinAggregateOutputType | null
    _max: AdminActionMaxAggregateOutputType | null
  }

  type GetAdminActionGroupByPayload<T extends AdminActionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdminActionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdminActionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdminActionGroupByOutputType[P]>
            : GetScalarType<T[P], AdminActionGroupByOutputType[P]>
        }
      >
    >


  export type AdminActionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    action?: boolean
    details?: boolean
    metadata?: boolean
    createdAt?: boolean
    adminId?: boolean
    propertyId?: boolean
    userId?: boolean
    agencyId?: boolean
    admin?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | AdminAction$propertyArgs<ExtArgs>
    user?: boolean | AdminAction$userArgs<ExtArgs>
    agency?: boolean | AdminAction$agencyArgs<ExtArgs>
  }, ExtArgs["result"]["adminAction"]>

  export type AdminActionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    action?: boolean
    details?: boolean
    metadata?: boolean
    createdAt?: boolean
    adminId?: boolean
    propertyId?: boolean
    userId?: boolean
    agencyId?: boolean
    admin?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | AdminAction$propertyArgs<ExtArgs>
    user?: boolean | AdminAction$userArgs<ExtArgs>
    agency?: boolean | AdminAction$agencyArgs<ExtArgs>
  }, ExtArgs["result"]["adminAction"]>

  export type AdminActionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    action?: boolean
    details?: boolean
    metadata?: boolean
    createdAt?: boolean
    adminId?: boolean
    propertyId?: boolean
    userId?: boolean
    agencyId?: boolean
    admin?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | AdminAction$propertyArgs<ExtArgs>
    user?: boolean | AdminAction$userArgs<ExtArgs>
    agency?: boolean | AdminAction$agencyArgs<ExtArgs>
  }, ExtArgs["result"]["adminAction"]>

  export type AdminActionSelectScalar = {
    id?: boolean
    action?: boolean
    details?: boolean
    metadata?: boolean
    createdAt?: boolean
    adminId?: boolean
    propertyId?: boolean
    userId?: boolean
    agencyId?: boolean
  }

  export type AdminActionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "action" | "details" | "metadata" | "createdAt" | "adminId" | "propertyId" | "userId" | "agencyId", ExtArgs["result"]["adminAction"]>
  export type AdminActionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | AdminAction$propertyArgs<ExtArgs>
    user?: boolean | AdminAction$userArgs<ExtArgs>
    agency?: boolean | AdminAction$agencyArgs<ExtArgs>
  }
  export type AdminActionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | AdminAction$propertyArgs<ExtArgs>
    user?: boolean | AdminAction$userArgs<ExtArgs>
    agency?: boolean | AdminAction$agencyArgs<ExtArgs>
  }
  export type AdminActionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | AdminAction$propertyArgs<ExtArgs>
    user?: boolean | AdminAction$userArgs<ExtArgs>
    agency?: boolean | AdminAction$agencyArgs<ExtArgs>
  }

  export type $AdminActionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AdminAction"
    objects: {
      admin: Prisma.$UserPayload<ExtArgs>
      property: Prisma.$PropertyPayload<ExtArgs> | null
      user: Prisma.$UserPayload<ExtArgs> | null
      agency: Prisma.$AgencyPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      action: string
      details: string | null
      metadata: Prisma.JsonValue | null
      createdAt: Date
      adminId: string
      propertyId: string | null
      userId: string | null
      agencyId: string | null
    }, ExtArgs["result"]["adminAction"]>
    composites: {}
  }

  type AdminActionGetPayload<S extends boolean | null | undefined | AdminActionDefaultArgs> = $Result.GetResult<Prisma.$AdminActionPayload, S>

  type AdminActionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AdminActionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AdminActionCountAggregateInputType | true
    }

  export interface AdminActionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AdminAction'], meta: { name: 'AdminAction' } }
    /**
     * Find zero or one AdminAction that matches the filter.
     * @param {AdminActionFindUniqueArgs} args - Arguments to find a AdminAction
     * @example
     * // Get one AdminAction
     * const adminAction = await prisma.adminAction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AdminActionFindUniqueArgs>(args: SelectSubset<T, AdminActionFindUniqueArgs<ExtArgs>>): Prisma__AdminActionClient<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AdminAction that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AdminActionFindUniqueOrThrowArgs} args - Arguments to find a AdminAction
     * @example
     * // Get one AdminAction
     * const adminAction = await prisma.adminAction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AdminActionFindUniqueOrThrowArgs>(args: SelectSubset<T, AdminActionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AdminActionClient<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AdminAction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminActionFindFirstArgs} args - Arguments to find a AdminAction
     * @example
     * // Get one AdminAction
     * const adminAction = await prisma.adminAction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AdminActionFindFirstArgs>(args?: SelectSubset<T, AdminActionFindFirstArgs<ExtArgs>>): Prisma__AdminActionClient<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AdminAction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminActionFindFirstOrThrowArgs} args - Arguments to find a AdminAction
     * @example
     * // Get one AdminAction
     * const adminAction = await prisma.adminAction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AdminActionFindFirstOrThrowArgs>(args?: SelectSubset<T, AdminActionFindFirstOrThrowArgs<ExtArgs>>): Prisma__AdminActionClient<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AdminActions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminActionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AdminActions
     * const adminActions = await prisma.adminAction.findMany()
     * 
     * // Get first 10 AdminActions
     * const adminActions = await prisma.adminAction.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const adminActionWithIdOnly = await prisma.adminAction.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AdminActionFindManyArgs>(args?: SelectSubset<T, AdminActionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AdminAction.
     * @param {AdminActionCreateArgs} args - Arguments to create a AdminAction.
     * @example
     * // Create one AdminAction
     * const AdminAction = await prisma.adminAction.create({
     *   data: {
     *     // ... data to create a AdminAction
     *   }
     * })
     * 
     */
    create<T extends AdminActionCreateArgs>(args: SelectSubset<T, AdminActionCreateArgs<ExtArgs>>): Prisma__AdminActionClient<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AdminActions.
     * @param {AdminActionCreateManyArgs} args - Arguments to create many AdminActions.
     * @example
     * // Create many AdminActions
     * const adminAction = await prisma.adminAction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AdminActionCreateManyArgs>(args?: SelectSubset<T, AdminActionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AdminActions and returns the data saved in the database.
     * @param {AdminActionCreateManyAndReturnArgs} args - Arguments to create many AdminActions.
     * @example
     * // Create many AdminActions
     * const adminAction = await prisma.adminAction.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AdminActions and only return the `id`
     * const adminActionWithIdOnly = await prisma.adminAction.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AdminActionCreateManyAndReturnArgs>(args?: SelectSubset<T, AdminActionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AdminAction.
     * @param {AdminActionDeleteArgs} args - Arguments to delete one AdminAction.
     * @example
     * // Delete one AdminAction
     * const AdminAction = await prisma.adminAction.delete({
     *   where: {
     *     // ... filter to delete one AdminAction
     *   }
     * })
     * 
     */
    delete<T extends AdminActionDeleteArgs>(args: SelectSubset<T, AdminActionDeleteArgs<ExtArgs>>): Prisma__AdminActionClient<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AdminAction.
     * @param {AdminActionUpdateArgs} args - Arguments to update one AdminAction.
     * @example
     * // Update one AdminAction
     * const adminAction = await prisma.adminAction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AdminActionUpdateArgs>(args: SelectSubset<T, AdminActionUpdateArgs<ExtArgs>>): Prisma__AdminActionClient<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AdminActions.
     * @param {AdminActionDeleteManyArgs} args - Arguments to filter AdminActions to delete.
     * @example
     * // Delete a few AdminActions
     * const { count } = await prisma.adminAction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AdminActionDeleteManyArgs>(args?: SelectSubset<T, AdminActionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AdminActions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminActionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AdminActions
     * const adminAction = await prisma.adminAction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AdminActionUpdateManyArgs>(args: SelectSubset<T, AdminActionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AdminActions and returns the data updated in the database.
     * @param {AdminActionUpdateManyAndReturnArgs} args - Arguments to update many AdminActions.
     * @example
     * // Update many AdminActions
     * const adminAction = await prisma.adminAction.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AdminActions and only return the `id`
     * const adminActionWithIdOnly = await prisma.adminAction.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AdminActionUpdateManyAndReturnArgs>(args: SelectSubset<T, AdminActionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AdminAction.
     * @param {AdminActionUpsertArgs} args - Arguments to update or create a AdminAction.
     * @example
     * // Update or create a AdminAction
     * const adminAction = await prisma.adminAction.upsert({
     *   create: {
     *     // ... data to create a AdminAction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AdminAction we want to update
     *   }
     * })
     */
    upsert<T extends AdminActionUpsertArgs>(args: SelectSubset<T, AdminActionUpsertArgs<ExtArgs>>): Prisma__AdminActionClient<$Result.GetResult<Prisma.$AdminActionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AdminActions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminActionCountArgs} args - Arguments to filter AdminActions to count.
     * @example
     * // Count the number of AdminActions
     * const count = await prisma.adminAction.count({
     *   where: {
     *     // ... the filter for the AdminActions we want to count
     *   }
     * })
    **/
    count<T extends AdminActionCountArgs>(
      args?: Subset<T, AdminActionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdminActionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AdminAction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminActionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdminActionAggregateArgs>(args: Subset<T, AdminActionAggregateArgs>): Prisma.PrismaPromise<GetAdminActionAggregateType<T>>

    /**
     * Group by AdminAction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminActionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AdminActionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AdminActionGroupByArgs['orderBy'] }
        : { orderBy?: AdminActionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AdminActionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdminActionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AdminAction model
   */
  readonly fields: AdminActionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AdminAction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AdminActionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    admin<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    property<T extends AdminAction$propertyArgs<ExtArgs> = {}>(args?: Subset<T, AdminAction$propertyArgs<ExtArgs>>): Prisma__PropertyClient<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user<T extends AdminAction$userArgs<ExtArgs> = {}>(args?: Subset<T, AdminAction$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    agency<T extends AdminAction$agencyArgs<ExtArgs> = {}>(args?: Subset<T, AdminAction$agencyArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AdminAction model
   */
  interface AdminActionFieldRefs {
    readonly id: FieldRef<"AdminAction", 'String'>
    readonly action: FieldRef<"AdminAction", 'String'>
    readonly details: FieldRef<"AdminAction", 'String'>
    readonly metadata: FieldRef<"AdminAction", 'Json'>
    readonly createdAt: FieldRef<"AdminAction", 'DateTime'>
    readonly adminId: FieldRef<"AdminAction", 'String'>
    readonly propertyId: FieldRef<"AdminAction", 'String'>
    readonly userId: FieldRef<"AdminAction", 'String'>
    readonly agencyId: FieldRef<"AdminAction", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AdminAction findUnique
   */
  export type AdminActionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminAction
     */
    omit?: AdminActionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
    /**
     * Filter, which AdminAction to fetch.
     */
    where: AdminActionWhereUniqueInput
  }

  /**
   * AdminAction findUniqueOrThrow
   */
  export type AdminActionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminAction
     */
    omit?: AdminActionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
    /**
     * Filter, which AdminAction to fetch.
     */
    where: AdminActionWhereUniqueInput
  }

  /**
   * AdminAction findFirst
   */
  export type AdminActionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminAction
     */
    omit?: AdminActionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
    /**
     * Filter, which AdminAction to fetch.
     */
    where?: AdminActionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdminActions to fetch.
     */
    orderBy?: AdminActionOrderByWithRelationInput | AdminActionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AdminActions.
     */
    cursor?: AdminActionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdminActions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdminActions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AdminActions.
     */
    distinct?: AdminActionScalarFieldEnum | AdminActionScalarFieldEnum[]
  }

  /**
   * AdminAction findFirstOrThrow
   */
  export type AdminActionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminAction
     */
    omit?: AdminActionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
    /**
     * Filter, which AdminAction to fetch.
     */
    where?: AdminActionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdminActions to fetch.
     */
    orderBy?: AdminActionOrderByWithRelationInput | AdminActionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AdminActions.
     */
    cursor?: AdminActionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdminActions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdminActions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AdminActions.
     */
    distinct?: AdminActionScalarFieldEnum | AdminActionScalarFieldEnum[]
  }

  /**
   * AdminAction findMany
   */
  export type AdminActionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminAction
     */
    omit?: AdminActionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
    /**
     * Filter, which AdminActions to fetch.
     */
    where?: AdminActionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdminActions to fetch.
     */
    orderBy?: AdminActionOrderByWithRelationInput | AdminActionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AdminActions.
     */
    cursor?: AdminActionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdminActions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdminActions.
     */
    skip?: number
    distinct?: AdminActionScalarFieldEnum | AdminActionScalarFieldEnum[]
  }

  /**
   * AdminAction create
   */
  export type AdminActionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminAction
     */
    omit?: AdminActionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
    /**
     * The data needed to create a AdminAction.
     */
    data: XOR<AdminActionCreateInput, AdminActionUncheckedCreateInput>
  }

  /**
   * AdminAction createMany
   */
  export type AdminActionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AdminActions.
     */
    data: AdminActionCreateManyInput | AdminActionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AdminAction createManyAndReturn
   */
  export type AdminActionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AdminAction
     */
    omit?: AdminActionOmit<ExtArgs> | null
    /**
     * The data used to create many AdminActions.
     */
    data: AdminActionCreateManyInput | AdminActionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AdminAction update
   */
  export type AdminActionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminAction
     */
    omit?: AdminActionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
    /**
     * The data needed to update a AdminAction.
     */
    data: XOR<AdminActionUpdateInput, AdminActionUncheckedUpdateInput>
    /**
     * Choose, which AdminAction to update.
     */
    where: AdminActionWhereUniqueInput
  }

  /**
   * AdminAction updateMany
   */
  export type AdminActionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AdminActions.
     */
    data: XOR<AdminActionUpdateManyMutationInput, AdminActionUncheckedUpdateManyInput>
    /**
     * Filter which AdminActions to update
     */
    where?: AdminActionWhereInput
    /**
     * Limit how many AdminActions to update.
     */
    limit?: number
  }

  /**
   * AdminAction updateManyAndReturn
   */
  export type AdminActionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AdminAction
     */
    omit?: AdminActionOmit<ExtArgs> | null
    /**
     * The data used to update AdminActions.
     */
    data: XOR<AdminActionUpdateManyMutationInput, AdminActionUncheckedUpdateManyInput>
    /**
     * Filter which AdminActions to update
     */
    where?: AdminActionWhereInput
    /**
     * Limit how many AdminActions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AdminAction upsert
   */
  export type AdminActionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminAction
     */
    omit?: AdminActionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
    /**
     * The filter to search for the AdminAction to update in case it exists.
     */
    where: AdminActionWhereUniqueInput
    /**
     * In case the AdminAction found by the `where` argument doesn't exist, create a new AdminAction with this data.
     */
    create: XOR<AdminActionCreateInput, AdminActionUncheckedCreateInput>
    /**
     * In case the AdminAction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AdminActionUpdateInput, AdminActionUncheckedUpdateInput>
  }

  /**
   * AdminAction delete
   */
  export type AdminActionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminAction
     */
    omit?: AdminActionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
    /**
     * Filter which AdminAction to delete.
     */
    where: AdminActionWhereUniqueInput
  }

  /**
   * AdminAction deleteMany
   */
  export type AdminActionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AdminActions to delete
     */
    where?: AdminActionWhereInput
    /**
     * Limit how many AdminActions to delete.
     */
    limit?: number
  }

  /**
   * AdminAction.property
   */
  export type AdminAction$propertyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Property
     */
    select?: PropertySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Property
     */
    omit?: PropertyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInclude<ExtArgs> | null
    where?: PropertyWhereInput
  }

  /**
   * AdminAction.user
   */
  export type AdminAction$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * AdminAction.agency
   */
  export type AdminAction$agencyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Agency
     */
    omit?: AgencyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    where?: AgencyWhereInput
  }

  /**
   * AdminAction without action
   */
  export type AdminActionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminAction
     */
    select?: AdminActionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdminAction
     */
    omit?: AdminActionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminActionInclude<ExtArgs> | null
  }


  /**
   * Model Notification
   */

  export type AggregateNotification = {
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  export type NotificationMinAggregateOutputType = {
    id: string | null
    type: $Enums.NotificationType | null
    title: string | null
    message: string | null
    isRead: boolean | null
    readAt: Date | null
    link: string | null
    createdAt: Date | null
    userId: string | null
  }

  export type NotificationMaxAggregateOutputType = {
    id: string | null
    type: $Enums.NotificationType | null
    title: string | null
    message: string | null
    isRead: boolean | null
    readAt: Date | null
    link: string | null
    createdAt: Date | null
    userId: string | null
  }

  export type NotificationCountAggregateOutputType = {
    id: number
    type: number
    title: number
    message: number
    isRead: number
    readAt: number
    data: number
    link: number
    createdAt: number
    userId: number
    _all: number
  }


  export type NotificationMinAggregateInputType = {
    id?: true
    type?: true
    title?: true
    message?: true
    isRead?: true
    readAt?: true
    link?: true
    createdAt?: true
    userId?: true
  }

  export type NotificationMaxAggregateInputType = {
    id?: true
    type?: true
    title?: true
    message?: true
    isRead?: true
    readAt?: true
    link?: true
    createdAt?: true
    userId?: true
  }

  export type NotificationCountAggregateInputType = {
    id?: true
    type?: true
    title?: true
    message?: true
    isRead?: true
    readAt?: true
    data?: true
    link?: true
    createdAt?: true
    userId?: true
    _all?: true
  }

  export type NotificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notification to aggregate.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notifications
    **/
    _count?: true | NotificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationMaxAggregateInputType
  }

  export type GetNotificationAggregateType<T extends NotificationAggregateArgs> = {
        [P in keyof T & keyof AggregateNotification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotification[P]>
      : GetScalarType<T[P], AggregateNotification[P]>
  }




  export type NotificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithAggregationInput | NotificationOrderByWithAggregationInput[]
    by: NotificationScalarFieldEnum[] | NotificationScalarFieldEnum
    having?: NotificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationCountAggregateInputType | true
    _min?: NotificationMinAggregateInputType
    _max?: NotificationMaxAggregateInputType
  }

  export type NotificationGroupByOutputType = {
    id: string
    type: $Enums.NotificationType
    title: string
    message: string
    isRead: boolean
    readAt: Date | null
    data: JsonValue | null
    link: string | null
    createdAt: Date
    userId: string
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  type GetNotificationGroupByPayload<T extends NotificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationGroupByOutputType[P]>
        }
      >
    >


  export type NotificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    title?: boolean
    message?: boolean
    isRead?: boolean
    readAt?: boolean
    data?: boolean
    link?: boolean
    createdAt?: boolean
    userId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    title?: boolean
    message?: boolean
    isRead?: boolean
    readAt?: boolean
    data?: boolean
    link?: boolean
    createdAt?: boolean
    userId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    title?: boolean
    message?: boolean
    isRead?: boolean
    readAt?: boolean
    data?: boolean
    link?: boolean
    createdAt?: boolean
    userId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectScalar = {
    id?: boolean
    type?: boolean
    title?: boolean
    message?: boolean
    isRead?: boolean
    readAt?: boolean
    data?: boolean
    link?: boolean
    createdAt?: boolean
    userId?: boolean
  }

  export type NotificationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type" | "title" | "message" | "isRead" | "readAt" | "data" | "link" | "createdAt" | "userId", ExtArgs["result"]["notification"]>
  export type NotificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type NotificationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type NotificationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $NotificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Notification"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      type: $Enums.NotificationType
      title: string
      message: string
      isRead: boolean
      readAt: Date | null
      data: Prisma.JsonValue | null
      link: string | null
      createdAt: Date
      userId: string
    }, ExtArgs["result"]["notification"]>
    composites: {}
  }

  type NotificationGetPayload<S extends boolean | null | undefined | NotificationDefaultArgs> = $Result.GetResult<Prisma.$NotificationPayload, S>

  type NotificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<NotificationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificationCountAggregateInputType | true
    }

  export interface NotificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Notification'], meta: { name: 'Notification' } }
    /**
     * Find zero or one Notification that matches the filter.
     * @param {NotificationFindUniqueArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotificationFindUniqueArgs>(args: SelectSubset<T, NotificationFindUniqueArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Notification that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {NotificationFindUniqueOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotificationFindUniqueOrThrowArgs>(args: SelectSubset<T, NotificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotificationFindFirstArgs>(args?: SelectSubset<T, NotificationFindFirstArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotificationFindFirstOrThrowArgs>(args?: SelectSubset<T, NotificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notification.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationWithIdOnly = await prisma.notification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotificationFindManyArgs>(args?: SelectSubset<T, NotificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Notification.
     * @param {NotificationCreateArgs} args - Arguments to create a Notification.
     * @example
     * // Create one Notification
     * const Notification = await prisma.notification.create({
     *   data: {
     *     // ... data to create a Notification
     *   }
     * })
     * 
     */
    create<T extends NotificationCreateArgs>(args: SelectSubset<T, NotificationCreateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notifications.
     * @param {NotificationCreateManyArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotificationCreateManyArgs>(args?: SelectSubset<T, NotificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notifications and returns the data saved in the database.
     * @param {NotificationCreateManyAndReturnArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notifications and only return the `id`
     * const notificationWithIdOnly = await prisma.notification.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NotificationCreateManyAndReturnArgs>(args?: SelectSubset<T, NotificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Notification.
     * @param {NotificationDeleteArgs} args - Arguments to delete one Notification.
     * @example
     * // Delete one Notification
     * const Notification = await prisma.notification.delete({
     *   where: {
     *     // ... filter to delete one Notification
     *   }
     * })
     * 
     */
    delete<T extends NotificationDeleteArgs>(args: SelectSubset<T, NotificationDeleteArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Notification.
     * @param {NotificationUpdateArgs} args - Arguments to update one Notification.
     * @example
     * // Update one Notification
     * const notification = await prisma.notification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotificationUpdateArgs>(args: SelectSubset<T, NotificationUpdateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notifications.
     * @param {NotificationDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotificationDeleteManyArgs>(args?: SelectSubset<T, NotificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotificationUpdateManyArgs>(args: SelectSubset<T, NotificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications and returns the data updated in the database.
     * @param {NotificationUpdateManyAndReturnArgs} args - Arguments to update many Notifications.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Notifications and only return the `id`
     * const notificationWithIdOnly = await prisma.notification.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends NotificationUpdateManyAndReturnArgs>(args: SelectSubset<T, NotificationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Notification.
     * @param {NotificationUpsertArgs} args - Arguments to update or create a Notification.
     * @example
     * // Update or create a Notification
     * const notification = await prisma.notification.upsert({
     *   create: {
     *     // ... data to create a Notification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notification we want to update
     *   }
     * })
     */
    upsert<T extends NotificationUpsertArgs>(args: SelectSubset<T, NotificationUpsertArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notification.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends NotificationCountArgs>(
      args?: Subset<T, NotificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationAggregateArgs>(args: Subset<T, NotificationAggregateArgs>): Prisma.PrismaPromise<GetNotificationAggregateType<T>>

    /**
     * Group by Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificationGroupByArgs['orderBy'] }
        : { orderBy?: NotificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Notification model
   */
  readonly fields: NotificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Notification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Notification model
   */
  interface NotificationFieldRefs {
    readonly id: FieldRef<"Notification", 'String'>
    readonly type: FieldRef<"Notification", 'NotificationType'>
    readonly title: FieldRef<"Notification", 'String'>
    readonly message: FieldRef<"Notification", 'String'>
    readonly isRead: FieldRef<"Notification", 'Boolean'>
    readonly readAt: FieldRef<"Notification", 'DateTime'>
    readonly data: FieldRef<"Notification", 'Json'>
    readonly link: FieldRef<"Notification", 'String'>
    readonly createdAt: FieldRef<"Notification", 'DateTime'>
    readonly userId: FieldRef<"Notification", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Notification findUnique
   */
  export type NotificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findUniqueOrThrow
   */
  export type NotificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findFirst
   */
  export type NotificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findFirstOrThrow
   */
  export type NotificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findMany
   */
  export type NotificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notifications to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification create
   */
  export type NotificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to create a Notification.
     */
    data: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
  }

  /**
   * Notification createMany
   */
  export type NotificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Notification createManyAndReturn
   */
  export type NotificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notification update
   */
  export type NotificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to update a Notification.
     */
    data: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
    /**
     * Choose, which Notification to update.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification updateMany
   */
  export type NotificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notifications.
     */
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to update.
     */
    limit?: number
  }

  /**
   * Notification updateManyAndReturn
   */
  export type NotificationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * The data used to update Notifications.
     */
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notification upsert
   */
  export type NotificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The filter to search for the Notification to update in case it exists.
     */
    where: NotificationWhereUniqueInput
    /**
     * In case the Notification found by the `where` argument doesn't exist, create a new Notification with this data.
     */
    create: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
    /**
     * In case the Notification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
  }

  /**
   * Notification delete
   */
  export type NotificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter which Notification to delete.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification deleteMany
   */
  export type NotificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notifications to delete
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to delete.
     */
    limit?: number
  }

  /**
   * Notification without action
   */
  export type NotificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
  }


  /**
   * Model Payment
   */

  export type AggregatePayment = {
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  export type PaymentAvgAggregateOutputType = {
    amount: number | null
  }

  export type PaymentSumAggregateOutputType = {
    amount: number | null
  }

  export type PaymentMinAggregateOutputType = {
    id: string | null
    amount: number | null
    currency: string | null
    status: $Enums.PaymentStatus | null
    paymentMethod: string | null
    transactionId: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: string | null
    propertyId: string | null
    requestId: string | null
    propertyRequestId: string | null
  }

  export type PaymentMaxAggregateOutputType = {
    id: string | null
    amount: number | null
    currency: string | null
    status: $Enums.PaymentStatus | null
    paymentMethod: string | null
    transactionId: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: string | null
    propertyId: string | null
    requestId: string | null
    propertyRequestId: string | null
  }

  export type PaymentCountAggregateOutputType = {
    id: number
    amount: number
    currency: number
    status: number
    paymentMethod: number
    transactionId: number
    description: number
    createdAt: number
    updatedAt: number
    userId: number
    propertyId: number
    requestId: number
    propertyRequestId: number
    _all: number
  }


  export type PaymentAvgAggregateInputType = {
    amount?: true
  }

  export type PaymentSumAggregateInputType = {
    amount?: true
  }

  export type PaymentMinAggregateInputType = {
    id?: true
    amount?: true
    currency?: true
    status?: true
    paymentMethod?: true
    transactionId?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    propertyId?: true
    requestId?: true
    propertyRequestId?: true
  }

  export type PaymentMaxAggregateInputType = {
    id?: true
    amount?: true
    currency?: true
    status?: true
    paymentMethod?: true
    transactionId?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    propertyId?: true
    requestId?: true
    propertyRequestId?: true
  }

  export type PaymentCountAggregateInputType = {
    id?: true
    amount?: true
    currency?: true
    status?: true
    paymentMethod?: true
    transactionId?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    propertyId?: true
    requestId?: true
    propertyRequestId?: true
    _all?: true
  }

  export type PaymentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payment to aggregate.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Payments
    **/
    _count?: true | PaymentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentMaxAggregateInputType
  }

  export type GetPaymentAggregateType<T extends PaymentAggregateArgs> = {
        [P in keyof T & keyof AggregatePayment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePayment[P]>
      : GetScalarType<T[P], AggregatePayment[P]>
  }




  export type PaymentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithAggregationInput | PaymentOrderByWithAggregationInput[]
    by: PaymentScalarFieldEnum[] | PaymentScalarFieldEnum
    having?: PaymentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentCountAggregateInputType | true
    _avg?: PaymentAvgAggregateInputType
    _sum?: PaymentSumAggregateInputType
    _min?: PaymentMinAggregateInputType
    _max?: PaymentMaxAggregateInputType
  }

  export type PaymentGroupByOutputType = {
    id: string
    amount: number
    currency: string
    status: $Enums.PaymentStatus
    paymentMethod: string
    transactionId: string | null
    description: string | null
    createdAt: Date
    updatedAt: Date
    userId: string
    propertyId: string | null
    requestId: string | null
    propertyRequestId: string | null
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  type GetPaymentGroupByPayload<T extends PaymentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentGroupByOutputType[P]>
        }
      >
    >


  export type PaymentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    amount?: boolean
    currency?: boolean
    status?: boolean
    paymentMethod?: boolean
    transactionId?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    propertyId?: boolean
    requestId?: boolean
    propertyRequestId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | Payment$propertyArgs<ExtArgs>
    request?: boolean | Payment$requestArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    amount?: boolean
    currency?: boolean
    status?: boolean
    paymentMethod?: boolean
    transactionId?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    propertyId?: boolean
    requestId?: boolean
    propertyRequestId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | Payment$propertyArgs<ExtArgs>
    request?: boolean | Payment$requestArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    amount?: boolean
    currency?: boolean
    status?: boolean
    paymentMethod?: boolean
    transactionId?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    propertyId?: boolean
    requestId?: boolean
    propertyRequestId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | Payment$propertyArgs<ExtArgs>
    request?: boolean | Payment$requestArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectScalar = {
    id?: boolean
    amount?: boolean
    currency?: boolean
    status?: boolean
    paymentMethod?: boolean
    transactionId?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    propertyId?: boolean
    requestId?: boolean
    propertyRequestId?: boolean
  }

  export type PaymentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "amount" | "currency" | "status" | "paymentMethod" | "transactionId" | "description" | "createdAt" | "updatedAt" | "userId" | "propertyId" | "requestId" | "propertyRequestId", ExtArgs["result"]["payment"]>
  export type PaymentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | Payment$propertyArgs<ExtArgs>
    request?: boolean | Payment$requestArgs<ExtArgs>
  }
  export type PaymentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | Payment$propertyArgs<ExtArgs>
    request?: boolean | Payment$requestArgs<ExtArgs>
  }
  export type PaymentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    property?: boolean | Payment$propertyArgs<ExtArgs>
    request?: boolean | Payment$requestArgs<ExtArgs>
  }

  export type $PaymentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Payment"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      property: Prisma.$PropertyPayload<ExtArgs> | null
      request: Prisma.$PropertyRequestPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      amount: number
      currency: string
      status: $Enums.PaymentStatus
      paymentMethod: string
      transactionId: string | null
      description: string | null
      createdAt: Date
      updatedAt: Date
      userId: string
      propertyId: string | null
      requestId: string | null
      propertyRequestId: string | null
    }, ExtArgs["result"]["payment"]>
    composites: {}
  }

  type PaymentGetPayload<S extends boolean | null | undefined | PaymentDefaultArgs> = $Result.GetResult<Prisma.$PaymentPayload, S>

  type PaymentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PaymentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaymentCountAggregateInputType | true
    }

  export interface PaymentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Payment'], meta: { name: 'Payment' } }
    /**
     * Find zero or one Payment that matches the filter.
     * @param {PaymentFindUniqueArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentFindUniqueArgs>(args: SelectSubset<T, PaymentFindUniqueArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Payment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PaymentFindUniqueOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentFindFirstArgs>(args?: SelectSubset<T, PaymentFindFirstArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Payments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Payments
     * const payments = await prisma.payment.findMany()
     * 
     * // Get first 10 Payments
     * const payments = await prisma.payment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentWithIdOnly = await prisma.payment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentFindManyArgs>(args?: SelectSubset<T, PaymentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Payment.
     * @param {PaymentCreateArgs} args - Arguments to create a Payment.
     * @example
     * // Create one Payment
     * const Payment = await prisma.payment.create({
     *   data: {
     *     // ... data to create a Payment
     *   }
     * })
     * 
     */
    create<T extends PaymentCreateArgs>(args: SelectSubset<T, PaymentCreateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Payments.
     * @param {PaymentCreateManyArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentCreateManyArgs>(args?: SelectSubset<T, PaymentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Payments and returns the data saved in the database.
     * @param {PaymentCreateManyAndReturnArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Payments and only return the `id`
     * const paymentWithIdOnly = await prisma.payment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Payment.
     * @param {PaymentDeleteArgs} args - Arguments to delete one Payment.
     * @example
     * // Delete one Payment
     * const Payment = await prisma.payment.delete({
     *   where: {
     *     // ... filter to delete one Payment
     *   }
     * })
     * 
     */
    delete<T extends PaymentDeleteArgs>(args: SelectSubset<T, PaymentDeleteArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Payment.
     * @param {PaymentUpdateArgs} args - Arguments to update one Payment.
     * @example
     * // Update one Payment
     * const payment = await prisma.payment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentUpdateArgs>(args: SelectSubset<T, PaymentUpdateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Payments.
     * @param {PaymentDeleteManyArgs} args - Arguments to filter Payments to delete.
     * @example
     * // Delete a few Payments
     * const { count } = await prisma.payment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentDeleteManyArgs>(args?: SelectSubset<T, PaymentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Payments
     * const payment = await prisma.payment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentUpdateManyArgs>(args: SelectSubset<T, PaymentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments and returns the data updated in the database.
     * @param {PaymentUpdateManyAndReturnArgs} args - Arguments to update many Payments.
     * @example
     * // Update many Payments
     * const payment = await prisma.payment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Payments and only return the `id`
     * const paymentWithIdOnly = await prisma.payment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PaymentUpdateManyAndReturnArgs>(args: SelectSubset<T, PaymentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Payment.
     * @param {PaymentUpsertArgs} args - Arguments to update or create a Payment.
     * @example
     * // Update or create a Payment
     * const payment = await prisma.payment.upsert({
     *   create: {
     *     // ... data to create a Payment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Payment we want to update
     *   }
     * })
     */
    upsert<T extends PaymentUpsertArgs>(args: SelectSubset<T, PaymentUpsertArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentCountArgs} args - Arguments to filter Payments to count.
     * @example
     * // Count the number of Payments
     * const count = await prisma.payment.count({
     *   where: {
     *     // ... the filter for the Payments we want to count
     *   }
     * })
    **/
    count<T extends PaymentCountArgs>(
      args?: Subset<T, PaymentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentAggregateArgs>(args: Subset<T, PaymentAggregateArgs>): Prisma.PrismaPromise<GetPaymentAggregateType<T>>

    /**
     * Group by Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentGroupByArgs['orderBy'] }
        : { orderBy?: PaymentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Payment model
   */
  readonly fields: PaymentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Payment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    property<T extends Payment$propertyArgs<ExtArgs> = {}>(args?: Subset<T, Payment$propertyArgs<ExtArgs>>): Prisma__PropertyClient<$Result.GetResult<Prisma.$PropertyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    request<T extends Payment$requestArgs<ExtArgs> = {}>(args?: Subset<T, Payment$requestArgs<ExtArgs>>): Prisma__PropertyRequestClient<$Result.GetResult<Prisma.$PropertyRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Payment model
   */
  interface PaymentFieldRefs {
    readonly id: FieldRef<"Payment", 'String'>
    readonly amount: FieldRef<"Payment", 'Float'>
    readonly currency: FieldRef<"Payment", 'String'>
    readonly status: FieldRef<"Payment", 'PaymentStatus'>
    readonly paymentMethod: FieldRef<"Payment", 'String'>
    readonly transactionId: FieldRef<"Payment", 'String'>
    readonly description: FieldRef<"Payment", 'String'>
    readonly createdAt: FieldRef<"Payment", 'DateTime'>
    readonly updatedAt: FieldRef<"Payment", 'DateTime'>
    readonly userId: FieldRef<"Payment", 'String'>
    readonly propertyId: FieldRef<"Payment", 'String'>
    readonly requestId: FieldRef<"Payment", 'String'>
    readonly propertyRequestId: FieldRef<"Payment", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Payment findUnique
   */
  export type PaymentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findUniqueOrThrow
   */
  export type PaymentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findFirst
   */
  export type PaymentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findFirstOrThrow
   */
  export type PaymentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findMany
   */
  export type PaymentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payments to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment create
   */
  export type PaymentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to create a Payment.
     */
    data: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
  }

  /**
   * Payment createMany
   */
  export type PaymentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Payment createManyAndReturn
   */
  export type PaymentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Payment update
   */
  export type PaymentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to update a Payment.
     */
    data: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
    /**
     * Choose, which Payment to update.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment updateMany
   */
  export type PaymentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Payments.
     */
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyInput>
    /**
     * Filter which Payments to update
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to update.
     */
    limit?: number
  }

  /**
   * Payment updateManyAndReturn
   */
  export type PaymentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * The data used to update Payments.
     */
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyInput>
    /**
     * Filter which Payments to update
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Payment upsert
   */
  export type PaymentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The filter to search for the Payment to update in case it exists.
     */
    where: PaymentWhereUniqueInput
    /**
     * In case the Payment found by the `where` argument doesn't exist, create a new Payment with this data.
     */
    create: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
    /**
     * In case the Payment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
  }

  /**
   * Payment delete
   */
  export type PaymentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter which Payment to delete.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment deleteMany
   */
  export type PaymentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payments to delete
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to delete.
     */
    limit?: number
  }

  /**
   * Payment.property
   */
  export type Payment$propertyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Property
     */
    select?: PropertySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Property
     */
    omit?: PropertyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyInclude<ExtArgs> | null
    where?: PropertyWhereInput
  }

  /**
   * Payment.request
   */
  export type Payment$requestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRequest
     */
    select?: PropertyRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRequest
     */
    omit?: PropertyRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRequestInclude<ExtArgs> | null
    where?: PropertyRequestWhereInput
  }

  /**
   * Payment without action
   */
  export type PaymentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
  }


  /**
   * Model SavedSearch
   */

  export type AggregateSavedSearch = {
    _count: SavedSearchCountAggregateOutputType | null
    _avg: SavedSearchAvgAggregateOutputType | null
    _sum: SavedSearchSumAggregateOutputType | null
    _min: SavedSearchMinAggregateOutputType | null
    _max: SavedSearchMaxAggregateOutputType | null
  }

  export type SavedSearchAvgAggregateOutputType = {
    minPrice: number | null
    maxPrice: number | null
    minArea: number | null
    maxArea: number | null
    bedrooms: number | null
    bathrooms: number | null
  }

  export type SavedSearchSumAggregateOutputType = {
    minPrice: number | null
    maxPrice: number | null
    minArea: number | null
    maxArea: number | null
    bedrooms: number | null
    bathrooms: number | null
  }

  export type SavedSearchMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    minPrice: number | null
    maxPrice: number | null
    minArea: number | null
    maxArea: number | null
    bedrooms: number | null
    bathrooms: number | null
    isActive: boolean | null
    notifyOnMatch: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: string | null
  }

  export type SavedSearchMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    minPrice: number | null
    maxPrice: number | null
    minArea: number | null
    maxArea: number | null
    bedrooms: number | null
    bathrooms: number | null
    isActive: boolean | null
    notifyOnMatch: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: string | null
  }

  export type SavedSearchCountAggregateOutputType = {
    id: number
    name: number
    description: number
    propertyTypes: number
    transactionTypes: number
    minPrice: number
    maxPrice: number
    minArea: number
    maxArea: number
    bedrooms: number
    bathrooms: number
    cities: number
    neighborhoods: number
    isActive: number
    notifyOnMatch: number
    createdAt: number
    updatedAt: number
    userId: number
    _all: number
  }


  export type SavedSearchAvgAggregateInputType = {
    minPrice?: true
    maxPrice?: true
    minArea?: true
    maxArea?: true
    bedrooms?: true
    bathrooms?: true
  }

  export type SavedSearchSumAggregateInputType = {
    minPrice?: true
    maxPrice?: true
    minArea?: true
    maxArea?: true
    bedrooms?: true
    bathrooms?: true
  }

  export type SavedSearchMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    minPrice?: true
    maxPrice?: true
    minArea?: true
    maxArea?: true
    bedrooms?: true
    bathrooms?: true
    isActive?: true
    notifyOnMatch?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
  }

  export type SavedSearchMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    minPrice?: true
    maxPrice?: true
    minArea?: true
    maxArea?: true
    bedrooms?: true
    bathrooms?: true
    isActive?: true
    notifyOnMatch?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
  }

  export type SavedSearchCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    propertyTypes?: true
    transactionTypes?: true
    minPrice?: true
    maxPrice?: true
    minArea?: true
    maxArea?: true
    bedrooms?: true
    bathrooms?: true
    cities?: true
    neighborhoods?: true
    isActive?: true
    notifyOnMatch?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    _all?: true
  }

  export type SavedSearchAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SavedSearch to aggregate.
     */
    where?: SavedSearchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SavedSearches to fetch.
     */
    orderBy?: SavedSearchOrderByWithRelationInput | SavedSearchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SavedSearchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SavedSearches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SavedSearches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SavedSearches
    **/
    _count?: true | SavedSearchCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SavedSearchAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SavedSearchSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SavedSearchMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SavedSearchMaxAggregateInputType
  }

  export type GetSavedSearchAggregateType<T extends SavedSearchAggregateArgs> = {
        [P in keyof T & keyof AggregateSavedSearch]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSavedSearch[P]>
      : GetScalarType<T[P], AggregateSavedSearch[P]>
  }




  export type SavedSearchGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SavedSearchWhereInput
    orderBy?: SavedSearchOrderByWithAggregationInput | SavedSearchOrderByWithAggregationInput[]
    by: SavedSearchScalarFieldEnum[] | SavedSearchScalarFieldEnum
    having?: SavedSearchScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SavedSearchCountAggregateInputType | true
    _avg?: SavedSearchAvgAggregateInputType
    _sum?: SavedSearchSumAggregateInputType
    _min?: SavedSearchMinAggregateInputType
    _max?: SavedSearchMaxAggregateInputType
  }

  export type SavedSearchGroupByOutputType = {
    id: string
    name: string
    description: string | null
    propertyTypes: $Enums.PropertyType[]
    transactionTypes: $Enums.TransactionType[]
    minPrice: number | null
    maxPrice: number | null
    minArea: number | null
    maxArea: number | null
    bedrooms: number | null
    bathrooms: number | null
    cities: string[]
    neighborhoods: string[]
    isActive: boolean
    notifyOnMatch: boolean
    createdAt: Date
    updatedAt: Date
    userId: string
    _count: SavedSearchCountAggregateOutputType | null
    _avg: SavedSearchAvgAggregateOutputType | null
    _sum: SavedSearchSumAggregateOutputType | null
    _min: SavedSearchMinAggregateOutputType | null
    _max: SavedSearchMaxAggregateOutputType | null
  }

  type GetSavedSearchGroupByPayload<T extends SavedSearchGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SavedSearchGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SavedSearchGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SavedSearchGroupByOutputType[P]>
            : GetScalarType<T[P], SavedSearchGroupByOutputType[P]>
        }
      >
    >


  export type SavedSearchSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    propertyTypes?: boolean
    transactionTypes?: boolean
    minPrice?: boolean
    maxPrice?: boolean
    minArea?: boolean
    maxArea?: boolean
    bedrooms?: boolean
    bathrooms?: boolean
    cities?: boolean
    neighborhoods?: boolean
    isActive?: boolean
    notifyOnMatch?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["savedSearch"]>

  export type SavedSearchSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    propertyTypes?: boolean
    transactionTypes?: boolean
    minPrice?: boolean
    maxPrice?: boolean
    minArea?: boolean
    maxArea?: boolean
    bedrooms?: boolean
    bathrooms?: boolean
    cities?: boolean
    neighborhoods?: boolean
    isActive?: boolean
    notifyOnMatch?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["savedSearch"]>

  export type SavedSearchSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    propertyTypes?: boolean
    transactionTypes?: boolean
    minPrice?: boolean
    maxPrice?: boolean
    minArea?: boolean
    maxArea?: boolean
    bedrooms?: boolean
    bathrooms?: boolean
    cities?: boolean
    neighborhoods?: boolean
    isActive?: boolean
    notifyOnMatch?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["savedSearch"]>

  export type SavedSearchSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    propertyTypes?: boolean
    transactionTypes?: boolean
    minPrice?: boolean
    maxPrice?: boolean
    minArea?: boolean
    maxArea?: boolean
    bedrooms?: boolean
    bathrooms?: boolean
    cities?: boolean
    neighborhoods?: boolean
    isActive?: boolean
    notifyOnMatch?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
  }

  export type SavedSearchOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "propertyTypes" | "transactionTypes" | "minPrice" | "maxPrice" | "minArea" | "maxArea" | "bedrooms" | "bathrooms" | "cities" | "neighborhoods" | "isActive" | "notifyOnMatch" | "createdAt" | "updatedAt" | "userId", ExtArgs["result"]["savedSearch"]>
  export type SavedSearchInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SavedSearchIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SavedSearchIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SavedSearchPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SavedSearch"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      propertyTypes: $Enums.PropertyType[]
      transactionTypes: $Enums.TransactionType[]
      minPrice: number | null
      maxPrice: number | null
      minArea: number | null
      maxArea: number | null
      bedrooms: number | null
      bathrooms: number | null
      cities: string[]
      neighborhoods: string[]
      isActive: boolean
      notifyOnMatch: boolean
      createdAt: Date
      updatedAt: Date
      userId: string
    }, ExtArgs["result"]["savedSearch"]>
    composites: {}
  }

  type SavedSearchGetPayload<S extends boolean | null | undefined | SavedSearchDefaultArgs> = $Result.GetResult<Prisma.$SavedSearchPayload, S>

  type SavedSearchCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SavedSearchFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SavedSearchCountAggregateInputType | true
    }

  export interface SavedSearchDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SavedSearch'], meta: { name: 'SavedSearch' } }
    /**
     * Find zero or one SavedSearch that matches the filter.
     * @param {SavedSearchFindUniqueArgs} args - Arguments to find a SavedSearch
     * @example
     * // Get one SavedSearch
     * const savedSearch = await prisma.savedSearch.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SavedSearchFindUniqueArgs>(args: SelectSubset<T, SavedSearchFindUniqueArgs<ExtArgs>>): Prisma__SavedSearchClient<$Result.GetResult<Prisma.$SavedSearchPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SavedSearch that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SavedSearchFindUniqueOrThrowArgs} args - Arguments to find a SavedSearch
     * @example
     * // Get one SavedSearch
     * const savedSearch = await prisma.savedSearch.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SavedSearchFindUniqueOrThrowArgs>(args: SelectSubset<T, SavedSearchFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SavedSearchClient<$Result.GetResult<Prisma.$SavedSearchPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SavedSearch that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SavedSearchFindFirstArgs} args - Arguments to find a SavedSearch
     * @example
     * // Get one SavedSearch
     * const savedSearch = await prisma.savedSearch.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SavedSearchFindFirstArgs>(args?: SelectSubset<T, SavedSearchFindFirstArgs<ExtArgs>>): Prisma__SavedSearchClient<$Result.GetResult<Prisma.$SavedSearchPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SavedSearch that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SavedSearchFindFirstOrThrowArgs} args - Arguments to find a SavedSearch
     * @example
     * // Get one SavedSearch
     * const savedSearch = await prisma.savedSearch.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SavedSearchFindFirstOrThrowArgs>(args?: SelectSubset<T, SavedSearchFindFirstOrThrowArgs<ExtArgs>>): Prisma__SavedSearchClient<$Result.GetResult<Prisma.$SavedSearchPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SavedSearches that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SavedSearchFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SavedSearches
     * const savedSearches = await prisma.savedSearch.findMany()
     * 
     * // Get first 10 SavedSearches
     * const savedSearches = await prisma.savedSearch.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const savedSearchWithIdOnly = await prisma.savedSearch.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SavedSearchFindManyArgs>(args?: SelectSubset<T, SavedSearchFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SavedSearchPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SavedSearch.
     * @param {SavedSearchCreateArgs} args - Arguments to create a SavedSearch.
     * @example
     * // Create one SavedSearch
     * const SavedSearch = await prisma.savedSearch.create({
     *   data: {
     *     // ... data to create a SavedSearch
     *   }
     * })
     * 
     */
    create<T extends SavedSearchCreateArgs>(args: SelectSubset<T, SavedSearchCreateArgs<ExtArgs>>): Prisma__SavedSearchClient<$Result.GetResult<Prisma.$SavedSearchPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SavedSearches.
     * @param {SavedSearchCreateManyArgs} args - Arguments to create many SavedSearches.
     * @example
     * // Create many SavedSearches
     * const savedSearch = await prisma.savedSearch.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SavedSearchCreateManyArgs>(args?: SelectSubset<T, SavedSearchCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SavedSearches and returns the data saved in the database.
     * @param {SavedSearchCreateManyAndReturnArgs} args - Arguments to create many SavedSearches.
     * @example
     * // Create many SavedSearches
     * const savedSearch = await prisma.savedSearch.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SavedSearches and only return the `id`
     * const savedSearchWithIdOnly = await prisma.savedSearch.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SavedSearchCreateManyAndReturnArgs>(args?: SelectSubset<T, SavedSearchCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SavedSearchPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SavedSearch.
     * @param {SavedSearchDeleteArgs} args - Arguments to delete one SavedSearch.
     * @example
     * // Delete one SavedSearch
     * const SavedSearch = await prisma.savedSearch.delete({
     *   where: {
     *     // ... filter to delete one SavedSearch
     *   }
     * })
     * 
     */
    delete<T extends SavedSearchDeleteArgs>(args: SelectSubset<T, SavedSearchDeleteArgs<ExtArgs>>): Prisma__SavedSearchClient<$Result.GetResult<Prisma.$SavedSearchPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SavedSearch.
     * @param {SavedSearchUpdateArgs} args - Arguments to update one SavedSearch.
     * @example
     * // Update one SavedSearch
     * const savedSearch = await prisma.savedSearch.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SavedSearchUpdateArgs>(args: SelectSubset<T, SavedSearchUpdateArgs<ExtArgs>>): Prisma__SavedSearchClient<$Result.GetResult<Prisma.$SavedSearchPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SavedSearches.
     * @param {SavedSearchDeleteManyArgs} args - Arguments to filter SavedSearches to delete.
     * @example
     * // Delete a few SavedSearches
     * const { count } = await prisma.savedSearch.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SavedSearchDeleteManyArgs>(args?: SelectSubset<T, SavedSearchDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SavedSearches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SavedSearchUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SavedSearches
     * const savedSearch = await prisma.savedSearch.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SavedSearchUpdateManyArgs>(args: SelectSubset<T, SavedSearchUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SavedSearches and returns the data updated in the database.
     * @param {SavedSearchUpdateManyAndReturnArgs} args - Arguments to update many SavedSearches.
     * @example
     * // Update many SavedSearches
     * const savedSearch = await prisma.savedSearch.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SavedSearches and only return the `id`
     * const savedSearchWithIdOnly = await prisma.savedSearch.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SavedSearchUpdateManyAndReturnArgs>(args: SelectSubset<T, SavedSearchUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SavedSearchPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SavedSearch.
     * @param {SavedSearchUpsertArgs} args - Arguments to update or create a SavedSearch.
     * @example
     * // Update or create a SavedSearch
     * const savedSearch = await prisma.savedSearch.upsert({
     *   create: {
     *     // ... data to create a SavedSearch
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SavedSearch we want to update
     *   }
     * })
     */
    upsert<T extends SavedSearchUpsertArgs>(args: SelectSubset<T, SavedSearchUpsertArgs<ExtArgs>>): Prisma__SavedSearchClient<$Result.GetResult<Prisma.$SavedSearchPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SavedSearches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SavedSearchCountArgs} args - Arguments to filter SavedSearches to count.
     * @example
     * // Count the number of SavedSearches
     * const count = await prisma.savedSearch.count({
     *   where: {
     *     // ... the filter for the SavedSearches we want to count
     *   }
     * })
    **/
    count<T extends SavedSearchCountArgs>(
      args?: Subset<T, SavedSearchCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SavedSearchCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SavedSearch.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SavedSearchAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SavedSearchAggregateArgs>(args: Subset<T, SavedSearchAggregateArgs>): Prisma.PrismaPromise<GetSavedSearchAggregateType<T>>

    /**
     * Group by SavedSearch.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SavedSearchGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SavedSearchGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SavedSearchGroupByArgs['orderBy'] }
        : { orderBy?: SavedSearchGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SavedSearchGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSavedSearchGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SavedSearch model
   */
  readonly fields: SavedSearchFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SavedSearch.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SavedSearchClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SavedSearch model
   */
  interface SavedSearchFieldRefs {
    readonly id: FieldRef<"SavedSearch", 'String'>
    readonly name: FieldRef<"SavedSearch", 'String'>
    readonly description: FieldRef<"SavedSearch", 'String'>
    readonly propertyTypes: FieldRef<"SavedSearch", 'PropertyType[]'>
    readonly transactionTypes: FieldRef<"SavedSearch", 'TransactionType[]'>
    readonly minPrice: FieldRef<"SavedSearch", 'Float'>
    readonly maxPrice: FieldRef<"SavedSearch", 'Float'>
    readonly minArea: FieldRef<"SavedSearch", 'Float'>
    readonly maxArea: FieldRef<"SavedSearch", 'Float'>
    readonly bedrooms: FieldRef<"SavedSearch", 'Int'>
    readonly bathrooms: FieldRef<"SavedSearch", 'Int'>
    readonly cities: FieldRef<"SavedSearch", 'String[]'>
    readonly neighborhoods: FieldRef<"SavedSearch", 'String[]'>
    readonly isActive: FieldRef<"SavedSearch", 'Boolean'>
    readonly notifyOnMatch: FieldRef<"SavedSearch", 'Boolean'>
    readonly createdAt: FieldRef<"SavedSearch", 'DateTime'>
    readonly updatedAt: FieldRef<"SavedSearch", 'DateTime'>
    readonly userId: FieldRef<"SavedSearch", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SavedSearch findUnique
   */
  export type SavedSearchFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedSearch
     */
    select?: SavedSearchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedSearch
     */
    omit?: SavedSearchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedSearchInclude<ExtArgs> | null
    /**
     * Filter, which SavedSearch to fetch.
     */
    where: SavedSearchWhereUniqueInput
  }

  /**
   * SavedSearch findUniqueOrThrow
   */
  export type SavedSearchFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedSearch
     */
    select?: SavedSearchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedSearch
     */
    omit?: SavedSearchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedSearchInclude<ExtArgs> | null
    /**
     * Filter, which SavedSearch to fetch.
     */
    where: SavedSearchWhereUniqueInput
  }

  /**
   * SavedSearch findFirst
   */
  export type SavedSearchFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedSearch
     */
    select?: SavedSearchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedSearch
     */
    omit?: SavedSearchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedSearchInclude<ExtArgs> | null
    /**
     * Filter, which SavedSearch to fetch.
     */
    where?: SavedSearchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SavedSearches to fetch.
     */
    orderBy?: SavedSearchOrderByWithRelationInput | SavedSearchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SavedSearches.
     */
    cursor?: SavedSearchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SavedSearches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SavedSearches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SavedSearches.
     */
    distinct?: SavedSearchScalarFieldEnum | SavedSearchScalarFieldEnum[]
  }

  /**
   * SavedSearch findFirstOrThrow
   */
  export type SavedSearchFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedSearch
     */
    select?: SavedSearchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedSearch
     */
    omit?: SavedSearchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedSearchInclude<ExtArgs> | null
    /**
     * Filter, which SavedSearch to fetch.
     */
    where?: SavedSearchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SavedSearches to fetch.
     */
    orderBy?: SavedSearchOrderByWithRelationInput | SavedSearchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SavedSearches.
     */
    cursor?: SavedSearchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SavedSearches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SavedSearches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SavedSearches.
     */
    distinct?: SavedSearchScalarFieldEnum | SavedSearchScalarFieldEnum[]
  }

  /**
   * SavedSearch findMany
   */
  export type SavedSearchFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedSearch
     */
    select?: SavedSearchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedSearch
     */
    omit?: SavedSearchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedSearchInclude<ExtArgs> | null
    /**
     * Filter, which SavedSearches to fetch.
     */
    where?: SavedSearchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SavedSearches to fetch.
     */
    orderBy?: SavedSearchOrderByWithRelationInput | SavedSearchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SavedSearches.
     */
    cursor?: SavedSearchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SavedSearches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SavedSearches.
     */
    skip?: number
    distinct?: SavedSearchScalarFieldEnum | SavedSearchScalarFieldEnum[]
  }

  /**
   * SavedSearch create
   */
  export type SavedSearchCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedSearch
     */
    select?: SavedSearchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedSearch
     */
    omit?: SavedSearchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedSearchInclude<ExtArgs> | null
    /**
     * The data needed to create a SavedSearch.
     */
    data: XOR<SavedSearchCreateInput, SavedSearchUncheckedCreateInput>
  }

  /**
   * SavedSearch createMany
   */
  export type SavedSearchCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SavedSearches.
     */
    data: SavedSearchCreateManyInput | SavedSearchCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SavedSearch createManyAndReturn
   */
  export type SavedSearchCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedSearch
     */
    select?: SavedSearchSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SavedSearch
     */
    omit?: SavedSearchOmit<ExtArgs> | null
    /**
     * The data used to create many SavedSearches.
     */
    data: SavedSearchCreateManyInput | SavedSearchCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedSearchIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SavedSearch update
   */
  export type SavedSearchUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedSearch
     */
    select?: SavedSearchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedSearch
     */
    omit?: SavedSearchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedSearchInclude<ExtArgs> | null
    /**
     * The data needed to update a SavedSearch.
     */
    data: XOR<SavedSearchUpdateInput, SavedSearchUncheckedUpdateInput>
    /**
     * Choose, which SavedSearch to update.
     */
    where: SavedSearchWhereUniqueInput
  }

  /**
   * SavedSearch updateMany
   */
  export type SavedSearchUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SavedSearches.
     */
    data: XOR<SavedSearchUpdateManyMutationInput, SavedSearchUncheckedUpdateManyInput>
    /**
     * Filter which SavedSearches to update
     */
    where?: SavedSearchWhereInput
    /**
     * Limit how many SavedSearches to update.
     */
    limit?: number
  }

  /**
   * SavedSearch updateManyAndReturn
   */
  export type SavedSearchUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedSearch
     */
    select?: SavedSearchSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SavedSearch
     */
    omit?: SavedSearchOmit<ExtArgs> | null
    /**
     * The data used to update SavedSearches.
     */
    data: XOR<SavedSearchUpdateManyMutationInput, SavedSearchUncheckedUpdateManyInput>
    /**
     * Filter which SavedSearches to update
     */
    where?: SavedSearchWhereInput
    /**
     * Limit how many SavedSearches to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedSearchIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SavedSearch upsert
   */
  export type SavedSearchUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedSearch
     */
    select?: SavedSearchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedSearch
     */
    omit?: SavedSearchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedSearchInclude<ExtArgs> | null
    /**
     * The filter to search for the SavedSearch to update in case it exists.
     */
    where: SavedSearchWhereUniqueInput
    /**
     * In case the SavedSearch found by the `where` argument doesn't exist, create a new SavedSearch with this data.
     */
    create: XOR<SavedSearchCreateInput, SavedSearchUncheckedCreateInput>
    /**
     * In case the SavedSearch was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SavedSearchUpdateInput, SavedSearchUncheckedUpdateInput>
  }

  /**
   * SavedSearch delete
   */
  export type SavedSearchDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedSearch
     */
    select?: SavedSearchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedSearch
     */
    omit?: SavedSearchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedSearchInclude<ExtArgs> | null
    /**
     * Filter which SavedSearch to delete.
     */
    where: SavedSearchWhereUniqueInput
  }

  /**
   * SavedSearch deleteMany
   */
  export type SavedSearchDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SavedSearches to delete
     */
    where?: SavedSearchWhereInput
    /**
     * Limit how many SavedSearches to delete.
     */
    limit?: number
  }

  /**
   * SavedSearch without action
   */
  export type SavedSearchDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedSearch
     */
    select?: SavedSearchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedSearch
     */
    omit?: SavedSearchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedSearchInclude<ExtArgs> | null
  }


  /**
   * Model PlatformSetting
   */

  export type AggregatePlatformSetting = {
    _count: PlatformSettingCountAggregateOutputType | null
    _min: PlatformSettingMinAggregateOutputType | null
    _max: PlatformSettingMaxAggregateOutputType | null
  }

  export type PlatformSettingMinAggregateOutputType = {
    id: string | null
    key: string | null
    value: string | null
    description: string | null
    category: string | null
    dataType: string | null
    isPublic: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PlatformSettingMaxAggregateOutputType = {
    id: string | null
    key: string | null
    value: string | null
    description: string | null
    category: string | null
    dataType: string | null
    isPublic: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PlatformSettingCountAggregateOutputType = {
    id: number
    key: number
    value: number
    description: number
    category: number
    dataType: number
    isPublic: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PlatformSettingMinAggregateInputType = {
    id?: true
    key?: true
    value?: true
    description?: true
    category?: true
    dataType?: true
    isPublic?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PlatformSettingMaxAggregateInputType = {
    id?: true
    key?: true
    value?: true
    description?: true
    category?: true
    dataType?: true
    isPublic?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PlatformSettingCountAggregateInputType = {
    id?: true
    key?: true
    value?: true
    description?: true
    category?: true
    dataType?: true
    isPublic?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PlatformSettingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PlatformSetting to aggregate.
     */
    where?: PlatformSettingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PlatformSettings to fetch.
     */
    orderBy?: PlatformSettingOrderByWithRelationInput | PlatformSettingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PlatformSettingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PlatformSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PlatformSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PlatformSettings
    **/
    _count?: true | PlatformSettingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PlatformSettingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PlatformSettingMaxAggregateInputType
  }

  export type GetPlatformSettingAggregateType<T extends PlatformSettingAggregateArgs> = {
        [P in keyof T & keyof AggregatePlatformSetting]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePlatformSetting[P]>
      : GetScalarType<T[P], AggregatePlatformSetting[P]>
  }




  export type PlatformSettingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PlatformSettingWhereInput
    orderBy?: PlatformSettingOrderByWithAggregationInput | PlatformSettingOrderByWithAggregationInput[]
    by: PlatformSettingScalarFieldEnum[] | PlatformSettingScalarFieldEnum
    having?: PlatformSettingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PlatformSettingCountAggregateInputType | true
    _min?: PlatformSettingMinAggregateInputType
    _max?: PlatformSettingMaxAggregateInputType
  }

  export type PlatformSettingGroupByOutputType = {
    id: string
    key: string
    value: string
    description: string | null
    category: string
    dataType: string
    isPublic: boolean
    createdAt: Date
    updatedAt: Date
    _count: PlatformSettingCountAggregateOutputType | null
    _min: PlatformSettingMinAggregateOutputType | null
    _max: PlatformSettingMaxAggregateOutputType | null
  }

  type GetPlatformSettingGroupByPayload<T extends PlatformSettingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PlatformSettingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PlatformSettingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PlatformSettingGroupByOutputType[P]>
            : GetScalarType<T[P], PlatformSettingGroupByOutputType[P]>
        }
      >
    >


  export type PlatformSettingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    key?: boolean
    value?: boolean
    description?: boolean
    category?: boolean
    dataType?: boolean
    isPublic?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["platformSetting"]>

  export type PlatformSettingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    key?: boolean
    value?: boolean
    description?: boolean
    category?: boolean
    dataType?: boolean
    isPublic?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["platformSetting"]>

  export type PlatformSettingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    key?: boolean
    value?: boolean
    description?: boolean
    category?: boolean
    dataType?: boolean
    isPublic?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["platformSetting"]>

  export type PlatformSettingSelectScalar = {
    id?: boolean
    key?: boolean
    value?: boolean
    description?: boolean
    category?: boolean
    dataType?: boolean
    isPublic?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PlatformSettingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "key" | "value" | "description" | "category" | "dataType" | "isPublic" | "createdAt" | "updatedAt", ExtArgs["result"]["platformSetting"]>

  export type $PlatformSettingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PlatformSetting"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      key: string
      value: string
      description: string | null
      category: string
      dataType: string
      isPublic: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["platformSetting"]>
    composites: {}
  }

  type PlatformSettingGetPayload<S extends boolean | null | undefined | PlatformSettingDefaultArgs> = $Result.GetResult<Prisma.$PlatformSettingPayload, S>

  type PlatformSettingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PlatformSettingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PlatformSettingCountAggregateInputType | true
    }

  export interface PlatformSettingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PlatformSetting'], meta: { name: 'PlatformSetting' } }
    /**
     * Find zero or one PlatformSetting that matches the filter.
     * @param {PlatformSettingFindUniqueArgs} args - Arguments to find a PlatformSetting
     * @example
     * // Get one PlatformSetting
     * const platformSetting = await prisma.platformSetting.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PlatformSettingFindUniqueArgs>(args: SelectSubset<T, PlatformSettingFindUniqueArgs<ExtArgs>>): Prisma__PlatformSettingClient<$Result.GetResult<Prisma.$PlatformSettingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PlatformSetting that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PlatformSettingFindUniqueOrThrowArgs} args - Arguments to find a PlatformSetting
     * @example
     * // Get one PlatformSetting
     * const platformSetting = await prisma.platformSetting.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PlatformSettingFindUniqueOrThrowArgs>(args: SelectSubset<T, PlatformSettingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PlatformSettingClient<$Result.GetResult<Prisma.$PlatformSettingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PlatformSetting that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlatformSettingFindFirstArgs} args - Arguments to find a PlatformSetting
     * @example
     * // Get one PlatformSetting
     * const platformSetting = await prisma.platformSetting.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PlatformSettingFindFirstArgs>(args?: SelectSubset<T, PlatformSettingFindFirstArgs<ExtArgs>>): Prisma__PlatformSettingClient<$Result.GetResult<Prisma.$PlatformSettingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PlatformSetting that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlatformSettingFindFirstOrThrowArgs} args - Arguments to find a PlatformSetting
     * @example
     * // Get one PlatformSetting
     * const platformSetting = await prisma.platformSetting.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PlatformSettingFindFirstOrThrowArgs>(args?: SelectSubset<T, PlatformSettingFindFirstOrThrowArgs<ExtArgs>>): Prisma__PlatformSettingClient<$Result.GetResult<Prisma.$PlatformSettingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PlatformSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlatformSettingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PlatformSettings
     * const platformSettings = await prisma.platformSetting.findMany()
     * 
     * // Get first 10 PlatformSettings
     * const platformSettings = await prisma.platformSetting.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const platformSettingWithIdOnly = await prisma.platformSetting.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PlatformSettingFindManyArgs>(args?: SelectSubset<T, PlatformSettingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlatformSettingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PlatformSetting.
     * @param {PlatformSettingCreateArgs} args - Arguments to create a PlatformSetting.
     * @example
     * // Create one PlatformSetting
     * const PlatformSetting = await prisma.platformSetting.create({
     *   data: {
     *     // ... data to create a PlatformSetting
     *   }
     * })
     * 
     */
    create<T extends PlatformSettingCreateArgs>(args: SelectSubset<T, PlatformSettingCreateArgs<ExtArgs>>): Prisma__PlatformSettingClient<$Result.GetResult<Prisma.$PlatformSettingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PlatformSettings.
     * @param {PlatformSettingCreateManyArgs} args - Arguments to create many PlatformSettings.
     * @example
     * // Create many PlatformSettings
     * const platformSetting = await prisma.platformSetting.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PlatformSettingCreateManyArgs>(args?: SelectSubset<T, PlatformSettingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PlatformSettings and returns the data saved in the database.
     * @param {PlatformSettingCreateManyAndReturnArgs} args - Arguments to create many PlatformSettings.
     * @example
     * // Create many PlatformSettings
     * const platformSetting = await prisma.platformSetting.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PlatformSettings and only return the `id`
     * const platformSettingWithIdOnly = await prisma.platformSetting.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PlatformSettingCreateManyAndReturnArgs>(args?: SelectSubset<T, PlatformSettingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlatformSettingPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PlatformSetting.
     * @param {PlatformSettingDeleteArgs} args - Arguments to delete one PlatformSetting.
     * @example
     * // Delete one PlatformSetting
     * const PlatformSetting = await prisma.platformSetting.delete({
     *   where: {
     *     // ... filter to delete one PlatformSetting
     *   }
     * })
     * 
     */
    delete<T extends PlatformSettingDeleteArgs>(args: SelectSubset<T, PlatformSettingDeleteArgs<ExtArgs>>): Prisma__PlatformSettingClient<$Result.GetResult<Prisma.$PlatformSettingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PlatformSetting.
     * @param {PlatformSettingUpdateArgs} args - Arguments to update one PlatformSetting.
     * @example
     * // Update one PlatformSetting
     * const platformSetting = await prisma.platformSetting.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PlatformSettingUpdateArgs>(args: SelectSubset<T, PlatformSettingUpdateArgs<ExtArgs>>): Prisma__PlatformSettingClient<$Result.GetResult<Prisma.$PlatformSettingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PlatformSettings.
     * @param {PlatformSettingDeleteManyArgs} args - Arguments to filter PlatformSettings to delete.
     * @example
     * // Delete a few PlatformSettings
     * const { count } = await prisma.platformSetting.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PlatformSettingDeleteManyArgs>(args?: SelectSubset<T, PlatformSettingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PlatformSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlatformSettingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PlatformSettings
     * const platformSetting = await prisma.platformSetting.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PlatformSettingUpdateManyArgs>(args: SelectSubset<T, PlatformSettingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PlatformSettings and returns the data updated in the database.
     * @param {PlatformSettingUpdateManyAndReturnArgs} args - Arguments to update many PlatformSettings.
     * @example
     * // Update many PlatformSettings
     * const platformSetting = await prisma.platformSetting.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PlatformSettings and only return the `id`
     * const platformSettingWithIdOnly = await prisma.platformSetting.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PlatformSettingUpdateManyAndReturnArgs>(args: SelectSubset<T, PlatformSettingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlatformSettingPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PlatformSetting.
     * @param {PlatformSettingUpsertArgs} args - Arguments to update or create a PlatformSetting.
     * @example
     * // Update or create a PlatformSetting
     * const platformSetting = await prisma.platformSetting.upsert({
     *   create: {
     *     // ... data to create a PlatformSetting
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PlatformSetting we want to update
     *   }
     * })
     */
    upsert<T extends PlatformSettingUpsertArgs>(args: SelectSubset<T, PlatformSettingUpsertArgs<ExtArgs>>): Prisma__PlatformSettingClient<$Result.GetResult<Prisma.$PlatformSettingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PlatformSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlatformSettingCountArgs} args - Arguments to filter PlatformSettings to count.
     * @example
     * // Count the number of PlatformSettings
     * const count = await prisma.platformSetting.count({
     *   where: {
     *     // ... the filter for the PlatformSettings we want to count
     *   }
     * })
    **/
    count<T extends PlatformSettingCountArgs>(
      args?: Subset<T, PlatformSettingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PlatformSettingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PlatformSetting.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlatformSettingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PlatformSettingAggregateArgs>(args: Subset<T, PlatformSettingAggregateArgs>): Prisma.PrismaPromise<GetPlatformSettingAggregateType<T>>

    /**
     * Group by PlatformSetting.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlatformSettingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PlatformSettingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PlatformSettingGroupByArgs['orderBy'] }
        : { orderBy?: PlatformSettingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PlatformSettingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPlatformSettingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PlatformSetting model
   */
  readonly fields: PlatformSettingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PlatformSetting.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PlatformSettingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PlatformSetting model
   */
  interface PlatformSettingFieldRefs {
    readonly id: FieldRef<"PlatformSetting", 'String'>
    readonly key: FieldRef<"PlatformSetting", 'String'>
    readonly value: FieldRef<"PlatformSetting", 'String'>
    readonly description: FieldRef<"PlatformSetting", 'String'>
    readonly category: FieldRef<"PlatformSetting", 'String'>
    readonly dataType: FieldRef<"PlatformSetting", 'String'>
    readonly isPublic: FieldRef<"PlatformSetting", 'Boolean'>
    readonly createdAt: FieldRef<"PlatformSetting", 'DateTime'>
    readonly updatedAt: FieldRef<"PlatformSetting", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PlatformSetting findUnique
   */
  export type PlatformSettingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformSetting
     */
    select?: PlatformSettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformSetting
     */
    omit?: PlatformSettingOmit<ExtArgs> | null
    /**
     * Filter, which PlatformSetting to fetch.
     */
    where: PlatformSettingWhereUniqueInput
  }

  /**
   * PlatformSetting findUniqueOrThrow
   */
  export type PlatformSettingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformSetting
     */
    select?: PlatformSettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformSetting
     */
    omit?: PlatformSettingOmit<ExtArgs> | null
    /**
     * Filter, which PlatformSetting to fetch.
     */
    where: PlatformSettingWhereUniqueInput
  }

  /**
   * PlatformSetting findFirst
   */
  export type PlatformSettingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformSetting
     */
    select?: PlatformSettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformSetting
     */
    omit?: PlatformSettingOmit<ExtArgs> | null
    /**
     * Filter, which PlatformSetting to fetch.
     */
    where?: PlatformSettingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PlatformSettings to fetch.
     */
    orderBy?: PlatformSettingOrderByWithRelationInput | PlatformSettingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PlatformSettings.
     */
    cursor?: PlatformSettingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PlatformSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PlatformSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PlatformSettings.
     */
    distinct?: PlatformSettingScalarFieldEnum | PlatformSettingScalarFieldEnum[]
  }

  /**
   * PlatformSetting findFirstOrThrow
   */
  export type PlatformSettingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformSetting
     */
    select?: PlatformSettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformSetting
     */
    omit?: PlatformSettingOmit<ExtArgs> | null
    /**
     * Filter, which PlatformSetting to fetch.
     */
    where?: PlatformSettingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PlatformSettings to fetch.
     */
    orderBy?: PlatformSettingOrderByWithRelationInput | PlatformSettingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PlatformSettings.
     */
    cursor?: PlatformSettingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PlatformSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PlatformSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PlatformSettings.
     */
    distinct?: PlatformSettingScalarFieldEnum | PlatformSettingScalarFieldEnum[]
  }

  /**
   * PlatformSetting findMany
   */
  export type PlatformSettingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformSetting
     */
    select?: PlatformSettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformSetting
     */
    omit?: PlatformSettingOmit<ExtArgs> | null
    /**
     * Filter, which PlatformSettings to fetch.
     */
    where?: PlatformSettingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PlatformSettings to fetch.
     */
    orderBy?: PlatformSettingOrderByWithRelationInput | PlatformSettingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PlatformSettings.
     */
    cursor?: PlatformSettingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PlatformSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PlatformSettings.
     */
    skip?: number
    distinct?: PlatformSettingScalarFieldEnum | PlatformSettingScalarFieldEnum[]
  }

  /**
   * PlatformSetting create
   */
  export type PlatformSettingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformSetting
     */
    select?: PlatformSettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformSetting
     */
    omit?: PlatformSettingOmit<ExtArgs> | null
    /**
     * The data needed to create a PlatformSetting.
     */
    data: XOR<PlatformSettingCreateInput, PlatformSettingUncheckedCreateInput>
  }

  /**
   * PlatformSetting createMany
   */
  export type PlatformSettingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PlatformSettings.
     */
    data: PlatformSettingCreateManyInput | PlatformSettingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PlatformSetting createManyAndReturn
   */
  export type PlatformSettingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformSetting
     */
    select?: PlatformSettingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformSetting
     */
    omit?: PlatformSettingOmit<ExtArgs> | null
    /**
     * The data used to create many PlatformSettings.
     */
    data: PlatformSettingCreateManyInput | PlatformSettingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PlatformSetting update
   */
  export type PlatformSettingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformSetting
     */
    select?: PlatformSettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformSetting
     */
    omit?: PlatformSettingOmit<ExtArgs> | null
    /**
     * The data needed to update a PlatformSetting.
     */
    data: XOR<PlatformSettingUpdateInput, PlatformSettingUncheckedUpdateInput>
    /**
     * Choose, which PlatformSetting to update.
     */
    where: PlatformSettingWhereUniqueInput
  }

  /**
   * PlatformSetting updateMany
   */
  export type PlatformSettingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PlatformSettings.
     */
    data: XOR<PlatformSettingUpdateManyMutationInput, PlatformSettingUncheckedUpdateManyInput>
    /**
     * Filter which PlatformSettings to update
     */
    where?: PlatformSettingWhereInput
    /**
     * Limit how many PlatformSettings to update.
     */
    limit?: number
  }

  /**
   * PlatformSetting updateManyAndReturn
   */
  export type PlatformSettingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformSetting
     */
    select?: PlatformSettingSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformSetting
     */
    omit?: PlatformSettingOmit<ExtArgs> | null
    /**
     * The data used to update PlatformSettings.
     */
    data: XOR<PlatformSettingUpdateManyMutationInput, PlatformSettingUncheckedUpdateManyInput>
    /**
     * Filter which PlatformSettings to update
     */
    where?: PlatformSettingWhereInput
    /**
     * Limit how many PlatformSettings to update.
     */
    limit?: number
  }

  /**
   * PlatformSetting upsert
   */
  export type PlatformSettingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformSetting
     */
    select?: PlatformSettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformSetting
     */
    omit?: PlatformSettingOmit<ExtArgs> | null
    /**
     * The filter to search for the PlatformSetting to update in case it exists.
     */
    where: PlatformSettingWhereUniqueInput
    /**
     * In case the PlatformSetting found by the `where` argument doesn't exist, create a new PlatformSetting with this data.
     */
    create: XOR<PlatformSettingCreateInput, PlatformSettingUncheckedCreateInput>
    /**
     * In case the PlatformSetting was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PlatformSettingUpdateInput, PlatformSettingUncheckedUpdateInput>
  }

  /**
   * PlatformSetting delete
   */
  export type PlatformSettingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformSetting
     */
    select?: PlatformSettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformSetting
     */
    omit?: PlatformSettingOmit<ExtArgs> | null
    /**
     * Filter which PlatformSetting to delete.
     */
    where: PlatformSettingWhereUniqueInput
  }

  /**
   * PlatformSetting deleteMany
   */
  export type PlatformSettingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PlatformSettings to delete
     */
    where?: PlatformSettingWhereInput
    /**
     * Limit how many PlatformSettings to delete.
     */
    limit?: number
  }

  /**
   * PlatformSetting without action
   */
  export type PlatformSettingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformSetting
     */
    select?: PlatformSettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformSetting
     */
    omit?: PlatformSettingOmit<ExtArgs> | null
  }


  /**
   * Model PlatformAnalytics
   */

  export type AggregatePlatformAnalytics = {
    _count: PlatformAnalyticsCountAggregateOutputType | null
    _avg: PlatformAnalyticsAvgAggregateOutputType | null
    _sum: PlatformAnalyticsSumAggregateOutputType | null
    _min: PlatformAnalyticsMinAggregateOutputType | null
    _max: PlatformAnalyticsMaxAggregateOutputType | null
  }

  export type PlatformAnalyticsAvgAggregateOutputType = {
    totalUsers: number | null
    activeUsers: number | null
    totalProperties: number | null
    activeProperties: number | null
    totalSales: number | null
    totalRentals: number | null
    totalRevenue: number | null
    totalViews: number | null
    totalRequests: number | null
    totalFavorites: number | null
  }

  export type PlatformAnalyticsSumAggregateOutputType = {
    totalUsers: number | null
    activeUsers: number | null
    totalProperties: number | null
    activeProperties: number | null
    totalSales: number | null
    totalRentals: number | null
    totalRevenue: number | null
    totalViews: number | null
    totalRequests: number | null
    totalFavorites: number | null
  }

  export type PlatformAnalyticsMinAggregateOutputType = {
    id: string | null
    totalUsers: number | null
    activeUsers: number | null
    totalProperties: number | null
    activeProperties: number | null
    totalSales: number | null
    totalRentals: number | null
    totalRevenue: number | null
    totalViews: number | null
    totalRequests: number | null
    totalFavorites: number | null
    date: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PlatformAnalyticsMaxAggregateOutputType = {
    id: string | null
    totalUsers: number | null
    activeUsers: number | null
    totalProperties: number | null
    activeProperties: number | null
    totalSales: number | null
    totalRentals: number | null
    totalRevenue: number | null
    totalViews: number | null
    totalRequests: number | null
    totalFavorites: number | null
    date: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PlatformAnalyticsCountAggregateOutputType = {
    id: number
    totalUsers: number
    activeUsers: number
    totalProperties: number
    activeProperties: number
    totalSales: number
    totalRentals: number
    totalRevenue: number
    totalViews: number
    totalRequests: number
    totalFavorites: number
    date: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PlatformAnalyticsAvgAggregateInputType = {
    totalUsers?: true
    activeUsers?: true
    totalProperties?: true
    activeProperties?: true
    totalSales?: true
    totalRentals?: true
    totalRevenue?: true
    totalViews?: true
    totalRequests?: true
    totalFavorites?: true
  }

  export type PlatformAnalyticsSumAggregateInputType = {
    totalUsers?: true
    activeUsers?: true
    totalProperties?: true
    activeProperties?: true
    totalSales?: true
    totalRentals?: true
    totalRevenue?: true
    totalViews?: true
    totalRequests?: true
    totalFavorites?: true
  }

  export type PlatformAnalyticsMinAggregateInputType = {
    id?: true
    totalUsers?: true
    activeUsers?: true
    totalProperties?: true
    activeProperties?: true
    totalSales?: true
    totalRentals?: true
    totalRevenue?: true
    totalViews?: true
    totalRequests?: true
    totalFavorites?: true
    date?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PlatformAnalyticsMaxAggregateInputType = {
    id?: true
    totalUsers?: true
    activeUsers?: true
    totalProperties?: true
    activeProperties?: true
    totalSales?: true
    totalRentals?: true
    totalRevenue?: true
    totalViews?: true
    totalRequests?: true
    totalFavorites?: true
    date?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PlatformAnalyticsCountAggregateInputType = {
    id?: true
    totalUsers?: true
    activeUsers?: true
    totalProperties?: true
    activeProperties?: true
    totalSales?: true
    totalRentals?: true
    totalRevenue?: true
    totalViews?: true
    totalRequests?: true
    totalFavorites?: true
    date?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PlatformAnalyticsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PlatformAnalytics to aggregate.
     */
    where?: PlatformAnalyticsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PlatformAnalytics to fetch.
     */
    orderBy?: PlatformAnalyticsOrderByWithRelationInput | PlatformAnalyticsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PlatformAnalyticsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PlatformAnalytics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PlatformAnalytics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PlatformAnalytics
    **/
    _count?: true | PlatformAnalyticsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PlatformAnalyticsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PlatformAnalyticsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PlatformAnalyticsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PlatformAnalyticsMaxAggregateInputType
  }

  export type GetPlatformAnalyticsAggregateType<T extends PlatformAnalyticsAggregateArgs> = {
        [P in keyof T & keyof AggregatePlatformAnalytics]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePlatformAnalytics[P]>
      : GetScalarType<T[P], AggregatePlatformAnalytics[P]>
  }




  export type PlatformAnalyticsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PlatformAnalyticsWhereInput
    orderBy?: PlatformAnalyticsOrderByWithAggregationInput | PlatformAnalyticsOrderByWithAggregationInput[]
    by: PlatformAnalyticsScalarFieldEnum[] | PlatformAnalyticsScalarFieldEnum
    having?: PlatformAnalyticsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PlatformAnalyticsCountAggregateInputType | true
    _avg?: PlatformAnalyticsAvgAggregateInputType
    _sum?: PlatformAnalyticsSumAggregateInputType
    _min?: PlatformAnalyticsMinAggregateInputType
    _max?: PlatformAnalyticsMaxAggregateInputType
  }

  export type PlatformAnalyticsGroupByOutputType = {
    id: string
    totalUsers: number
    activeUsers: number
    totalProperties: number
    activeProperties: number
    totalSales: number
    totalRentals: number
    totalRevenue: number
    totalViews: number
    totalRequests: number
    totalFavorites: number
    date: Date
    createdAt: Date
    updatedAt: Date
    _count: PlatformAnalyticsCountAggregateOutputType | null
    _avg: PlatformAnalyticsAvgAggregateOutputType | null
    _sum: PlatformAnalyticsSumAggregateOutputType | null
    _min: PlatformAnalyticsMinAggregateOutputType | null
    _max: PlatformAnalyticsMaxAggregateOutputType | null
  }

  type GetPlatformAnalyticsGroupByPayload<T extends PlatformAnalyticsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PlatformAnalyticsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PlatformAnalyticsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PlatformAnalyticsGroupByOutputType[P]>
            : GetScalarType<T[P], PlatformAnalyticsGroupByOutputType[P]>
        }
      >
    >


  export type PlatformAnalyticsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    totalUsers?: boolean
    activeUsers?: boolean
    totalProperties?: boolean
    activeProperties?: boolean
    totalSales?: boolean
    totalRentals?: boolean
    totalRevenue?: boolean
    totalViews?: boolean
    totalRequests?: boolean
    totalFavorites?: boolean
    date?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["platformAnalytics"]>

  export type PlatformAnalyticsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    totalUsers?: boolean
    activeUsers?: boolean
    totalProperties?: boolean
    activeProperties?: boolean
    totalSales?: boolean
    totalRentals?: boolean
    totalRevenue?: boolean
    totalViews?: boolean
    totalRequests?: boolean
    totalFavorites?: boolean
    date?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["platformAnalytics"]>

  export type PlatformAnalyticsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    totalUsers?: boolean
    activeUsers?: boolean
    totalProperties?: boolean
    activeProperties?: boolean
    totalSales?: boolean
    totalRentals?: boolean
    totalRevenue?: boolean
    totalViews?: boolean
    totalRequests?: boolean
    totalFavorites?: boolean
    date?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["platformAnalytics"]>

  export type PlatformAnalyticsSelectScalar = {
    id?: boolean
    totalUsers?: boolean
    activeUsers?: boolean
    totalProperties?: boolean
    activeProperties?: boolean
    totalSales?: boolean
    totalRentals?: boolean
    totalRevenue?: boolean
    totalViews?: boolean
    totalRequests?: boolean
    totalFavorites?: boolean
    date?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PlatformAnalyticsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "totalUsers" | "activeUsers" | "totalProperties" | "activeProperties" | "totalSales" | "totalRentals" | "totalRevenue" | "totalViews" | "totalRequests" | "totalFavorites" | "date" | "createdAt" | "updatedAt", ExtArgs["result"]["platformAnalytics"]>

  export type $PlatformAnalyticsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PlatformAnalytics"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      totalUsers: number
      activeUsers: number
      totalProperties: number
      activeProperties: number
      totalSales: number
      totalRentals: number
      totalRevenue: number
      totalViews: number
      totalRequests: number
      totalFavorites: number
      date: Date
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["platformAnalytics"]>
    composites: {}
  }

  type PlatformAnalyticsGetPayload<S extends boolean | null | undefined | PlatformAnalyticsDefaultArgs> = $Result.GetResult<Prisma.$PlatformAnalyticsPayload, S>

  type PlatformAnalyticsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PlatformAnalyticsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PlatformAnalyticsCountAggregateInputType | true
    }

  export interface PlatformAnalyticsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PlatformAnalytics'], meta: { name: 'PlatformAnalytics' } }
    /**
     * Find zero or one PlatformAnalytics that matches the filter.
     * @param {PlatformAnalyticsFindUniqueArgs} args - Arguments to find a PlatformAnalytics
     * @example
     * // Get one PlatformAnalytics
     * const platformAnalytics = await prisma.platformAnalytics.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PlatformAnalyticsFindUniqueArgs>(args: SelectSubset<T, PlatformAnalyticsFindUniqueArgs<ExtArgs>>): Prisma__PlatformAnalyticsClient<$Result.GetResult<Prisma.$PlatformAnalyticsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PlatformAnalytics that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PlatformAnalyticsFindUniqueOrThrowArgs} args - Arguments to find a PlatformAnalytics
     * @example
     * // Get one PlatformAnalytics
     * const platformAnalytics = await prisma.platformAnalytics.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PlatformAnalyticsFindUniqueOrThrowArgs>(args: SelectSubset<T, PlatformAnalyticsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PlatformAnalyticsClient<$Result.GetResult<Prisma.$PlatformAnalyticsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PlatformAnalytics that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlatformAnalyticsFindFirstArgs} args - Arguments to find a PlatformAnalytics
     * @example
     * // Get one PlatformAnalytics
     * const platformAnalytics = await prisma.platformAnalytics.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PlatformAnalyticsFindFirstArgs>(args?: SelectSubset<T, PlatformAnalyticsFindFirstArgs<ExtArgs>>): Prisma__PlatformAnalyticsClient<$Result.GetResult<Prisma.$PlatformAnalyticsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PlatformAnalytics that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlatformAnalyticsFindFirstOrThrowArgs} args - Arguments to find a PlatformAnalytics
     * @example
     * // Get one PlatformAnalytics
     * const platformAnalytics = await prisma.platformAnalytics.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PlatformAnalyticsFindFirstOrThrowArgs>(args?: SelectSubset<T, PlatformAnalyticsFindFirstOrThrowArgs<ExtArgs>>): Prisma__PlatformAnalyticsClient<$Result.GetResult<Prisma.$PlatformAnalyticsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PlatformAnalytics that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlatformAnalyticsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PlatformAnalytics
     * const platformAnalytics = await prisma.platformAnalytics.findMany()
     * 
     * // Get first 10 PlatformAnalytics
     * const platformAnalytics = await prisma.platformAnalytics.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const platformAnalyticsWithIdOnly = await prisma.platformAnalytics.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PlatformAnalyticsFindManyArgs>(args?: SelectSubset<T, PlatformAnalyticsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlatformAnalyticsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PlatformAnalytics.
     * @param {PlatformAnalyticsCreateArgs} args - Arguments to create a PlatformAnalytics.
     * @example
     * // Create one PlatformAnalytics
     * const PlatformAnalytics = await prisma.platformAnalytics.create({
     *   data: {
     *     // ... data to create a PlatformAnalytics
     *   }
     * })
     * 
     */
    create<T extends PlatformAnalyticsCreateArgs>(args: SelectSubset<T, PlatformAnalyticsCreateArgs<ExtArgs>>): Prisma__PlatformAnalyticsClient<$Result.GetResult<Prisma.$PlatformAnalyticsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PlatformAnalytics.
     * @param {PlatformAnalyticsCreateManyArgs} args - Arguments to create many PlatformAnalytics.
     * @example
     * // Create many PlatformAnalytics
     * const platformAnalytics = await prisma.platformAnalytics.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PlatformAnalyticsCreateManyArgs>(args?: SelectSubset<T, PlatformAnalyticsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PlatformAnalytics and returns the data saved in the database.
     * @param {PlatformAnalyticsCreateManyAndReturnArgs} args - Arguments to create many PlatformAnalytics.
     * @example
     * // Create many PlatformAnalytics
     * const platformAnalytics = await prisma.platformAnalytics.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PlatformAnalytics and only return the `id`
     * const platformAnalyticsWithIdOnly = await prisma.platformAnalytics.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PlatformAnalyticsCreateManyAndReturnArgs>(args?: SelectSubset<T, PlatformAnalyticsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlatformAnalyticsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PlatformAnalytics.
     * @param {PlatformAnalyticsDeleteArgs} args - Arguments to delete one PlatformAnalytics.
     * @example
     * // Delete one PlatformAnalytics
     * const PlatformAnalytics = await prisma.platformAnalytics.delete({
     *   where: {
     *     // ... filter to delete one PlatformAnalytics
     *   }
     * })
     * 
     */
    delete<T extends PlatformAnalyticsDeleteArgs>(args: SelectSubset<T, PlatformAnalyticsDeleteArgs<ExtArgs>>): Prisma__PlatformAnalyticsClient<$Result.GetResult<Prisma.$PlatformAnalyticsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PlatformAnalytics.
     * @param {PlatformAnalyticsUpdateArgs} args - Arguments to update one PlatformAnalytics.
     * @example
     * // Update one PlatformAnalytics
     * const platformAnalytics = await prisma.platformAnalytics.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PlatformAnalyticsUpdateArgs>(args: SelectSubset<T, PlatformAnalyticsUpdateArgs<ExtArgs>>): Prisma__PlatformAnalyticsClient<$Result.GetResult<Prisma.$PlatformAnalyticsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PlatformAnalytics.
     * @param {PlatformAnalyticsDeleteManyArgs} args - Arguments to filter PlatformAnalytics to delete.
     * @example
     * // Delete a few PlatformAnalytics
     * const { count } = await prisma.platformAnalytics.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PlatformAnalyticsDeleteManyArgs>(args?: SelectSubset<T, PlatformAnalyticsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PlatformAnalytics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlatformAnalyticsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PlatformAnalytics
     * const platformAnalytics = await prisma.platformAnalytics.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PlatformAnalyticsUpdateManyArgs>(args: SelectSubset<T, PlatformAnalyticsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PlatformAnalytics and returns the data updated in the database.
     * @param {PlatformAnalyticsUpdateManyAndReturnArgs} args - Arguments to update many PlatformAnalytics.
     * @example
     * // Update many PlatformAnalytics
     * const platformAnalytics = await prisma.platformAnalytics.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PlatformAnalytics and only return the `id`
     * const platformAnalyticsWithIdOnly = await prisma.platformAnalytics.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PlatformAnalyticsUpdateManyAndReturnArgs>(args: SelectSubset<T, PlatformAnalyticsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlatformAnalyticsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PlatformAnalytics.
     * @param {PlatformAnalyticsUpsertArgs} args - Arguments to update or create a PlatformAnalytics.
     * @example
     * // Update or create a PlatformAnalytics
     * const platformAnalytics = await prisma.platformAnalytics.upsert({
     *   create: {
     *     // ... data to create a PlatformAnalytics
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PlatformAnalytics we want to update
     *   }
     * })
     */
    upsert<T extends PlatformAnalyticsUpsertArgs>(args: SelectSubset<T, PlatformAnalyticsUpsertArgs<ExtArgs>>): Prisma__PlatformAnalyticsClient<$Result.GetResult<Prisma.$PlatformAnalyticsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PlatformAnalytics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlatformAnalyticsCountArgs} args - Arguments to filter PlatformAnalytics to count.
     * @example
     * // Count the number of PlatformAnalytics
     * const count = await prisma.platformAnalytics.count({
     *   where: {
     *     // ... the filter for the PlatformAnalytics we want to count
     *   }
     * })
    **/
    count<T extends PlatformAnalyticsCountArgs>(
      args?: Subset<T, PlatformAnalyticsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PlatformAnalyticsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PlatformAnalytics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlatformAnalyticsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PlatformAnalyticsAggregateArgs>(args: Subset<T, PlatformAnalyticsAggregateArgs>): Prisma.PrismaPromise<GetPlatformAnalyticsAggregateType<T>>

    /**
     * Group by PlatformAnalytics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlatformAnalyticsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PlatformAnalyticsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PlatformAnalyticsGroupByArgs['orderBy'] }
        : { orderBy?: PlatformAnalyticsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PlatformAnalyticsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPlatformAnalyticsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PlatformAnalytics model
   */
  readonly fields: PlatformAnalyticsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PlatformAnalytics.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PlatformAnalyticsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PlatformAnalytics model
   */
  interface PlatformAnalyticsFieldRefs {
    readonly id: FieldRef<"PlatformAnalytics", 'String'>
    readonly totalUsers: FieldRef<"PlatformAnalytics", 'Int'>
    readonly activeUsers: FieldRef<"PlatformAnalytics", 'Int'>
    readonly totalProperties: FieldRef<"PlatformAnalytics", 'Int'>
    readonly activeProperties: FieldRef<"PlatformAnalytics", 'Int'>
    readonly totalSales: FieldRef<"PlatformAnalytics", 'Int'>
    readonly totalRentals: FieldRef<"PlatformAnalytics", 'Int'>
    readonly totalRevenue: FieldRef<"PlatformAnalytics", 'Float'>
    readonly totalViews: FieldRef<"PlatformAnalytics", 'Int'>
    readonly totalRequests: FieldRef<"PlatformAnalytics", 'Int'>
    readonly totalFavorites: FieldRef<"PlatformAnalytics", 'Int'>
    readonly date: FieldRef<"PlatformAnalytics", 'DateTime'>
    readonly createdAt: FieldRef<"PlatformAnalytics", 'DateTime'>
    readonly updatedAt: FieldRef<"PlatformAnalytics", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PlatformAnalytics findUnique
   */
  export type PlatformAnalyticsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformAnalytics
     */
    select?: PlatformAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformAnalytics
     */
    omit?: PlatformAnalyticsOmit<ExtArgs> | null
    /**
     * Filter, which PlatformAnalytics to fetch.
     */
    where: PlatformAnalyticsWhereUniqueInput
  }

  /**
   * PlatformAnalytics findUniqueOrThrow
   */
  export type PlatformAnalyticsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformAnalytics
     */
    select?: PlatformAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformAnalytics
     */
    omit?: PlatformAnalyticsOmit<ExtArgs> | null
    /**
     * Filter, which PlatformAnalytics to fetch.
     */
    where: PlatformAnalyticsWhereUniqueInput
  }

  /**
   * PlatformAnalytics findFirst
   */
  export type PlatformAnalyticsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformAnalytics
     */
    select?: PlatformAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformAnalytics
     */
    omit?: PlatformAnalyticsOmit<ExtArgs> | null
    /**
     * Filter, which PlatformAnalytics to fetch.
     */
    where?: PlatformAnalyticsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PlatformAnalytics to fetch.
     */
    orderBy?: PlatformAnalyticsOrderByWithRelationInput | PlatformAnalyticsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PlatformAnalytics.
     */
    cursor?: PlatformAnalyticsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PlatformAnalytics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PlatformAnalytics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PlatformAnalytics.
     */
    distinct?: PlatformAnalyticsScalarFieldEnum | PlatformAnalyticsScalarFieldEnum[]
  }

  /**
   * PlatformAnalytics findFirstOrThrow
   */
  export type PlatformAnalyticsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformAnalytics
     */
    select?: PlatformAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformAnalytics
     */
    omit?: PlatformAnalyticsOmit<ExtArgs> | null
    /**
     * Filter, which PlatformAnalytics to fetch.
     */
    where?: PlatformAnalyticsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PlatformAnalytics to fetch.
     */
    orderBy?: PlatformAnalyticsOrderByWithRelationInput | PlatformAnalyticsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PlatformAnalytics.
     */
    cursor?: PlatformAnalyticsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PlatformAnalytics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PlatformAnalytics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PlatformAnalytics.
     */
    distinct?: PlatformAnalyticsScalarFieldEnum | PlatformAnalyticsScalarFieldEnum[]
  }

  /**
   * PlatformAnalytics findMany
   */
  export type PlatformAnalyticsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformAnalytics
     */
    select?: PlatformAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformAnalytics
     */
    omit?: PlatformAnalyticsOmit<ExtArgs> | null
    /**
     * Filter, which PlatformAnalytics to fetch.
     */
    where?: PlatformAnalyticsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PlatformAnalytics to fetch.
     */
    orderBy?: PlatformAnalyticsOrderByWithRelationInput | PlatformAnalyticsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PlatformAnalytics.
     */
    cursor?: PlatformAnalyticsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PlatformAnalytics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PlatformAnalytics.
     */
    skip?: number
    distinct?: PlatformAnalyticsScalarFieldEnum | PlatformAnalyticsScalarFieldEnum[]
  }

  /**
   * PlatformAnalytics create
   */
  export type PlatformAnalyticsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformAnalytics
     */
    select?: PlatformAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformAnalytics
     */
    omit?: PlatformAnalyticsOmit<ExtArgs> | null
    /**
     * The data needed to create a PlatformAnalytics.
     */
    data: XOR<PlatformAnalyticsCreateInput, PlatformAnalyticsUncheckedCreateInput>
  }

  /**
   * PlatformAnalytics createMany
   */
  export type PlatformAnalyticsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PlatformAnalytics.
     */
    data: PlatformAnalyticsCreateManyInput | PlatformAnalyticsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PlatformAnalytics createManyAndReturn
   */
  export type PlatformAnalyticsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformAnalytics
     */
    select?: PlatformAnalyticsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformAnalytics
     */
    omit?: PlatformAnalyticsOmit<ExtArgs> | null
    /**
     * The data used to create many PlatformAnalytics.
     */
    data: PlatformAnalyticsCreateManyInput | PlatformAnalyticsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PlatformAnalytics update
   */
  export type PlatformAnalyticsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformAnalytics
     */
    select?: PlatformAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformAnalytics
     */
    omit?: PlatformAnalyticsOmit<ExtArgs> | null
    /**
     * The data needed to update a PlatformAnalytics.
     */
    data: XOR<PlatformAnalyticsUpdateInput, PlatformAnalyticsUncheckedUpdateInput>
    /**
     * Choose, which PlatformAnalytics to update.
     */
    where: PlatformAnalyticsWhereUniqueInput
  }

  /**
   * PlatformAnalytics updateMany
   */
  export type PlatformAnalyticsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PlatformAnalytics.
     */
    data: XOR<PlatformAnalyticsUpdateManyMutationInput, PlatformAnalyticsUncheckedUpdateManyInput>
    /**
     * Filter which PlatformAnalytics to update
     */
    where?: PlatformAnalyticsWhereInput
    /**
     * Limit how many PlatformAnalytics to update.
     */
    limit?: number
  }

  /**
   * PlatformAnalytics updateManyAndReturn
   */
  export type PlatformAnalyticsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformAnalytics
     */
    select?: PlatformAnalyticsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformAnalytics
     */
    omit?: PlatformAnalyticsOmit<ExtArgs> | null
    /**
     * The data used to update PlatformAnalytics.
     */
    data: XOR<PlatformAnalyticsUpdateManyMutationInput, PlatformAnalyticsUncheckedUpdateManyInput>
    /**
     * Filter which PlatformAnalytics to update
     */
    where?: PlatformAnalyticsWhereInput
    /**
     * Limit how many PlatformAnalytics to update.
     */
    limit?: number
  }

  /**
   * PlatformAnalytics upsert
   */
  export type PlatformAnalyticsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformAnalytics
     */
    select?: PlatformAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformAnalytics
     */
    omit?: PlatformAnalyticsOmit<ExtArgs> | null
    /**
     * The filter to search for the PlatformAnalytics to update in case it exists.
     */
    where: PlatformAnalyticsWhereUniqueInput
    /**
     * In case the PlatformAnalytics found by the `where` argument doesn't exist, create a new PlatformAnalytics with this data.
     */
    create: XOR<PlatformAnalyticsCreateInput, PlatformAnalyticsUncheckedCreateInput>
    /**
     * In case the PlatformAnalytics was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PlatformAnalyticsUpdateInput, PlatformAnalyticsUncheckedUpdateInput>
  }

  /**
   * PlatformAnalytics delete
   */
  export type PlatformAnalyticsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformAnalytics
     */
    select?: PlatformAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformAnalytics
     */
    omit?: PlatformAnalyticsOmit<ExtArgs> | null
    /**
     * Filter which PlatformAnalytics to delete.
     */
    where: PlatformAnalyticsWhereUniqueInput
  }

  /**
   * PlatformAnalytics deleteMany
   */
  export type PlatformAnalyticsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PlatformAnalytics to delete
     */
    where?: PlatformAnalyticsWhereInput
    /**
     * Limit how many PlatformAnalytics to delete.
     */
    limit?: number
  }

  /**
   * PlatformAnalytics without action
   */
  export type PlatformAnalyticsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlatformAnalytics
     */
    select?: PlatformAnalyticsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlatformAnalytics
     */
    omit?: PlatformAnalyticsOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    password: 'password',
    firstName: 'firstName',
    lastName: 'lastName',
    phone: 'phone',
    avatar: 'avatar',
    roles: 'roles',
    dateOfBirth: 'dateOfBirth',
    address: 'address',
    city: 'city',
    state: 'state',
    zipCode: 'zipCode',
    country: 'country',
    isVerified: 'isVerified',
    isActive: 'isActive',
    isBanned: 'isBanned',
    banReason: 'banReason',
    bannedAt: 'bannedAt',
    bannedBy: 'bannedBy',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    agencyId: 'agencyId'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const AgencyScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    logo: 'logo',
    activityType: 'activityType',
    businessPhone: 'businessPhone',
    businessEmail: 'businessEmail',
    website: 'website',
    address: 'address',
    city: 'city',
    state: 'state',
    zipCode: 'zipCode',
    country: 'country',
    latitude: 'latitude',
    longitude: 'longitude',
    businessRegistrationNumber: 'businessRegistrationNumber',
    activityLicense: 'activityLicense',
    taxId: 'taxId',
    bankAccountInfo: 'bankAccountInfo',
    isVerified: 'isVerified',
    isActive: 'isActive',
    isSuspended: 'isSuspended',
    suspensionReason: 'suspensionReason',
    suspendedAt: 'suspendedAt',
    suspendedBy: 'suspendedBy',
    verificationStatus: 'verificationStatus',
    verifiedBy: 'verifiedBy',
    verifiedAt: 'verifiedAt',
    verificationNotes: 'verificationNotes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AgencyScalarFieldEnum = (typeof AgencyScalarFieldEnum)[keyof typeof AgencyScalarFieldEnum]


  export const AgencyMemberScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    agencyId: 'agencyId',
    role: 'role',
    canManageProperties: 'canManageProperties',
    canManageTeam: 'canManageTeam',
    canViewAllData: 'canViewAllData',
    canContactClients: 'canContactClients',
    canScheduleViewings: 'canScheduleViewings',
    canSetPrices: 'canSetPrices',
    canUploadDocuments: 'canUploadDocuments',
    joinedAt: 'joinedAt',
    updatedAt: 'updatedAt'
  };

  export type AgencyMemberScalarFieldEnum = (typeof AgencyMemberScalarFieldEnum)[keyof typeof AgencyMemberScalarFieldEnum]


  export const AgencyRoleScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    agencyId: 'agencyId',
    role: 'role',
    title: 'title',
    description: 'description',
    canManageProperties: 'canManageProperties',
    canManageTeam: 'canManageTeam',
    canViewAllData: 'canViewAllData',
    canContactClients: 'canContactClients',
    canScheduleViewings: 'canScheduleViewings',
    canSetPrices: 'canSetPrices',
    canUploadDocuments: 'canUploadDocuments',
    assignedAt: 'assignedAt',
    updatedAt: 'updatedAt'
  };

  export type AgencyRoleScalarFieldEnum = (typeof AgencyRoleScalarFieldEnum)[keyof typeof AgencyRoleScalarFieldEnum]


  export const AgencyVerificationDocumentScalarFieldEnum: {
    id: 'id',
    documentType: 'documentType',
    fileName: 'fileName',
    fileUrl: 'fileUrl',
    fileSize: 'fileSize',
    mimeType: 'mimeType',
    title: 'title',
    description: 'description',
    isVerified: 'isVerified',
    reviewedBy: 'reviewedBy',
    reviewedAt: 'reviewedAt',
    reviewNotes: 'reviewNotes',
    uploadedAt: 'uploadedAt',
    agencyId: 'agencyId'
  };

  export type AgencyVerificationDocumentScalarFieldEnum = (typeof AgencyVerificationDocumentScalarFieldEnum)[keyof typeof AgencyVerificationDocumentScalarFieldEnum]


  export const AgencyPerformanceScalarFieldEnum: {
    id: 'id',
    totalSales: 'totalSales',
    totalRentals: 'totalRentals',
    totalRevenue: 'totalRevenue',
    topAgent: 'topAgent',
    topAgentSales: 'topAgentSales',
    topAgentRevenue: 'topAgentRevenue',
    salesThisMonth: 'salesThisMonth',
    salesThisYear: 'salesThisYear',
    revenueThisMonth: 'revenueThisMonth',
    revenueThisYear: 'revenueThisYear',
    lastCalculated: 'lastCalculated',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    agencyId: 'agencyId'
  };

  export type AgencyPerformanceScalarFieldEnum = (typeof AgencyPerformanceScalarFieldEnum)[keyof typeof AgencyPerformanceScalarFieldEnum]


  export const AgentPerformanceScalarFieldEnum: {
    id: 'id',
    totalSales: 'totalSales',
    totalRentals: 'totalRentals',
    totalRevenue: 'totalRevenue',
    salesThisMonth: 'salesThisMonth',
    salesThisYear: 'salesThisYear',
    revenueThisMonth: 'revenueThisMonth',
    revenueThisYear: 'revenueThisYear',
    averageResponseTime: 'averageResponseTime',
    totalInquiries: 'totalInquiries',
    convertedInquiries: 'convertedInquiries',
    lastCalculated: 'lastCalculated',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    agentId: 'agentId'
  };

  export type AgentPerformanceScalarFieldEnum = (typeof AgentPerformanceScalarFieldEnum)[keyof typeof AgentPerformanceScalarFieldEnum]


  export const AgencyInquiryScalarFieldEnum: {
    id: 'id',
    subject: 'subject',
    message: 'message',
    whoSentIt: 'whoSentIt',
    whichProperty: 'whichProperty',
    status: 'status',
    whenSent: 'whenSent',
    response: 'response',
    respondedAt: 'respondedAt',
    respondedBy: 'respondedBy',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    agencyId: 'agencyId',
    propertyId: 'propertyId'
  };

  export type AgencyInquiryScalarFieldEnum = (typeof AgencyInquiryScalarFieldEnum)[keyof typeof AgencyInquiryScalarFieldEnum]


  export const PropertyScalarFieldEnum: {
    id: 'id',
    title: 'title',
    description: 'description',
    type: 'type',
    transactionType: 'transactionType',
    price: 'price',
    rentAmount: 'rentAmount',
    pricePerSqm: 'pricePerSqm',
    deposit: 'deposit',
    address: 'address',
    city: 'city',
    state: 'state',
    zipCode: 'zipCode',
    country: 'country',
    latitude: 'latitude',
    longitude: 'longitude',
    neighborhood: 'neighborhood',
    totalArea: 'totalArea',
    landArea: 'landArea',
    floorNumber: 'floorNumber',
    totalFloors: 'totalFloors',
    bedrooms: 'bedrooms',
    bathrooms: 'bathrooms',
    livingRooms: 'livingRooms',
    kitchen: 'kitchen',
    yearBuilt: 'yearBuilt',
    condition: 'condition',
    furnished: 'furnished',
    amenities: 'amenities',
    utilities: 'utilities',
    parking: 'parking',
    garden: 'garden',
    balcony: 'balcony',
    elevator: 'elevator',
    pool: 'pool',
    ac: 'ac',
    petPolicy: 'petPolicy',
    nearbyServices: 'nearbyServices',
    energyRating: 'energyRating',
    leaseType: 'leaseType',
    minRentalPeriod: 'minRentalPeriod',
    availableDate: 'availableDate',
    status: 'status',
    isVerified: 'isVerified',
    verifiedBy: 'verifiedBy',
    verifiedAt: 'verifiedAt',
    verificationNotes: 'verificationNotes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    listedAt: 'listedAt',
    soldAt: 'soldAt',
    rentedAt: 'rentedAt',
    ownerId: 'ownerId',
    agentId: 'agentId',
    agencyId: 'agencyId'
  };

  export type PropertyScalarFieldEnum = (typeof PropertyScalarFieldEnum)[keyof typeof PropertyScalarFieldEnum]


  export const PropertyPhotoScalarFieldEnum: {
    id: 'id',
    url: 'url',
    caption: 'caption',
    altText: 'altText',
    isPrimary: 'isPrimary',
    order: 'order',
    category: 'category',
    createdAt: 'createdAt',
    propertyId: 'propertyId'
  };

  export type PropertyPhotoScalarFieldEnum = (typeof PropertyPhotoScalarFieldEnum)[keyof typeof PropertyPhotoScalarFieldEnum]


  export const PropertyVideoScalarFieldEnum: {
    id: 'id',
    url: 'url',
    thumbnail: 'thumbnail',
    duration: 'duration',
    caption: 'caption',
    order: 'order',
    createdAt: 'createdAt',
    propertyId: 'propertyId'
  };

  export type PropertyVideoScalarFieldEnum = (typeof PropertyVideoScalarFieldEnum)[keyof typeof PropertyVideoScalarFieldEnum]


  export const VirtualTourScalarFieldEnum: {
    id: 'id',
    url: 'url',
    platform: 'platform',
    caption: 'caption',
    order: 'order',
    createdAt: 'createdAt',
    propertyId: 'propertyId'
  };

  export type VirtualTourScalarFieldEnum = (typeof VirtualTourScalarFieldEnum)[keyof typeof VirtualTourScalarFieldEnum]


  export const PropertyViewScalarFieldEnum: {
    id: 'id',
    viewedAt: 'viewedAt',
    viewDuration: 'viewDuration',
    ipAddress: 'ipAddress',
    userAgent: 'userAgent',
    userId: 'userId',
    propertyId: 'propertyId'
  };

  export type PropertyViewScalarFieldEnum = (typeof PropertyViewScalarFieldEnum)[keyof typeof PropertyViewScalarFieldEnum]


  export const FavoriteScalarFieldEnum: {
    id: 'id',
    notes: 'notes',
    priority: 'priority',
    createdAt: 'createdAt',
    userId: 'userId',
    propertyId: 'propertyId',
    listId: 'listId',
    favoriteListId: 'favoriteListId'
  };

  export type FavoriteScalarFieldEnum = (typeof FavoriteScalarFieldEnum)[keyof typeof FavoriteScalarFieldEnum]


  export const FavoriteListScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    isPublic: 'isPublic',
    isDefault: 'isDefault',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    userId: 'userId'
  };

  export type FavoriteListScalarFieldEnum = (typeof FavoriteListScalarFieldEnum)[keyof typeof FavoriteListScalarFieldEnum]


  export const PropertyRequestScalarFieldEnum: {
    id: 'id',
    type: 'type',
    message: 'message',
    status: 'status',
    preferredDate: 'preferredDate',
    preferredTime: 'preferredTime',
    budget: 'budget',
    timeline: 'timeline',
    sellerResponse: 'sellerResponse',
    responseDate: 'responseDate',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    buyerId: 'buyerId',
    propertyId: 'propertyId',
    userId: 'userId'
  };

  export type PropertyRequestScalarFieldEnum = (typeof PropertyRequestScalarFieldEnum)[keyof typeof PropertyRequestScalarFieldEnum]


  export const PropertyInquiryScalarFieldEnum: {
    id: 'id',
    subject: 'subject',
    message: 'message',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    userId: 'userId',
    propertyId: 'propertyId'
  };

  export type PropertyInquiryScalarFieldEnum = (typeof PropertyInquiryScalarFieldEnum)[keyof typeof PropertyInquiryScalarFieldEnum]


  export const PropertyComparisonScalarFieldEnum: {
    id: 'id',
    name: 'name',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    userId: 'userId'
  };

  export type PropertyComparisonScalarFieldEnum = (typeof PropertyComparisonScalarFieldEnum)[keyof typeof PropertyComparisonScalarFieldEnum]


  export const PropertyComparisonPropertiesScalarFieldEnum: {
    id: 'id',
    propertyComparisonId: 'propertyComparisonId',
    propertyId: 'propertyId'
  };

  export type PropertyComparisonPropertiesScalarFieldEnum = (typeof PropertyComparisonPropertiesScalarFieldEnum)[keyof typeof PropertyComparisonPropertiesScalarFieldEnum]


  export const PropertyReviewScalarFieldEnum: {
    id: 'id',
    rating: 'rating',
    title: 'title',
    comment: 'comment',
    isVerified: 'isVerified',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    reviewerId: 'reviewerId',
    propertyId: 'propertyId',
    userId: 'userId'
  };

  export type PropertyReviewScalarFieldEnum = (typeof PropertyReviewScalarFieldEnum)[keyof typeof PropertyReviewScalarFieldEnum]


  export const PropertyCommentScalarFieldEnum: {
    id: 'id',
    content: 'content',
    isPublic: 'isPublic',
    isModerated: 'isModerated',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    authorId: 'authorId',
    propertyId: 'propertyId',
    userId: 'userId'
  };

  export type PropertyCommentScalarFieldEnum = (typeof PropertyCommentScalarFieldEnum)[keyof typeof PropertyCommentScalarFieldEnum]


  export const PropertyViewingScalarFieldEnum: {
    id: 'id',
    scheduledAt: 'scheduledAt',
    duration: 'duration',
    status: 'status',
    notes: 'notes',
    buyerNotes: 'buyerNotes',
    location: 'location',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    propertyId: 'propertyId',
    sellerId: 'sellerId',
    buyerId: 'buyerId',
    requestId: 'requestId',
    propertyRequestId: 'propertyRequestId'
  };

  export type PropertyViewingScalarFieldEnum = (typeof PropertyViewingScalarFieldEnum)[keyof typeof PropertyViewingScalarFieldEnum]


  export const PropertyAnalyticsScalarFieldEnum: {
    id: 'id',
    totalViews: 'totalViews',
    uniqueViews: 'uniqueViews',
    totalFavorites: 'totalFavorites',
    totalRequests: 'totalRequests',
    totalInquiries: 'totalInquiries',
    averageViewDuration: 'averageViewDuration',
    bounceRate: 'bounceRate',
    conversionRate: 'conversionRate',
    viewsThisWeek: 'viewsThisWeek',
    viewsThisMonth: 'viewsThisMonth',
    viewsThisYear: 'viewsThisYear',
    lastCalculated: 'lastCalculated',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    propertyId: 'propertyId',
    userId: 'userId'
  };

  export type PropertyAnalyticsScalarFieldEnum = (typeof PropertyAnalyticsScalarFieldEnum)[keyof typeof PropertyAnalyticsScalarFieldEnum]


  export const AdminActionScalarFieldEnum: {
    id: 'id',
    action: 'action',
    details: 'details',
    metadata: 'metadata',
    createdAt: 'createdAt',
    adminId: 'adminId',
    propertyId: 'propertyId',
    userId: 'userId',
    agencyId: 'agencyId'
  };

  export type AdminActionScalarFieldEnum = (typeof AdminActionScalarFieldEnum)[keyof typeof AdminActionScalarFieldEnum]


  export const NotificationScalarFieldEnum: {
    id: 'id',
    type: 'type',
    title: 'title',
    message: 'message',
    isRead: 'isRead',
    readAt: 'readAt',
    data: 'data',
    link: 'link',
    createdAt: 'createdAt',
    userId: 'userId'
  };

  export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


  export const PaymentScalarFieldEnum: {
    id: 'id',
    amount: 'amount',
    currency: 'currency',
    status: 'status',
    paymentMethod: 'paymentMethod',
    transactionId: 'transactionId',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    userId: 'userId',
    propertyId: 'propertyId',
    requestId: 'requestId',
    propertyRequestId: 'propertyRequestId'
  };

  export type PaymentScalarFieldEnum = (typeof PaymentScalarFieldEnum)[keyof typeof PaymentScalarFieldEnum]


  export const SavedSearchScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    propertyTypes: 'propertyTypes',
    transactionTypes: 'transactionTypes',
    minPrice: 'minPrice',
    maxPrice: 'maxPrice',
    minArea: 'minArea',
    maxArea: 'maxArea',
    bedrooms: 'bedrooms',
    bathrooms: 'bathrooms',
    cities: 'cities',
    neighborhoods: 'neighborhoods',
    isActive: 'isActive',
    notifyOnMatch: 'notifyOnMatch',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    userId: 'userId'
  };

  export type SavedSearchScalarFieldEnum = (typeof SavedSearchScalarFieldEnum)[keyof typeof SavedSearchScalarFieldEnum]


  export const PlatformSettingScalarFieldEnum: {
    id: 'id',
    key: 'key',
    value: 'value',
    description: 'description',
    category: 'category',
    dataType: 'dataType',
    isPublic: 'isPublic',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PlatformSettingScalarFieldEnum = (typeof PlatformSettingScalarFieldEnum)[keyof typeof PlatformSettingScalarFieldEnum]


  export const PlatformAnalyticsScalarFieldEnum: {
    id: 'id',
    totalUsers: 'totalUsers',
    activeUsers: 'activeUsers',
    totalProperties: 'totalProperties',
    activeProperties: 'activeProperties',
    totalSales: 'totalSales',
    totalRentals: 'totalRentals',
    totalRevenue: 'totalRevenue',
    totalViews: 'totalViews',
    totalRequests: 'totalRequests',
    totalFavorites: 'totalFavorites',
    date: 'date',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PlatformAnalyticsScalarFieldEnum = (typeof PlatformAnalyticsScalarFieldEnum)[keyof typeof PlatformAnalyticsScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'UserRole[]'
   */
  export type ListEnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole[]'>
    


  /**
   * Reference to a field of type 'UserRole'
   */
  export type EnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'AgencyActivityType'
   */
  export type EnumAgencyActivityTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AgencyActivityType'>
    


  /**
   * Reference to a field of type 'AgencyActivityType[]'
   */
  export type ListEnumAgencyActivityTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AgencyActivityType[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'AgencyVerificationStatus'
   */
  export type EnumAgencyVerificationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AgencyVerificationStatus'>
    


  /**
   * Reference to a field of type 'AgencyVerificationStatus[]'
   */
  export type ListEnumAgencyVerificationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AgencyVerificationStatus[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'InquiryStatus'
   */
  export type EnumInquiryStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'InquiryStatus'>
    


  /**
   * Reference to a field of type 'InquiryStatus[]'
   */
  export type ListEnumInquiryStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'InquiryStatus[]'>
    


  /**
   * Reference to a field of type 'PropertyType'
   */
  export type EnumPropertyTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PropertyType'>
    


  /**
   * Reference to a field of type 'PropertyType[]'
   */
  export type ListEnumPropertyTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PropertyType[]'>
    


  /**
   * Reference to a field of type 'TransactionType'
   */
  export type EnumTransactionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransactionType'>
    


  /**
   * Reference to a field of type 'TransactionType[]'
   */
  export type ListEnumTransactionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransactionType[]'>
    


  /**
   * Reference to a field of type 'PropertyCondition'
   */
  export type EnumPropertyConditionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PropertyCondition'>
    


  /**
   * Reference to a field of type 'PropertyCondition[]'
   */
  export type ListEnumPropertyConditionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PropertyCondition[]'>
    


  /**
   * Reference to a field of type 'LeaseType'
   */
  export type EnumLeaseTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LeaseType'>
    


  /**
   * Reference to a field of type 'LeaseType[]'
   */
  export type ListEnumLeaseTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LeaseType[]'>
    


  /**
   * Reference to a field of type 'PropertyStatus'
   */
  export type EnumPropertyStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PropertyStatus'>
    


  /**
   * Reference to a field of type 'PropertyStatus[]'
   */
  export type ListEnumPropertyStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PropertyStatus[]'>
    


  /**
   * Reference to a field of type 'RequestType'
   */
  export type EnumRequestTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RequestType'>
    


  /**
   * Reference to a field of type 'RequestType[]'
   */
  export type ListEnumRequestTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RequestType[]'>
    


  /**
   * Reference to a field of type 'RequestStatus'
   */
  export type EnumRequestStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RequestStatus'>
    


  /**
   * Reference to a field of type 'RequestStatus[]'
   */
  export type ListEnumRequestStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RequestStatus[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'NotificationType'
   */
  export type EnumNotificationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NotificationType'>
    


  /**
   * Reference to a field of type 'NotificationType[]'
   */
  export type ListEnumNotificationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NotificationType[]'>
    


  /**
   * Reference to a field of type 'PaymentStatus'
   */
  export type EnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus'>
    


  /**
   * Reference to a field of type 'PaymentStatus[]'
   */
  export type ListEnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    phone?: StringNullableFilter<"User"> | string | null
    avatar?: StringNullableFilter<"User"> | string | null
    roles?: EnumUserRoleNullableListFilter<"User">
    dateOfBirth?: DateTimeNullableFilter<"User"> | Date | string | null
    address?: StringNullableFilter<"User"> | string | null
    city?: StringNullableFilter<"User"> | string | null
    state?: StringNullableFilter<"User"> | string | null
    zipCode?: StringNullableFilter<"User"> | string | null
    country?: StringNullableFilter<"User"> | string | null
    isVerified?: BoolFilter<"User"> | boolean
    isActive?: BoolFilter<"User"> | boolean
    isBanned?: BoolFilter<"User"> | boolean
    banReason?: StringNullableFilter<"User"> | string | null
    bannedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    bannedBy?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    agencyId?: StringNullableFilter<"User"> | string | null
    viewedProperties?: PropertyViewListRelationFilter
    favorites?: FavoriteListRelationFilter
    favoriteLists?: FavoriteListListRelationFilter
    requests?: PropertyRequestListRelationFilter
    inquiries?: PropertyInquiryListRelationFilter
    propertyComparisons?: PropertyComparisonListRelationFilter
    reviews?: PropertyReviewListRelationFilter
    comments?: PropertyCommentListRelationFilter
    ownedProperties?: PropertyListRelationFilter
    managedProperties?: PropertyListRelationFilter
    scheduledViewings?: PropertyViewingListRelationFilter
    buyerViewings?: PropertyViewingListRelationFilter
    propertyAnalytics?: PropertyAnalyticsListRelationFilter
    agency?: XOR<AgencyNullableScalarRelationFilter, AgencyWhereInput> | null
    agencyRoles?: AgencyRoleListRelationFilter
    adminActions?: AdminActionListRelationFilter
    adminActionTargets?: AdminActionListRelationFilter
    notifications?: NotificationListRelationFilter
    payments?: PaymentListRelationFilter
    AgencyMember?: AgencyMemberListRelationFilter
    SavedSearch?: SavedSearchListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrderInput | SortOrder
    avatar?: SortOrderInput | SortOrder
    roles?: SortOrder
    dateOfBirth?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    zipCode?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    isVerified?: SortOrder
    isActive?: SortOrder
    isBanned?: SortOrder
    banReason?: SortOrderInput | SortOrder
    bannedAt?: SortOrderInput | SortOrder
    bannedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agencyId?: SortOrderInput | SortOrder
    viewedProperties?: PropertyViewOrderByRelationAggregateInput
    favorites?: FavoriteOrderByRelationAggregateInput
    favoriteLists?: FavoriteListOrderByRelationAggregateInput
    requests?: PropertyRequestOrderByRelationAggregateInput
    inquiries?: PropertyInquiryOrderByRelationAggregateInput
    propertyComparisons?: PropertyComparisonOrderByRelationAggregateInput
    reviews?: PropertyReviewOrderByRelationAggregateInput
    comments?: PropertyCommentOrderByRelationAggregateInput
    ownedProperties?: PropertyOrderByRelationAggregateInput
    managedProperties?: PropertyOrderByRelationAggregateInput
    scheduledViewings?: PropertyViewingOrderByRelationAggregateInput
    buyerViewings?: PropertyViewingOrderByRelationAggregateInput
    propertyAnalytics?: PropertyAnalyticsOrderByRelationAggregateInput
    agency?: AgencyOrderByWithRelationInput
    agencyRoles?: AgencyRoleOrderByRelationAggregateInput
    adminActions?: AdminActionOrderByRelationAggregateInput
    adminActionTargets?: AdminActionOrderByRelationAggregateInput
    notifications?: NotificationOrderByRelationAggregateInput
    payments?: PaymentOrderByRelationAggregateInput
    AgencyMember?: AgencyMemberOrderByRelationAggregateInput
    SavedSearch?: SavedSearchOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    password?: StringFilter<"User"> | string
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    phone?: StringNullableFilter<"User"> | string | null
    avatar?: StringNullableFilter<"User"> | string | null
    roles?: EnumUserRoleNullableListFilter<"User">
    dateOfBirth?: DateTimeNullableFilter<"User"> | Date | string | null
    address?: StringNullableFilter<"User"> | string | null
    city?: StringNullableFilter<"User"> | string | null
    state?: StringNullableFilter<"User"> | string | null
    zipCode?: StringNullableFilter<"User"> | string | null
    country?: StringNullableFilter<"User"> | string | null
    isVerified?: BoolFilter<"User"> | boolean
    isActive?: BoolFilter<"User"> | boolean
    isBanned?: BoolFilter<"User"> | boolean
    banReason?: StringNullableFilter<"User"> | string | null
    bannedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    bannedBy?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    agencyId?: StringNullableFilter<"User"> | string | null
    viewedProperties?: PropertyViewListRelationFilter
    favorites?: FavoriteListRelationFilter
    favoriteLists?: FavoriteListListRelationFilter
    requests?: PropertyRequestListRelationFilter
    inquiries?: PropertyInquiryListRelationFilter
    propertyComparisons?: PropertyComparisonListRelationFilter
    reviews?: PropertyReviewListRelationFilter
    comments?: PropertyCommentListRelationFilter
    ownedProperties?: PropertyListRelationFilter
    managedProperties?: PropertyListRelationFilter
    scheduledViewings?: PropertyViewingListRelationFilter
    buyerViewings?: PropertyViewingListRelationFilter
    propertyAnalytics?: PropertyAnalyticsListRelationFilter
    agency?: XOR<AgencyNullableScalarRelationFilter, AgencyWhereInput> | null
    agencyRoles?: AgencyRoleListRelationFilter
    adminActions?: AdminActionListRelationFilter
    adminActionTargets?: AdminActionListRelationFilter
    notifications?: NotificationListRelationFilter
    payments?: PaymentListRelationFilter
    AgencyMember?: AgencyMemberListRelationFilter
    SavedSearch?: SavedSearchListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrderInput | SortOrder
    avatar?: SortOrderInput | SortOrder
    roles?: SortOrder
    dateOfBirth?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    zipCode?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    isVerified?: SortOrder
    isActive?: SortOrder
    isBanned?: SortOrder
    banReason?: SortOrderInput | SortOrder
    bannedAt?: SortOrderInput | SortOrder
    bannedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agencyId?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    firstName?: StringWithAggregatesFilter<"User"> | string
    lastName?: StringWithAggregatesFilter<"User"> | string
    phone?: StringNullableWithAggregatesFilter<"User"> | string | null
    avatar?: StringNullableWithAggregatesFilter<"User"> | string | null
    roles?: EnumUserRoleNullableListFilter<"User">
    dateOfBirth?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    address?: StringNullableWithAggregatesFilter<"User"> | string | null
    city?: StringNullableWithAggregatesFilter<"User"> | string | null
    state?: StringNullableWithAggregatesFilter<"User"> | string | null
    zipCode?: StringNullableWithAggregatesFilter<"User"> | string | null
    country?: StringNullableWithAggregatesFilter<"User"> | string | null
    isVerified?: BoolWithAggregatesFilter<"User"> | boolean
    isActive?: BoolWithAggregatesFilter<"User"> | boolean
    isBanned?: BoolWithAggregatesFilter<"User"> | boolean
    banReason?: StringNullableWithAggregatesFilter<"User"> | string | null
    bannedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    bannedBy?: StringNullableWithAggregatesFilter<"User"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    agencyId?: StringNullableWithAggregatesFilter<"User"> | string | null
  }

  export type AgencyWhereInput = {
    AND?: AgencyWhereInput | AgencyWhereInput[]
    OR?: AgencyWhereInput[]
    NOT?: AgencyWhereInput | AgencyWhereInput[]
    id?: StringFilter<"Agency"> | string
    name?: StringFilter<"Agency"> | string
    description?: StringNullableFilter<"Agency"> | string | null
    logo?: StringNullableFilter<"Agency"> | string | null
    activityType?: EnumAgencyActivityTypeFilter<"Agency"> | $Enums.AgencyActivityType
    businessPhone?: StringFilter<"Agency"> | string
    businessEmail?: StringFilter<"Agency"> | string
    website?: StringNullableFilter<"Agency"> | string | null
    address?: StringFilter<"Agency"> | string
    city?: StringFilter<"Agency"> | string
    state?: StringFilter<"Agency"> | string
    zipCode?: StringFilter<"Agency"> | string
    country?: StringFilter<"Agency"> | string
    latitude?: FloatNullableFilter<"Agency"> | number | null
    longitude?: FloatNullableFilter<"Agency"> | number | null
    businessRegistrationNumber?: StringNullableFilter<"Agency"> | string | null
    activityLicense?: StringNullableFilter<"Agency"> | string | null
    taxId?: StringNullableFilter<"Agency"> | string | null
    bankAccountInfo?: StringNullableFilter<"Agency"> | string | null
    isVerified?: BoolFilter<"Agency"> | boolean
    isActive?: BoolFilter<"Agency"> | boolean
    isSuspended?: BoolFilter<"Agency"> | boolean
    suspensionReason?: StringNullableFilter<"Agency"> | string | null
    suspendedAt?: DateTimeNullableFilter<"Agency"> | Date | string | null
    suspendedBy?: StringNullableFilter<"Agency"> | string | null
    verificationStatus?: EnumAgencyVerificationStatusFilter<"Agency"> | $Enums.AgencyVerificationStatus
    verifiedBy?: StringNullableFilter<"Agency"> | string | null
    verifiedAt?: DateTimeNullableFilter<"Agency"> | Date | string | null
    verificationNotes?: StringNullableFilter<"Agency"> | string | null
    createdAt?: DateTimeFilter<"Agency"> | Date | string
    updatedAt?: DateTimeFilter<"Agency"> | Date | string
    verificationDocuments?: AgencyVerificationDocumentListRelationFilter
    teamMembers?: AgencyMemberListRelationFilter
    teamRoles?: AgencyRoleListRelationFilter
    properties?: PropertyListRelationFilter
    performance?: XOR<AgencyPerformanceNullableScalarRelationFilter, AgencyPerformanceWhereInput> | null
    inquiries?: AgencyInquiryListRelationFilter
    adminActions?: AdminActionListRelationFilter
    User?: UserListRelationFilter
  }

  export type AgencyOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    logo?: SortOrderInput | SortOrder
    activityType?: SortOrder
    businessPhone?: SortOrder
    businessEmail?: SortOrder
    website?: SortOrderInput | SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    country?: SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    businessRegistrationNumber?: SortOrderInput | SortOrder
    activityLicense?: SortOrderInput | SortOrder
    taxId?: SortOrderInput | SortOrder
    bankAccountInfo?: SortOrderInput | SortOrder
    isVerified?: SortOrder
    isActive?: SortOrder
    isSuspended?: SortOrder
    suspensionReason?: SortOrderInput | SortOrder
    suspendedAt?: SortOrderInput | SortOrder
    suspendedBy?: SortOrderInput | SortOrder
    verificationStatus?: SortOrder
    verifiedBy?: SortOrderInput | SortOrder
    verifiedAt?: SortOrderInput | SortOrder
    verificationNotes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    verificationDocuments?: AgencyVerificationDocumentOrderByRelationAggregateInput
    teamMembers?: AgencyMemberOrderByRelationAggregateInput
    teamRoles?: AgencyRoleOrderByRelationAggregateInput
    properties?: PropertyOrderByRelationAggregateInput
    performance?: AgencyPerformanceOrderByWithRelationInput
    inquiries?: AgencyInquiryOrderByRelationAggregateInput
    adminActions?: AdminActionOrderByRelationAggregateInput
    User?: UserOrderByRelationAggregateInput
  }

  export type AgencyWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AgencyWhereInput | AgencyWhereInput[]
    OR?: AgencyWhereInput[]
    NOT?: AgencyWhereInput | AgencyWhereInput[]
    name?: StringFilter<"Agency"> | string
    description?: StringNullableFilter<"Agency"> | string | null
    logo?: StringNullableFilter<"Agency"> | string | null
    activityType?: EnumAgencyActivityTypeFilter<"Agency"> | $Enums.AgencyActivityType
    businessPhone?: StringFilter<"Agency"> | string
    businessEmail?: StringFilter<"Agency"> | string
    website?: StringNullableFilter<"Agency"> | string | null
    address?: StringFilter<"Agency"> | string
    city?: StringFilter<"Agency"> | string
    state?: StringFilter<"Agency"> | string
    zipCode?: StringFilter<"Agency"> | string
    country?: StringFilter<"Agency"> | string
    latitude?: FloatNullableFilter<"Agency"> | number | null
    longitude?: FloatNullableFilter<"Agency"> | number | null
    businessRegistrationNumber?: StringNullableFilter<"Agency"> | string | null
    activityLicense?: StringNullableFilter<"Agency"> | string | null
    taxId?: StringNullableFilter<"Agency"> | string | null
    bankAccountInfo?: StringNullableFilter<"Agency"> | string | null
    isVerified?: BoolFilter<"Agency"> | boolean
    isActive?: BoolFilter<"Agency"> | boolean
    isSuspended?: BoolFilter<"Agency"> | boolean
    suspensionReason?: StringNullableFilter<"Agency"> | string | null
    suspendedAt?: DateTimeNullableFilter<"Agency"> | Date | string | null
    suspendedBy?: StringNullableFilter<"Agency"> | string | null
    verificationStatus?: EnumAgencyVerificationStatusFilter<"Agency"> | $Enums.AgencyVerificationStatus
    verifiedBy?: StringNullableFilter<"Agency"> | string | null
    verifiedAt?: DateTimeNullableFilter<"Agency"> | Date | string | null
    verificationNotes?: StringNullableFilter<"Agency"> | string | null
    createdAt?: DateTimeFilter<"Agency"> | Date | string
    updatedAt?: DateTimeFilter<"Agency"> | Date | string
    verificationDocuments?: AgencyVerificationDocumentListRelationFilter
    teamMembers?: AgencyMemberListRelationFilter
    teamRoles?: AgencyRoleListRelationFilter
    properties?: PropertyListRelationFilter
    performance?: XOR<AgencyPerformanceNullableScalarRelationFilter, AgencyPerformanceWhereInput> | null
    inquiries?: AgencyInquiryListRelationFilter
    adminActions?: AdminActionListRelationFilter
    User?: UserListRelationFilter
  }, "id">

  export type AgencyOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    logo?: SortOrderInput | SortOrder
    activityType?: SortOrder
    businessPhone?: SortOrder
    businessEmail?: SortOrder
    website?: SortOrderInput | SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    country?: SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    businessRegistrationNumber?: SortOrderInput | SortOrder
    activityLicense?: SortOrderInput | SortOrder
    taxId?: SortOrderInput | SortOrder
    bankAccountInfo?: SortOrderInput | SortOrder
    isVerified?: SortOrder
    isActive?: SortOrder
    isSuspended?: SortOrder
    suspensionReason?: SortOrderInput | SortOrder
    suspendedAt?: SortOrderInput | SortOrder
    suspendedBy?: SortOrderInput | SortOrder
    verificationStatus?: SortOrder
    verifiedBy?: SortOrderInput | SortOrder
    verifiedAt?: SortOrderInput | SortOrder
    verificationNotes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AgencyCountOrderByAggregateInput
    _avg?: AgencyAvgOrderByAggregateInput
    _max?: AgencyMaxOrderByAggregateInput
    _min?: AgencyMinOrderByAggregateInput
    _sum?: AgencySumOrderByAggregateInput
  }

  export type AgencyScalarWhereWithAggregatesInput = {
    AND?: AgencyScalarWhereWithAggregatesInput | AgencyScalarWhereWithAggregatesInput[]
    OR?: AgencyScalarWhereWithAggregatesInput[]
    NOT?: AgencyScalarWhereWithAggregatesInput | AgencyScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Agency"> | string
    name?: StringWithAggregatesFilter<"Agency"> | string
    description?: StringNullableWithAggregatesFilter<"Agency"> | string | null
    logo?: StringNullableWithAggregatesFilter<"Agency"> | string | null
    activityType?: EnumAgencyActivityTypeWithAggregatesFilter<"Agency"> | $Enums.AgencyActivityType
    businessPhone?: StringWithAggregatesFilter<"Agency"> | string
    businessEmail?: StringWithAggregatesFilter<"Agency"> | string
    website?: StringNullableWithAggregatesFilter<"Agency"> | string | null
    address?: StringWithAggregatesFilter<"Agency"> | string
    city?: StringWithAggregatesFilter<"Agency"> | string
    state?: StringWithAggregatesFilter<"Agency"> | string
    zipCode?: StringWithAggregatesFilter<"Agency"> | string
    country?: StringWithAggregatesFilter<"Agency"> | string
    latitude?: FloatNullableWithAggregatesFilter<"Agency"> | number | null
    longitude?: FloatNullableWithAggregatesFilter<"Agency"> | number | null
    businessRegistrationNumber?: StringNullableWithAggregatesFilter<"Agency"> | string | null
    activityLicense?: StringNullableWithAggregatesFilter<"Agency"> | string | null
    taxId?: StringNullableWithAggregatesFilter<"Agency"> | string | null
    bankAccountInfo?: StringNullableWithAggregatesFilter<"Agency"> | string | null
    isVerified?: BoolWithAggregatesFilter<"Agency"> | boolean
    isActive?: BoolWithAggregatesFilter<"Agency"> | boolean
    isSuspended?: BoolWithAggregatesFilter<"Agency"> | boolean
    suspensionReason?: StringNullableWithAggregatesFilter<"Agency"> | string | null
    suspendedAt?: DateTimeNullableWithAggregatesFilter<"Agency"> | Date | string | null
    suspendedBy?: StringNullableWithAggregatesFilter<"Agency"> | string | null
    verificationStatus?: EnumAgencyVerificationStatusWithAggregatesFilter<"Agency"> | $Enums.AgencyVerificationStatus
    verifiedBy?: StringNullableWithAggregatesFilter<"Agency"> | string | null
    verifiedAt?: DateTimeNullableWithAggregatesFilter<"Agency"> | Date | string | null
    verificationNotes?: StringNullableWithAggregatesFilter<"Agency"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Agency"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Agency"> | Date | string
  }

  export type AgencyMemberWhereInput = {
    AND?: AgencyMemberWhereInput | AgencyMemberWhereInput[]
    OR?: AgencyMemberWhereInput[]
    NOT?: AgencyMemberWhereInput | AgencyMemberWhereInput[]
    id?: StringFilter<"AgencyMember"> | string
    userId?: StringFilter<"AgencyMember"> | string
    agencyId?: StringFilter<"AgencyMember"> | string
    role?: EnumUserRoleFilter<"AgencyMember"> | $Enums.UserRole
    canManageProperties?: BoolFilter<"AgencyMember"> | boolean
    canManageTeam?: BoolFilter<"AgencyMember"> | boolean
    canViewAllData?: BoolFilter<"AgencyMember"> | boolean
    canContactClients?: BoolFilter<"AgencyMember"> | boolean
    canScheduleViewings?: BoolFilter<"AgencyMember"> | boolean
    canSetPrices?: BoolFilter<"AgencyMember"> | boolean
    canUploadDocuments?: BoolFilter<"AgencyMember"> | boolean
    joinedAt?: DateTimeFilter<"AgencyMember"> | Date | string
    updatedAt?: DateTimeFilter<"AgencyMember"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
    performance?: XOR<AgentPerformanceNullableScalarRelationFilter, AgentPerformanceWhereInput> | null
  }

  export type AgencyMemberOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    agencyId?: SortOrder
    role?: SortOrder
    canManageProperties?: SortOrder
    canManageTeam?: SortOrder
    canViewAllData?: SortOrder
    canContactClients?: SortOrder
    canScheduleViewings?: SortOrder
    canSetPrices?: SortOrder
    canUploadDocuments?: SortOrder
    joinedAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    agency?: AgencyOrderByWithRelationInput
    performance?: AgentPerformanceOrderByWithRelationInput
  }

  export type AgencyMemberWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_agencyId?: AgencyMemberUserIdAgencyIdCompoundUniqueInput
    AND?: AgencyMemberWhereInput | AgencyMemberWhereInput[]
    OR?: AgencyMemberWhereInput[]
    NOT?: AgencyMemberWhereInput | AgencyMemberWhereInput[]
    userId?: StringFilter<"AgencyMember"> | string
    agencyId?: StringFilter<"AgencyMember"> | string
    role?: EnumUserRoleFilter<"AgencyMember"> | $Enums.UserRole
    canManageProperties?: BoolFilter<"AgencyMember"> | boolean
    canManageTeam?: BoolFilter<"AgencyMember"> | boolean
    canViewAllData?: BoolFilter<"AgencyMember"> | boolean
    canContactClients?: BoolFilter<"AgencyMember"> | boolean
    canScheduleViewings?: BoolFilter<"AgencyMember"> | boolean
    canSetPrices?: BoolFilter<"AgencyMember"> | boolean
    canUploadDocuments?: BoolFilter<"AgencyMember"> | boolean
    joinedAt?: DateTimeFilter<"AgencyMember"> | Date | string
    updatedAt?: DateTimeFilter<"AgencyMember"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
    performance?: XOR<AgentPerformanceNullableScalarRelationFilter, AgentPerformanceWhereInput> | null
  }, "id" | "userId_agencyId">

  export type AgencyMemberOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    agencyId?: SortOrder
    role?: SortOrder
    canManageProperties?: SortOrder
    canManageTeam?: SortOrder
    canViewAllData?: SortOrder
    canContactClients?: SortOrder
    canScheduleViewings?: SortOrder
    canSetPrices?: SortOrder
    canUploadDocuments?: SortOrder
    joinedAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AgencyMemberCountOrderByAggregateInput
    _max?: AgencyMemberMaxOrderByAggregateInput
    _min?: AgencyMemberMinOrderByAggregateInput
  }

  export type AgencyMemberScalarWhereWithAggregatesInput = {
    AND?: AgencyMemberScalarWhereWithAggregatesInput | AgencyMemberScalarWhereWithAggregatesInput[]
    OR?: AgencyMemberScalarWhereWithAggregatesInput[]
    NOT?: AgencyMemberScalarWhereWithAggregatesInput | AgencyMemberScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AgencyMember"> | string
    userId?: StringWithAggregatesFilter<"AgencyMember"> | string
    agencyId?: StringWithAggregatesFilter<"AgencyMember"> | string
    role?: EnumUserRoleWithAggregatesFilter<"AgencyMember"> | $Enums.UserRole
    canManageProperties?: BoolWithAggregatesFilter<"AgencyMember"> | boolean
    canManageTeam?: BoolWithAggregatesFilter<"AgencyMember"> | boolean
    canViewAllData?: BoolWithAggregatesFilter<"AgencyMember"> | boolean
    canContactClients?: BoolWithAggregatesFilter<"AgencyMember"> | boolean
    canScheduleViewings?: BoolWithAggregatesFilter<"AgencyMember"> | boolean
    canSetPrices?: BoolWithAggregatesFilter<"AgencyMember"> | boolean
    canUploadDocuments?: BoolWithAggregatesFilter<"AgencyMember"> | boolean
    joinedAt?: DateTimeWithAggregatesFilter<"AgencyMember"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AgencyMember"> | Date | string
  }

  export type AgencyRoleWhereInput = {
    AND?: AgencyRoleWhereInput | AgencyRoleWhereInput[]
    OR?: AgencyRoleWhereInput[]
    NOT?: AgencyRoleWhereInput | AgencyRoleWhereInput[]
    id?: StringFilter<"AgencyRole"> | string
    userId?: StringFilter<"AgencyRole"> | string
    agencyId?: StringFilter<"AgencyRole"> | string
    role?: EnumUserRoleFilter<"AgencyRole"> | $Enums.UserRole
    title?: StringNullableFilter<"AgencyRole"> | string | null
    description?: StringNullableFilter<"AgencyRole"> | string | null
    canManageProperties?: BoolFilter<"AgencyRole"> | boolean
    canManageTeam?: BoolFilter<"AgencyRole"> | boolean
    canViewAllData?: BoolFilter<"AgencyRole"> | boolean
    canContactClients?: BoolFilter<"AgencyRole"> | boolean
    canScheduleViewings?: BoolFilter<"AgencyRole"> | boolean
    canSetPrices?: BoolFilter<"AgencyRole"> | boolean
    canUploadDocuments?: BoolFilter<"AgencyRole"> | boolean
    assignedAt?: DateTimeFilter<"AgencyRole"> | Date | string
    updatedAt?: DateTimeFilter<"AgencyRole"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
  }

  export type AgencyRoleOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    agencyId?: SortOrder
    role?: SortOrder
    title?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    canManageProperties?: SortOrder
    canManageTeam?: SortOrder
    canViewAllData?: SortOrder
    canContactClients?: SortOrder
    canScheduleViewings?: SortOrder
    canSetPrices?: SortOrder
    canUploadDocuments?: SortOrder
    assignedAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    agency?: AgencyOrderByWithRelationInput
  }

  export type AgencyRoleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_agencyId?: AgencyRoleUserIdAgencyIdCompoundUniqueInput
    AND?: AgencyRoleWhereInput | AgencyRoleWhereInput[]
    OR?: AgencyRoleWhereInput[]
    NOT?: AgencyRoleWhereInput | AgencyRoleWhereInput[]
    userId?: StringFilter<"AgencyRole"> | string
    agencyId?: StringFilter<"AgencyRole"> | string
    role?: EnumUserRoleFilter<"AgencyRole"> | $Enums.UserRole
    title?: StringNullableFilter<"AgencyRole"> | string | null
    description?: StringNullableFilter<"AgencyRole"> | string | null
    canManageProperties?: BoolFilter<"AgencyRole"> | boolean
    canManageTeam?: BoolFilter<"AgencyRole"> | boolean
    canViewAllData?: BoolFilter<"AgencyRole"> | boolean
    canContactClients?: BoolFilter<"AgencyRole"> | boolean
    canScheduleViewings?: BoolFilter<"AgencyRole"> | boolean
    canSetPrices?: BoolFilter<"AgencyRole"> | boolean
    canUploadDocuments?: BoolFilter<"AgencyRole"> | boolean
    assignedAt?: DateTimeFilter<"AgencyRole"> | Date | string
    updatedAt?: DateTimeFilter<"AgencyRole"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
  }, "id" | "userId_agencyId">

  export type AgencyRoleOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    agencyId?: SortOrder
    role?: SortOrder
    title?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    canManageProperties?: SortOrder
    canManageTeam?: SortOrder
    canViewAllData?: SortOrder
    canContactClients?: SortOrder
    canScheduleViewings?: SortOrder
    canSetPrices?: SortOrder
    canUploadDocuments?: SortOrder
    assignedAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AgencyRoleCountOrderByAggregateInput
    _max?: AgencyRoleMaxOrderByAggregateInput
    _min?: AgencyRoleMinOrderByAggregateInput
  }

  export type AgencyRoleScalarWhereWithAggregatesInput = {
    AND?: AgencyRoleScalarWhereWithAggregatesInput | AgencyRoleScalarWhereWithAggregatesInput[]
    OR?: AgencyRoleScalarWhereWithAggregatesInput[]
    NOT?: AgencyRoleScalarWhereWithAggregatesInput | AgencyRoleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AgencyRole"> | string
    userId?: StringWithAggregatesFilter<"AgencyRole"> | string
    agencyId?: StringWithAggregatesFilter<"AgencyRole"> | string
    role?: EnumUserRoleWithAggregatesFilter<"AgencyRole"> | $Enums.UserRole
    title?: StringNullableWithAggregatesFilter<"AgencyRole"> | string | null
    description?: StringNullableWithAggregatesFilter<"AgencyRole"> | string | null
    canManageProperties?: BoolWithAggregatesFilter<"AgencyRole"> | boolean
    canManageTeam?: BoolWithAggregatesFilter<"AgencyRole"> | boolean
    canViewAllData?: BoolWithAggregatesFilter<"AgencyRole"> | boolean
    canContactClients?: BoolWithAggregatesFilter<"AgencyRole"> | boolean
    canScheduleViewings?: BoolWithAggregatesFilter<"AgencyRole"> | boolean
    canSetPrices?: BoolWithAggregatesFilter<"AgencyRole"> | boolean
    canUploadDocuments?: BoolWithAggregatesFilter<"AgencyRole"> | boolean
    assignedAt?: DateTimeWithAggregatesFilter<"AgencyRole"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AgencyRole"> | Date | string
  }

  export type AgencyVerificationDocumentWhereInput = {
    AND?: AgencyVerificationDocumentWhereInput | AgencyVerificationDocumentWhereInput[]
    OR?: AgencyVerificationDocumentWhereInput[]
    NOT?: AgencyVerificationDocumentWhereInput | AgencyVerificationDocumentWhereInput[]
    id?: StringFilter<"AgencyVerificationDocument"> | string
    documentType?: StringFilter<"AgencyVerificationDocument"> | string
    fileName?: StringFilter<"AgencyVerificationDocument"> | string
    fileUrl?: StringFilter<"AgencyVerificationDocument"> | string
    fileSize?: IntFilter<"AgencyVerificationDocument"> | number
    mimeType?: StringFilter<"AgencyVerificationDocument"> | string
    title?: StringFilter<"AgencyVerificationDocument"> | string
    description?: StringNullableFilter<"AgencyVerificationDocument"> | string | null
    isVerified?: BoolFilter<"AgencyVerificationDocument"> | boolean
    reviewedBy?: StringNullableFilter<"AgencyVerificationDocument"> | string | null
    reviewedAt?: DateTimeNullableFilter<"AgencyVerificationDocument"> | Date | string | null
    reviewNotes?: StringNullableFilter<"AgencyVerificationDocument"> | string | null
    uploadedAt?: DateTimeFilter<"AgencyVerificationDocument"> | Date | string
    agencyId?: StringFilter<"AgencyVerificationDocument"> | string
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
  }

  export type AgencyVerificationDocumentOrderByWithRelationInput = {
    id?: SortOrder
    documentType?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    isVerified?: SortOrder
    reviewedBy?: SortOrderInput | SortOrder
    reviewedAt?: SortOrderInput | SortOrder
    reviewNotes?: SortOrderInput | SortOrder
    uploadedAt?: SortOrder
    agencyId?: SortOrder
    agency?: AgencyOrderByWithRelationInput
  }

  export type AgencyVerificationDocumentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AgencyVerificationDocumentWhereInput | AgencyVerificationDocumentWhereInput[]
    OR?: AgencyVerificationDocumentWhereInput[]
    NOT?: AgencyVerificationDocumentWhereInput | AgencyVerificationDocumentWhereInput[]
    documentType?: StringFilter<"AgencyVerificationDocument"> | string
    fileName?: StringFilter<"AgencyVerificationDocument"> | string
    fileUrl?: StringFilter<"AgencyVerificationDocument"> | string
    fileSize?: IntFilter<"AgencyVerificationDocument"> | number
    mimeType?: StringFilter<"AgencyVerificationDocument"> | string
    title?: StringFilter<"AgencyVerificationDocument"> | string
    description?: StringNullableFilter<"AgencyVerificationDocument"> | string | null
    isVerified?: BoolFilter<"AgencyVerificationDocument"> | boolean
    reviewedBy?: StringNullableFilter<"AgencyVerificationDocument"> | string | null
    reviewedAt?: DateTimeNullableFilter<"AgencyVerificationDocument"> | Date | string | null
    reviewNotes?: StringNullableFilter<"AgencyVerificationDocument"> | string | null
    uploadedAt?: DateTimeFilter<"AgencyVerificationDocument"> | Date | string
    agencyId?: StringFilter<"AgencyVerificationDocument"> | string
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
  }, "id">

  export type AgencyVerificationDocumentOrderByWithAggregationInput = {
    id?: SortOrder
    documentType?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    isVerified?: SortOrder
    reviewedBy?: SortOrderInput | SortOrder
    reviewedAt?: SortOrderInput | SortOrder
    reviewNotes?: SortOrderInput | SortOrder
    uploadedAt?: SortOrder
    agencyId?: SortOrder
    _count?: AgencyVerificationDocumentCountOrderByAggregateInput
    _avg?: AgencyVerificationDocumentAvgOrderByAggregateInput
    _max?: AgencyVerificationDocumentMaxOrderByAggregateInput
    _min?: AgencyVerificationDocumentMinOrderByAggregateInput
    _sum?: AgencyVerificationDocumentSumOrderByAggregateInput
  }

  export type AgencyVerificationDocumentScalarWhereWithAggregatesInput = {
    AND?: AgencyVerificationDocumentScalarWhereWithAggregatesInput | AgencyVerificationDocumentScalarWhereWithAggregatesInput[]
    OR?: AgencyVerificationDocumentScalarWhereWithAggregatesInput[]
    NOT?: AgencyVerificationDocumentScalarWhereWithAggregatesInput | AgencyVerificationDocumentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AgencyVerificationDocument"> | string
    documentType?: StringWithAggregatesFilter<"AgencyVerificationDocument"> | string
    fileName?: StringWithAggregatesFilter<"AgencyVerificationDocument"> | string
    fileUrl?: StringWithAggregatesFilter<"AgencyVerificationDocument"> | string
    fileSize?: IntWithAggregatesFilter<"AgencyVerificationDocument"> | number
    mimeType?: StringWithAggregatesFilter<"AgencyVerificationDocument"> | string
    title?: StringWithAggregatesFilter<"AgencyVerificationDocument"> | string
    description?: StringNullableWithAggregatesFilter<"AgencyVerificationDocument"> | string | null
    isVerified?: BoolWithAggregatesFilter<"AgencyVerificationDocument"> | boolean
    reviewedBy?: StringNullableWithAggregatesFilter<"AgencyVerificationDocument"> | string | null
    reviewedAt?: DateTimeNullableWithAggregatesFilter<"AgencyVerificationDocument"> | Date | string | null
    reviewNotes?: StringNullableWithAggregatesFilter<"AgencyVerificationDocument"> | string | null
    uploadedAt?: DateTimeWithAggregatesFilter<"AgencyVerificationDocument"> | Date | string
    agencyId?: StringWithAggregatesFilter<"AgencyVerificationDocument"> | string
  }

  export type AgencyPerformanceWhereInput = {
    AND?: AgencyPerformanceWhereInput | AgencyPerformanceWhereInput[]
    OR?: AgencyPerformanceWhereInput[]
    NOT?: AgencyPerformanceWhereInput | AgencyPerformanceWhereInput[]
    id?: StringFilter<"AgencyPerformance"> | string
    totalSales?: IntFilter<"AgencyPerformance"> | number
    totalRentals?: IntFilter<"AgencyPerformance"> | number
    totalRevenue?: FloatFilter<"AgencyPerformance"> | number
    topAgent?: StringNullableFilter<"AgencyPerformance"> | string | null
    topAgentSales?: IntFilter<"AgencyPerformance"> | number
    topAgentRevenue?: FloatFilter<"AgencyPerformance"> | number
    salesThisMonth?: IntFilter<"AgencyPerformance"> | number
    salesThisYear?: IntFilter<"AgencyPerformance"> | number
    revenueThisMonth?: FloatFilter<"AgencyPerformance"> | number
    revenueThisYear?: FloatFilter<"AgencyPerformance"> | number
    lastCalculated?: DateTimeFilter<"AgencyPerformance"> | Date | string
    createdAt?: DateTimeFilter<"AgencyPerformance"> | Date | string
    updatedAt?: DateTimeFilter<"AgencyPerformance"> | Date | string
    agencyId?: StringFilter<"AgencyPerformance"> | string
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
  }

  export type AgencyPerformanceOrderByWithRelationInput = {
    id?: SortOrder
    totalSales?: SortOrder
    totalRentals?: SortOrder
    totalRevenue?: SortOrder
    topAgent?: SortOrderInput | SortOrder
    topAgentSales?: SortOrder
    topAgentRevenue?: SortOrder
    salesThisMonth?: SortOrder
    salesThisYear?: SortOrder
    revenueThisMonth?: SortOrder
    revenueThisYear?: SortOrder
    lastCalculated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agencyId?: SortOrder
    agency?: AgencyOrderByWithRelationInput
  }

  export type AgencyPerformanceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    agencyId?: string
    AND?: AgencyPerformanceWhereInput | AgencyPerformanceWhereInput[]
    OR?: AgencyPerformanceWhereInput[]
    NOT?: AgencyPerformanceWhereInput | AgencyPerformanceWhereInput[]
    totalSales?: IntFilter<"AgencyPerformance"> | number
    totalRentals?: IntFilter<"AgencyPerformance"> | number
    totalRevenue?: FloatFilter<"AgencyPerformance"> | number
    topAgent?: StringNullableFilter<"AgencyPerformance"> | string | null
    topAgentSales?: IntFilter<"AgencyPerformance"> | number
    topAgentRevenue?: FloatFilter<"AgencyPerformance"> | number
    salesThisMonth?: IntFilter<"AgencyPerformance"> | number
    salesThisYear?: IntFilter<"AgencyPerformance"> | number
    revenueThisMonth?: FloatFilter<"AgencyPerformance"> | number
    revenueThisYear?: FloatFilter<"AgencyPerformance"> | number
    lastCalculated?: DateTimeFilter<"AgencyPerformance"> | Date | string
    createdAt?: DateTimeFilter<"AgencyPerformance"> | Date | string
    updatedAt?: DateTimeFilter<"AgencyPerformance"> | Date | string
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
  }, "id" | "agencyId">

  export type AgencyPerformanceOrderByWithAggregationInput = {
    id?: SortOrder
    totalSales?: SortOrder
    totalRentals?: SortOrder
    totalRevenue?: SortOrder
    topAgent?: SortOrderInput | SortOrder
    topAgentSales?: SortOrder
    topAgentRevenue?: SortOrder
    salesThisMonth?: SortOrder
    salesThisYear?: SortOrder
    revenueThisMonth?: SortOrder
    revenueThisYear?: SortOrder
    lastCalculated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agencyId?: SortOrder
    _count?: AgencyPerformanceCountOrderByAggregateInput
    _avg?: AgencyPerformanceAvgOrderByAggregateInput
    _max?: AgencyPerformanceMaxOrderByAggregateInput
    _min?: AgencyPerformanceMinOrderByAggregateInput
    _sum?: AgencyPerformanceSumOrderByAggregateInput
  }

  export type AgencyPerformanceScalarWhereWithAggregatesInput = {
    AND?: AgencyPerformanceScalarWhereWithAggregatesInput | AgencyPerformanceScalarWhereWithAggregatesInput[]
    OR?: AgencyPerformanceScalarWhereWithAggregatesInput[]
    NOT?: AgencyPerformanceScalarWhereWithAggregatesInput | AgencyPerformanceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AgencyPerformance"> | string
    totalSales?: IntWithAggregatesFilter<"AgencyPerformance"> | number
    totalRentals?: IntWithAggregatesFilter<"AgencyPerformance"> | number
    totalRevenue?: FloatWithAggregatesFilter<"AgencyPerformance"> | number
    topAgent?: StringNullableWithAggregatesFilter<"AgencyPerformance"> | string | null
    topAgentSales?: IntWithAggregatesFilter<"AgencyPerformance"> | number
    topAgentRevenue?: FloatWithAggregatesFilter<"AgencyPerformance"> | number
    salesThisMonth?: IntWithAggregatesFilter<"AgencyPerformance"> | number
    salesThisYear?: IntWithAggregatesFilter<"AgencyPerformance"> | number
    revenueThisMonth?: FloatWithAggregatesFilter<"AgencyPerformance"> | number
    revenueThisYear?: FloatWithAggregatesFilter<"AgencyPerformance"> | number
    lastCalculated?: DateTimeWithAggregatesFilter<"AgencyPerformance"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"AgencyPerformance"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AgencyPerformance"> | Date | string
    agencyId?: StringWithAggregatesFilter<"AgencyPerformance"> | string
  }

  export type AgentPerformanceWhereInput = {
    AND?: AgentPerformanceWhereInput | AgentPerformanceWhereInput[]
    OR?: AgentPerformanceWhereInput[]
    NOT?: AgentPerformanceWhereInput | AgentPerformanceWhereInput[]
    id?: StringFilter<"AgentPerformance"> | string
    totalSales?: IntFilter<"AgentPerformance"> | number
    totalRentals?: IntFilter<"AgentPerformance"> | number
    totalRevenue?: FloatFilter<"AgentPerformance"> | number
    salesThisMonth?: IntFilter<"AgentPerformance"> | number
    salesThisYear?: IntFilter<"AgentPerformance"> | number
    revenueThisMonth?: FloatFilter<"AgentPerformance"> | number
    revenueThisYear?: FloatFilter<"AgentPerformance"> | number
    averageResponseTime?: FloatFilter<"AgentPerformance"> | number
    totalInquiries?: IntFilter<"AgentPerformance"> | number
    convertedInquiries?: IntFilter<"AgentPerformance"> | number
    lastCalculated?: DateTimeFilter<"AgentPerformance"> | Date | string
    createdAt?: DateTimeFilter<"AgentPerformance"> | Date | string
    updatedAt?: DateTimeFilter<"AgentPerformance"> | Date | string
    agentId?: StringFilter<"AgentPerformance"> | string
    agent?: XOR<AgencyMemberScalarRelationFilter, AgencyMemberWhereInput>
  }

  export type AgentPerformanceOrderByWithRelationInput = {
    id?: SortOrder
    totalSales?: SortOrder
    totalRentals?: SortOrder
    totalRevenue?: SortOrder
    salesThisMonth?: SortOrder
    salesThisYear?: SortOrder
    revenueThisMonth?: SortOrder
    revenueThisYear?: SortOrder
    averageResponseTime?: SortOrder
    totalInquiries?: SortOrder
    convertedInquiries?: SortOrder
    lastCalculated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agentId?: SortOrder
    agent?: AgencyMemberOrderByWithRelationInput
  }

  export type AgentPerformanceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    agentId?: string
    AND?: AgentPerformanceWhereInput | AgentPerformanceWhereInput[]
    OR?: AgentPerformanceWhereInput[]
    NOT?: AgentPerformanceWhereInput | AgentPerformanceWhereInput[]
    totalSales?: IntFilter<"AgentPerformance"> | number
    totalRentals?: IntFilter<"AgentPerformance"> | number
    totalRevenue?: FloatFilter<"AgentPerformance"> | number
    salesThisMonth?: IntFilter<"AgentPerformance"> | number
    salesThisYear?: IntFilter<"AgentPerformance"> | number
    revenueThisMonth?: FloatFilter<"AgentPerformance"> | number
    revenueThisYear?: FloatFilter<"AgentPerformance"> | number
    averageResponseTime?: FloatFilter<"AgentPerformance"> | number
    totalInquiries?: IntFilter<"AgentPerformance"> | number
    convertedInquiries?: IntFilter<"AgentPerformance"> | number
    lastCalculated?: DateTimeFilter<"AgentPerformance"> | Date | string
    createdAt?: DateTimeFilter<"AgentPerformance"> | Date | string
    updatedAt?: DateTimeFilter<"AgentPerformance"> | Date | string
    agent?: XOR<AgencyMemberScalarRelationFilter, AgencyMemberWhereInput>
  }, "id" | "agentId">

  export type AgentPerformanceOrderByWithAggregationInput = {
    id?: SortOrder
    totalSales?: SortOrder
    totalRentals?: SortOrder
    totalRevenue?: SortOrder
    salesThisMonth?: SortOrder
    salesThisYear?: SortOrder
    revenueThisMonth?: SortOrder
    revenueThisYear?: SortOrder
    averageResponseTime?: SortOrder
    totalInquiries?: SortOrder
    convertedInquiries?: SortOrder
    lastCalculated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agentId?: SortOrder
    _count?: AgentPerformanceCountOrderByAggregateInput
    _avg?: AgentPerformanceAvgOrderByAggregateInput
    _max?: AgentPerformanceMaxOrderByAggregateInput
    _min?: AgentPerformanceMinOrderByAggregateInput
    _sum?: AgentPerformanceSumOrderByAggregateInput
  }

  export type AgentPerformanceScalarWhereWithAggregatesInput = {
    AND?: AgentPerformanceScalarWhereWithAggregatesInput | AgentPerformanceScalarWhereWithAggregatesInput[]
    OR?: AgentPerformanceScalarWhereWithAggregatesInput[]
    NOT?: AgentPerformanceScalarWhereWithAggregatesInput | AgentPerformanceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AgentPerformance"> | string
    totalSales?: IntWithAggregatesFilter<"AgentPerformance"> | number
    totalRentals?: IntWithAggregatesFilter<"AgentPerformance"> | number
    totalRevenue?: FloatWithAggregatesFilter<"AgentPerformance"> | number
    salesThisMonth?: IntWithAggregatesFilter<"AgentPerformance"> | number
    salesThisYear?: IntWithAggregatesFilter<"AgentPerformance"> | number
    revenueThisMonth?: FloatWithAggregatesFilter<"AgentPerformance"> | number
    revenueThisYear?: FloatWithAggregatesFilter<"AgentPerformance"> | number
    averageResponseTime?: FloatWithAggregatesFilter<"AgentPerformance"> | number
    totalInquiries?: IntWithAggregatesFilter<"AgentPerformance"> | number
    convertedInquiries?: IntWithAggregatesFilter<"AgentPerformance"> | number
    lastCalculated?: DateTimeWithAggregatesFilter<"AgentPerformance"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"AgentPerformance"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AgentPerformance"> | Date | string
    agentId?: StringWithAggregatesFilter<"AgentPerformance"> | string
  }

  export type AgencyInquiryWhereInput = {
    AND?: AgencyInquiryWhereInput | AgencyInquiryWhereInput[]
    OR?: AgencyInquiryWhereInput[]
    NOT?: AgencyInquiryWhereInput | AgencyInquiryWhereInput[]
    id?: StringFilter<"AgencyInquiry"> | string
    subject?: StringFilter<"AgencyInquiry"> | string
    message?: StringFilter<"AgencyInquiry"> | string
    whoSentIt?: StringFilter<"AgencyInquiry"> | string
    whichProperty?: StringNullableFilter<"AgencyInquiry"> | string | null
    status?: EnumInquiryStatusFilter<"AgencyInquiry"> | $Enums.InquiryStatus
    whenSent?: DateTimeFilter<"AgencyInquiry"> | Date | string
    response?: StringNullableFilter<"AgencyInquiry"> | string | null
    respondedAt?: DateTimeNullableFilter<"AgencyInquiry"> | Date | string | null
    respondedBy?: StringNullableFilter<"AgencyInquiry"> | string | null
    createdAt?: DateTimeFilter<"AgencyInquiry"> | Date | string
    updatedAt?: DateTimeFilter<"AgencyInquiry"> | Date | string
    agencyId?: StringFilter<"AgencyInquiry"> | string
    propertyId?: StringNullableFilter<"AgencyInquiry"> | string | null
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
    property?: XOR<PropertyNullableScalarRelationFilter, PropertyWhereInput> | null
  }

  export type AgencyInquiryOrderByWithRelationInput = {
    id?: SortOrder
    subject?: SortOrder
    message?: SortOrder
    whoSentIt?: SortOrder
    whichProperty?: SortOrderInput | SortOrder
    status?: SortOrder
    whenSent?: SortOrder
    response?: SortOrderInput | SortOrder
    respondedAt?: SortOrderInput | SortOrder
    respondedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agencyId?: SortOrder
    propertyId?: SortOrderInput | SortOrder
    agency?: AgencyOrderByWithRelationInput
    property?: PropertyOrderByWithRelationInput
  }

  export type AgencyInquiryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AgencyInquiryWhereInput | AgencyInquiryWhereInput[]
    OR?: AgencyInquiryWhereInput[]
    NOT?: AgencyInquiryWhereInput | AgencyInquiryWhereInput[]
    subject?: StringFilter<"AgencyInquiry"> | string
    message?: StringFilter<"AgencyInquiry"> | string
    whoSentIt?: StringFilter<"AgencyInquiry"> | string
    whichProperty?: StringNullableFilter<"AgencyInquiry"> | string | null
    status?: EnumInquiryStatusFilter<"AgencyInquiry"> | $Enums.InquiryStatus
    whenSent?: DateTimeFilter<"AgencyInquiry"> | Date | string
    response?: StringNullableFilter<"AgencyInquiry"> | string | null
    respondedAt?: DateTimeNullableFilter<"AgencyInquiry"> | Date | string | null
    respondedBy?: StringNullableFilter<"AgencyInquiry"> | string | null
    createdAt?: DateTimeFilter<"AgencyInquiry"> | Date | string
    updatedAt?: DateTimeFilter<"AgencyInquiry"> | Date | string
    agencyId?: StringFilter<"AgencyInquiry"> | string
    propertyId?: StringNullableFilter<"AgencyInquiry"> | string | null
    agency?: XOR<AgencyScalarRelationFilter, AgencyWhereInput>
    property?: XOR<PropertyNullableScalarRelationFilter, PropertyWhereInput> | null
  }, "id">

  export type AgencyInquiryOrderByWithAggregationInput = {
    id?: SortOrder
    subject?: SortOrder
    message?: SortOrder
    whoSentIt?: SortOrder
    whichProperty?: SortOrderInput | SortOrder
    status?: SortOrder
    whenSent?: SortOrder
    response?: SortOrderInput | SortOrder
    respondedAt?: SortOrderInput | SortOrder
    respondedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agencyId?: SortOrder
    propertyId?: SortOrderInput | SortOrder
    _count?: AgencyInquiryCountOrderByAggregateInput
    _max?: AgencyInquiryMaxOrderByAggregateInput
    _min?: AgencyInquiryMinOrderByAggregateInput
  }

  export type AgencyInquiryScalarWhereWithAggregatesInput = {
    AND?: AgencyInquiryScalarWhereWithAggregatesInput | AgencyInquiryScalarWhereWithAggregatesInput[]
    OR?: AgencyInquiryScalarWhereWithAggregatesInput[]
    NOT?: AgencyInquiryScalarWhereWithAggregatesInput | AgencyInquiryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AgencyInquiry"> | string
    subject?: StringWithAggregatesFilter<"AgencyInquiry"> | string
    message?: StringWithAggregatesFilter<"AgencyInquiry"> | string
    whoSentIt?: StringWithAggregatesFilter<"AgencyInquiry"> | string
    whichProperty?: StringNullableWithAggregatesFilter<"AgencyInquiry"> | string | null
    status?: EnumInquiryStatusWithAggregatesFilter<"AgencyInquiry"> | $Enums.InquiryStatus
    whenSent?: DateTimeWithAggregatesFilter<"AgencyInquiry"> | Date | string
    response?: StringNullableWithAggregatesFilter<"AgencyInquiry"> | string | null
    respondedAt?: DateTimeNullableWithAggregatesFilter<"AgencyInquiry"> | Date | string | null
    respondedBy?: StringNullableWithAggregatesFilter<"AgencyInquiry"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"AgencyInquiry"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AgencyInquiry"> | Date | string
    agencyId?: StringWithAggregatesFilter<"AgencyInquiry"> | string
    propertyId?: StringNullableWithAggregatesFilter<"AgencyInquiry"> | string | null
  }

  export type PropertyWhereInput = {
    AND?: PropertyWhereInput | PropertyWhereInput[]
    OR?: PropertyWhereInput[]
    NOT?: PropertyWhereInput | PropertyWhereInput[]
    id?: StringFilter<"Property"> | string
    title?: StringFilter<"Property"> | string
    description?: StringFilter<"Property"> | string
    type?: EnumPropertyTypeFilter<"Property"> | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFilter<"Property"> | $Enums.TransactionType
    price?: FloatNullableFilter<"Property"> | number | null
    rentAmount?: FloatNullableFilter<"Property"> | number | null
    pricePerSqm?: FloatNullableFilter<"Property"> | number | null
    deposit?: FloatNullableFilter<"Property"> | number | null
    address?: StringFilter<"Property"> | string
    city?: StringFilter<"Property"> | string
    state?: StringFilter<"Property"> | string
    zipCode?: StringFilter<"Property"> | string
    country?: StringFilter<"Property"> | string
    latitude?: FloatNullableFilter<"Property"> | number | null
    longitude?: FloatNullableFilter<"Property"> | number | null
    neighborhood?: StringNullableFilter<"Property"> | string | null
    totalArea?: FloatFilter<"Property"> | number
    landArea?: FloatNullableFilter<"Property"> | number | null
    floorNumber?: IntNullableFilter<"Property"> | number | null
    totalFloors?: IntNullableFilter<"Property"> | number | null
    bedrooms?: IntNullableFilter<"Property"> | number | null
    bathrooms?: IntNullableFilter<"Property"> | number | null
    livingRooms?: IntNullableFilter<"Property"> | number | null
    kitchen?: StringNullableFilter<"Property"> | string | null
    yearBuilt?: IntNullableFilter<"Property"> | number | null
    condition?: EnumPropertyConditionFilter<"Property"> | $Enums.PropertyCondition
    furnished?: BoolNullableFilter<"Property"> | boolean | null
    amenities?: StringNullableListFilter<"Property">
    utilities?: StringNullableListFilter<"Property">
    parking?: BoolNullableFilter<"Property"> | boolean | null
    garden?: BoolNullableFilter<"Property"> | boolean | null
    balcony?: BoolNullableFilter<"Property"> | boolean | null
    elevator?: BoolNullableFilter<"Property"> | boolean | null
    pool?: BoolNullableFilter<"Property"> | boolean | null
    ac?: BoolNullableFilter<"Property"> | boolean | null
    petPolicy?: StringNullableFilter<"Property"> | string | null
    nearbyServices?: StringNullableListFilter<"Property">
    energyRating?: StringNullableFilter<"Property"> | string | null
    leaseType?: EnumLeaseTypeNullableFilter<"Property"> | $Enums.LeaseType | null
    minRentalPeriod?: StringNullableFilter<"Property"> | string | null
    availableDate?: DateTimeNullableFilter<"Property"> | Date | string | null
    status?: EnumPropertyStatusFilter<"Property"> | $Enums.PropertyStatus
    isVerified?: BoolFilter<"Property"> | boolean
    verifiedBy?: StringNullableFilter<"Property"> | string | null
    verifiedAt?: DateTimeNullableFilter<"Property"> | Date | string | null
    verificationNotes?: StringNullableFilter<"Property"> | string | null
    createdAt?: DateTimeFilter<"Property"> | Date | string
    updatedAt?: DateTimeFilter<"Property"> | Date | string
    listedAt?: DateTimeNullableFilter<"Property"> | Date | string | null
    soldAt?: DateTimeNullableFilter<"Property"> | Date | string | null
    rentedAt?: DateTimeNullableFilter<"Property"> | Date | string | null
    ownerId?: StringFilter<"Property"> | string
    agentId?: StringNullableFilter<"Property"> | string | null
    agencyId?: StringNullableFilter<"Property"> | string | null
    owner?: XOR<UserScalarRelationFilter, UserWhereInput>
    agent?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    agency?: XOR<AgencyNullableScalarRelationFilter, AgencyWhereInput> | null
    photos?: PropertyPhotoListRelationFilter
    videos?: PropertyVideoListRelationFilter
    virtualTours?: VirtualTourListRelationFilter
    views?: PropertyViewListRelationFilter
    favorites?: FavoriteListRelationFilter
    requests?: PropertyRequestListRelationFilter
    inquiries?: PropertyInquiryListRelationFilter
    comparisons?: PropertyComparisonPropertiesListRelationFilter
    reviews?: PropertyReviewListRelationFilter
    comments?: PropertyCommentListRelationFilter
    viewings?: PropertyViewingListRelationFilter
    analytics?: PropertyAnalyticsListRelationFilter
    adminActions?: AdminActionListRelationFilter
    payments?: PaymentListRelationFilter
    agencyInquiries?: AgencyInquiryListRelationFilter
  }

  export type PropertyOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    type?: SortOrder
    transactionType?: SortOrder
    price?: SortOrderInput | SortOrder
    rentAmount?: SortOrderInput | SortOrder
    pricePerSqm?: SortOrderInput | SortOrder
    deposit?: SortOrderInput | SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    country?: SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    neighborhood?: SortOrderInput | SortOrder
    totalArea?: SortOrder
    landArea?: SortOrderInput | SortOrder
    floorNumber?: SortOrderInput | SortOrder
    totalFloors?: SortOrderInput | SortOrder
    bedrooms?: SortOrderInput | SortOrder
    bathrooms?: SortOrderInput | SortOrder
    livingRooms?: SortOrderInput | SortOrder
    kitchen?: SortOrderInput | SortOrder
    yearBuilt?: SortOrderInput | SortOrder
    condition?: SortOrder
    furnished?: SortOrderInput | SortOrder
    amenities?: SortOrder
    utilities?: SortOrder
    parking?: SortOrderInput | SortOrder
    garden?: SortOrderInput | SortOrder
    balcony?: SortOrderInput | SortOrder
    elevator?: SortOrderInput | SortOrder
    pool?: SortOrderInput | SortOrder
    ac?: SortOrderInput | SortOrder
    petPolicy?: SortOrderInput | SortOrder
    nearbyServices?: SortOrder
    energyRating?: SortOrderInput | SortOrder
    leaseType?: SortOrderInput | SortOrder
    minRentalPeriod?: SortOrderInput | SortOrder
    availableDate?: SortOrderInput | SortOrder
    status?: SortOrder
    isVerified?: SortOrder
    verifiedBy?: SortOrderInput | SortOrder
    verifiedAt?: SortOrderInput | SortOrder
    verificationNotes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    listedAt?: SortOrderInput | SortOrder
    soldAt?: SortOrderInput | SortOrder
    rentedAt?: SortOrderInput | SortOrder
    ownerId?: SortOrder
    agentId?: SortOrderInput | SortOrder
    agencyId?: SortOrderInput | SortOrder
    owner?: UserOrderByWithRelationInput
    agent?: UserOrderByWithRelationInput
    agency?: AgencyOrderByWithRelationInput
    photos?: PropertyPhotoOrderByRelationAggregateInput
    videos?: PropertyVideoOrderByRelationAggregateInput
    virtualTours?: VirtualTourOrderByRelationAggregateInput
    views?: PropertyViewOrderByRelationAggregateInput
    favorites?: FavoriteOrderByRelationAggregateInput
    requests?: PropertyRequestOrderByRelationAggregateInput
    inquiries?: PropertyInquiryOrderByRelationAggregateInput
    comparisons?: PropertyComparisonPropertiesOrderByRelationAggregateInput
    reviews?: PropertyReviewOrderByRelationAggregateInput
    comments?: PropertyCommentOrderByRelationAggregateInput
    viewings?: PropertyViewingOrderByRelationAggregateInput
    analytics?: PropertyAnalyticsOrderByRelationAggregateInput
    adminActions?: AdminActionOrderByRelationAggregateInput
    payments?: PaymentOrderByRelationAggregateInput
    agencyInquiries?: AgencyInquiryOrderByRelationAggregateInput
  }

  export type PropertyWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PropertyWhereInput | PropertyWhereInput[]
    OR?: PropertyWhereInput[]
    NOT?: PropertyWhereInput | PropertyWhereInput[]
    title?: StringFilter<"Property"> | string
    description?: StringFilter<"Property"> | string
    type?: EnumPropertyTypeFilter<"Property"> | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFilter<"Property"> | $Enums.TransactionType
    price?: FloatNullableFilter<"Property"> | number | null
    rentAmount?: FloatNullableFilter<"Property"> | number | null
    pricePerSqm?: FloatNullableFilter<"Property"> | number | null
    deposit?: FloatNullableFilter<"Property"> | number | null
    address?: StringFilter<"Property"> | string
    city?: StringFilter<"Property"> | string
    state?: StringFilter<"Property"> | string
    zipCode?: StringFilter<"Property"> | string
    country?: StringFilter<"Property"> | string
    latitude?: FloatNullableFilter<"Property"> | number | null
    longitude?: FloatNullableFilter<"Property"> | number | null
    neighborhood?: StringNullableFilter<"Property"> | string | null
    totalArea?: FloatFilter<"Property"> | number
    landArea?: FloatNullableFilter<"Property"> | number | null
    floorNumber?: IntNullableFilter<"Property"> | number | null
    totalFloors?: IntNullableFilter<"Property"> | number | null
    bedrooms?: IntNullableFilter<"Property"> | number | null
    bathrooms?: IntNullableFilter<"Property"> | number | null
    livingRooms?: IntNullableFilter<"Property"> | number | null
    kitchen?: StringNullableFilter<"Property"> | string | null
    yearBuilt?: IntNullableFilter<"Property"> | number | null
    condition?: EnumPropertyConditionFilter<"Property"> | $Enums.PropertyCondition
    furnished?: BoolNullableFilter<"Property"> | boolean | null
    amenities?: StringNullableListFilter<"Property">
    utilities?: StringNullableListFilter<"Property">
    parking?: BoolNullableFilter<"Property"> | boolean | null
    garden?: BoolNullableFilter<"Property"> | boolean | null
    balcony?: BoolNullableFilter<"Property"> | boolean | null
    elevator?: BoolNullableFilter<"Property"> | boolean | null
    pool?: BoolNullableFilter<"Property"> | boolean | null
    ac?: BoolNullableFilter<"Property"> | boolean | null
    petPolicy?: StringNullableFilter<"Property"> | string | null
    nearbyServices?: StringNullableListFilter<"Property">
    energyRating?: StringNullableFilter<"Property"> | string | null
    leaseType?: EnumLeaseTypeNullableFilter<"Property"> | $Enums.LeaseType | null
    minRentalPeriod?: StringNullableFilter<"Property"> | string | null
    availableDate?: DateTimeNullableFilter<"Property"> | Date | string | null
    status?: EnumPropertyStatusFilter<"Property"> | $Enums.PropertyStatus
    isVerified?: BoolFilter<"Property"> | boolean
    verifiedBy?: StringNullableFilter<"Property"> | string | null
    verifiedAt?: DateTimeNullableFilter<"Property"> | Date | string | null
    verificationNotes?: StringNullableFilter<"Property"> | string | null
    createdAt?: DateTimeFilter<"Property"> | Date | string
    updatedAt?: DateTimeFilter<"Property"> | Date | string
    listedAt?: DateTimeNullableFilter<"Property"> | Date | string | null
    soldAt?: DateTimeNullableFilter<"Property"> | Date | string | null
    rentedAt?: DateTimeNullableFilter<"Property"> | Date | string | null
    ownerId?: StringFilter<"Property"> | string
    agentId?: StringNullableFilter<"Property"> | string | null
    agencyId?: StringNullableFilter<"Property"> | string | null
    owner?: XOR<UserScalarRelationFilter, UserWhereInput>
    agent?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    agency?: XOR<AgencyNullableScalarRelationFilter, AgencyWhereInput> | null
    photos?: PropertyPhotoListRelationFilter
    videos?: PropertyVideoListRelationFilter
    virtualTours?: VirtualTourListRelationFilter
    views?: PropertyViewListRelationFilter
    favorites?: FavoriteListRelationFilter
    requests?: PropertyRequestListRelationFilter
    inquiries?: PropertyInquiryListRelationFilter
    comparisons?: PropertyComparisonPropertiesListRelationFilter
    reviews?: PropertyReviewListRelationFilter
    comments?: PropertyCommentListRelationFilter
    viewings?: PropertyViewingListRelationFilter
    analytics?: PropertyAnalyticsListRelationFilter
    adminActions?: AdminActionListRelationFilter
    payments?: PaymentListRelationFilter
    agencyInquiries?: AgencyInquiryListRelationFilter
  }, "id">

  export type PropertyOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    type?: SortOrder
    transactionType?: SortOrder
    price?: SortOrderInput | SortOrder
    rentAmount?: SortOrderInput | SortOrder
    pricePerSqm?: SortOrderInput | SortOrder
    deposit?: SortOrderInput | SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    country?: SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    neighborhood?: SortOrderInput | SortOrder
    totalArea?: SortOrder
    landArea?: SortOrderInput | SortOrder
    floorNumber?: SortOrderInput | SortOrder
    totalFloors?: SortOrderInput | SortOrder
    bedrooms?: SortOrderInput | SortOrder
    bathrooms?: SortOrderInput | SortOrder
    livingRooms?: SortOrderInput | SortOrder
    kitchen?: SortOrderInput | SortOrder
    yearBuilt?: SortOrderInput | SortOrder
    condition?: SortOrder
    furnished?: SortOrderInput | SortOrder
    amenities?: SortOrder
    utilities?: SortOrder
    parking?: SortOrderInput | SortOrder
    garden?: SortOrderInput | SortOrder
    balcony?: SortOrderInput | SortOrder
    elevator?: SortOrderInput | SortOrder
    pool?: SortOrderInput | SortOrder
    ac?: SortOrderInput | SortOrder
    petPolicy?: SortOrderInput | SortOrder
    nearbyServices?: SortOrder
    energyRating?: SortOrderInput | SortOrder
    leaseType?: SortOrderInput | SortOrder
    minRentalPeriod?: SortOrderInput | SortOrder
    availableDate?: SortOrderInput | SortOrder
    status?: SortOrder
    isVerified?: SortOrder
    verifiedBy?: SortOrderInput | SortOrder
    verifiedAt?: SortOrderInput | SortOrder
    verificationNotes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    listedAt?: SortOrderInput | SortOrder
    soldAt?: SortOrderInput | SortOrder
    rentedAt?: SortOrderInput | SortOrder
    ownerId?: SortOrder
    agentId?: SortOrderInput | SortOrder
    agencyId?: SortOrderInput | SortOrder
    _count?: PropertyCountOrderByAggregateInput
    _avg?: PropertyAvgOrderByAggregateInput
    _max?: PropertyMaxOrderByAggregateInput
    _min?: PropertyMinOrderByAggregateInput
    _sum?: PropertySumOrderByAggregateInput
  }

  export type PropertyScalarWhereWithAggregatesInput = {
    AND?: PropertyScalarWhereWithAggregatesInput | PropertyScalarWhereWithAggregatesInput[]
    OR?: PropertyScalarWhereWithAggregatesInput[]
    NOT?: PropertyScalarWhereWithAggregatesInput | PropertyScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Property"> | string
    title?: StringWithAggregatesFilter<"Property"> | string
    description?: StringWithAggregatesFilter<"Property"> | string
    type?: EnumPropertyTypeWithAggregatesFilter<"Property"> | $Enums.PropertyType
    transactionType?: EnumTransactionTypeWithAggregatesFilter<"Property"> | $Enums.TransactionType
    price?: FloatNullableWithAggregatesFilter<"Property"> | number | null
    rentAmount?: FloatNullableWithAggregatesFilter<"Property"> | number | null
    pricePerSqm?: FloatNullableWithAggregatesFilter<"Property"> | number | null
    deposit?: FloatNullableWithAggregatesFilter<"Property"> | number | null
    address?: StringWithAggregatesFilter<"Property"> | string
    city?: StringWithAggregatesFilter<"Property"> | string
    state?: StringWithAggregatesFilter<"Property"> | string
    zipCode?: StringWithAggregatesFilter<"Property"> | string
    country?: StringWithAggregatesFilter<"Property"> | string
    latitude?: FloatNullableWithAggregatesFilter<"Property"> | number | null
    longitude?: FloatNullableWithAggregatesFilter<"Property"> | number | null
    neighborhood?: StringNullableWithAggregatesFilter<"Property"> | string | null
    totalArea?: FloatWithAggregatesFilter<"Property"> | number
    landArea?: FloatNullableWithAggregatesFilter<"Property"> | number | null
    floorNumber?: IntNullableWithAggregatesFilter<"Property"> | number | null
    totalFloors?: IntNullableWithAggregatesFilter<"Property"> | number | null
    bedrooms?: IntNullableWithAggregatesFilter<"Property"> | number | null
    bathrooms?: IntNullableWithAggregatesFilter<"Property"> | number | null
    livingRooms?: IntNullableWithAggregatesFilter<"Property"> | number | null
    kitchen?: StringNullableWithAggregatesFilter<"Property"> | string | null
    yearBuilt?: IntNullableWithAggregatesFilter<"Property"> | number | null
    condition?: EnumPropertyConditionWithAggregatesFilter<"Property"> | $Enums.PropertyCondition
    furnished?: BoolNullableWithAggregatesFilter<"Property"> | boolean | null
    amenities?: StringNullableListFilter<"Property">
    utilities?: StringNullableListFilter<"Property">
    parking?: BoolNullableWithAggregatesFilter<"Property"> | boolean | null
    garden?: BoolNullableWithAggregatesFilter<"Property"> | boolean | null
    balcony?: BoolNullableWithAggregatesFilter<"Property"> | boolean | null
    elevator?: BoolNullableWithAggregatesFilter<"Property"> | boolean | null
    pool?: BoolNullableWithAggregatesFilter<"Property"> | boolean | null
    ac?: BoolNullableWithAggregatesFilter<"Property"> | boolean | null
    petPolicy?: StringNullableWithAggregatesFilter<"Property"> | string | null
    nearbyServices?: StringNullableListFilter<"Property">
    energyRating?: StringNullableWithAggregatesFilter<"Property"> | string | null
    leaseType?: EnumLeaseTypeNullableWithAggregatesFilter<"Property"> | $Enums.LeaseType | null
    minRentalPeriod?: StringNullableWithAggregatesFilter<"Property"> | string | null
    availableDate?: DateTimeNullableWithAggregatesFilter<"Property"> | Date | string | null
    status?: EnumPropertyStatusWithAggregatesFilter<"Property"> | $Enums.PropertyStatus
    isVerified?: BoolWithAggregatesFilter<"Property"> | boolean
    verifiedBy?: StringNullableWithAggregatesFilter<"Property"> | string | null
    verifiedAt?: DateTimeNullableWithAggregatesFilter<"Property"> | Date | string | null
    verificationNotes?: StringNullableWithAggregatesFilter<"Property"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Property"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Property"> | Date | string
    listedAt?: DateTimeNullableWithAggregatesFilter<"Property"> | Date | string | null
    soldAt?: DateTimeNullableWithAggregatesFilter<"Property"> | Date | string | null
    rentedAt?: DateTimeNullableWithAggregatesFilter<"Property"> | Date | string | null
    ownerId?: StringWithAggregatesFilter<"Property"> | string
    agentId?: StringNullableWithAggregatesFilter<"Property"> | string | null
    agencyId?: StringNullableWithAggregatesFilter<"Property"> | string | null
  }

  export type PropertyPhotoWhereInput = {
    AND?: PropertyPhotoWhereInput | PropertyPhotoWhereInput[]
    OR?: PropertyPhotoWhereInput[]
    NOT?: PropertyPhotoWhereInput | PropertyPhotoWhereInput[]
    id?: StringFilter<"PropertyPhoto"> | string
    url?: StringFilter<"PropertyPhoto"> | string
    caption?: StringNullableFilter<"PropertyPhoto"> | string | null
    altText?: StringNullableFilter<"PropertyPhoto"> | string | null
    isPrimary?: BoolFilter<"PropertyPhoto"> | boolean
    order?: IntFilter<"PropertyPhoto"> | number
    category?: StringNullableFilter<"PropertyPhoto"> | string | null
    createdAt?: DateTimeFilter<"PropertyPhoto"> | Date | string
    propertyId?: StringFilter<"PropertyPhoto"> | string
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
  }

  export type PropertyPhotoOrderByWithRelationInput = {
    id?: SortOrder
    url?: SortOrder
    caption?: SortOrderInput | SortOrder
    altText?: SortOrderInput | SortOrder
    isPrimary?: SortOrder
    order?: SortOrder
    category?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    propertyId?: SortOrder
    property?: PropertyOrderByWithRelationInput
  }

  export type PropertyPhotoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PropertyPhotoWhereInput | PropertyPhotoWhereInput[]
    OR?: PropertyPhotoWhereInput[]
    NOT?: PropertyPhotoWhereInput | PropertyPhotoWhereInput[]
    url?: StringFilter<"PropertyPhoto"> | string
    caption?: StringNullableFilter<"PropertyPhoto"> | string | null
    altText?: StringNullableFilter<"PropertyPhoto"> | string | null
    isPrimary?: BoolFilter<"PropertyPhoto"> | boolean
    order?: IntFilter<"PropertyPhoto"> | number
    category?: StringNullableFilter<"PropertyPhoto"> | string | null
    createdAt?: DateTimeFilter<"PropertyPhoto"> | Date | string
    propertyId?: StringFilter<"PropertyPhoto"> | string
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
  }, "id">

  export type PropertyPhotoOrderByWithAggregationInput = {
    id?: SortOrder
    url?: SortOrder
    caption?: SortOrderInput | SortOrder
    altText?: SortOrderInput | SortOrder
    isPrimary?: SortOrder
    order?: SortOrder
    category?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    propertyId?: SortOrder
    _count?: PropertyPhotoCountOrderByAggregateInput
    _avg?: PropertyPhotoAvgOrderByAggregateInput
    _max?: PropertyPhotoMaxOrderByAggregateInput
    _min?: PropertyPhotoMinOrderByAggregateInput
    _sum?: PropertyPhotoSumOrderByAggregateInput
  }

  export type PropertyPhotoScalarWhereWithAggregatesInput = {
    AND?: PropertyPhotoScalarWhereWithAggregatesInput | PropertyPhotoScalarWhereWithAggregatesInput[]
    OR?: PropertyPhotoScalarWhereWithAggregatesInput[]
    NOT?: PropertyPhotoScalarWhereWithAggregatesInput | PropertyPhotoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PropertyPhoto"> | string
    url?: StringWithAggregatesFilter<"PropertyPhoto"> | string
    caption?: StringNullableWithAggregatesFilter<"PropertyPhoto"> | string | null
    altText?: StringNullableWithAggregatesFilter<"PropertyPhoto"> | string | null
    isPrimary?: BoolWithAggregatesFilter<"PropertyPhoto"> | boolean
    order?: IntWithAggregatesFilter<"PropertyPhoto"> | number
    category?: StringNullableWithAggregatesFilter<"PropertyPhoto"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"PropertyPhoto"> | Date | string
    propertyId?: StringWithAggregatesFilter<"PropertyPhoto"> | string
  }

  export type PropertyVideoWhereInput = {
    AND?: PropertyVideoWhereInput | PropertyVideoWhereInput[]
    OR?: PropertyVideoWhereInput[]
    NOT?: PropertyVideoWhereInput | PropertyVideoWhereInput[]
    id?: StringFilter<"PropertyVideo"> | string
    url?: StringFilter<"PropertyVideo"> | string
    thumbnail?: StringNullableFilter<"PropertyVideo"> | string | null
    duration?: IntNullableFilter<"PropertyVideo"> | number | null
    caption?: StringNullableFilter<"PropertyVideo"> | string | null
    order?: IntFilter<"PropertyVideo"> | number
    createdAt?: DateTimeFilter<"PropertyVideo"> | Date | string
    propertyId?: StringFilter<"PropertyVideo"> | string
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
  }

  export type PropertyVideoOrderByWithRelationInput = {
    id?: SortOrder
    url?: SortOrder
    thumbnail?: SortOrderInput | SortOrder
    duration?: SortOrderInput | SortOrder
    caption?: SortOrderInput | SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    propertyId?: SortOrder
    property?: PropertyOrderByWithRelationInput
  }

  export type PropertyVideoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PropertyVideoWhereInput | PropertyVideoWhereInput[]
    OR?: PropertyVideoWhereInput[]
    NOT?: PropertyVideoWhereInput | PropertyVideoWhereInput[]
    url?: StringFilter<"PropertyVideo"> | string
    thumbnail?: StringNullableFilter<"PropertyVideo"> | string | null
    duration?: IntNullableFilter<"PropertyVideo"> | number | null
    caption?: StringNullableFilter<"PropertyVideo"> | string | null
    order?: IntFilter<"PropertyVideo"> | number
    createdAt?: DateTimeFilter<"PropertyVideo"> | Date | string
    propertyId?: StringFilter<"PropertyVideo"> | string
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
  }, "id">

  export type PropertyVideoOrderByWithAggregationInput = {
    id?: SortOrder
    url?: SortOrder
    thumbnail?: SortOrderInput | SortOrder
    duration?: SortOrderInput | SortOrder
    caption?: SortOrderInput | SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    propertyId?: SortOrder
    _count?: PropertyVideoCountOrderByAggregateInput
    _avg?: PropertyVideoAvgOrderByAggregateInput
    _max?: PropertyVideoMaxOrderByAggregateInput
    _min?: PropertyVideoMinOrderByAggregateInput
    _sum?: PropertyVideoSumOrderByAggregateInput
  }

  export type PropertyVideoScalarWhereWithAggregatesInput = {
    AND?: PropertyVideoScalarWhereWithAggregatesInput | PropertyVideoScalarWhereWithAggregatesInput[]
    OR?: PropertyVideoScalarWhereWithAggregatesInput[]
    NOT?: PropertyVideoScalarWhereWithAggregatesInput | PropertyVideoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PropertyVideo"> | string
    url?: StringWithAggregatesFilter<"PropertyVideo"> | string
    thumbnail?: StringNullableWithAggregatesFilter<"PropertyVideo"> | string | null
    duration?: IntNullableWithAggregatesFilter<"PropertyVideo"> | number | null
    caption?: StringNullableWithAggregatesFilter<"PropertyVideo"> | string | null
    order?: IntWithAggregatesFilter<"PropertyVideo"> | number
    createdAt?: DateTimeWithAggregatesFilter<"PropertyVideo"> | Date | string
    propertyId?: StringWithAggregatesFilter<"PropertyVideo"> | string
  }

  export type VirtualTourWhereInput = {
    AND?: VirtualTourWhereInput | VirtualTourWhereInput[]
    OR?: VirtualTourWhereInput[]
    NOT?: VirtualTourWhereInput | VirtualTourWhereInput[]
    id?: StringFilter<"VirtualTour"> | string
    url?: StringFilter<"VirtualTour"> | string
    platform?: StringNullableFilter<"VirtualTour"> | string | null
    caption?: StringNullableFilter<"VirtualTour"> | string | null
    order?: IntFilter<"VirtualTour"> | number
    createdAt?: DateTimeFilter<"VirtualTour"> | Date | string
    propertyId?: StringFilter<"VirtualTour"> | string
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
  }

  export type VirtualTourOrderByWithRelationInput = {
    id?: SortOrder
    url?: SortOrder
    platform?: SortOrderInput | SortOrder
    caption?: SortOrderInput | SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    propertyId?: SortOrder
    property?: PropertyOrderByWithRelationInput
  }

  export type VirtualTourWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: VirtualTourWhereInput | VirtualTourWhereInput[]
    OR?: VirtualTourWhereInput[]
    NOT?: VirtualTourWhereInput | VirtualTourWhereInput[]
    url?: StringFilter<"VirtualTour"> | string
    platform?: StringNullableFilter<"VirtualTour"> | string | null
    caption?: StringNullableFilter<"VirtualTour"> | string | null
    order?: IntFilter<"VirtualTour"> | number
    createdAt?: DateTimeFilter<"VirtualTour"> | Date | string
    propertyId?: StringFilter<"VirtualTour"> | string
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
  }, "id">

  export type VirtualTourOrderByWithAggregationInput = {
    id?: SortOrder
    url?: SortOrder
    platform?: SortOrderInput | SortOrder
    caption?: SortOrderInput | SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    propertyId?: SortOrder
    _count?: VirtualTourCountOrderByAggregateInput
    _avg?: VirtualTourAvgOrderByAggregateInput
    _max?: VirtualTourMaxOrderByAggregateInput
    _min?: VirtualTourMinOrderByAggregateInput
    _sum?: VirtualTourSumOrderByAggregateInput
  }

  export type VirtualTourScalarWhereWithAggregatesInput = {
    AND?: VirtualTourScalarWhereWithAggregatesInput | VirtualTourScalarWhereWithAggregatesInput[]
    OR?: VirtualTourScalarWhereWithAggregatesInput[]
    NOT?: VirtualTourScalarWhereWithAggregatesInput | VirtualTourScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"VirtualTour"> | string
    url?: StringWithAggregatesFilter<"VirtualTour"> | string
    platform?: StringNullableWithAggregatesFilter<"VirtualTour"> | string | null
    caption?: StringNullableWithAggregatesFilter<"VirtualTour"> | string | null
    order?: IntWithAggregatesFilter<"VirtualTour"> | number
    createdAt?: DateTimeWithAggregatesFilter<"VirtualTour"> | Date | string
    propertyId?: StringWithAggregatesFilter<"VirtualTour"> | string
  }

  export type PropertyViewWhereInput = {
    AND?: PropertyViewWhereInput | PropertyViewWhereInput[]
    OR?: PropertyViewWhereInput[]
    NOT?: PropertyViewWhereInput | PropertyViewWhereInput[]
    id?: StringFilter<"PropertyView"> | string
    viewedAt?: DateTimeFilter<"PropertyView"> | Date | string
    viewDuration?: IntNullableFilter<"PropertyView"> | number | null
    ipAddress?: StringNullableFilter<"PropertyView"> | string | null
    userAgent?: StringNullableFilter<"PropertyView"> | string | null
    userId?: StringFilter<"PropertyView"> | string
    propertyId?: StringFilter<"PropertyView"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
  }

  export type PropertyViewOrderByWithRelationInput = {
    id?: SortOrder
    viewedAt?: SortOrder
    viewDuration?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    userId?: SortOrder
    propertyId?: SortOrder
    user?: UserOrderByWithRelationInput
    property?: PropertyOrderByWithRelationInput
  }

  export type PropertyViewWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_propertyId?: PropertyViewUserIdPropertyIdCompoundUniqueInput
    AND?: PropertyViewWhereInput | PropertyViewWhereInput[]
    OR?: PropertyViewWhereInput[]
    NOT?: PropertyViewWhereInput | PropertyViewWhereInput[]
    viewedAt?: DateTimeFilter<"PropertyView"> | Date | string
    viewDuration?: IntNullableFilter<"PropertyView"> | number | null
    ipAddress?: StringNullableFilter<"PropertyView"> | string | null
    userAgent?: StringNullableFilter<"PropertyView"> | string | null
    userId?: StringFilter<"PropertyView"> | string
    propertyId?: StringFilter<"PropertyView"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
  }, "id" | "userId_propertyId">

  export type PropertyViewOrderByWithAggregationInput = {
    id?: SortOrder
    viewedAt?: SortOrder
    viewDuration?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    userId?: SortOrder
    propertyId?: SortOrder
    _count?: PropertyViewCountOrderByAggregateInput
    _avg?: PropertyViewAvgOrderByAggregateInput
    _max?: PropertyViewMaxOrderByAggregateInput
    _min?: PropertyViewMinOrderByAggregateInput
    _sum?: PropertyViewSumOrderByAggregateInput
  }

  export type PropertyViewScalarWhereWithAggregatesInput = {
    AND?: PropertyViewScalarWhereWithAggregatesInput | PropertyViewScalarWhereWithAggregatesInput[]
    OR?: PropertyViewScalarWhereWithAggregatesInput[]
    NOT?: PropertyViewScalarWhereWithAggregatesInput | PropertyViewScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PropertyView"> | string
    viewedAt?: DateTimeWithAggregatesFilter<"PropertyView"> | Date | string
    viewDuration?: IntNullableWithAggregatesFilter<"PropertyView"> | number | null
    ipAddress?: StringNullableWithAggregatesFilter<"PropertyView"> | string | null
    userAgent?: StringNullableWithAggregatesFilter<"PropertyView"> | string | null
    userId?: StringWithAggregatesFilter<"PropertyView"> | string
    propertyId?: StringWithAggregatesFilter<"PropertyView"> | string
  }

  export type FavoriteWhereInput = {
    AND?: FavoriteWhereInput | FavoriteWhereInput[]
    OR?: FavoriteWhereInput[]
    NOT?: FavoriteWhereInput | FavoriteWhereInput[]
    id?: StringFilter<"Favorite"> | string
    notes?: StringNullableFilter<"Favorite"> | string | null
    priority?: IntNullableFilter<"Favorite"> | number | null
    createdAt?: DateTimeFilter<"Favorite"> | Date | string
    userId?: StringFilter<"Favorite"> | string
    propertyId?: StringFilter<"Favorite"> | string
    listId?: StringNullableFilter<"Favorite"> | string | null
    favoriteListId?: StringNullableFilter<"Favorite"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
    list?: XOR<FavoriteListNullableScalarRelationFilter, FavoriteListWhereInput> | null
  }

  export type FavoriteOrderByWithRelationInput = {
    id?: SortOrder
    notes?: SortOrderInput | SortOrder
    priority?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    propertyId?: SortOrder
    listId?: SortOrderInput | SortOrder
    favoriteListId?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    property?: PropertyOrderByWithRelationInput
    list?: FavoriteListOrderByWithRelationInput
  }

  export type FavoriteWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_propertyId?: FavoriteUserIdPropertyIdCompoundUniqueInput
    AND?: FavoriteWhereInput | FavoriteWhereInput[]
    OR?: FavoriteWhereInput[]
    NOT?: FavoriteWhereInput | FavoriteWhereInput[]
    notes?: StringNullableFilter<"Favorite"> | string | null
    priority?: IntNullableFilter<"Favorite"> | number | null
    createdAt?: DateTimeFilter<"Favorite"> | Date | string
    userId?: StringFilter<"Favorite"> | string
    propertyId?: StringFilter<"Favorite"> | string
    listId?: StringNullableFilter<"Favorite"> | string | null
    favoriteListId?: StringNullableFilter<"Favorite"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
    list?: XOR<FavoriteListNullableScalarRelationFilter, FavoriteListWhereInput> | null
  }, "id" | "userId_propertyId">

  export type FavoriteOrderByWithAggregationInput = {
    id?: SortOrder
    notes?: SortOrderInput | SortOrder
    priority?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    propertyId?: SortOrder
    listId?: SortOrderInput | SortOrder
    favoriteListId?: SortOrderInput | SortOrder
    _count?: FavoriteCountOrderByAggregateInput
    _avg?: FavoriteAvgOrderByAggregateInput
    _max?: FavoriteMaxOrderByAggregateInput
    _min?: FavoriteMinOrderByAggregateInput
    _sum?: FavoriteSumOrderByAggregateInput
  }

  export type FavoriteScalarWhereWithAggregatesInput = {
    AND?: FavoriteScalarWhereWithAggregatesInput | FavoriteScalarWhereWithAggregatesInput[]
    OR?: FavoriteScalarWhereWithAggregatesInput[]
    NOT?: FavoriteScalarWhereWithAggregatesInput | FavoriteScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Favorite"> | string
    notes?: StringNullableWithAggregatesFilter<"Favorite"> | string | null
    priority?: IntNullableWithAggregatesFilter<"Favorite"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"Favorite"> | Date | string
    userId?: StringWithAggregatesFilter<"Favorite"> | string
    propertyId?: StringWithAggregatesFilter<"Favorite"> | string
    listId?: StringNullableWithAggregatesFilter<"Favorite"> | string | null
    favoriteListId?: StringNullableWithAggregatesFilter<"Favorite"> | string | null
  }

  export type FavoriteListWhereInput = {
    AND?: FavoriteListWhereInput | FavoriteListWhereInput[]
    OR?: FavoriteListWhereInput[]
    NOT?: FavoriteListWhereInput | FavoriteListWhereInput[]
    id?: StringFilter<"FavoriteList"> | string
    name?: StringFilter<"FavoriteList"> | string
    description?: StringNullableFilter<"FavoriteList"> | string | null
    isPublic?: BoolFilter<"FavoriteList"> | boolean
    isDefault?: BoolFilter<"FavoriteList"> | boolean
    createdAt?: DateTimeFilter<"FavoriteList"> | Date | string
    updatedAt?: DateTimeFilter<"FavoriteList"> | Date | string
    userId?: StringFilter<"FavoriteList"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    favorites?: FavoriteListRelationFilter
  }

  export type FavoriteListOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    isPublic?: SortOrder
    isDefault?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    user?: UserOrderByWithRelationInput
    favorites?: FavoriteOrderByRelationAggregateInput
  }

  export type FavoriteListWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FavoriteListWhereInput | FavoriteListWhereInput[]
    OR?: FavoriteListWhereInput[]
    NOT?: FavoriteListWhereInput | FavoriteListWhereInput[]
    name?: StringFilter<"FavoriteList"> | string
    description?: StringNullableFilter<"FavoriteList"> | string | null
    isPublic?: BoolFilter<"FavoriteList"> | boolean
    isDefault?: BoolFilter<"FavoriteList"> | boolean
    createdAt?: DateTimeFilter<"FavoriteList"> | Date | string
    updatedAt?: DateTimeFilter<"FavoriteList"> | Date | string
    userId?: StringFilter<"FavoriteList"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    favorites?: FavoriteListRelationFilter
  }, "id">

  export type FavoriteListOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    isPublic?: SortOrder
    isDefault?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    _count?: FavoriteListCountOrderByAggregateInput
    _max?: FavoriteListMaxOrderByAggregateInput
    _min?: FavoriteListMinOrderByAggregateInput
  }

  export type FavoriteListScalarWhereWithAggregatesInput = {
    AND?: FavoriteListScalarWhereWithAggregatesInput | FavoriteListScalarWhereWithAggregatesInput[]
    OR?: FavoriteListScalarWhereWithAggregatesInput[]
    NOT?: FavoriteListScalarWhereWithAggregatesInput | FavoriteListScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FavoriteList"> | string
    name?: StringWithAggregatesFilter<"FavoriteList"> | string
    description?: StringNullableWithAggregatesFilter<"FavoriteList"> | string | null
    isPublic?: BoolWithAggregatesFilter<"FavoriteList"> | boolean
    isDefault?: BoolWithAggregatesFilter<"FavoriteList"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"FavoriteList"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"FavoriteList"> | Date | string
    userId?: StringWithAggregatesFilter<"FavoriteList"> | string
  }

  export type PropertyRequestWhereInput = {
    AND?: PropertyRequestWhereInput | PropertyRequestWhereInput[]
    OR?: PropertyRequestWhereInput[]
    NOT?: PropertyRequestWhereInput | PropertyRequestWhereInput[]
    id?: StringFilter<"PropertyRequest"> | string
    type?: EnumRequestTypeFilter<"PropertyRequest"> | $Enums.RequestType
    message?: StringFilter<"PropertyRequest"> | string
    status?: EnumRequestStatusFilter<"PropertyRequest"> | $Enums.RequestStatus
    preferredDate?: DateTimeNullableFilter<"PropertyRequest"> | Date | string | null
    preferredTime?: StringNullableFilter<"PropertyRequest"> | string | null
    budget?: FloatNullableFilter<"PropertyRequest"> | number | null
    timeline?: StringNullableFilter<"PropertyRequest"> | string | null
    sellerResponse?: StringNullableFilter<"PropertyRequest"> | string | null
    responseDate?: DateTimeNullableFilter<"PropertyRequest"> | Date | string | null
    createdAt?: DateTimeFilter<"PropertyRequest"> | Date | string
    updatedAt?: DateTimeFilter<"PropertyRequest"> | Date | string
    buyerId?: StringFilter<"PropertyRequest"> | string
    propertyId?: StringFilter<"PropertyRequest"> | string
    userId?: StringFilter<"PropertyRequest"> | string
    buyer?: XOR<UserScalarRelationFilter, UserWhereInput>
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
    viewings?: PropertyViewingListRelationFilter
    payments?: PaymentListRelationFilter
  }

  export type PropertyRequestOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    message?: SortOrder
    status?: SortOrder
    preferredDate?: SortOrderInput | SortOrder
    preferredTime?: SortOrderInput | SortOrder
    budget?: SortOrderInput | SortOrder
    timeline?: SortOrderInput | SortOrder
    sellerResponse?: SortOrderInput | SortOrder
    responseDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    buyerId?: SortOrder
    propertyId?: SortOrder
    userId?: SortOrder
    buyer?: UserOrderByWithRelationInput
    property?: PropertyOrderByWithRelationInput
    viewings?: PropertyViewingOrderByRelationAggregateInput
    payments?: PaymentOrderByRelationAggregateInput
  }

  export type PropertyRequestWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PropertyRequestWhereInput | PropertyRequestWhereInput[]
    OR?: PropertyRequestWhereInput[]
    NOT?: PropertyRequestWhereInput | PropertyRequestWhereInput[]
    type?: EnumRequestTypeFilter<"PropertyRequest"> | $Enums.RequestType
    message?: StringFilter<"PropertyRequest"> | string
    status?: EnumRequestStatusFilter<"PropertyRequest"> | $Enums.RequestStatus
    preferredDate?: DateTimeNullableFilter<"PropertyRequest"> | Date | string | null
    preferredTime?: StringNullableFilter<"PropertyRequest"> | string | null
    budget?: FloatNullableFilter<"PropertyRequest"> | number | null
    timeline?: StringNullableFilter<"PropertyRequest"> | string | null
    sellerResponse?: StringNullableFilter<"PropertyRequest"> | string | null
    responseDate?: DateTimeNullableFilter<"PropertyRequest"> | Date | string | null
    createdAt?: DateTimeFilter<"PropertyRequest"> | Date | string
    updatedAt?: DateTimeFilter<"PropertyRequest"> | Date | string
    buyerId?: StringFilter<"PropertyRequest"> | string
    propertyId?: StringFilter<"PropertyRequest"> | string
    userId?: StringFilter<"PropertyRequest"> | string
    buyer?: XOR<UserScalarRelationFilter, UserWhereInput>
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
    viewings?: PropertyViewingListRelationFilter
    payments?: PaymentListRelationFilter
  }, "id">

  export type PropertyRequestOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    message?: SortOrder
    status?: SortOrder
    preferredDate?: SortOrderInput | SortOrder
    preferredTime?: SortOrderInput | SortOrder
    budget?: SortOrderInput | SortOrder
    timeline?: SortOrderInput | SortOrder
    sellerResponse?: SortOrderInput | SortOrder
    responseDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    buyerId?: SortOrder
    propertyId?: SortOrder
    userId?: SortOrder
    _count?: PropertyRequestCountOrderByAggregateInput
    _avg?: PropertyRequestAvgOrderByAggregateInput
    _max?: PropertyRequestMaxOrderByAggregateInput
    _min?: PropertyRequestMinOrderByAggregateInput
    _sum?: PropertyRequestSumOrderByAggregateInput
  }

  export type PropertyRequestScalarWhereWithAggregatesInput = {
    AND?: PropertyRequestScalarWhereWithAggregatesInput | PropertyRequestScalarWhereWithAggregatesInput[]
    OR?: PropertyRequestScalarWhereWithAggregatesInput[]
    NOT?: PropertyRequestScalarWhereWithAggregatesInput | PropertyRequestScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PropertyRequest"> | string
    type?: EnumRequestTypeWithAggregatesFilter<"PropertyRequest"> | $Enums.RequestType
    message?: StringWithAggregatesFilter<"PropertyRequest"> | string
    status?: EnumRequestStatusWithAggregatesFilter<"PropertyRequest"> | $Enums.RequestStatus
    preferredDate?: DateTimeNullableWithAggregatesFilter<"PropertyRequest"> | Date | string | null
    preferredTime?: StringNullableWithAggregatesFilter<"PropertyRequest"> | string | null
    budget?: FloatNullableWithAggregatesFilter<"PropertyRequest"> | number | null
    timeline?: StringNullableWithAggregatesFilter<"PropertyRequest"> | string | null
    sellerResponse?: StringNullableWithAggregatesFilter<"PropertyRequest"> | string | null
    responseDate?: DateTimeNullableWithAggregatesFilter<"PropertyRequest"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"PropertyRequest"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PropertyRequest"> | Date | string
    buyerId?: StringWithAggregatesFilter<"PropertyRequest"> | string
    propertyId?: StringWithAggregatesFilter<"PropertyRequest"> | string
    userId?: StringWithAggregatesFilter<"PropertyRequest"> | string
  }

  export type PropertyInquiryWhereInput = {
    AND?: PropertyInquiryWhereInput | PropertyInquiryWhereInput[]
    OR?: PropertyInquiryWhereInput[]
    NOT?: PropertyInquiryWhereInput | PropertyInquiryWhereInput[]
    id?: StringFilter<"PropertyInquiry"> | string
    subject?: StringFilter<"PropertyInquiry"> | string
    message?: StringFilter<"PropertyInquiry"> | string
    status?: StringFilter<"PropertyInquiry"> | string
    createdAt?: DateTimeFilter<"PropertyInquiry"> | Date | string
    updatedAt?: DateTimeFilter<"PropertyInquiry"> | Date | string
    userId?: StringFilter<"PropertyInquiry"> | string
    propertyId?: StringFilter<"PropertyInquiry"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
  }

  export type PropertyInquiryOrderByWithRelationInput = {
    id?: SortOrder
    subject?: SortOrder
    message?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    propertyId?: SortOrder
    user?: UserOrderByWithRelationInput
    property?: PropertyOrderByWithRelationInput
  }

  export type PropertyInquiryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PropertyInquiryWhereInput | PropertyInquiryWhereInput[]
    OR?: PropertyInquiryWhereInput[]
    NOT?: PropertyInquiryWhereInput | PropertyInquiryWhereInput[]
    subject?: StringFilter<"PropertyInquiry"> | string
    message?: StringFilter<"PropertyInquiry"> | string
    status?: StringFilter<"PropertyInquiry"> | string
    createdAt?: DateTimeFilter<"PropertyInquiry"> | Date | string
    updatedAt?: DateTimeFilter<"PropertyInquiry"> | Date | string
    userId?: StringFilter<"PropertyInquiry"> | string
    propertyId?: StringFilter<"PropertyInquiry"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
  }, "id">

  export type PropertyInquiryOrderByWithAggregationInput = {
    id?: SortOrder
    subject?: SortOrder
    message?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    propertyId?: SortOrder
    _count?: PropertyInquiryCountOrderByAggregateInput
    _max?: PropertyInquiryMaxOrderByAggregateInput
    _min?: PropertyInquiryMinOrderByAggregateInput
  }

  export type PropertyInquiryScalarWhereWithAggregatesInput = {
    AND?: PropertyInquiryScalarWhereWithAggregatesInput | PropertyInquiryScalarWhereWithAggregatesInput[]
    OR?: PropertyInquiryScalarWhereWithAggregatesInput[]
    NOT?: PropertyInquiryScalarWhereWithAggregatesInput | PropertyInquiryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PropertyInquiry"> | string
    subject?: StringWithAggregatesFilter<"PropertyInquiry"> | string
    message?: StringWithAggregatesFilter<"PropertyInquiry"> | string
    status?: StringWithAggregatesFilter<"PropertyInquiry"> | string
    createdAt?: DateTimeWithAggregatesFilter<"PropertyInquiry"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PropertyInquiry"> | Date | string
    userId?: StringWithAggregatesFilter<"PropertyInquiry"> | string
    propertyId?: StringWithAggregatesFilter<"PropertyInquiry"> | string
  }

  export type PropertyComparisonWhereInput = {
    AND?: PropertyComparisonWhereInput | PropertyComparisonWhereInput[]
    OR?: PropertyComparisonWhereInput[]
    NOT?: PropertyComparisonWhereInput | PropertyComparisonWhereInput[]
    id?: StringFilter<"PropertyComparison"> | string
    name?: StringFilter<"PropertyComparison"> | string
    notes?: StringNullableFilter<"PropertyComparison"> | string | null
    createdAt?: DateTimeFilter<"PropertyComparison"> | Date | string
    updatedAt?: DateTimeFilter<"PropertyComparison"> | Date | string
    userId?: StringFilter<"PropertyComparison"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    PropertyComparisonProperties?: PropertyComparisonPropertiesListRelationFilter
  }

  export type PropertyComparisonOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    user?: UserOrderByWithRelationInput
    PropertyComparisonProperties?: PropertyComparisonPropertiesOrderByRelationAggregateInput
  }

  export type PropertyComparisonWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PropertyComparisonWhereInput | PropertyComparisonWhereInput[]
    OR?: PropertyComparisonWhereInput[]
    NOT?: PropertyComparisonWhereInput | PropertyComparisonWhereInput[]
    name?: StringFilter<"PropertyComparison"> | string
    notes?: StringNullableFilter<"PropertyComparison"> | string | null
    createdAt?: DateTimeFilter<"PropertyComparison"> | Date | string
    updatedAt?: DateTimeFilter<"PropertyComparison"> | Date | string
    userId?: StringFilter<"PropertyComparison"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    PropertyComparisonProperties?: PropertyComparisonPropertiesListRelationFilter
  }, "id">

  export type PropertyComparisonOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    _count?: PropertyComparisonCountOrderByAggregateInput
    _max?: PropertyComparisonMaxOrderByAggregateInput
    _min?: PropertyComparisonMinOrderByAggregateInput
  }

  export type PropertyComparisonScalarWhereWithAggregatesInput = {
    AND?: PropertyComparisonScalarWhereWithAggregatesInput | PropertyComparisonScalarWhereWithAggregatesInput[]
    OR?: PropertyComparisonScalarWhereWithAggregatesInput[]
    NOT?: PropertyComparisonScalarWhereWithAggregatesInput | PropertyComparisonScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PropertyComparison"> | string
    name?: StringWithAggregatesFilter<"PropertyComparison"> | string
    notes?: StringNullableWithAggregatesFilter<"PropertyComparison"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"PropertyComparison"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PropertyComparison"> | Date | string
    userId?: StringWithAggregatesFilter<"PropertyComparison"> | string
  }

  export type PropertyComparisonPropertiesWhereInput = {
    AND?: PropertyComparisonPropertiesWhereInput | PropertyComparisonPropertiesWhereInput[]
    OR?: PropertyComparisonPropertiesWhereInput[]
    NOT?: PropertyComparisonPropertiesWhereInput | PropertyComparisonPropertiesWhereInput[]
    id?: StringFilter<"PropertyComparisonProperties"> | string
    propertyComparisonId?: StringFilter<"PropertyComparisonProperties"> | string
    propertyId?: StringFilter<"PropertyComparisonProperties"> | string
    propertyComparison?: XOR<PropertyComparisonScalarRelationFilter, PropertyComparisonWhereInput>
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
  }

  export type PropertyComparisonPropertiesOrderByWithRelationInput = {
    id?: SortOrder
    propertyComparisonId?: SortOrder
    propertyId?: SortOrder
    propertyComparison?: PropertyComparisonOrderByWithRelationInput
    property?: PropertyOrderByWithRelationInput
  }

  export type PropertyComparisonPropertiesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    propertyComparisonId_propertyId?: PropertyComparisonPropertiesPropertyComparisonIdPropertyIdCompoundUniqueInput
    AND?: PropertyComparisonPropertiesWhereInput | PropertyComparisonPropertiesWhereInput[]
    OR?: PropertyComparisonPropertiesWhereInput[]
    NOT?: PropertyComparisonPropertiesWhereInput | PropertyComparisonPropertiesWhereInput[]
    propertyComparisonId?: StringFilter<"PropertyComparisonProperties"> | string
    propertyId?: StringFilter<"PropertyComparisonProperties"> | string
    propertyComparison?: XOR<PropertyComparisonScalarRelationFilter, PropertyComparisonWhereInput>
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
  }, "id" | "propertyComparisonId_propertyId">

  export type PropertyComparisonPropertiesOrderByWithAggregationInput = {
    id?: SortOrder
    propertyComparisonId?: SortOrder
    propertyId?: SortOrder
    _count?: PropertyComparisonPropertiesCountOrderByAggregateInput
    _max?: PropertyComparisonPropertiesMaxOrderByAggregateInput
    _min?: PropertyComparisonPropertiesMinOrderByAggregateInput
  }

  export type PropertyComparisonPropertiesScalarWhereWithAggregatesInput = {
    AND?: PropertyComparisonPropertiesScalarWhereWithAggregatesInput | PropertyComparisonPropertiesScalarWhereWithAggregatesInput[]
    OR?: PropertyComparisonPropertiesScalarWhereWithAggregatesInput[]
    NOT?: PropertyComparisonPropertiesScalarWhereWithAggregatesInput | PropertyComparisonPropertiesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PropertyComparisonProperties"> | string
    propertyComparisonId?: StringWithAggregatesFilter<"PropertyComparisonProperties"> | string
    propertyId?: StringWithAggregatesFilter<"PropertyComparisonProperties"> | string
  }

  export type PropertyReviewWhereInput = {
    AND?: PropertyReviewWhereInput | PropertyReviewWhereInput[]
    OR?: PropertyReviewWhereInput[]
    NOT?: PropertyReviewWhereInput | PropertyReviewWhereInput[]
    id?: StringFilter<"PropertyReview"> | string
    rating?: IntFilter<"PropertyReview"> | number
    title?: StringFilter<"PropertyReview"> | string
    comment?: StringFilter<"PropertyReview"> | string
    isVerified?: BoolFilter<"PropertyReview"> | boolean
    createdAt?: DateTimeFilter<"PropertyReview"> | Date | string
    updatedAt?: DateTimeFilter<"PropertyReview"> | Date | string
    reviewerId?: StringFilter<"PropertyReview"> | string
    propertyId?: StringFilter<"PropertyReview"> | string
    userId?: StringFilter<"PropertyReview"> | string
    reviewer?: XOR<UserScalarRelationFilter, UserWhereInput>
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
  }

  export type PropertyReviewOrderByWithRelationInput = {
    id?: SortOrder
    rating?: SortOrder
    title?: SortOrder
    comment?: SortOrder
    isVerified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    reviewerId?: SortOrder
    propertyId?: SortOrder
    userId?: SortOrder
    reviewer?: UserOrderByWithRelationInput
    property?: PropertyOrderByWithRelationInput
  }

  export type PropertyReviewWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    reviewerId_propertyId?: PropertyReviewReviewerIdPropertyIdCompoundUniqueInput
    AND?: PropertyReviewWhereInput | PropertyReviewWhereInput[]
    OR?: PropertyReviewWhereInput[]
    NOT?: PropertyReviewWhereInput | PropertyReviewWhereInput[]
    rating?: IntFilter<"PropertyReview"> | number
    title?: StringFilter<"PropertyReview"> | string
    comment?: StringFilter<"PropertyReview"> | string
    isVerified?: BoolFilter<"PropertyReview"> | boolean
    createdAt?: DateTimeFilter<"PropertyReview"> | Date | string
    updatedAt?: DateTimeFilter<"PropertyReview"> | Date | string
    reviewerId?: StringFilter<"PropertyReview"> | string
    propertyId?: StringFilter<"PropertyReview"> | string
    userId?: StringFilter<"PropertyReview"> | string
    reviewer?: XOR<UserScalarRelationFilter, UserWhereInput>
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
  }, "id" | "reviewerId_propertyId">

  export type PropertyReviewOrderByWithAggregationInput = {
    id?: SortOrder
    rating?: SortOrder
    title?: SortOrder
    comment?: SortOrder
    isVerified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    reviewerId?: SortOrder
    propertyId?: SortOrder
    userId?: SortOrder
    _count?: PropertyReviewCountOrderByAggregateInput
    _avg?: PropertyReviewAvgOrderByAggregateInput
    _max?: PropertyReviewMaxOrderByAggregateInput
    _min?: PropertyReviewMinOrderByAggregateInput
    _sum?: PropertyReviewSumOrderByAggregateInput
  }

  export type PropertyReviewScalarWhereWithAggregatesInput = {
    AND?: PropertyReviewScalarWhereWithAggregatesInput | PropertyReviewScalarWhereWithAggregatesInput[]
    OR?: PropertyReviewScalarWhereWithAggregatesInput[]
    NOT?: PropertyReviewScalarWhereWithAggregatesInput | PropertyReviewScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PropertyReview"> | string
    rating?: IntWithAggregatesFilter<"PropertyReview"> | number
    title?: StringWithAggregatesFilter<"PropertyReview"> | string
    comment?: StringWithAggregatesFilter<"PropertyReview"> | string
    isVerified?: BoolWithAggregatesFilter<"PropertyReview"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"PropertyReview"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PropertyReview"> | Date | string
    reviewerId?: StringWithAggregatesFilter<"PropertyReview"> | string
    propertyId?: StringWithAggregatesFilter<"PropertyReview"> | string
    userId?: StringWithAggregatesFilter<"PropertyReview"> | string
  }

  export type PropertyCommentWhereInput = {
    AND?: PropertyCommentWhereInput | PropertyCommentWhereInput[]
    OR?: PropertyCommentWhereInput[]
    NOT?: PropertyCommentWhereInput | PropertyCommentWhereInput[]
    id?: StringFilter<"PropertyComment"> | string
    content?: StringFilter<"PropertyComment"> | string
    isPublic?: BoolFilter<"PropertyComment"> | boolean
    isModerated?: BoolFilter<"PropertyComment"> | boolean
    createdAt?: DateTimeFilter<"PropertyComment"> | Date | string
    updatedAt?: DateTimeFilter<"PropertyComment"> | Date | string
    authorId?: StringFilter<"PropertyComment"> | string
    propertyId?: StringFilter<"PropertyComment"> | string
    userId?: StringFilter<"PropertyComment"> | string
    author?: XOR<UserScalarRelationFilter, UserWhereInput>
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
  }

  export type PropertyCommentOrderByWithRelationInput = {
    id?: SortOrder
    content?: SortOrder
    isPublic?: SortOrder
    isModerated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    authorId?: SortOrder
    propertyId?: SortOrder
    userId?: SortOrder
    author?: UserOrderByWithRelationInput
    property?: PropertyOrderByWithRelationInput
  }

  export type PropertyCommentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PropertyCommentWhereInput | PropertyCommentWhereInput[]
    OR?: PropertyCommentWhereInput[]
    NOT?: PropertyCommentWhereInput | PropertyCommentWhereInput[]
    content?: StringFilter<"PropertyComment"> | string
    isPublic?: BoolFilter<"PropertyComment"> | boolean
    isModerated?: BoolFilter<"PropertyComment"> | boolean
    createdAt?: DateTimeFilter<"PropertyComment"> | Date | string
    updatedAt?: DateTimeFilter<"PropertyComment"> | Date | string
    authorId?: StringFilter<"PropertyComment"> | string
    propertyId?: StringFilter<"PropertyComment"> | string
    userId?: StringFilter<"PropertyComment"> | string
    author?: XOR<UserScalarRelationFilter, UserWhereInput>
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
  }, "id">

  export type PropertyCommentOrderByWithAggregationInput = {
    id?: SortOrder
    content?: SortOrder
    isPublic?: SortOrder
    isModerated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    authorId?: SortOrder
    propertyId?: SortOrder
    userId?: SortOrder
    _count?: PropertyCommentCountOrderByAggregateInput
    _max?: PropertyCommentMaxOrderByAggregateInput
    _min?: PropertyCommentMinOrderByAggregateInput
  }

  export type PropertyCommentScalarWhereWithAggregatesInput = {
    AND?: PropertyCommentScalarWhereWithAggregatesInput | PropertyCommentScalarWhereWithAggregatesInput[]
    OR?: PropertyCommentScalarWhereWithAggregatesInput[]
    NOT?: PropertyCommentScalarWhereWithAggregatesInput | PropertyCommentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PropertyComment"> | string
    content?: StringWithAggregatesFilter<"PropertyComment"> | string
    isPublic?: BoolWithAggregatesFilter<"PropertyComment"> | boolean
    isModerated?: BoolWithAggregatesFilter<"PropertyComment"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"PropertyComment"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PropertyComment"> | Date | string
    authorId?: StringWithAggregatesFilter<"PropertyComment"> | string
    propertyId?: StringWithAggregatesFilter<"PropertyComment"> | string
    userId?: StringWithAggregatesFilter<"PropertyComment"> | string
  }

  export type PropertyViewingWhereInput = {
    AND?: PropertyViewingWhereInput | PropertyViewingWhereInput[]
    OR?: PropertyViewingWhereInput[]
    NOT?: PropertyViewingWhereInput | PropertyViewingWhereInput[]
    id?: StringFilter<"PropertyViewing"> | string
    scheduledAt?: DateTimeFilter<"PropertyViewing"> | Date | string
    duration?: IntFilter<"PropertyViewing"> | number
    status?: StringFilter<"PropertyViewing"> | string
    notes?: StringNullableFilter<"PropertyViewing"> | string | null
    buyerNotes?: StringNullableFilter<"PropertyViewing"> | string | null
    location?: StringNullableFilter<"PropertyViewing"> | string | null
    createdAt?: DateTimeFilter<"PropertyViewing"> | Date | string
    updatedAt?: DateTimeFilter<"PropertyViewing"> | Date | string
    propertyId?: StringFilter<"PropertyViewing"> | string
    sellerId?: StringFilter<"PropertyViewing"> | string
    buyerId?: StringNullableFilter<"PropertyViewing"> | string | null
    requestId?: StringNullableFilter<"PropertyViewing"> | string | null
    propertyRequestId?: StringNullableFilter<"PropertyViewing"> | string | null
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
    seller?: XOR<UserScalarRelationFilter, UserWhereInput>
    buyer?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    request?: XOR<PropertyRequestNullableScalarRelationFilter, PropertyRequestWhereInput> | null
  }

  export type PropertyViewingOrderByWithRelationInput = {
    id?: SortOrder
    scheduledAt?: SortOrder
    duration?: SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    buyerNotes?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    propertyId?: SortOrder
    sellerId?: SortOrder
    buyerId?: SortOrderInput | SortOrder
    requestId?: SortOrderInput | SortOrder
    propertyRequestId?: SortOrderInput | SortOrder
    property?: PropertyOrderByWithRelationInput
    seller?: UserOrderByWithRelationInput
    buyer?: UserOrderByWithRelationInput
    request?: PropertyRequestOrderByWithRelationInput
  }

  export type PropertyViewingWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PropertyViewingWhereInput | PropertyViewingWhereInput[]
    OR?: PropertyViewingWhereInput[]
    NOT?: PropertyViewingWhereInput | PropertyViewingWhereInput[]
    scheduledAt?: DateTimeFilter<"PropertyViewing"> | Date | string
    duration?: IntFilter<"PropertyViewing"> | number
    status?: StringFilter<"PropertyViewing"> | string
    notes?: StringNullableFilter<"PropertyViewing"> | string | null
    buyerNotes?: StringNullableFilter<"PropertyViewing"> | string | null
    location?: StringNullableFilter<"PropertyViewing"> | string | null
    createdAt?: DateTimeFilter<"PropertyViewing"> | Date | string
    updatedAt?: DateTimeFilter<"PropertyViewing"> | Date | string
    propertyId?: StringFilter<"PropertyViewing"> | string
    sellerId?: StringFilter<"PropertyViewing"> | string
    buyerId?: StringNullableFilter<"PropertyViewing"> | string | null
    requestId?: StringNullableFilter<"PropertyViewing"> | string | null
    propertyRequestId?: StringNullableFilter<"PropertyViewing"> | string | null
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
    seller?: XOR<UserScalarRelationFilter, UserWhereInput>
    buyer?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    request?: XOR<PropertyRequestNullableScalarRelationFilter, PropertyRequestWhereInput> | null
  }, "id">

  export type PropertyViewingOrderByWithAggregationInput = {
    id?: SortOrder
    scheduledAt?: SortOrder
    duration?: SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    buyerNotes?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    propertyId?: SortOrder
    sellerId?: SortOrder
    buyerId?: SortOrderInput | SortOrder
    requestId?: SortOrderInput | SortOrder
    propertyRequestId?: SortOrderInput | SortOrder
    _count?: PropertyViewingCountOrderByAggregateInput
    _avg?: PropertyViewingAvgOrderByAggregateInput
    _max?: PropertyViewingMaxOrderByAggregateInput
    _min?: PropertyViewingMinOrderByAggregateInput
    _sum?: PropertyViewingSumOrderByAggregateInput
  }

  export type PropertyViewingScalarWhereWithAggregatesInput = {
    AND?: PropertyViewingScalarWhereWithAggregatesInput | PropertyViewingScalarWhereWithAggregatesInput[]
    OR?: PropertyViewingScalarWhereWithAggregatesInput[]
    NOT?: PropertyViewingScalarWhereWithAggregatesInput | PropertyViewingScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PropertyViewing"> | string
    scheduledAt?: DateTimeWithAggregatesFilter<"PropertyViewing"> | Date | string
    duration?: IntWithAggregatesFilter<"PropertyViewing"> | number
    status?: StringWithAggregatesFilter<"PropertyViewing"> | string
    notes?: StringNullableWithAggregatesFilter<"PropertyViewing"> | string | null
    buyerNotes?: StringNullableWithAggregatesFilter<"PropertyViewing"> | string | null
    location?: StringNullableWithAggregatesFilter<"PropertyViewing"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"PropertyViewing"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PropertyViewing"> | Date | string
    propertyId?: StringWithAggregatesFilter<"PropertyViewing"> | string
    sellerId?: StringWithAggregatesFilter<"PropertyViewing"> | string
    buyerId?: StringNullableWithAggregatesFilter<"PropertyViewing"> | string | null
    requestId?: StringNullableWithAggregatesFilter<"PropertyViewing"> | string | null
    propertyRequestId?: StringNullableWithAggregatesFilter<"PropertyViewing"> | string | null
  }

  export type PropertyAnalyticsWhereInput = {
    AND?: PropertyAnalyticsWhereInput | PropertyAnalyticsWhereInput[]
    OR?: PropertyAnalyticsWhereInput[]
    NOT?: PropertyAnalyticsWhereInput | PropertyAnalyticsWhereInput[]
    id?: StringFilter<"PropertyAnalytics"> | string
    totalViews?: IntFilter<"PropertyAnalytics"> | number
    uniqueViews?: IntFilter<"PropertyAnalytics"> | number
    totalFavorites?: IntFilter<"PropertyAnalytics"> | number
    totalRequests?: IntFilter<"PropertyAnalytics"> | number
    totalInquiries?: IntFilter<"PropertyAnalytics"> | number
    averageViewDuration?: FloatFilter<"PropertyAnalytics"> | number
    bounceRate?: FloatFilter<"PropertyAnalytics"> | number
    conversionRate?: FloatFilter<"PropertyAnalytics"> | number
    viewsThisWeek?: IntFilter<"PropertyAnalytics"> | number
    viewsThisMonth?: IntFilter<"PropertyAnalytics"> | number
    viewsThisYear?: IntFilter<"PropertyAnalytics"> | number
    lastCalculated?: DateTimeFilter<"PropertyAnalytics"> | Date | string
    createdAt?: DateTimeFilter<"PropertyAnalytics"> | Date | string
    updatedAt?: DateTimeFilter<"PropertyAnalytics"> | Date | string
    propertyId?: StringFilter<"PropertyAnalytics"> | string
    userId?: StringNullableFilter<"PropertyAnalytics"> | string | null
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
    User?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type PropertyAnalyticsOrderByWithRelationInput = {
    id?: SortOrder
    totalViews?: SortOrder
    uniqueViews?: SortOrder
    totalFavorites?: SortOrder
    totalRequests?: SortOrder
    totalInquiries?: SortOrder
    averageViewDuration?: SortOrder
    bounceRate?: SortOrder
    conversionRate?: SortOrder
    viewsThisWeek?: SortOrder
    viewsThisMonth?: SortOrder
    viewsThisYear?: SortOrder
    lastCalculated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    propertyId?: SortOrder
    userId?: SortOrderInput | SortOrder
    property?: PropertyOrderByWithRelationInput
    User?: UserOrderByWithRelationInput
  }

  export type PropertyAnalyticsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    propertyId?: string
    AND?: PropertyAnalyticsWhereInput | PropertyAnalyticsWhereInput[]
    OR?: PropertyAnalyticsWhereInput[]
    NOT?: PropertyAnalyticsWhereInput | PropertyAnalyticsWhereInput[]
    totalViews?: IntFilter<"PropertyAnalytics"> | number
    uniqueViews?: IntFilter<"PropertyAnalytics"> | number
    totalFavorites?: IntFilter<"PropertyAnalytics"> | number
    totalRequests?: IntFilter<"PropertyAnalytics"> | number
    totalInquiries?: IntFilter<"PropertyAnalytics"> | number
    averageViewDuration?: FloatFilter<"PropertyAnalytics"> | number
    bounceRate?: FloatFilter<"PropertyAnalytics"> | number
    conversionRate?: FloatFilter<"PropertyAnalytics"> | number
    viewsThisWeek?: IntFilter<"PropertyAnalytics"> | number
    viewsThisMonth?: IntFilter<"PropertyAnalytics"> | number
    viewsThisYear?: IntFilter<"PropertyAnalytics"> | number
    lastCalculated?: DateTimeFilter<"PropertyAnalytics"> | Date | string
    createdAt?: DateTimeFilter<"PropertyAnalytics"> | Date | string
    updatedAt?: DateTimeFilter<"PropertyAnalytics"> | Date | string
    userId?: StringNullableFilter<"PropertyAnalytics"> | string | null
    property?: XOR<PropertyScalarRelationFilter, PropertyWhereInput>
    User?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id" | "propertyId">

  export type PropertyAnalyticsOrderByWithAggregationInput = {
    id?: SortOrder
    totalViews?: SortOrder
    uniqueViews?: SortOrder
    totalFavorites?: SortOrder
    totalRequests?: SortOrder
    totalInquiries?: SortOrder
    averageViewDuration?: SortOrder
    bounceRate?: SortOrder
    conversionRate?: SortOrder
    viewsThisWeek?: SortOrder
    viewsThisMonth?: SortOrder
    viewsThisYear?: SortOrder
    lastCalculated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    propertyId?: SortOrder
    userId?: SortOrderInput | SortOrder
    _count?: PropertyAnalyticsCountOrderByAggregateInput
    _avg?: PropertyAnalyticsAvgOrderByAggregateInput
    _max?: PropertyAnalyticsMaxOrderByAggregateInput
    _min?: PropertyAnalyticsMinOrderByAggregateInput
    _sum?: PropertyAnalyticsSumOrderByAggregateInput
  }

  export type PropertyAnalyticsScalarWhereWithAggregatesInput = {
    AND?: PropertyAnalyticsScalarWhereWithAggregatesInput | PropertyAnalyticsScalarWhereWithAggregatesInput[]
    OR?: PropertyAnalyticsScalarWhereWithAggregatesInput[]
    NOT?: PropertyAnalyticsScalarWhereWithAggregatesInput | PropertyAnalyticsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PropertyAnalytics"> | string
    totalViews?: IntWithAggregatesFilter<"PropertyAnalytics"> | number
    uniqueViews?: IntWithAggregatesFilter<"PropertyAnalytics"> | number
    totalFavorites?: IntWithAggregatesFilter<"PropertyAnalytics"> | number
    totalRequests?: IntWithAggregatesFilter<"PropertyAnalytics"> | number
    totalInquiries?: IntWithAggregatesFilter<"PropertyAnalytics"> | number
    averageViewDuration?: FloatWithAggregatesFilter<"PropertyAnalytics"> | number
    bounceRate?: FloatWithAggregatesFilter<"PropertyAnalytics"> | number
    conversionRate?: FloatWithAggregatesFilter<"PropertyAnalytics"> | number
    viewsThisWeek?: IntWithAggregatesFilter<"PropertyAnalytics"> | number
    viewsThisMonth?: IntWithAggregatesFilter<"PropertyAnalytics"> | number
    viewsThisYear?: IntWithAggregatesFilter<"PropertyAnalytics"> | number
    lastCalculated?: DateTimeWithAggregatesFilter<"PropertyAnalytics"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"PropertyAnalytics"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PropertyAnalytics"> | Date | string
    propertyId?: StringWithAggregatesFilter<"PropertyAnalytics"> | string
    userId?: StringNullableWithAggregatesFilter<"PropertyAnalytics"> | string | null
  }

  export type AdminActionWhereInput = {
    AND?: AdminActionWhereInput | AdminActionWhereInput[]
    OR?: AdminActionWhereInput[]
    NOT?: AdminActionWhereInput | AdminActionWhereInput[]
    id?: StringFilter<"AdminAction"> | string
    action?: StringFilter<"AdminAction"> | string
    details?: StringNullableFilter<"AdminAction"> | string | null
    metadata?: JsonNullableFilter<"AdminAction">
    createdAt?: DateTimeFilter<"AdminAction"> | Date | string
    adminId?: StringFilter<"AdminAction"> | string
    propertyId?: StringNullableFilter<"AdminAction"> | string | null
    userId?: StringNullableFilter<"AdminAction"> | string | null
    agencyId?: StringNullableFilter<"AdminAction"> | string | null
    admin?: XOR<UserScalarRelationFilter, UserWhereInput>
    property?: XOR<PropertyNullableScalarRelationFilter, PropertyWhereInput> | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    agency?: XOR<AgencyNullableScalarRelationFilter, AgencyWhereInput> | null
  }

  export type AdminActionOrderByWithRelationInput = {
    id?: SortOrder
    action?: SortOrder
    details?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    adminId?: SortOrder
    propertyId?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    agencyId?: SortOrderInput | SortOrder
    admin?: UserOrderByWithRelationInput
    property?: PropertyOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    agency?: AgencyOrderByWithRelationInput
  }

  export type AdminActionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AdminActionWhereInput | AdminActionWhereInput[]
    OR?: AdminActionWhereInput[]
    NOT?: AdminActionWhereInput | AdminActionWhereInput[]
    action?: StringFilter<"AdminAction"> | string
    details?: StringNullableFilter<"AdminAction"> | string | null
    metadata?: JsonNullableFilter<"AdminAction">
    createdAt?: DateTimeFilter<"AdminAction"> | Date | string
    adminId?: StringFilter<"AdminAction"> | string
    propertyId?: StringNullableFilter<"AdminAction"> | string | null
    userId?: StringNullableFilter<"AdminAction"> | string | null
    agencyId?: StringNullableFilter<"AdminAction"> | string | null
    admin?: XOR<UserScalarRelationFilter, UserWhereInput>
    property?: XOR<PropertyNullableScalarRelationFilter, PropertyWhereInput> | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    agency?: XOR<AgencyNullableScalarRelationFilter, AgencyWhereInput> | null
  }, "id">

  export type AdminActionOrderByWithAggregationInput = {
    id?: SortOrder
    action?: SortOrder
    details?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    adminId?: SortOrder
    propertyId?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    agencyId?: SortOrderInput | SortOrder
    _count?: AdminActionCountOrderByAggregateInput
    _max?: AdminActionMaxOrderByAggregateInput
    _min?: AdminActionMinOrderByAggregateInput
  }

  export type AdminActionScalarWhereWithAggregatesInput = {
    AND?: AdminActionScalarWhereWithAggregatesInput | AdminActionScalarWhereWithAggregatesInput[]
    OR?: AdminActionScalarWhereWithAggregatesInput[]
    NOT?: AdminActionScalarWhereWithAggregatesInput | AdminActionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AdminAction"> | string
    action?: StringWithAggregatesFilter<"AdminAction"> | string
    details?: StringNullableWithAggregatesFilter<"AdminAction"> | string | null
    metadata?: JsonNullableWithAggregatesFilter<"AdminAction">
    createdAt?: DateTimeWithAggregatesFilter<"AdminAction"> | Date | string
    adminId?: StringWithAggregatesFilter<"AdminAction"> | string
    propertyId?: StringNullableWithAggregatesFilter<"AdminAction"> | string | null
    userId?: StringNullableWithAggregatesFilter<"AdminAction"> | string | null
    agencyId?: StringNullableWithAggregatesFilter<"AdminAction"> | string | null
  }

  export type NotificationWhereInput = {
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    id?: StringFilter<"Notification"> | string
    type?: EnumNotificationTypeFilter<"Notification"> | $Enums.NotificationType
    title?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    isRead?: BoolFilter<"Notification"> | boolean
    readAt?: DateTimeNullableFilter<"Notification"> | Date | string | null
    data?: JsonNullableFilter<"Notification">
    link?: StringNullableFilter<"Notification"> | string | null
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    userId?: StringFilter<"Notification"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type NotificationOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    title?: SortOrder
    message?: SortOrder
    isRead?: SortOrder
    readAt?: SortOrderInput | SortOrder
    data?: SortOrderInput | SortOrder
    link?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type NotificationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    type?: EnumNotificationTypeFilter<"Notification"> | $Enums.NotificationType
    title?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    isRead?: BoolFilter<"Notification"> | boolean
    readAt?: DateTimeNullableFilter<"Notification"> | Date | string | null
    data?: JsonNullableFilter<"Notification">
    link?: StringNullableFilter<"Notification"> | string | null
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    userId?: StringFilter<"Notification"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type NotificationOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    title?: SortOrder
    message?: SortOrder
    isRead?: SortOrder
    readAt?: SortOrderInput | SortOrder
    data?: SortOrderInput | SortOrder
    link?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    _count?: NotificationCountOrderByAggregateInput
    _max?: NotificationMaxOrderByAggregateInput
    _min?: NotificationMinOrderByAggregateInput
  }

  export type NotificationScalarWhereWithAggregatesInput = {
    AND?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    OR?: NotificationScalarWhereWithAggregatesInput[]
    NOT?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Notification"> | string
    type?: EnumNotificationTypeWithAggregatesFilter<"Notification"> | $Enums.NotificationType
    title?: StringWithAggregatesFilter<"Notification"> | string
    message?: StringWithAggregatesFilter<"Notification"> | string
    isRead?: BoolWithAggregatesFilter<"Notification"> | boolean
    readAt?: DateTimeNullableWithAggregatesFilter<"Notification"> | Date | string | null
    data?: JsonNullableWithAggregatesFilter<"Notification">
    link?: StringNullableWithAggregatesFilter<"Notification"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Notification"> | Date | string
    userId?: StringWithAggregatesFilter<"Notification"> | string
  }

  export type PaymentWhereInput = {
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    id?: StringFilter<"Payment"> | string
    amount?: FloatFilter<"Payment"> | number
    currency?: StringFilter<"Payment"> | string
    status?: EnumPaymentStatusFilter<"Payment"> | $Enums.PaymentStatus
    paymentMethod?: StringFilter<"Payment"> | string
    transactionId?: StringNullableFilter<"Payment"> | string | null
    description?: StringNullableFilter<"Payment"> | string | null
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
    userId?: StringFilter<"Payment"> | string
    propertyId?: StringNullableFilter<"Payment"> | string | null
    requestId?: StringNullableFilter<"Payment"> | string | null
    propertyRequestId?: StringNullableFilter<"Payment"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    property?: XOR<PropertyNullableScalarRelationFilter, PropertyWhereInput> | null
    request?: XOR<PropertyRequestNullableScalarRelationFilter, PropertyRequestWhereInput> | null
  }

  export type PaymentOrderByWithRelationInput = {
    id?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    transactionId?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    propertyId?: SortOrderInput | SortOrder
    requestId?: SortOrderInput | SortOrder
    propertyRequestId?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    property?: PropertyOrderByWithRelationInput
    request?: PropertyRequestOrderByWithRelationInput
  }

  export type PaymentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    amount?: FloatFilter<"Payment"> | number
    currency?: StringFilter<"Payment"> | string
    status?: EnumPaymentStatusFilter<"Payment"> | $Enums.PaymentStatus
    paymentMethod?: StringFilter<"Payment"> | string
    transactionId?: StringNullableFilter<"Payment"> | string | null
    description?: StringNullableFilter<"Payment"> | string | null
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
    userId?: StringFilter<"Payment"> | string
    propertyId?: StringNullableFilter<"Payment"> | string | null
    requestId?: StringNullableFilter<"Payment"> | string | null
    propertyRequestId?: StringNullableFilter<"Payment"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    property?: XOR<PropertyNullableScalarRelationFilter, PropertyWhereInput> | null
    request?: XOR<PropertyRequestNullableScalarRelationFilter, PropertyRequestWhereInput> | null
  }, "id">

  export type PaymentOrderByWithAggregationInput = {
    id?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    transactionId?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    propertyId?: SortOrderInput | SortOrder
    requestId?: SortOrderInput | SortOrder
    propertyRequestId?: SortOrderInput | SortOrder
    _count?: PaymentCountOrderByAggregateInput
    _avg?: PaymentAvgOrderByAggregateInput
    _max?: PaymentMaxOrderByAggregateInput
    _min?: PaymentMinOrderByAggregateInput
    _sum?: PaymentSumOrderByAggregateInput
  }

  export type PaymentScalarWhereWithAggregatesInput = {
    AND?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    OR?: PaymentScalarWhereWithAggregatesInput[]
    NOT?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Payment"> | string
    amount?: FloatWithAggregatesFilter<"Payment"> | number
    currency?: StringWithAggregatesFilter<"Payment"> | string
    status?: EnumPaymentStatusWithAggregatesFilter<"Payment"> | $Enums.PaymentStatus
    paymentMethod?: StringWithAggregatesFilter<"Payment"> | string
    transactionId?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    description?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Payment"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Payment"> | Date | string
    userId?: StringWithAggregatesFilter<"Payment"> | string
    propertyId?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    requestId?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    propertyRequestId?: StringNullableWithAggregatesFilter<"Payment"> | string | null
  }

  export type SavedSearchWhereInput = {
    AND?: SavedSearchWhereInput | SavedSearchWhereInput[]
    OR?: SavedSearchWhereInput[]
    NOT?: SavedSearchWhereInput | SavedSearchWhereInput[]
    id?: StringFilter<"SavedSearch"> | string
    name?: StringFilter<"SavedSearch"> | string
    description?: StringNullableFilter<"SavedSearch"> | string | null
    propertyTypes?: EnumPropertyTypeNullableListFilter<"SavedSearch">
    transactionTypes?: EnumTransactionTypeNullableListFilter<"SavedSearch">
    minPrice?: FloatNullableFilter<"SavedSearch"> | number | null
    maxPrice?: FloatNullableFilter<"SavedSearch"> | number | null
    minArea?: FloatNullableFilter<"SavedSearch"> | number | null
    maxArea?: FloatNullableFilter<"SavedSearch"> | number | null
    bedrooms?: IntNullableFilter<"SavedSearch"> | number | null
    bathrooms?: IntNullableFilter<"SavedSearch"> | number | null
    cities?: StringNullableListFilter<"SavedSearch">
    neighborhoods?: StringNullableListFilter<"SavedSearch">
    isActive?: BoolFilter<"SavedSearch"> | boolean
    notifyOnMatch?: BoolFilter<"SavedSearch"> | boolean
    createdAt?: DateTimeFilter<"SavedSearch"> | Date | string
    updatedAt?: DateTimeFilter<"SavedSearch"> | Date | string
    userId?: StringFilter<"SavedSearch"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type SavedSearchOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    propertyTypes?: SortOrder
    transactionTypes?: SortOrder
    minPrice?: SortOrderInput | SortOrder
    maxPrice?: SortOrderInput | SortOrder
    minArea?: SortOrderInput | SortOrder
    maxArea?: SortOrderInput | SortOrder
    bedrooms?: SortOrderInput | SortOrder
    bathrooms?: SortOrderInput | SortOrder
    cities?: SortOrder
    neighborhoods?: SortOrder
    isActive?: SortOrder
    notifyOnMatch?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type SavedSearchWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SavedSearchWhereInput | SavedSearchWhereInput[]
    OR?: SavedSearchWhereInput[]
    NOT?: SavedSearchWhereInput | SavedSearchWhereInput[]
    name?: StringFilter<"SavedSearch"> | string
    description?: StringNullableFilter<"SavedSearch"> | string | null
    propertyTypes?: EnumPropertyTypeNullableListFilter<"SavedSearch">
    transactionTypes?: EnumTransactionTypeNullableListFilter<"SavedSearch">
    minPrice?: FloatNullableFilter<"SavedSearch"> | number | null
    maxPrice?: FloatNullableFilter<"SavedSearch"> | number | null
    minArea?: FloatNullableFilter<"SavedSearch"> | number | null
    maxArea?: FloatNullableFilter<"SavedSearch"> | number | null
    bedrooms?: IntNullableFilter<"SavedSearch"> | number | null
    bathrooms?: IntNullableFilter<"SavedSearch"> | number | null
    cities?: StringNullableListFilter<"SavedSearch">
    neighborhoods?: StringNullableListFilter<"SavedSearch">
    isActive?: BoolFilter<"SavedSearch"> | boolean
    notifyOnMatch?: BoolFilter<"SavedSearch"> | boolean
    createdAt?: DateTimeFilter<"SavedSearch"> | Date | string
    updatedAt?: DateTimeFilter<"SavedSearch"> | Date | string
    userId?: StringFilter<"SavedSearch"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type SavedSearchOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    propertyTypes?: SortOrder
    transactionTypes?: SortOrder
    minPrice?: SortOrderInput | SortOrder
    maxPrice?: SortOrderInput | SortOrder
    minArea?: SortOrderInput | SortOrder
    maxArea?: SortOrderInput | SortOrder
    bedrooms?: SortOrderInput | SortOrder
    bathrooms?: SortOrderInput | SortOrder
    cities?: SortOrder
    neighborhoods?: SortOrder
    isActive?: SortOrder
    notifyOnMatch?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    _count?: SavedSearchCountOrderByAggregateInput
    _avg?: SavedSearchAvgOrderByAggregateInput
    _max?: SavedSearchMaxOrderByAggregateInput
    _min?: SavedSearchMinOrderByAggregateInput
    _sum?: SavedSearchSumOrderByAggregateInput
  }

  export type SavedSearchScalarWhereWithAggregatesInput = {
    AND?: SavedSearchScalarWhereWithAggregatesInput | SavedSearchScalarWhereWithAggregatesInput[]
    OR?: SavedSearchScalarWhereWithAggregatesInput[]
    NOT?: SavedSearchScalarWhereWithAggregatesInput | SavedSearchScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SavedSearch"> | string
    name?: StringWithAggregatesFilter<"SavedSearch"> | string
    description?: StringNullableWithAggregatesFilter<"SavedSearch"> | string | null
    propertyTypes?: EnumPropertyTypeNullableListFilter<"SavedSearch">
    transactionTypes?: EnumTransactionTypeNullableListFilter<"SavedSearch">
    minPrice?: FloatNullableWithAggregatesFilter<"SavedSearch"> | number | null
    maxPrice?: FloatNullableWithAggregatesFilter<"SavedSearch"> | number | null
    minArea?: FloatNullableWithAggregatesFilter<"SavedSearch"> | number | null
    maxArea?: FloatNullableWithAggregatesFilter<"SavedSearch"> | number | null
    bedrooms?: IntNullableWithAggregatesFilter<"SavedSearch"> | number | null
    bathrooms?: IntNullableWithAggregatesFilter<"SavedSearch"> | number | null
    cities?: StringNullableListFilter<"SavedSearch">
    neighborhoods?: StringNullableListFilter<"SavedSearch">
    isActive?: BoolWithAggregatesFilter<"SavedSearch"> | boolean
    notifyOnMatch?: BoolWithAggregatesFilter<"SavedSearch"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"SavedSearch"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"SavedSearch"> | Date | string
    userId?: StringWithAggregatesFilter<"SavedSearch"> | string
  }

  export type PlatformSettingWhereInput = {
    AND?: PlatformSettingWhereInput | PlatformSettingWhereInput[]
    OR?: PlatformSettingWhereInput[]
    NOT?: PlatformSettingWhereInput | PlatformSettingWhereInput[]
    id?: StringFilter<"PlatformSetting"> | string
    key?: StringFilter<"PlatformSetting"> | string
    value?: StringFilter<"PlatformSetting"> | string
    description?: StringNullableFilter<"PlatformSetting"> | string | null
    category?: StringFilter<"PlatformSetting"> | string
    dataType?: StringFilter<"PlatformSetting"> | string
    isPublic?: BoolFilter<"PlatformSetting"> | boolean
    createdAt?: DateTimeFilter<"PlatformSetting"> | Date | string
    updatedAt?: DateTimeFilter<"PlatformSetting"> | Date | string
  }

  export type PlatformSettingOrderByWithRelationInput = {
    id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    description?: SortOrderInput | SortOrder
    category?: SortOrder
    dataType?: SortOrder
    isPublic?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PlatformSettingWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    key?: string
    AND?: PlatformSettingWhereInput | PlatformSettingWhereInput[]
    OR?: PlatformSettingWhereInput[]
    NOT?: PlatformSettingWhereInput | PlatformSettingWhereInput[]
    value?: StringFilter<"PlatformSetting"> | string
    description?: StringNullableFilter<"PlatformSetting"> | string | null
    category?: StringFilter<"PlatformSetting"> | string
    dataType?: StringFilter<"PlatformSetting"> | string
    isPublic?: BoolFilter<"PlatformSetting"> | boolean
    createdAt?: DateTimeFilter<"PlatformSetting"> | Date | string
    updatedAt?: DateTimeFilter<"PlatformSetting"> | Date | string
  }, "id" | "key">

  export type PlatformSettingOrderByWithAggregationInput = {
    id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    description?: SortOrderInput | SortOrder
    category?: SortOrder
    dataType?: SortOrder
    isPublic?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PlatformSettingCountOrderByAggregateInput
    _max?: PlatformSettingMaxOrderByAggregateInput
    _min?: PlatformSettingMinOrderByAggregateInput
  }

  export type PlatformSettingScalarWhereWithAggregatesInput = {
    AND?: PlatformSettingScalarWhereWithAggregatesInput | PlatformSettingScalarWhereWithAggregatesInput[]
    OR?: PlatformSettingScalarWhereWithAggregatesInput[]
    NOT?: PlatformSettingScalarWhereWithAggregatesInput | PlatformSettingScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PlatformSetting"> | string
    key?: StringWithAggregatesFilter<"PlatformSetting"> | string
    value?: StringWithAggregatesFilter<"PlatformSetting"> | string
    description?: StringNullableWithAggregatesFilter<"PlatformSetting"> | string | null
    category?: StringWithAggregatesFilter<"PlatformSetting"> | string
    dataType?: StringWithAggregatesFilter<"PlatformSetting"> | string
    isPublic?: BoolWithAggregatesFilter<"PlatformSetting"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"PlatformSetting"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PlatformSetting"> | Date | string
  }

  export type PlatformAnalyticsWhereInput = {
    AND?: PlatformAnalyticsWhereInput | PlatformAnalyticsWhereInput[]
    OR?: PlatformAnalyticsWhereInput[]
    NOT?: PlatformAnalyticsWhereInput | PlatformAnalyticsWhereInput[]
    id?: StringFilter<"PlatformAnalytics"> | string
    totalUsers?: IntFilter<"PlatformAnalytics"> | number
    activeUsers?: IntFilter<"PlatformAnalytics"> | number
    totalProperties?: IntFilter<"PlatformAnalytics"> | number
    activeProperties?: IntFilter<"PlatformAnalytics"> | number
    totalSales?: IntFilter<"PlatformAnalytics"> | number
    totalRentals?: IntFilter<"PlatformAnalytics"> | number
    totalRevenue?: FloatFilter<"PlatformAnalytics"> | number
    totalViews?: IntFilter<"PlatformAnalytics"> | number
    totalRequests?: IntFilter<"PlatformAnalytics"> | number
    totalFavorites?: IntFilter<"PlatformAnalytics"> | number
    date?: DateTimeFilter<"PlatformAnalytics"> | Date | string
    createdAt?: DateTimeFilter<"PlatformAnalytics"> | Date | string
    updatedAt?: DateTimeFilter<"PlatformAnalytics"> | Date | string
  }

  export type PlatformAnalyticsOrderByWithRelationInput = {
    id?: SortOrder
    totalUsers?: SortOrder
    activeUsers?: SortOrder
    totalProperties?: SortOrder
    activeProperties?: SortOrder
    totalSales?: SortOrder
    totalRentals?: SortOrder
    totalRevenue?: SortOrder
    totalViews?: SortOrder
    totalRequests?: SortOrder
    totalFavorites?: SortOrder
    date?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PlatformAnalyticsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PlatformAnalyticsWhereInput | PlatformAnalyticsWhereInput[]
    OR?: PlatformAnalyticsWhereInput[]
    NOT?: PlatformAnalyticsWhereInput | PlatformAnalyticsWhereInput[]
    totalUsers?: IntFilter<"PlatformAnalytics"> | number
    activeUsers?: IntFilter<"PlatformAnalytics"> | number
    totalProperties?: IntFilter<"PlatformAnalytics"> | number
    activeProperties?: IntFilter<"PlatformAnalytics"> | number
    totalSales?: IntFilter<"PlatformAnalytics"> | number
    totalRentals?: IntFilter<"PlatformAnalytics"> | number
    totalRevenue?: FloatFilter<"PlatformAnalytics"> | number
    totalViews?: IntFilter<"PlatformAnalytics"> | number
    totalRequests?: IntFilter<"PlatformAnalytics"> | number
    totalFavorites?: IntFilter<"PlatformAnalytics"> | number
    date?: DateTimeFilter<"PlatformAnalytics"> | Date | string
    createdAt?: DateTimeFilter<"PlatformAnalytics"> | Date | string
    updatedAt?: DateTimeFilter<"PlatformAnalytics"> | Date | string
  }, "id">

  export type PlatformAnalyticsOrderByWithAggregationInput = {
    id?: SortOrder
    totalUsers?: SortOrder
    activeUsers?: SortOrder
    totalProperties?: SortOrder
    activeProperties?: SortOrder
    totalSales?: SortOrder
    totalRentals?: SortOrder
    totalRevenue?: SortOrder
    totalViews?: SortOrder
    totalRequests?: SortOrder
    totalFavorites?: SortOrder
    date?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PlatformAnalyticsCountOrderByAggregateInput
    _avg?: PlatformAnalyticsAvgOrderByAggregateInput
    _max?: PlatformAnalyticsMaxOrderByAggregateInput
    _min?: PlatformAnalyticsMinOrderByAggregateInput
    _sum?: PlatformAnalyticsSumOrderByAggregateInput
  }

  export type PlatformAnalyticsScalarWhereWithAggregatesInput = {
    AND?: PlatformAnalyticsScalarWhereWithAggregatesInput | PlatformAnalyticsScalarWhereWithAggregatesInput[]
    OR?: PlatformAnalyticsScalarWhereWithAggregatesInput[]
    NOT?: PlatformAnalyticsScalarWhereWithAggregatesInput | PlatformAnalyticsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PlatformAnalytics"> | string
    totalUsers?: IntWithAggregatesFilter<"PlatformAnalytics"> | number
    activeUsers?: IntWithAggregatesFilter<"PlatformAnalytics"> | number
    totalProperties?: IntWithAggregatesFilter<"PlatformAnalytics"> | number
    activeProperties?: IntWithAggregatesFilter<"PlatformAnalytics"> | number
    totalSales?: IntWithAggregatesFilter<"PlatformAnalytics"> | number
    totalRentals?: IntWithAggregatesFilter<"PlatformAnalytics"> | number
    totalRevenue?: FloatWithAggregatesFilter<"PlatformAnalytics"> | number
    totalViews?: IntWithAggregatesFilter<"PlatformAnalytics"> | number
    totalRequests?: IntWithAggregatesFilter<"PlatformAnalytics"> | number
    totalFavorites?: IntWithAggregatesFilter<"PlatformAnalytics"> | number
    date?: DateTimeWithAggregatesFilter<"PlatformAnalytics"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"PlatformAnalytics"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PlatformAnalytics"> | Date | string
  }

  export type UserCreateInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    viewedProperties?: PropertyViewCreateNestedManyWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListCreateNestedManyWithoutUserInput
    requests?: PropertyRequestCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsCreateNestedManyWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    agencyRoles?: AgencyRoleCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    viewedProperties?: PropertyViewUncheckedCreateNestedManyWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListUncheckedCreateNestedManyWithoutUserInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonUncheckedCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyUncheckedCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyUncheckedCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingUncheckedCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingUncheckedCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutUserInput
    agencyRoles?: AgencyRoleUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberUncheckedCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewedProperties?: PropertyViewUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUpdateManyWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    agencyRoles?: AgencyRoleUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    viewedProperties?: PropertyViewUncheckedUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUncheckedUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUncheckedUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUncheckedUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUncheckedUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUncheckedUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUncheckedUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUncheckedUpdateManyWithoutUserNestedInput
    agencyRoles?: AgencyRoleUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUncheckedUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AgencyCreateInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    activityType: $Enums.AgencyActivityType
    businessPhone: string
    businessEmail: string
    website?: string | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    businessRegistrationNumber?: string | null
    activityLicense?: string | null
    taxId?: string | null
    bankAccountInfo?: string | null
    isVerified?: boolean
    isActive?: boolean
    isSuspended?: boolean
    suspensionReason?: string | null
    suspendedAt?: Date | string | null
    suspendedBy?: string | null
    verificationStatus?: $Enums.AgencyVerificationStatus
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    verificationDocuments?: AgencyVerificationDocumentCreateNestedManyWithoutAgencyInput
    teamMembers?: AgencyMemberCreateNestedManyWithoutAgencyInput
    teamRoles?: AgencyRoleCreateNestedManyWithoutAgencyInput
    properties?: PropertyCreateNestedManyWithoutAgencyInput
    performance?: AgencyPerformanceCreateNestedOneWithoutAgencyInput
    inquiries?: AgencyInquiryCreateNestedManyWithoutAgencyInput
    adminActions?: AdminActionCreateNestedManyWithoutAgencyInput
    User?: UserCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    activityType: $Enums.AgencyActivityType
    businessPhone: string
    businessEmail: string
    website?: string | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    businessRegistrationNumber?: string | null
    activityLicense?: string | null
    taxId?: string | null
    bankAccountInfo?: string | null
    isVerified?: boolean
    isActive?: boolean
    isSuspended?: boolean
    suspensionReason?: string | null
    suspendedAt?: Date | string | null
    suspendedBy?: string | null
    verificationStatus?: $Enums.AgencyVerificationStatus
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    verificationDocuments?: AgencyVerificationDocumentUncheckedCreateNestedManyWithoutAgencyInput
    teamMembers?: AgencyMemberUncheckedCreateNestedManyWithoutAgencyInput
    teamRoles?: AgencyRoleUncheckedCreateNestedManyWithoutAgencyInput
    properties?: PropertyUncheckedCreateNestedManyWithoutAgencyInput
    performance?: AgencyPerformanceUncheckedCreateNestedOneWithoutAgencyInput
    inquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutAgencyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAgencyInput
    User?: UserUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    activityType?: EnumAgencyActivityTypeFieldUpdateOperationsInput | $Enums.AgencyActivityType
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    businessRegistrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    activityLicense?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    bankAccountInfo?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    suspensionReason?: NullableStringFieldUpdateOperationsInput | string | null
    suspendedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    suspendedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumAgencyVerificationStatusFieldUpdateOperationsInput | $Enums.AgencyVerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationDocuments?: AgencyVerificationDocumentUpdateManyWithoutAgencyNestedInput
    teamMembers?: AgencyMemberUpdateManyWithoutAgencyNestedInput
    teamRoles?: AgencyRoleUpdateManyWithoutAgencyNestedInput
    properties?: PropertyUpdateManyWithoutAgencyNestedInput
    performance?: AgencyPerformanceUpdateOneWithoutAgencyNestedInput
    inquiries?: AgencyInquiryUpdateManyWithoutAgencyNestedInput
    adminActions?: AdminActionUpdateManyWithoutAgencyNestedInput
    User?: UserUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    activityType?: EnumAgencyActivityTypeFieldUpdateOperationsInput | $Enums.AgencyActivityType
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    businessRegistrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    activityLicense?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    bankAccountInfo?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    suspensionReason?: NullableStringFieldUpdateOperationsInput | string | null
    suspendedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    suspendedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumAgencyVerificationStatusFieldUpdateOperationsInput | $Enums.AgencyVerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationDocuments?: AgencyVerificationDocumentUncheckedUpdateManyWithoutAgencyNestedInput
    teamMembers?: AgencyMemberUncheckedUpdateManyWithoutAgencyNestedInput
    teamRoles?: AgencyRoleUncheckedUpdateManyWithoutAgencyNestedInput
    properties?: PropertyUncheckedUpdateManyWithoutAgencyNestedInput
    performance?: AgencyPerformanceUncheckedUpdateOneWithoutAgencyNestedInput
    inquiries?: AgencyInquiryUncheckedUpdateManyWithoutAgencyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAgencyNestedInput
    User?: UserUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    activityType: $Enums.AgencyActivityType
    businessPhone: string
    businessEmail: string
    website?: string | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    businessRegistrationNumber?: string | null
    activityLicense?: string | null
    taxId?: string | null
    bankAccountInfo?: string | null
    isVerified?: boolean
    isActive?: boolean
    isSuspended?: boolean
    suspensionReason?: string | null
    suspendedAt?: Date | string | null
    suspendedBy?: string | null
    verificationStatus?: $Enums.AgencyVerificationStatus
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AgencyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    activityType?: EnumAgencyActivityTypeFieldUpdateOperationsInput | $Enums.AgencyActivityType
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    businessRegistrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    activityLicense?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    bankAccountInfo?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    suspensionReason?: NullableStringFieldUpdateOperationsInput | string | null
    suspendedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    suspendedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumAgencyVerificationStatusFieldUpdateOperationsInput | $Enums.AgencyVerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    activityType?: EnumAgencyActivityTypeFieldUpdateOperationsInput | $Enums.AgencyActivityType
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    businessRegistrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    activityLicense?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    bankAccountInfo?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    suspensionReason?: NullableStringFieldUpdateOperationsInput | string | null
    suspendedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    suspendedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumAgencyVerificationStatusFieldUpdateOperationsInput | $Enums.AgencyVerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyMemberCreateInput = {
    id?: string
    role: $Enums.UserRole
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    joinedAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutAgencyMemberInput
    agency: AgencyCreateNestedOneWithoutTeamMembersInput
    performance?: AgentPerformanceCreateNestedOneWithoutAgentInput
  }

  export type AgencyMemberUncheckedCreateInput = {
    id?: string
    userId: string
    agencyId: string
    role: $Enums.UserRole
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    joinedAt?: Date | string
    updatedAt?: Date | string
    performance?: AgentPerformanceUncheckedCreateNestedOneWithoutAgentInput
  }

  export type AgencyMemberUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    canManageProperties?: BoolFieldUpdateOperationsInput | boolean
    canManageTeam?: BoolFieldUpdateOperationsInput | boolean
    canViewAllData?: BoolFieldUpdateOperationsInput | boolean
    canContactClients?: BoolFieldUpdateOperationsInput | boolean
    canScheduleViewings?: BoolFieldUpdateOperationsInput | boolean
    canSetPrices?: BoolFieldUpdateOperationsInput | boolean
    canUploadDocuments?: BoolFieldUpdateOperationsInput | boolean
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutAgencyMemberNestedInput
    agency?: AgencyUpdateOneRequiredWithoutTeamMembersNestedInput
    performance?: AgentPerformanceUpdateOneWithoutAgentNestedInput
  }

  export type AgencyMemberUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    canManageProperties?: BoolFieldUpdateOperationsInput | boolean
    canManageTeam?: BoolFieldUpdateOperationsInput | boolean
    canViewAllData?: BoolFieldUpdateOperationsInput | boolean
    canContactClients?: BoolFieldUpdateOperationsInput | boolean
    canScheduleViewings?: BoolFieldUpdateOperationsInput | boolean
    canSetPrices?: BoolFieldUpdateOperationsInput | boolean
    canUploadDocuments?: BoolFieldUpdateOperationsInput | boolean
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    performance?: AgentPerformanceUncheckedUpdateOneWithoutAgentNestedInput
  }

  export type AgencyMemberCreateManyInput = {
    id?: string
    userId: string
    agencyId: string
    role: $Enums.UserRole
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    joinedAt?: Date | string
    updatedAt?: Date | string
  }

  export type AgencyMemberUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    canManageProperties?: BoolFieldUpdateOperationsInput | boolean
    canManageTeam?: BoolFieldUpdateOperationsInput | boolean
    canViewAllData?: BoolFieldUpdateOperationsInput | boolean
    canContactClients?: BoolFieldUpdateOperationsInput | boolean
    canScheduleViewings?: BoolFieldUpdateOperationsInput | boolean
    canSetPrices?: BoolFieldUpdateOperationsInput | boolean
    canUploadDocuments?: BoolFieldUpdateOperationsInput | boolean
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyMemberUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    canManageProperties?: BoolFieldUpdateOperationsInput | boolean
    canManageTeam?: BoolFieldUpdateOperationsInput | boolean
    canViewAllData?: BoolFieldUpdateOperationsInput | boolean
    canContactClients?: BoolFieldUpdateOperationsInput | boolean
    canScheduleViewings?: BoolFieldUpdateOperationsInput | boolean
    canSetPrices?: BoolFieldUpdateOperationsInput | boolean
    canUploadDocuments?: BoolFieldUpdateOperationsInput | boolean
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyRoleCreateInput = {
    id?: string
    role: $Enums.UserRole
    title?: string | null
    description?: string | null
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    assignedAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutAgencyRolesInput
    agency: AgencyCreateNestedOneWithoutTeamRolesInput
  }

  export type AgencyRoleUncheckedCreateInput = {
    id?: string
    userId: string
    agencyId: string
    role: $Enums.UserRole
    title?: string | null
    description?: string | null
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    assignedAt?: Date | string
    updatedAt?: Date | string
  }

  export type AgencyRoleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    canManageProperties?: BoolFieldUpdateOperationsInput | boolean
    canManageTeam?: BoolFieldUpdateOperationsInput | boolean
    canViewAllData?: BoolFieldUpdateOperationsInput | boolean
    canContactClients?: BoolFieldUpdateOperationsInput | boolean
    canScheduleViewings?: BoolFieldUpdateOperationsInput | boolean
    canSetPrices?: BoolFieldUpdateOperationsInput | boolean
    canUploadDocuments?: BoolFieldUpdateOperationsInput | boolean
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutAgencyRolesNestedInput
    agency?: AgencyUpdateOneRequiredWithoutTeamRolesNestedInput
  }

  export type AgencyRoleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    canManageProperties?: BoolFieldUpdateOperationsInput | boolean
    canManageTeam?: BoolFieldUpdateOperationsInput | boolean
    canViewAllData?: BoolFieldUpdateOperationsInput | boolean
    canContactClients?: BoolFieldUpdateOperationsInput | boolean
    canScheduleViewings?: BoolFieldUpdateOperationsInput | boolean
    canSetPrices?: BoolFieldUpdateOperationsInput | boolean
    canUploadDocuments?: BoolFieldUpdateOperationsInput | boolean
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyRoleCreateManyInput = {
    id?: string
    userId: string
    agencyId: string
    role: $Enums.UserRole
    title?: string | null
    description?: string | null
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    assignedAt?: Date | string
    updatedAt?: Date | string
  }

  export type AgencyRoleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    canManageProperties?: BoolFieldUpdateOperationsInput | boolean
    canManageTeam?: BoolFieldUpdateOperationsInput | boolean
    canViewAllData?: BoolFieldUpdateOperationsInput | boolean
    canContactClients?: BoolFieldUpdateOperationsInput | boolean
    canScheduleViewings?: BoolFieldUpdateOperationsInput | boolean
    canSetPrices?: BoolFieldUpdateOperationsInput | boolean
    canUploadDocuments?: BoolFieldUpdateOperationsInput | boolean
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyRoleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    canManageProperties?: BoolFieldUpdateOperationsInput | boolean
    canManageTeam?: BoolFieldUpdateOperationsInput | boolean
    canViewAllData?: BoolFieldUpdateOperationsInput | boolean
    canContactClients?: BoolFieldUpdateOperationsInput | boolean
    canScheduleViewings?: BoolFieldUpdateOperationsInput | boolean
    canSetPrices?: BoolFieldUpdateOperationsInput | boolean
    canUploadDocuments?: BoolFieldUpdateOperationsInput | boolean
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyVerificationDocumentCreateInput = {
    id?: string
    documentType: string
    fileName: string
    fileUrl: string
    fileSize: number
    mimeType: string
    title: string
    description?: string | null
    isVerified?: boolean
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    uploadedAt?: Date | string
    agency: AgencyCreateNestedOneWithoutVerificationDocumentsInput
  }

  export type AgencyVerificationDocumentUncheckedCreateInput = {
    id?: string
    documentType: string
    fileName: string
    fileUrl: string
    fileSize: number
    mimeType: string
    title: string
    description?: string | null
    isVerified?: boolean
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    uploadedAt?: Date | string
    agencyId: string
  }

  export type AgencyVerificationDocumentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    mimeType?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agency?: AgencyUpdateOneRequiredWithoutVerificationDocumentsNestedInput
  }

  export type AgencyVerificationDocumentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    mimeType?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: StringFieldUpdateOperationsInput | string
  }

  export type AgencyVerificationDocumentCreateManyInput = {
    id?: string
    documentType: string
    fileName: string
    fileUrl: string
    fileSize: number
    mimeType: string
    title: string
    description?: string | null
    isVerified?: boolean
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    uploadedAt?: Date | string
    agencyId: string
  }

  export type AgencyVerificationDocumentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    mimeType?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyVerificationDocumentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    mimeType?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: StringFieldUpdateOperationsInput | string
  }

  export type AgencyPerformanceCreateInput = {
    id?: string
    totalSales?: number
    totalRentals?: number
    totalRevenue?: number
    topAgent?: string | null
    topAgentSales?: number
    topAgentRevenue?: number
    salesThisMonth?: number
    salesThisYear?: number
    revenueThisMonth?: number
    revenueThisYear?: number
    lastCalculated?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    agency: AgencyCreateNestedOneWithoutPerformanceInput
  }

  export type AgencyPerformanceUncheckedCreateInput = {
    id?: string
    totalSales?: number
    totalRentals?: number
    totalRevenue?: number
    topAgent?: string | null
    topAgentSales?: number
    topAgentRevenue?: number
    salesThisMonth?: number
    salesThisYear?: number
    revenueThisMonth?: number
    revenueThisYear?: number
    lastCalculated?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId: string
  }

  export type AgencyPerformanceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalSales?: IntFieldUpdateOperationsInput | number
    totalRentals?: IntFieldUpdateOperationsInput | number
    totalRevenue?: FloatFieldUpdateOperationsInput | number
    topAgent?: NullableStringFieldUpdateOperationsInput | string | null
    topAgentSales?: IntFieldUpdateOperationsInput | number
    topAgentRevenue?: FloatFieldUpdateOperationsInput | number
    salesThisMonth?: IntFieldUpdateOperationsInput | number
    salesThisYear?: IntFieldUpdateOperationsInput | number
    revenueThisMonth?: FloatFieldUpdateOperationsInput | number
    revenueThisYear?: FloatFieldUpdateOperationsInput | number
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agency?: AgencyUpdateOneRequiredWithoutPerformanceNestedInput
  }

  export type AgencyPerformanceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalSales?: IntFieldUpdateOperationsInput | number
    totalRentals?: IntFieldUpdateOperationsInput | number
    totalRevenue?: FloatFieldUpdateOperationsInput | number
    topAgent?: NullableStringFieldUpdateOperationsInput | string | null
    topAgentSales?: IntFieldUpdateOperationsInput | number
    topAgentRevenue?: FloatFieldUpdateOperationsInput | number
    salesThisMonth?: IntFieldUpdateOperationsInput | number
    salesThisYear?: IntFieldUpdateOperationsInput | number
    revenueThisMonth?: FloatFieldUpdateOperationsInput | number
    revenueThisYear?: FloatFieldUpdateOperationsInput | number
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: StringFieldUpdateOperationsInput | string
  }

  export type AgencyPerformanceCreateManyInput = {
    id?: string
    totalSales?: number
    totalRentals?: number
    totalRevenue?: number
    topAgent?: string | null
    topAgentSales?: number
    topAgentRevenue?: number
    salesThisMonth?: number
    salesThisYear?: number
    revenueThisMonth?: number
    revenueThisYear?: number
    lastCalculated?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId: string
  }

  export type AgencyPerformanceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalSales?: IntFieldUpdateOperationsInput | number
    totalRentals?: IntFieldUpdateOperationsInput | number
    totalRevenue?: FloatFieldUpdateOperationsInput | number
    topAgent?: NullableStringFieldUpdateOperationsInput | string | null
    topAgentSales?: IntFieldUpdateOperationsInput | number
    topAgentRevenue?: FloatFieldUpdateOperationsInput | number
    salesThisMonth?: IntFieldUpdateOperationsInput | number
    salesThisYear?: IntFieldUpdateOperationsInput | number
    revenueThisMonth?: FloatFieldUpdateOperationsInput | number
    revenueThisYear?: FloatFieldUpdateOperationsInput | number
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyPerformanceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalSales?: IntFieldUpdateOperationsInput | number
    totalRentals?: IntFieldUpdateOperationsInput | number
    totalRevenue?: FloatFieldUpdateOperationsInput | number
    topAgent?: NullableStringFieldUpdateOperationsInput | string | null
    topAgentSales?: IntFieldUpdateOperationsInput | number
    topAgentRevenue?: FloatFieldUpdateOperationsInput | number
    salesThisMonth?: IntFieldUpdateOperationsInput | number
    salesThisYear?: IntFieldUpdateOperationsInput | number
    revenueThisMonth?: FloatFieldUpdateOperationsInput | number
    revenueThisYear?: FloatFieldUpdateOperationsInput | number
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: StringFieldUpdateOperationsInput | string
  }

  export type AgentPerformanceCreateInput = {
    id?: string
    totalSales?: number
    totalRentals?: number
    totalRevenue?: number
    salesThisMonth?: number
    salesThisYear?: number
    revenueThisMonth?: number
    revenueThisYear?: number
    averageResponseTime?: number
    totalInquiries?: number
    convertedInquiries?: number
    lastCalculated?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    agent: AgencyMemberCreateNestedOneWithoutPerformanceInput
  }

  export type AgentPerformanceUncheckedCreateInput = {
    id?: string
    totalSales?: number
    totalRentals?: number
    totalRevenue?: number
    salesThisMonth?: number
    salesThisYear?: number
    revenueThisMonth?: number
    revenueThisYear?: number
    averageResponseTime?: number
    totalInquiries?: number
    convertedInquiries?: number
    lastCalculated?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    agentId: string
  }

  export type AgentPerformanceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalSales?: IntFieldUpdateOperationsInput | number
    totalRentals?: IntFieldUpdateOperationsInput | number
    totalRevenue?: FloatFieldUpdateOperationsInput | number
    salesThisMonth?: IntFieldUpdateOperationsInput | number
    salesThisYear?: IntFieldUpdateOperationsInput | number
    revenueThisMonth?: FloatFieldUpdateOperationsInput | number
    revenueThisYear?: FloatFieldUpdateOperationsInput | number
    averageResponseTime?: FloatFieldUpdateOperationsInput | number
    totalInquiries?: IntFieldUpdateOperationsInput | number
    convertedInquiries?: IntFieldUpdateOperationsInput | number
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agent?: AgencyMemberUpdateOneRequiredWithoutPerformanceNestedInput
  }

  export type AgentPerformanceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalSales?: IntFieldUpdateOperationsInput | number
    totalRentals?: IntFieldUpdateOperationsInput | number
    totalRevenue?: FloatFieldUpdateOperationsInput | number
    salesThisMonth?: IntFieldUpdateOperationsInput | number
    salesThisYear?: IntFieldUpdateOperationsInput | number
    revenueThisMonth?: FloatFieldUpdateOperationsInput | number
    revenueThisYear?: FloatFieldUpdateOperationsInput | number
    averageResponseTime?: FloatFieldUpdateOperationsInput | number
    totalInquiries?: IntFieldUpdateOperationsInput | number
    convertedInquiries?: IntFieldUpdateOperationsInput | number
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agentId?: StringFieldUpdateOperationsInput | string
  }

  export type AgentPerformanceCreateManyInput = {
    id?: string
    totalSales?: number
    totalRentals?: number
    totalRevenue?: number
    salesThisMonth?: number
    salesThisYear?: number
    revenueThisMonth?: number
    revenueThisYear?: number
    averageResponseTime?: number
    totalInquiries?: number
    convertedInquiries?: number
    lastCalculated?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    agentId: string
  }

  export type AgentPerformanceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalSales?: IntFieldUpdateOperationsInput | number
    totalRentals?: IntFieldUpdateOperationsInput | number
    totalRevenue?: FloatFieldUpdateOperationsInput | number
    salesThisMonth?: IntFieldUpdateOperationsInput | number
    salesThisYear?: IntFieldUpdateOperationsInput | number
    revenueThisMonth?: FloatFieldUpdateOperationsInput | number
    revenueThisYear?: FloatFieldUpdateOperationsInput | number
    averageResponseTime?: FloatFieldUpdateOperationsInput | number
    totalInquiries?: IntFieldUpdateOperationsInput | number
    convertedInquiries?: IntFieldUpdateOperationsInput | number
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgentPerformanceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalSales?: IntFieldUpdateOperationsInput | number
    totalRentals?: IntFieldUpdateOperationsInput | number
    totalRevenue?: FloatFieldUpdateOperationsInput | number
    salesThisMonth?: IntFieldUpdateOperationsInput | number
    salesThisYear?: IntFieldUpdateOperationsInput | number
    revenueThisMonth?: FloatFieldUpdateOperationsInput | number
    revenueThisYear?: FloatFieldUpdateOperationsInput | number
    averageResponseTime?: FloatFieldUpdateOperationsInput | number
    totalInquiries?: IntFieldUpdateOperationsInput | number
    convertedInquiries?: IntFieldUpdateOperationsInput | number
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agentId?: StringFieldUpdateOperationsInput | string
  }

  export type AgencyInquiryCreateInput = {
    id?: string
    subject: string
    message: string
    whoSentIt: string
    whichProperty?: string | null
    status?: $Enums.InquiryStatus
    whenSent?: Date | string
    response?: string | null
    respondedAt?: Date | string | null
    respondedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agency: AgencyCreateNestedOneWithoutInquiriesInput
    property?: PropertyCreateNestedOneWithoutAgencyInquiriesInput
  }

  export type AgencyInquiryUncheckedCreateInput = {
    id?: string
    subject: string
    message: string
    whoSentIt: string
    whichProperty?: string | null
    status?: $Enums.InquiryStatus
    whenSent?: Date | string
    response?: string | null
    respondedAt?: Date | string | null
    respondedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId: string
    propertyId?: string | null
  }

  export type AgencyInquiryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    whoSentIt?: StringFieldUpdateOperationsInput | string
    whichProperty?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    whenSent?: DateTimeFieldUpdateOperationsInput | Date | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    respondedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agency?: AgencyUpdateOneRequiredWithoutInquiriesNestedInput
    property?: PropertyUpdateOneWithoutAgencyInquiriesNestedInput
  }

  export type AgencyInquiryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    whoSentIt?: StringFieldUpdateOperationsInput | string
    whichProperty?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    whenSent?: DateTimeFieldUpdateOperationsInput | Date | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    respondedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: StringFieldUpdateOperationsInput | string
    propertyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AgencyInquiryCreateManyInput = {
    id?: string
    subject: string
    message: string
    whoSentIt: string
    whichProperty?: string | null
    status?: $Enums.InquiryStatus
    whenSent?: Date | string
    response?: string | null
    respondedAt?: Date | string | null
    respondedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId: string
    propertyId?: string | null
  }

  export type AgencyInquiryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    whoSentIt?: StringFieldUpdateOperationsInput | string
    whichProperty?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    whenSent?: DateTimeFieldUpdateOperationsInput | Date | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    respondedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyInquiryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    whoSentIt?: StringFieldUpdateOperationsInput | string
    whichProperty?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    whenSent?: DateTimeFieldUpdateOperationsInput | Date | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    respondedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: StringFieldUpdateOperationsInput | string
    propertyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PropertyCreateInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    owner: UserCreateNestedOneWithoutOwnedPropertiesInput
    agent?: UserCreateNestedOneWithoutManagedPropertiesInput
    agency?: AgencyCreateNestedOneWithoutPropertiesInput
    photos?: PropertyPhotoCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourCreateNestedManyWithoutPropertyInput
    views?: PropertyViewCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionCreateNestedManyWithoutPropertyInput
    payments?: PaymentCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryCreateNestedManyWithoutPropertyInput
  }

  export type PropertyUncheckedCreateInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    ownerId: string
    agentId?: string | null
    agencyId?: string | null
    photos?: PropertyPhotoUncheckedCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoUncheckedCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourUncheckedCreateNestedManyWithoutPropertyInput
    views?: PropertyViewUncheckedCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesUncheckedCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingUncheckedCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutPropertyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutPropertyInput
  }

  export type PropertyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedPropertiesNestedInput
    agent?: UserUpdateOneWithoutManagedPropertiesNestedInput
    agency?: AgencyUpdateOneWithoutPropertiesNestedInput
    photos?: PropertyPhotoUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    agentId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: PropertyPhotoUncheckedUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUncheckedUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUncheckedUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUncheckedUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUncheckedUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUncheckedUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyCreateManyInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    ownerId: string
    agentId?: string | null
    agencyId?: string | null
  }

  export type PropertyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PropertyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    agentId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PropertyPhotoCreateInput = {
    id?: string
    url: string
    caption?: string | null
    altText?: string | null
    isPrimary?: boolean
    order?: number
    category?: string | null
    createdAt?: Date | string
    property: PropertyCreateNestedOneWithoutPhotosInput
  }

  export type PropertyPhotoUncheckedCreateInput = {
    id?: string
    url: string
    caption?: string | null
    altText?: string | null
    isPrimary?: boolean
    order?: number
    category?: string | null
    createdAt?: Date | string
    propertyId: string
  }

  export type PropertyPhotoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    altText?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    category?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    property?: PropertyUpdateOneRequiredWithoutPhotosNestedInput
  }

  export type PropertyPhotoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    altText?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    category?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyPhotoCreateManyInput = {
    id?: string
    url: string
    caption?: string | null
    altText?: string | null
    isPrimary?: boolean
    order?: number
    category?: string | null
    createdAt?: Date | string
    propertyId: string
  }

  export type PropertyPhotoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    altText?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    category?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PropertyPhotoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    altText?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    category?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyVideoCreateInput = {
    id?: string
    url: string
    thumbnail?: string | null
    duration?: number | null
    caption?: string | null
    order?: number
    createdAt?: Date | string
    property: PropertyCreateNestedOneWithoutVideosInput
  }

  export type PropertyVideoUncheckedCreateInput = {
    id?: string
    url: string
    thumbnail?: string | null
    duration?: number | null
    caption?: string | null
    order?: number
    createdAt?: Date | string
    propertyId: string
  }

  export type PropertyVideoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    property?: PropertyUpdateOneRequiredWithoutVideosNestedInput
  }

  export type PropertyVideoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyVideoCreateManyInput = {
    id?: string
    url: string
    thumbnail?: string | null
    duration?: number | null
    caption?: string | null
    order?: number
    createdAt?: Date | string
    propertyId: string
  }

  export type PropertyVideoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PropertyVideoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type VirtualTourCreateInput = {
    id?: string
    url: string
    platform?: string | null
    caption?: string | null
    order?: number
    createdAt?: Date | string
    property: PropertyCreateNestedOneWithoutVirtualToursInput
  }

  export type VirtualTourUncheckedCreateInput = {
    id?: string
    url: string
    platform?: string | null
    caption?: string | null
    order?: number
    createdAt?: Date | string
    propertyId: string
  }

  export type VirtualTourUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    platform?: NullableStringFieldUpdateOperationsInput | string | null
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    property?: PropertyUpdateOneRequiredWithoutVirtualToursNestedInput
  }

  export type VirtualTourUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    platform?: NullableStringFieldUpdateOperationsInput | string | null
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type VirtualTourCreateManyInput = {
    id?: string
    url: string
    platform?: string | null
    caption?: string | null
    order?: number
    createdAt?: Date | string
    propertyId: string
  }

  export type VirtualTourUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    platform?: NullableStringFieldUpdateOperationsInput | string | null
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VirtualTourUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    platform?: NullableStringFieldUpdateOperationsInput | string | null
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyViewCreateInput = {
    id?: string
    viewedAt?: Date | string
    viewDuration?: number | null
    ipAddress?: string | null
    userAgent?: string | null
    user: UserCreateNestedOneWithoutViewedPropertiesInput
    property: PropertyCreateNestedOneWithoutViewsInput
  }

  export type PropertyViewUncheckedCreateInput = {
    id?: string
    viewedAt?: Date | string
    viewDuration?: number | null
    ipAddress?: string | null
    userAgent?: string | null
    userId: string
    propertyId: string
  }

  export type PropertyViewUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    viewedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewDuration?: NullableIntFieldUpdateOperationsInput | number | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutViewedPropertiesNestedInput
    property?: PropertyUpdateOneRequiredWithoutViewsNestedInput
  }

  export type PropertyViewUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    viewedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewDuration?: NullableIntFieldUpdateOperationsInput | number | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyViewCreateManyInput = {
    id?: string
    viewedAt?: Date | string
    viewDuration?: number | null
    ipAddress?: string | null
    userAgent?: string | null
    userId: string
    propertyId: string
  }

  export type PropertyViewUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    viewedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewDuration?: NullableIntFieldUpdateOperationsInput | number | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PropertyViewUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    viewedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewDuration?: NullableIntFieldUpdateOperationsInput | number | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteCreateInput = {
    id?: string
    notes?: string | null
    priority?: number | null
    createdAt?: Date | string
    listId?: string | null
    user: UserCreateNestedOneWithoutFavoritesInput
    property: PropertyCreateNestedOneWithoutFavoritesInput
    list?: FavoriteListCreateNestedOneWithoutFavoritesInput
  }

  export type FavoriteUncheckedCreateInput = {
    id?: string
    notes?: string | null
    priority?: number | null
    createdAt?: Date | string
    userId: string
    propertyId: string
    listId?: string | null
    favoriteListId?: string | null
  }

  export type FavoriteUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listId?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutFavoritesNestedInput
    property?: PropertyUpdateOneRequiredWithoutFavoritesNestedInput
    list?: FavoriteListUpdateOneWithoutFavoritesNestedInput
  }

  export type FavoriteUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    listId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteListId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FavoriteCreateManyInput = {
    id?: string
    notes?: string | null
    priority?: number | null
    createdAt?: Date | string
    userId: string
    propertyId: string
    listId?: string | null
    favoriteListId?: string | null
  }

  export type FavoriteUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FavoriteUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    listId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteListId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FavoriteListCreateInput = {
    id?: string
    name: string
    description?: string | null
    isPublic?: boolean
    isDefault?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutFavoriteListsInput
    favorites?: FavoriteCreateNestedManyWithoutListInput
  }

  export type FavoriteListUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    isPublic?: boolean
    isDefault?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    favorites?: FavoriteUncheckedCreateNestedManyWithoutListInput
  }

  export type FavoriteListUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutFavoriteListsNestedInput
    favorites?: FavoriteUpdateManyWithoutListNestedInput
  }

  export type FavoriteListUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    favorites?: FavoriteUncheckedUpdateManyWithoutListNestedInput
  }

  export type FavoriteListCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    isPublic?: boolean
    isDefault?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
  }

  export type FavoriteListUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoriteListUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyRequestCreateInput = {
    id?: string
    type: $Enums.RequestType
    message: string
    status?: $Enums.RequestStatus
    preferredDate?: Date | string | null
    preferredTime?: string | null
    budget?: number | null
    timeline?: string | null
    sellerResponse?: string | null
    responseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    buyerId: string
    buyer: UserCreateNestedOneWithoutRequestsInput
    property: PropertyCreateNestedOneWithoutRequestsInput
    viewings?: PropertyViewingCreateNestedManyWithoutRequestInput
    payments?: PaymentCreateNestedManyWithoutRequestInput
  }

  export type PropertyRequestUncheckedCreateInput = {
    id?: string
    type: $Enums.RequestType
    message: string
    status?: $Enums.RequestStatus
    preferredDate?: Date | string | null
    preferredTime?: string | null
    budget?: number | null
    timeline?: string | null
    sellerResponse?: string | null
    responseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    buyerId: string
    propertyId: string
    userId: string
    viewings?: PropertyViewingUncheckedCreateNestedManyWithoutRequestInput
    payments?: PaymentUncheckedCreateNestedManyWithoutRequestInput
  }

  export type PropertyRequestUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRequestTypeFieldUpdateOperationsInput | $Enums.RequestType
    message?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    preferredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredTime?: NullableStringFieldUpdateOperationsInput | string | null
    budget?: NullableFloatFieldUpdateOperationsInput | number | null
    timeline?: NullableStringFieldUpdateOperationsInput | string | null
    sellerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    responseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    buyerId?: StringFieldUpdateOperationsInput | string
    buyer?: UserUpdateOneRequiredWithoutRequestsNestedInput
    property?: PropertyUpdateOneRequiredWithoutRequestsNestedInput
    viewings?: PropertyViewingUpdateManyWithoutRequestNestedInput
    payments?: PaymentUpdateManyWithoutRequestNestedInput
  }

  export type PropertyRequestUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRequestTypeFieldUpdateOperationsInput | $Enums.RequestType
    message?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    preferredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredTime?: NullableStringFieldUpdateOperationsInput | string | null
    budget?: NullableFloatFieldUpdateOperationsInput | number | null
    timeline?: NullableStringFieldUpdateOperationsInput | string | null
    sellerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    responseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    buyerId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    viewings?: PropertyViewingUncheckedUpdateManyWithoutRequestNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutRequestNestedInput
  }

  export type PropertyRequestCreateManyInput = {
    id?: string
    type: $Enums.RequestType
    message: string
    status?: $Enums.RequestStatus
    preferredDate?: Date | string | null
    preferredTime?: string | null
    budget?: number | null
    timeline?: string | null
    sellerResponse?: string | null
    responseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    buyerId: string
    propertyId: string
    userId: string
  }

  export type PropertyRequestUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRequestTypeFieldUpdateOperationsInput | $Enums.RequestType
    message?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    preferredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredTime?: NullableStringFieldUpdateOperationsInput | string | null
    budget?: NullableFloatFieldUpdateOperationsInput | number | null
    timeline?: NullableStringFieldUpdateOperationsInput | string | null
    sellerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    responseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    buyerId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyRequestUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRequestTypeFieldUpdateOperationsInput | $Enums.RequestType
    message?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    preferredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredTime?: NullableStringFieldUpdateOperationsInput | string | null
    budget?: NullableFloatFieldUpdateOperationsInput | number | null
    timeline?: NullableStringFieldUpdateOperationsInput | string | null
    sellerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    responseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    buyerId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyInquiryCreateInput = {
    id?: string
    subject: string
    message: string
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutInquiriesInput
    property: PropertyCreateNestedOneWithoutInquiriesInput
  }

  export type PropertyInquiryUncheckedCreateInput = {
    id?: string
    subject: string
    message: string
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    propertyId: string
  }

  export type PropertyInquiryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutInquiriesNestedInput
    property?: PropertyUpdateOneRequiredWithoutInquiriesNestedInput
  }

  export type PropertyInquiryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyInquiryCreateManyInput = {
    id?: string
    subject: string
    message: string
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    propertyId: string
  }

  export type PropertyInquiryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PropertyInquiryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyComparisonCreateInput = {
    id?: string
    name: string
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutPropertyComparisonsInput
    PropertyComparisonProperties?: PropertyComparisonPropertiesCreateNestedManyWithoutPropertyComparisonInput
  }

  export type PropertyComparisonUncheckedCreateInput = {
    id?: string
    name: string
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    PropertyComparisonProperties?: PropertyComparisonPropertiesUncheckedCreateNestedManyWithoutPropertyComparisonInput
  }

  export type PropertyComparisonUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutPropertyComparisonsNestedInput
    PropertyComparisonProperties?: PropertyComparisonPropertiesUpdateManyWithoutPropertyComparisonNestedInput
  }

  export type PropertyComparisonUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    PropertyComparisonProperties?: PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyComparisonNestedInput
  }

  export type PropertyComparisonCreateManyInput = {
    id?: string
    name: string
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
  }

  export type PropertyComparisonUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PropertyComparisonUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyComparisonPropertiesCreateInput = {
    id?: string
    propertyComparison: PropertyComparisonCreateNestedOneWithoutPropertyComparisonPropertiesInput
    property: PropertyCreateNestedOneWithoutComparisonsInput
  }

  export type PropertyComparisonPropertiesUncheckedCreateInput = {
    id?: string
    propertyComparisonId: string
    propertyId: string
  }

  export type PropertyComparisonPropertiesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyComparison?: PropertyComparisonUpdateOneRequiredWithoutPropertyComparisonPropertiesNestedInput
    property?: PropertyUpdateOneRequiredWithoutComparisonsNestedInput
  }

  export type PropertyComparisonPropertiesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyComparisonId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyComparisonPropertiesCreateManyInput = {
    id?: string
    propertyComparisonId: string
    propertyId: string
  }

  export type PropertyComparisonPropertiesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyComparisonPropertiesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyComparisonId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyReviewCreateInput = {
    id?: string
    rating: number
    title: string
    comment: string
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewerId: string
    reviewer: UserCreateNestedOneWithoutReviewsInput
    property: PropertyCreateNestedOneWithoutReviewsInput
  }

  export type PropertyReviewUncheckedCreateInput = {
    id?: string
    rating: number
    title: string
    comment: string
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewerId: string
    propertyId: string
    userId: string
  }

  export type PropertyReviewUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewerId?: StringFieldUpdateOperationsInput | string
    reviewer?: UserUpdateOneRequiredWithoutReviewsNestedInput
    property?: PropertyUpdateOneRequiredWithoutReviewsNestedInput
  }

  export type PropertyReviewUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewerId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyReviewCreateManyInput = {
    id?: string
    rating: number
    title: string
    comment: string
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewerId: string
    propertyId: string
    userId: string
  }

  export type PropertyReviewUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewerId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyReviewUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewerId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyCommentCreateInput = {
    id?: string
    content: string
    isPublic?: boolean
    isModerated?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    authorId: string
    author: UserCreateNestedOneWithoutCommentsInput
    property: PropertyCreateNestedOneWithoutCommentsInput
  }

  export type PropertyCommentUncheckedCreateInput = {
    id?: string
    content: string
    isPublic?: boolean
    isModerated?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    authorId: string
    propertyId: string
    userId: string
  }

  export type PropertyCommentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isModerated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorId?: StringFieldUpdateOperationsInput | string
    author?: UserUpdateOneRequiredWithoutCommentsNestedInput
    property?: PropertyUpdateOneRequiredWithoutCommentsNestedInput
  }

  export type PropertyCommentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isModerated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyCommentCreateManyInput = {
    id?: string
    content: string
    isPublic?: boolean
    isModerated?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    authorId: string
    propertyId: string
    userId: string
  }

  export type PropertyCommentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isModerated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyCommentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isModerated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyViewingCreateInput = {
    id?: string
    scheduledAt: Date | string
    duration: number
    status?: string
    notes?: string | null
    buyerNotes?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    requestId?: string | null
    property: PropertyCreateNestedOneWithoutViewingsInput
    seller: UserCreateNestedOneWithoutScheduledViewingsInput
    buyer?: UserCreateNestedOneWithoutBuyerViewingsInput
    request?: PropertyRequestCreateNestedOneWithoutViewingsInput
  }

  export type PropertyViewingUncheckedCreateInput = {
    id?: string
    scheduledAt: Date | string
    duration: number
    status?: string
    notes?: string | null
    buyerNotes?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    propertyId: string
    sellerId: string
    buyerId?: string | null
    requestId?: string | null
    propertyRequestId?: string | null
  }

  export type PropertyViewingUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    buyerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    property?: PropertyUpdateOneRequiredWithoutViewingsNestedInput
    seller?: UserUpdateOneRequiredWithoutScheduledViewingsNestedInput
    buyer?: UserUpdateOneWithoutBuyerViewingsNestedInput
    request?: PropertyRequestUpdateOneWithoutViewingsNestedInput
  }

  export type PropertyViewingUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    buyerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    buyerId?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PropertyViewingCreateManyInput = {
    id?: string
    scheduledAt: Date | string
    duration: number
    status?: string
    notes?: string | null
    buyerNotes?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    propertyId: string
    sellerId: string
    buyerId?: string | null
    requestId?: string | null
    propertyRequestId?: string | null
  }

  export type PropertyViewingUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    buyerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PropertyViewingUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    buyerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    buyerId?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PropertyAnalyticsCreateInput = {
    id?: string
    totalViews?: number
    uniqueViews?: number
    totalFavorites?: number
    totalRequests?: number
    totalInquiries?: number
    averageViewDuration?: number
    bounceRate?: number
    conversionRate?: number
    viewsThisWeek?: number
    viewsThisMonth?: number
    viewsThisYear?: number
    lastCalculated?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    property: PropertyCreateNestedOneWithoutAnalyticsInput
    User?: UserCreateNestedOneWithoutPropertyAnalyticsInput
  }

  export type PropertyAnalyticsUncheckedCreateInput = {
    id?: string
    totalViews?: number
    uniqueViews?: number
    totalFavorites?: number
    totalRequests?: number
    totalInquiries?: number
    averageViewDuration?: number
    bounceRate?: number
    conversionRate?: number
    viewsThisWeek?: number
    viewsThisMonth?: number
    viewsThisYear?: number
    lastCalculated?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    propertyId: string
    userId?: string | null
  }

  export type PropertyAnalyticsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalViews?: IntFieldUpdateOperationsInput | number
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalFavorites?: IntFieldUpdateOperationsInput | number
    totalRequests?: IntFieldUpdateOperationsInput | number
    totalInquiries?: IntFieldUpdateOperationsInput | number
    averageViewDuration?: FloatFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    viewsThisWeek?: IntFieldUpdateOperationsInput | number
    viewsThisMonth?: IntFieldUpdateOperationsInput | number
    viewsThisYear?: IntFieldUpdateOperationsInput | number
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    property?: PropertyUpdateOneRequiredWithoutAnalyticsNestedInput
    User?: UserUpdateOneWithoutPropertyAnalyticsNestedInput
  }

  export type PropertyAnalyticsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalViews?: IntFieldUpdateOperationsInput | number
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalFavorites?: IntFieldUpdateOperationsInput | number
    totalRequests?: IntFieldUpdateOperationsInput | number
    totalInquiries?: IntFieldUpdateOperationsInput | number
    averageViewDuration?: FloatFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    viewsThisWeek?: IntFieldUpdateOperationsInput | number
    viewsThisMonth?: IntFieldUpdateOperationsInput | number
    viewsThisYear?: IntFieldUpdateOperationsInput | number
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PropertyAnalyticsCreateManyInput = {
    id?: string
    totalViews?: number
    uniqueViews?: number
    totalFavorites?: number
    totalRequests?: number
    totalInquiries?: number
    averageViewDuration?: number
    bounceRate?: number
    conversionRate?: number
    viewsThisWeek?: number
    viewsThisMonth?: number
    viewsThisYear?: number
    lastCalculated?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    propertyId: string
    userId?: string | null
  }

  export type PropertyAnalyticsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalViews?: IntFieldUpdateOperationsInput | number
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalFavorites?: IntFieldUpdateOperationsInput | number
    totalRequests?: IntFieldUpdateOperationsInput | number
    totalInquiries?: IntFieldUpdateOperationsInput | number
    averageViewDuration?: FloatFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    viewsThisWeek?: IntFieldUpdateOperationsInput | number
    viewsThisMonth?: IntFieldUpdateOperationsInput | number
    viewsThisYear?: IntFieldUpdateOperationsInput | number
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PropertyAnalyticsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalViews?: IntFieldUpdateOperationsInput | number
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalFavorites?: IntFieldUpdateOperationsInput | number
    totalRequests?: IntFieldUpdateOperationsInput | number
    totalInquiries?: IntFieldUpdateOperationsInput | number
    averageViewDuration?: FloatFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    viewsThisWeek?: IntFieldUpdateOperationsInput | number
    viewsThisMonth?: IntFieldUpdateOperationsInput | number
    viewsThisYear?: IntFieldUpdateOperationsInput | number
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdminActionCreateInput = {
    id?: string
    action: string
    details?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    admin: UserCreateNestedOneWithoutAdminActionsInput
    property?: PropertyCreateNestedOneWithoutAdminActionsInput
    user?: UserCreateNestedOneWithoutAdminActionTargetsInput
    agency?: AgencyCreateNestedOneWithoutAdminActionsInput
  }

  export type AdminActionUncheckedCreateInput = {
    id?: string
    action: string
    details?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    adminId: string
    propertyId?: string | null
    userId?: string | null
    agencyId?: string | null
  }

  export type AdminActionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admin?: UserUpdateOneRequiredWithoutAdminActionsNestedInput
    property?: PropertyUpdateOneWithoutAdminActionsNestedInput
    user?: UserUpdateOneWithoutAdminActionTargetsNestedInput
    agency?: AgencyUpdateOneWithoutAdminActionsNestedInput
  }

  export type AdminActionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    adminId?: StringFieldUpdateOperationsInput | string
    propertyId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdminActionCreateManyInput = {
    id?: string
    action: string
    details?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    adminId: string
    propertyId?: string | null
    userId?: string | null
    agencyId?: string | null
  }

  export type AdminActionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdminActionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    adminId?: StringFieldUpdateOperationsInput | string
    propertyId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationCreateInput = {
    id?: string
    type: $Enums.NotificationType
    title: string
    message: string
    isRead?: boolean
    readAt?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    link?: string | null
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateInput = {
    id?: string
    type: $Enums.NotificationType
    title: string
    message: string
    isRead?: boolean
    readAt?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    link?: string | null
    createdAt?: Date | string
    userId: string
  }

  export type NotificationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    link?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    link?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type NotificationCreateManyInput = {
    id?: string
    type: $Enums.NotificationType
    title: string
    message: string
    isRead?: boolean
    readAt?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    link?: string | null
    createdAt?: Date | string
    userId: string
  }

  export type NotificationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    link?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    link?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type PaymentCreateInput = {
    id?: string
    amount: number
    currency?: string
    status?: $Enums.PaymentStatus
    paymentMethod: string
    transactionId?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    requestId?: string | null
    user: UserCreateNestedOneWithoutPaymentsInput
    property?: PropertyCreateNestedOneWithoutPaymentsInput
    request?: PropertyRequestCreateNestedOneWithoutPaymentsInput
  }

  export type PaymentUncheckedCreateInput = {
    id?: string
    amount: number
    currency?: string
    status?: $Enums.PaymentStatus
    paymentMethod: string
    transactionId?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    propertyId?: string | null
    requestId?: string | null
    propertyRequestId?: string | null
  }

  export type PaymentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: StringFieldUpdateOperationsInput | string
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutPaymentsNestedInput
    property?: PropertyUpdateOneWithoutPaymentsNestedInput
    request?: PropertyRequestUpdateOneWithoutPaymentsNestedInput
  }

  export type PaymentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: StringFieldUpdateOperationsInput | string
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    propertyId?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentCreateManyInput = {
    id?: string
    amount: number
    currency?: string
    status?: $Enums.PaymentStatus
    paymentMethod: string
    transactionId?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    propertyId?: string | null
    requestId?: string | null
    propertyRequestId?: string | null
  }

  export type PaymentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: StringFieldUpdateOperationsInput | string
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: StringFieldUpdateOperationsInput | string
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    propertyId?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SavedSearchCreateInput = {
    id?: string
    name: string
    description?: string | null
    propertyTypes?: SavedSearchCreatepropertyTypesInput | $Enums.PropertyType[]
    transactionTypes?: SavedSearchCreatetransactionTypesInput | $Enums.TransactionType[]
    minPrice?: number | null
    maxPrice?: number | null
    minArea?: number | null
    maxArea?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    cities?: SavedSearchCreatecitiesInput | string[]
    neighborhoods?: SavedSearchCreateneighborhoodsInput | string[]
    isActive?: boolean
    notifyOnMatch?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutSavedSearchInput
  }

  export type SavedSearchUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    propertyTypes?: SavedSearchCreatepropertyTypesInput | $Enums.PropertyType[]
    transactionTypes?: SavedSearchCreatetransactionTypesInput | $Enums.TransactionType[]
    minPrice?: number | null
    maxPrice?: number | null
    minArea?: number | null
    maxArea?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    cities?: SavedSearchCreatecitiesInput | string[]
    neighborhoods?: SavedSearchCreateneighborhoodsInput | string[]
    isActive?: boolean
    notifyOnMatch?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
  }

  export type SavedSearchUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    propertyTypes?: SavedSearchUpdatepropertyTypesInput | $Enums.PropertyType[]
    transactionTypes?: SavedSearchUpdatetransactionTypesInput | $Enums.TransactionType[]
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minArea?: NullableFloatFieldUpdateOperationsInput | number | null
    maxArea?: NullableFloatFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    cities?: SavedSearchUpdatecitiesInput | string[]
    neighborhoods?: SavedSearchUpdateneighborhoodsInput | string[]
    isActive?: BoolFieldUpdateOperationsInput | boolean
    notifyOnMatch?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSavedSearchNestedInput
  }

  export type SavedSearchUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    propertyTypes?: SavedSearchUpdatepropertyTypesInput | $Enums.PropertyType[]
    transactionTypes?: SavedSearchUpdatetransactionTypesInput | $Enums.TransactionType[]
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minArea?: NullableFloatFieldUpdateOperationsInput | number | null
    maxArea?: NullableFloatFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    cities?: SavedSearchUpdatecitiesInput | string[]
    neighborhoods?: SavedSearchUpdateneighborhoodsInput | string[]
    isActive?: BoolFieldUpdateOperationsInput | boolean
    notifyOnMatch?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type SavedSearchCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    propertyTypes?: SavedSearchCreatepropertyTypesInput | $Enums.PropertyType[]
    transactionTypes?: SavedSearchCreatetransactionTypesInput | $Enums.TransactionType[]
    minPrice?: number | null
    maxPrice?: number | null
    minArea?: number | null
    maxArea?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    cities?: SavedSearchCreatecitiesInput | string[]
    neighborhoods?: SavedSearchCreateneighborhoodsInput | string[]
    isActive?: boolean
    notifyOnMatch?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
  }

  export type SavedSearchUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    propertyTypes?: SavedSearchUpdatepropertyTypesInput | $Enums.PropertyType[]
    transactionTypes?: SavedSearchUpdatetransactionTypesInput | $Enums.TransactionType[]
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minArea?: NullableFloatFieldUpdateOperationsInput | number | null
    maxArea?: NullableFloatFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    cities?: SavedSearchUpdatecitiesInput | string[]
    neighborhoods?: SavedSearchUpdateneighborhoodsInput | string[]
    isActive?: BoolFieldUpdateOperationsInput | boolean
    notifyOnMatch?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SavedSearchUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    propertyTypes?: SavedSearchUpdatepropertyTypesInput | $Enums.PropertyType[]
    transactionTypes?: SavedSearchUpdatetransactionTypesInput | $Enums.TransactionType[]
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minArea?: NullableFloatFieldUpdateOperationsInput | number | null
    maxArea?: NullableFloatFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    cities?: SavedSearchUpdatecitiesInput | string[]
    neighborhoods?: SavedSearchUpdateneighborhoodsInput | string[]
    isActive?: BoolFieldUpdateOperationsInput | boolean
    notifyOnMatch?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type PlatformSettingCreateInput = {
    id?: string
    key: string
    value: string
    description?: string | null
    category: string
    dataType?: string
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PlatformSettingUncheckedCreateInput = {
    id?: string
    key: string
    value: string
    description?: string | null
    category: string
    dataType?: string
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PlatformSettingUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    dataType?: StringFieldUpdateOperationsInput | string
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PlatformSettingUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    dataType?: StringFieldUpdateOperationsInput | string
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PlatformSettingCreateManyInput = {
    id?: string
    key: string
    value: string
    description?: string | null
    category: string
    dataType?: string
    isPublic?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PlatformSettingUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    dataType?: StringFieldUpdateOperationsInput | string
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PlatformSettingUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: StringFieldUpdateOperationsInput | string
    dataType?: StringFieldUpdateOperationsInput | string
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PlatformAnalyticsCreateInput = {
    id?: string
    totalUsers?: number
    activeUsers?: number
    totalProperties?: number
    activeProperties?: number
    totalSales?: number
    totalRentals?: number
    totalRevenue?: number
    totalViews?: number
    totalRequests?: number
    totalFavorites?: number
    date?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PlatformAnalyticsUncheckedCreateInput = {
    id?: string
    totalUsers?: number
    activeUsers?: number
    totalProperties?: number
    activeProperties?: number
    totalSales?: number
    totalRentals?: number
    totalRevenue?: number
    totalViews?: number
    totalRequests?: number
    totalFavorites?: number
    date?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PlatformAnalyticsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalUsers?: IntFieldUpdateOperationsInput | number
    activeUsers?: IntFieldUpdateOperationsInput | number
    totalProperties?: IntFieldUpdateOperationsInput | number
    activeProperties?: IntFieldUpdateOperationsInput | number
    totalSales?: IntFieldUpdateOperationsInput | number
    totalRentals?: IntFieldUpdateOperationsInput | number
    totalRevenue?: FloatFieldUpdateOperationsInput | number
    totalViews?: IntFieldUpdateOperationsInput | number
    totalRequests?: IntFieldUpdateOperationsInput | number
    totalFavorites?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PlatformAnalyticsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalUsers?: IntFieldUpdateOperationsInput | number
    activeUsers?: IntFieldUpdateOperationsInput | number
    totalProperties?: IntFieldUpdateOperationsInput | number
    activeProperties?: IntFieldUpdateOperationsInput | number
    totalSales?: IntFieldUpdateOperationsInput | number
    totalRentals?: IntFieldUpdateOperationsInput | number
    totalRevenue?: FloatFieldUpdateOperationsInput | number
    totalViews?: IntFieldUpdateOperationsInput | number
    totalRequests?: IntFieldUpdateOperationsInput | number
    totalFavorites?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PlatformAnalyticsCreateManyInput = {
    id?: string
    totalUsers?: number
    activeUsers?: number
    totalProperties?: number
    activeProperties?: number
    totalSales?: number
    totalRentals?: number
    totalRevenue?: number
    totalViews?: number
    totalRequests?: number
    totalFavorites?: number
    date?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PlatformAnalyticsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalUsers?: IntFieldUpdateOperationsInput | number
    activeUsers?: IntFieldUpdateOperationsInput | number
    totalProperties?: IntFieldUpdateOperationsInput | number
    activeProperties?: IntFieldUpdateOperationsInput | number
    totalSales?: IntFieldUpdateOperationsInput | number
    totalRentals?: IntFieldUpdateOperationsInput | number
    totalRevenue?: FloatFieldUpdateOperationsInput | number
    totalViews?: IntFieldUpdateOperationsInput | number
    totalRequests?: IntFieldUpdateOperationsInput | number
    totalFavorites?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PlatformAnalyticsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalUsers?: IntFieldUpdateOperationsInput | number
    activeUsers?: IntFieldUpdateOperationsInput | number
    totalProperties?: IntFieldUpdateOperationsInput | number
    activeProperties?: IntFieldUpdateOperationsInput | number
    totalSales?: IntFieldUpdateOperationsInput | number
    totalRentals?: IntFieldUpdateOperationsInput | number
    totalRevenue?: FloatFieldUpdateOperationsInput | number
    totalViews?: IntFieldUpdateOperationsInput | number
    totalRequests?: IntFieldUpdateOperationsInput | number
    totalFavorites?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type EnumUserRoleNullableListFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel> | null
    has?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel> | null
    hasEvery?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    hasSome?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type PropertyViewListRelationFilter = {
    every?: PropertyViewWhereInput
    some?: PropertyViewWhereInput
    none?: PropertyViewWhereInput
  }

  export type FavoriteListRelationFilter = {
    every?: FavoriteWhereInput
    some?: FavoriteWhereInput
    none?: FavoriteWhereInput
  }

  export type FavoriteListListRelationFilter = {
    every?: FavoriteListWhereInput
    some?: FavoriteListWhereInput
    none?: FavoriteListWhereInput
  }

  export type PropertyRequestListRelationFilter = {
    every?: PropertyRequestWhereInput
    some?: PropertyRequestWhereInput
    none?: PropertyRequestWhereInput
  }

  export type PropertyInquiryListRelationFilter = {
    every?: PropertyInquiryWhereInput
    some?: PropertyInquiryWhereInput
    none?: PropertyInquiryWhereInput
  }

  export type PropertyComparisonListRelationFilter = {
    every?: PropertyComparisonWhereInput
    some?: PropertyComparisonWhereInput
    none?: PropertyComparisonWhereInput
  }

  export type PropertyReviewListRelationFilter = {
    every?: PropertyReviewWhereInput
    some?: PropertyReviewWhereInput
    none?: PropertyReviewWhereInput
  }

  export type PropertyCommentListRelationFilter = {
    every?: PropertyCommentWhereInput
    some?: PropertyCommentWhereInput
    none?: PropertyCommentWhereInput
  }

  export type PropertyListRelationFilter = {
    every?: PropertyWhereInput
    some?: PropertyWhereInput
    none?: PropertyWhereInput
  }

  export type PropertyViewingListRelationFilter = {
    every?: PropertyViewingWhereInput
    some?: PropertyViewingWhereInput
    none?: PropertyViewingWhereInput
  }

  export type PropertyAnalyticsListRelationFilter = {
    every?: PropertyAnalyticsWhereInput
    some?: PropertyAnalyticsWhereInput
    none?: PropertyAnalyticsWhereInput
  }

  export type AgencyNullableScalarRelationFilter = {
    is?: AgencyWhereInput | null
    isNot?: AgencyWhereInput | null
  }

  export type AgencyRoleListRelationFilter = {
    every?: AgencyRoleWhereInput
    some?: AgencyRoleWhereInput
    none?: AgencyRoleWhereInput
  }

  export type AdminActionListRelationFilter = {
    every?: AdminActionWhereInput
    some?: AdminActionWhereInput
    none?: AdminActionWhereInput
  }

  export type NotificationListRelationFilter = {
    every?: NotificationWhereInput
    some?: NotificationWhereInput
    none?: NotificationWhereInput
  }

  export type PaymentListRelationFilter = {
    every?: PaymentWhereInput
    some?: PaymentWhereInput
    none?: PaymentWhereInput
  }

  export type AgencyMemberListRelationFilter = {
    every?: AgencyMemberWhereInput
    some?: AgencyMemberWhereInput
    none?: AgencyMemberWhereInput
  }

  export type SavedSearchListRelationFilter = {
    every?: SavedSearchWhereInput
    some?: SavedSearchWhereInput
    none?: SavedSearchWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type PropertyViewOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FavoriteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FavoriteListOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PropertyRequestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PropertyInquiryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PropertyComparisonOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PropertyReviewOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PropertyCommentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PropertyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PropertyViewingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PropertyAnalyticsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AgencyRoleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AdminActionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NotificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PaymentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AgencyMemberOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SavedSearchOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    avatar?: SortOrder
    roles?: SortOrder
    dateOfBirth?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    country?: SortOrder
    isVerified?: SortOrder
    isActive?: SortOrder
    isBanned?: SortOrder
    banReason?: SortOrder
    bannedAt?: SortOrder
    bannedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agencyId?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    avatar?: SortOrder
    dateOfBirth?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    country?: SortOrder
    isVerified?: SortOrder
    isActive?: SortOrder
    isBanned?: SortOrder
    banReason?: SortOrder
    bannedAt?: SortOrder
    bannedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agencyId?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    avatar?: SortOrder
    dateOfBirth?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    country?: SortOrder
    isVerified?: SortOrder
    isActive?: SortOrder
    isBanned?: SortOrder
    banReason?: SortOrder
    bannedAt?: SortOrder
    bannedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agencyId?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumAgencyActivityTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AgencyActivityType | EnumAgencyActivityTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AgencyActivityType[] | ListEnumAgencyActivityTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AgencyActivityType[] | ListEnumAgencyActivityTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAgencyActivityTypeFilter<$PrismaModel> | $Enums.AgencyActivityType
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type EnumAgencyVerificationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AgencyVerificationStatus | EnumAgencyVerificationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AgencyVerificationStatus[] | ListEnumAgencyVerificationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AgencyVerificationStatus[] | ListEnumAgencyVerificationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAgencyVerificationStatusFilter<$PrismaModel> | $Enums.AgencyVerificationStatus
  }

  export type AgencyVerificationDocumentListRelationFilter = {
    every?: AgencyVerificationDocumentWhereInput
    some?: AgencyVerificationDocumentWhereInput
    none?: AgencyVerificationDocumentWhereInput
  }

  export type AgencyPerformanceNullableScalarRelationFilter = {
    is?: AgencyPerformanceWhereInput | null
    isNot?: AgencyPerformanceWhereInput | null
  }

  export type AgencyInquiryListRelationFilter = {
    every?: AgencyInquiryWhereInput
    some?: AgencyInquiryWhereInput
    none?: AgencyInquiryWhereInput
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type AgencyVerificationDocumentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AgencyInquiryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AgencyCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    logo?: SortOrder
    activityType?: SortOrder
    businessPhone?: SortOrder
    businessEmail?: SortOrder
    website?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    country?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    businessRegistrationNumber?: SortOrder
    activityLicense?: SortOrder
    taxId?: SortOrder
    bankAccountInfo?: SortOrder
    isVerified?: SortOrder
    isActive?: SortOrder
    isSuspended?: SortOrder
    suspensionReason?: SortOrder
    suspendedAt?: SortOrder
    suspendedBy?: SortOrder
    verificationStatus?: SortOrder
    verifiedBy?: SortOrder
    verifiedAt?: SortOrder
    verificationNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AgencyAvgOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type AgencyMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    logo?: SortOrder
    activityType?: SortOrder
    businessPhone?: SortOrder
    businessEmail?: SortOrder
    website?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    country?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    businessRegistrationNumber?: SortOrder
    activityLicense?: SortOrder
    taxId?: SortOrder
    bankAccountInfo?: SortOrder
    isVerified?: SortOrder
    isActive?: SortOrder
    isSuspended?: SortOrder
    suspensionReason?: SortOrder
    suspendedAt?: SortOrder
    suspendedBy?: SortOrder
    verificationStatus?: SortOrder
    verifiedBy?: SortOrder
    verifiedAt?: SortOrder
    verificationNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AgencyMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    logo?: SortOrder
    activityType?: SortOrder
    businessPhone?: SortOrder
    businessEmail?: SortOrder
    website?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    country?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    businessRegistrationNumber?: SortOrder
    activityLicense?: SortOrder
    taxId?: SortOrder
    bankAccountInfo?: SortOrder
    isVerified?: SortOrder
    isActive?: SortOrder
    isSuspended?: SortOrder
    suspensionReason?: SortOrder
    suspendedAt?: SortOrder
    suspendedBy?: SortOrder
    verificationStatus?: SortOrder
    verifiedBy?: SortOrder
    verifiedAt?: SortOrder
    verificationNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AgencySumOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type EnumAgencyActivityTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AgencyActivityType | EnumAgencyActivityTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AgencyActivityType[] | ListEnumAgencyActivityTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AgencyActivityType[] | ListEnumAgencyActivityTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAgencyActivityTypeWithAggregatesFilter<$PrismaModel> | $Enums.AgencyActivityType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAgencyActivityTypeFilter<$PrismaModel>
    _max?: NestedEnumAgencyActivityTypeFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type EnumAgencyVerificationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AgencyVerificationStatus | EnumAgencyVerificationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AgencyVerificationStatus[] | ListEnumAgencyVerificationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AgencyVerificationStatus[] | ListEnumAgencyVerificationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAgencyVerificationStatusWithAggregatesFilter<$PrismaModel> | $Enums.AgencyVerificationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAgencyVerificationStatusFilter<$PrismaModel>
    _max?: NestedEnumAgencyVerificationStatusFilter<$PrismaModel>
  }

  export type EnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type AgencyScalarRelationFilter = {
    is?: AgencyWhereInput
    isNot?: AgencyWhereInput
  }

  export type AgentPerformanceNullableScalarRelationFilter = {
    is?: AgentPerformanceWhereInput | null
    isNot?: AgentPerformanceWhereInput | null
  }

  export type AgencyMemberUserIdAgencyIdCompoundUniqueInput = {
    userId: string
    agencyId: string
  }

  export type AgencyMemberCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    agencyId?: SortOrder
    role?: SortOrder
    canManageProperties?: SortOrder
    canManageTeam?: SortOrder
    canViewAllData?: SortOrder
    canContactClients?: SortOrder
    canScheduleViewings?: SortOrder
    canSetPrices?: SortOrder
    canUploadDocuments?: SortOrder
    joinedAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AgencyMemberMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    agencyId?: SortOrder
    role?: SortOrder
    canManageProperties?: SortOrder
    canManageTeam?: SortOrder
    canViewAllData?: SortOrder
    canContactClients?: SortOrder
    canScheduleViewings?: SortOrder
    canSetPrices?: SortOrder
    canUploadDocuments?: SortOrder
    joinedAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AgencyMemberMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    agencyId?: SortOrder
    role?: SortOrder
    canManageProperties?: SortOrder
    canManageTeam?: SortOrder
    canViewAllData?: SortOrder
    canContactClients?: SortOrder
    canScheduleViewings?: SortOrder
    canSetPrices?: SortOrder
    canUploadDocuments?: SortOrder
    joinedAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type AgencyRoleUserIdAgencyIdCompoundUniqueInput = {
    userId: string
    agencyId: string
  }

  export type AgencyRoleCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    agencyId?: SortOrder
    role?: SortOrder
    title?: SortOrder
    description?: SortOrder
    canManageProperties?: SortOrder
    canManageTeam?: SortOrder
    canViewAllData?: SortOrder
    canContactClients?: SortOrder
    canScheduleViewings?: SortOrder
    canSetPrices?: SortOrder
    canUploadDocuments?: SortOrder
    assignedAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AgencyRoleMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    agencyId?: SortOrder
    role?: SortOrder
    title?: SortOrder
    description?: SortOrder
    canManageProperties?: SortOrder
    canManageTeam?: SortOrder
    canViewAllData?: SortOrder
    canContactClients?: SortOrder
    canScheduleViewings?: SortOrder
    canSetPrices?: SortOrder
    canUploadDocuments?: SortOrder
    assignedAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AgencyRoleMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    agencyId?: SortOrder
    role?: SortOrder
    title?: SortOrder
    description?: SortOrder
    canManageProperties?: SortOrder
    canManageTeam?: SortOrder
    canViewAllData?: SortOrder
    canContactClients?: SortOrder
    canScheduleViewings?: SortOrder
    canSetPrices?: SortOrder
    canUploadDocuments?: SortOrder
    assignedAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type AgencyVerificationDocumentCountOrderByAggregateInput = {
    id?: SortOrder
    documentType?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    title?: SortOrder
    description?: SortOrder
    isVerified?: SortOrder
    reviewedBy?: SortOrder
    reviewedAt?: SortOrder
    reviewNotes?: SortOrder
    uploadedAt?: SortOrder
    agencyId?: SortOrder
  }

  export type AgencyVerificationDocumentAvgOrderByAggregateInput = {
    fileSize?: SortOrder
  }

  export type AgencyVerificationDocumentMaxOrderByAggregateInput = {
    id?: SortOrder
    documentType?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    title?: SortOrder
    description?: SortOrder
    isVerified?: SortOrder
    reviewedBy?: SortOrder
    reviewedAt?: SortOrder
    reviewNotes?: SortOrder
    uploadedAt?: SortOrder
    agencyId?: SortOrder
  }

  export type AgencyVerificationDocumentMinOrderByAggregateInput = {
    id?: SortOrder
    documentType?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    title?: SortOrder
    description?: SortOrder
    isVerified?: SortOrder
    reviewedBy?: SortOrder
    reviewedAt?: SortOrder
    reviewNotes?: SortOrder
    uploadedAt?: SortOrder
    agencyId?: SortOrder
  }

  export type AgencyVerificationDocumentSumOrderByAggregateInput = {
    fileSize?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type AgencyPerformanceCountOrderByAggregateInput = {
    id?: SortOrder
    totalSales?: SortOrder
    totalRentals?: SortOrder
    totalRevenue?: SortOrder
    topAgent?: SortOrder
    topAgentSales?: SortOrder
    topAgentRevenue?: SortOrder
    salesThisMonth?: SortOrder
    salesThisYear?: SortOrder
    revenueThisMonth?: SortOrder
    revenueThisYear?: SortOrder
    lastCalculated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agencyId?: SortOrder
  }

  export type AgencyPerformanceAvgOrderByAggregateInput = {
    totalSales?: SortOrder
    totalRentals?: SortOrder
    totalRevenue?: SortOrder
    topAgentSales?: SortOrder
    topAgentRevenue?: SortOrder
    salesThisMonth?: SortOrder
    salesThisYear?: SortOrder
    revenueThisMonth?: SortOrder
    revenueThisYear?: SortOrder
  }

  export type AgencyPerformanceMaxOrderByAggregateInput = {
    id?: SortOrder
    totalSales?: SortOrder
    totalRentals?: SortOrder
    totalRevenue?: SortOrder
    topAgent?: SortOrder
    topAgentSales?: SortOrder
    topAgentRevenue?: SortOrder
    salesThisMonth?: SortOrder
    salesThisYear?: SortOrder
    revenueThisMonth?: SortOrder
    revenueThisYear?: SortOrder
    lastCalculated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agencyId?: SortOrder
  }

  export type AgencyPerformanceMinOrderByAggregateInput = {
    id?: SortOrder
    totalSales?: SortOrder
    totalRentals?: SortOrder
    totalRevenue?: SortOrder
    topAgent?: SortOrder
    topAgentSales?: SortOrder
    topAgentRevenue?: SortOrder
    salesThisMonth?: SortOrder
    salesThisYear?: SortOrder
    revenueThisMonth?: SortOrder
    revenueThisYear?: SortOrder
    lastCalculated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agencyId?: SortOrder
  }

  export type AgencyPerformanceSumOrderByAggregateInput = {
    totalSales?: SortOrder
    totalRentals?: SortOrder
    totalRevenue?: SortOrder
    topAgentSales?: SortOrder
    topAgentRevenue?: SortOrder
    salesThisMonth?: SortOrder
    salesThisYear?: SortOrder
    revenueThisMonth?: SortOrder
    revenueThisYear?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type AgencyMemberScalarRelationFilter = {
    is?: AgencyMemberWhereInput
    isNot?: AgencyMemberWhereInput
  }

  export type AgentPerformanceCountOrderByAggregateInput = {
    id?: SortOrder
    totalSales?: SortOrder
    totalRentals?: SortOrder
    totalRevenue?: SortOrder
    salesThisMonth?: SortOrder
    salesThisYear?: SortOrder
    revenueThisMonth?: SortOrder
    revenueThisYear?: SortOrder
    averageResponseTime?: SortOrder
    totalInquiries?: SortOrder
    convertedInquiries?: SortOrder
    lastCalculated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agentId?: SortOrder
  }

  export type AgentPerformanceAvgOrderByAggregateInput = {
    totalSales?: SortOrder
    totalRentals?: SortOrder
    totalRevenue?: SortOrder
    salesThisMonth?: SortOrder
    salesThisYear?: SortOrder
    revenueThisMonth?: SortOrder
    revenueThisYear?: SortOrder
    averageResponseTime?: SortOrder
    totalInquiries?: SortOrder
    convertedInquiries?: SortOrder
  }

  export type AgentPerformanceMaxOrderByAggregateInput = {
    id?: SortOrder
    totalSales?: SortOrder
    totalRentals?: SortOrder
    totalRevenue?: SortOrder
    salesThisMonth?: SortOrder
    salesThisYear?: SortOrder
    revenueThisMonth?: SortOrder
    revenueThisYear?: SortOrder
    averageResponseTime?: SortOrder
    totalInquiries?: SortOrder
    convertedInquiries?: SortOrder
    lastCalculated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agentId?: SortOrder
  }

  export type AgentPerformanceMinOrderByAggregateInput = {
    id?: SortOrder
    totalSales?: SortOrder
    totalRentals?: SortOrder
    totalRevenue?: SortOrder
    salesThisMonth?: SortOrder
    salesThisYear?: SortOrder
    revenueThisMonth?: SortOrder
    revenueThisYear?: SortOrder
    averageResponseTime?: SortOrder
    totalInquiries?: SortOrder
    convertedInquiries?: SortOrder
    lastCalculated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agentId?: SortOrder
  }

  export type AgentPerformanceSumOrderByAggregateInput = {
    totalSales?: SortOrder
    totalRentals?: SortOrder
    totalRevenue?: SortOrder
    salesThisMonth?: SortOrder
    salesThisYear?: SortOrder
    revenueThisMonth?: SortOrder
    revenueThisYear?: SortOrder
    averageResponseTime?: SortOrder
    totalInquiries?: SortOrder
    convertedInquiries?: SortOrder
  }

  export type EnumInquiryStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.InquiryStatus | EnumInquiryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InquiryStatus[] | ListEnumInquiryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InquiryStatus[] | ListEnumInquiryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInquiryStatusFilter<$PrismaModel> | $Enums.InquiryStatus
  }

  export type PropertyNullableScalarRelationFilter = {
    is?: PropertyWhereInput | null
    isNot?: PropertyWhereInput | null
  }

  export type AgencyInquiryCountOrderByAggregateInput = {
    id?: SortOrder
    subject?: SortOrder
    message?: SortOrder
    whoSentIt?: SortOrder
    whichProperty?: SortOrder
    status?: SortOrder
    whenSent?: SortOrder
    response?: SortOrder
    respondedAt?: SortOrder
    respondedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agencyId?: SortOrder
    propertyId?: SortOrder
  }

  export type AgencyInquiryMaxOrderByAggregateInput = {
    id?: SortOrder
    subject?: SortOrder
    message?: SortOrder
    whoSentIt?: SortOrder
    whichProperty?: SortOrder
    status?: SortOrder
    whenSent?: SortOrder
    response?: SortOrder
    respondedAt?: SortOrder
    respondedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agencyId?: SortOrder
    propertyId?: SortOrder
  }

  export type AgencyInquiryMinOrderByAggregateInput = {
    id?: SortOrder
    subject?: SortOrder
    message?: SortOrder
    whoSentIt?: SortOrder
    whichProperty?: SortOrder
    status?: SortOrder
    whenSent?: SortOrder
    response?: SortOrder
    respondedAt?: SortOrder
    respondedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    agencyId?: SortOrder
    propertyId?: SortOrder
  }

  export type EnumInquiryStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.InquiryStatus | EnumInquiryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InquiryStatus[] | ListEnumInquiryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InquiryStatus[] | ListEnumInquiryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInquiryStatusWithAggregatesFilter<$PrismaModel> | $Enums.InquiryStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumInquiryStatusFilter<$PrismaModel>
    _max?: NestedEnumInquiryStatusFilter<$PrismaModel>
  }

  export type EnumPropertyTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.PropertyType | EnumPropertyTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PropertyType[] | ListEnumPropertyTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PropertyType[] | ListEnumPropertyTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPropertyTypeFilter<$PrismaModel> | $Enums.PropertyType
  }

  export type EnumTransactionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionType | EnumTransactionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionTypeFilter<$PrismaModel> | $Enums.TransactionType
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type EnumPropertyConditionFilter<$PrismaModel = never> = {
    equals?: $Enums.PropertyCondition | EnumPropertyConditionFieldRefInput<$PrismaModel>
    in?: $Enums.PropertyCondition[] | ListEnumPropertyConditionFieldRefInput<$PrismaModel>
    notIn?: $Enums.PropertyCondition[] | ListEnumPropertyConditionFieldRefInput<$PrismaModel>
    not?: NestedEnumPropertyConditionFilter<$PrismaModel> | $Enums.PropertyCondition
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type EnumLeaseTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.LeaseType | EnumLeaseTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.LeaseType[] | ListEnumLeaseTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.LeaseType[] | ListEnumLeaseTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumLeaseTypeNullableFilter<$PrismaModel> | $Enums.LeaseType | null
  }

  export type EnumPropertyStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PropertyStatus | EnumPropertyStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PropertyStatus[] | ListEnumPropertyStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PropertyStatus[] | ListEnumPropertyStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPropertyStatusFilter<$PrismaModel> | $Enums.PropertyStatus
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type PropertyPhotoListRelationFilter = {
    every?: PropertyPhotoWhereInput
    some?: PropertyPhotoWhereInput
    none?: PropertyPhotoWhereInput
  }

  export type PropertyVideoListRelationFilter = {
    every?: PropertyVideoWhereInput
    some?: PropertyVideoWhereInput
    none?: PropertyVideoWhereInput
  }

  export type VirtualTourListRelationFilter = {
    every?: VirtualTourWhereInput
    some?: VirtualTourWhereInput
    none?: VirtualTourWhereInput
  }

  export type PropertyComparisonPropertiesListRelationFilter = {
    every?: PropertyComparisonPropertiesWhereInput
    some?: PropertyComparisonPropertiesWhereInput
    none?: PropertyComparisonPropertiesWhereInput
  }

  export type PropertyPhotoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PropertyVideoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VirtualTourOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PropertyComparisonPropertiesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PropertyCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    type?: SortOrder
    transactionType?: SortOrder
    price?: SortOrder
    rentAmount?: SortOrder
    pricePerSqm?: SortOrder
    deposit?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    country?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    neighborhood?: SortOrder
    totalArea?: SortOrder
    landArea?: SortOrder
    floorNumber?: SortOrder
    totalFloors?: SortOrder
    bedrooms?: SortOrder
    bathrooms?: SortOrder
    livingRooms?: SortOrder
    kitchen?: SortOrder
    yearBuilt?: SortOrder
    condition?: SortOrder
    furnished?: SortOrder
    amenities?: SortOrder
    utilities?: SortOrder
    parking?: SortOrder
    garden?: SortOrder
    balcony?: SortOrder
    elevator?: SortOrder
    pool?: SortOrder
    ac?: SortOrder
    petPolicy?: SortOrder
    nearbyServices?: SortOrder
    energyRating?: SortOrder
    leaseType?: SortOrder
    minRentalPeriod?: SortOrder
    availableDate?: SortOrder
    status?: SortOrder
    isVerified?: SortOrder
    verifiedBy?: SortOrder
    verifiedAt?: SortOrder
    verificationNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    listedAt?: SortOrder
    soldAt?: SortOrder
    rentedAt?: SortOrder
    ownerId?: SortOrder
    agentId?: SortOrder
    agencyId?: SortOrder
  }

  export type PropertyAvgOrderByAggregateInput = {
    price?: SortOrder
    rentAmount?: SortOrder
    pricePerSqm?: SortOrder
    deposit?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    totalArea?: SortOrder
    landArea?: SortOrder
    floorNumber?: SortOrder
    totalFloors?: SortOrder
    bedrooms?: SortOrder
    bathrooms?: SortOrder
    livingRooms?: SortOrder
    yearBuilt?: SortOrder
  }

  export type PropertyMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    type?: SortOrder
    transactionType?: SortOrder
    price?: SortOrder
    rentAmount?: SortOrder
    pricePerSqm?: SortOrder
    deposit?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    country?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    neighborhood?: SortOrder
    totalArea?: SortOrder
    landArea?: SortOrder
    floorNumber?: SortOrder
    totalFloors?: SortOrder
    bedrooms?: SortOrder
    bathrooms?: SortOrder
    livingRooms?: SortOrder
    kitchen?: SortOrder
    yearBuilt?: SortOrder
    condition?: SortOrder
    furnished?: SortOrder
    parking?: SortOrder
    garden?: SortOrder
    balcony?: SortOrder
    elevator?: SortOrder
    pool?: SortOrder
    ac?: SortOrder
    petPolicy?: SortOrder
    energyRating?: SortOrder
    leaseType?: SortOrder
    minRentalPeriod?: SortOrder
    availableDate?: SortOrder
    status?: SortOrder
    isVerified?: SortOrder
    verifiedBy?: SortOrder
    verifiedAt?: SortOrder
    verificationNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    listedAt?: SortOrder
    soldAt?: SortOrder
    rentedAt?: SortOrder
    ownerId?: SortOrder
    agentId?: SortOrder
    agencyId?: SortOrder
  }

  export type PropertyMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    type?: SortOrder
    transactionType?: SortOrder
    price?: SortOrder
    rentAmount?: SortOrder
    pricePerSqm?: SortOrder
    deposit?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    country?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    neighborhood?: SortOrder
    totalArea?: SortOrder
    landArea?: SortOrder
    floorNumber?: SortOrder
    totalFloors?: SortOrder
    bedrooms?: SortOrder
    bathrooms?: SortOrder
    livingRooms?: SortOrder
    kitchen?: SortOrder
    yearBuilt?: SortOrder
    condition?: SortOrder
    furnished?: SortOrder
    parking?: SortOrder
    garden?: SortOrder
    balcony?: SortOrder
    elevator?: SortOrder
    pool?: SortOrder
    ac?: SortOrder
    petPolicy?: SortOrder
    energyRating?: SortOrder
    leaseType?: SortOrder
    minRentalPeriod?: SortOrder
    availableDate?: SortOrder
    status?: SortOrder
    isVerified?: SortOrder
    verifiedBy?: SortOrder
    verifiedAt?: SortOrder
    verificationNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    listedAt?: SortOrder
    soldAt?: SortOrder
    rentedAt?: SortOrder
    ownerId?: SortOrder
    agentId?: SortOrder
    agencyId?: SortOrder
  }

  export type PropertySumOrderByAggregateInput = {
    price?: SortOrder
    rentAmount?: SortOrder
    pricePerSqm?: SortOrder
    deposit?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    totalArea?: SortOrder
    landArea?: SortOrder
    floorNumber?: SortOrder
    totalFloors?: SortOrder
    bedrooms?: SortOrder
    bathrooms?: SortOrder
    livingRooms?: SortOrder
    yearBuilt?: SortOrder
  }

  export type EnumPropertyTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PropertyType | EnumPropertyTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PropertyType[] | ListEnumPropertyTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PropertyType[] | ListEnumPropertyTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPropertyTypeWithAggregatesFilter<$PrismaModel> | $Enums.PropertyType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPropertyTypeFilter<$PrismaModel>
    _max?: NestedEnumPropertyTypeFilter<$PrismaModel>
  }

  export type EnumTransactionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionType | EnumTransactionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionTypeWithAggregatesFilter<$PrismaModel> | $Enums.TransactionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransactionTypeFilter<$PrismaModel>
    _max?: NestedEnumTransactionTypeFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EnumPropertyConditionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PropertyCondition | EnumPropertyConditionFieldRefInput<$PrismaModel>
    in?: $Enums.PropertyCondition[] | ListEnumPropertyConditionFieldRefInput<$PrismaModel>
    notIn?: $Enums.PropertyCondition[] | ListEnumPropertyConditionFieldRefInput<$PrismaModel>
    not?: NestedEnumPropertyConditionWithAggregatesFilter<$PrismaModel> | $Enums.PropertyCondition
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPropertyConditionFilter<$PrismaModel>
    _max?: NestedEnumPropertyConditionFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type EnumLeaseTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LeaseType | EnumLeaseTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.LeaseType[] | ListEnumLeaseTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.LeaseType[] | ListEnumLeaseTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumLeaseTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.LeaseType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumLeaseTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumLeaseTypeNullableFilter<$PrismaModel>
  }

  export type EnumPropertyStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PropertyStatus | EnumPropertyStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PropertyStatus[] | ListEnumPropertyStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PropertyStatus[] | ListEnumPropertyStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPropertyStatusWithAggregatesFilter<$PrismaModel> | $Enums.PropertyStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPropertyStatusFilter<$PrismaModel>
    _max?: NestedEnumPropertyStatusFilter<$PrismaModel>
  }

  export type PropertyScalarRelationFilter = {
    is?: PropertyWhereInput
    isNot?: PropertyWhereInput
  }

  export type PropertyPhotoCountOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    caption?: SortOrder
    altText?: SortOrder
    isPrimary?: SortOrder
    order?: SortOrder
    category?: SortOrder
    createdAt?: SortOrder
    propertyId?: SortOrder
  }

  export type PropertyPhotoAvgOrderByAggregateInput = {
    order?: SortOrder
  }

  export type PropertyPhotoMaxOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    caption?: SortOrder
    altText?: SortOrder
    isPrimary?: SortOrder
    order?: SortOrder
    category?: SortOrder
    createdAt?: SortOrder
    propertyId?: SortOrder
  }

  export type PropertyPhotoMinOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    caption?: SortOrder
    altText?: SortOrder
    isPrimary?: SortOrder
    order?: SortOrder
    category?: SortOrder
    createdAt?: SortOrder
    propertyId?: SortOrder
  }

  export type PropertyPhotoSumOrderByAggregateInput = {
    order?: SortOrder
  }

  export type PropertyVideoCountOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    thumbnail?: SortOrder
    duration?: SortOrder
    caption?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    propertyId?: SortOrder
  }

  export type PropertyVideoAvgOrderByAggregateInput = {
    duration?: SortOrder
    order?: SortOrder
  }

  export type PropertyVideoMaxOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    thumbnail?: SortOrder
    duration?: SortOrder
    caption?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    propertyId?: SortOrder
  }

  export type PropertyVideoMinOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    thumbnail?: SortOrder
    duration?: SortOrder
    caption?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    propertyId?: SortOrder
  }

  export type PropertyVideoSumOrderByAggregateInput = {
    duration?: SortOrder
    order?: SortOrder
  }

  export type VirtualTourCountOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    platform?: SortOrder
    caption?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    propertyId?: SortOrder
  }

  export type VirtualTourAvgOrderByAggregateInput = {
    order?: SortOrder
  }

  export type VirtualTourMaxOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    platform?: SortOrder
    caption?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    propertyId?: SortOrder
  }

  export type VirtualTourMinOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    platform?: SortOrder
    caption?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    propertyId?: SortOrder
  }

  export type VirtualTourSumOrderByAggregateInput = {
    order?: SortOrder
  }

  export type PropertyViewUserIdPropertyIdCompoundUniqueInput = {
    userId: string
    propertyId: string
  }

  export type PropertyViewCountOrderByAggregateInput = {
    id?: SortOrder
    viewedAt?: SortOrder
    viewDuration?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    userId?: SortOrder
    propertyId?: SortOrder
  }

  export type PropertyViewAvgOrderByAggregateInput = {
    viewDuration?: SortOrder
  }

  export type PropertyViewMaxOrderByAggregateInput = {
    id?: SortOrder
    viewedAt?: SortOrder
    viewDuration?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    userId?: SortOrder
    propertyId?: SortOrder
  }

  export type PropertyViewMinOrderByAggregateInput = {
    id?: SortOrder
    viewedAt?: SortOrder
    viewDuration?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    userId?: SortOrder
    propertyId?: SortOrder
  }

  export type PropertyViewSumOrderByAggregateInput = {
    viewDuration?: SortOrder
  }

  export type FavoriteListNullableScalarRelationFilter = {
    is?: FavoriteListWhereInput | null
    isNot?: FavoriteListWhereInput | null
  }

  export type FavoriteUserIdPropertyIdCompoundUniqueInput = {
    userId: string
    propertyId: string
  }

  export type FavoriteCountOrderByAggregateInput = {
    id?: SortOrder
    notes?: SortOrder
    priority?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    propertyId?: SortOrder
    listId?: SortOrder
    favoriteListId?: SortOrder
  }

  export type FavoriteAvgOrderByAggregateInput = {
    priority?: SortOrder
  }

  export type FavoriteMaxOrderByAggregateInput = {
    id?: SortOrder
    notes?: SortOrder
    priority?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    propertyId?: SortOrder
    listId?: SortOrder
    favoriteListId?: SortOrder
  }

  export type FavoriteMinOrderByAggregateInput = {
    id?: SortOrder
    notes?: SortOrder
    priority?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
    propertyId?: SortOrder
    listId?: SortOrder
    favoriteListId?: SortOrder
  }

  export type FavoriteSumOrderByAggregateInput = {
    priority?: SortOrder
  }

  export type FavoriteListCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    isPublic?: SortOrder
    isDefault?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
  }

  export type FavoriteListMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    isPublic?: SortOrder
    isDefault?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
  }

  export type FavoriteListMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    isPublic?: SortOrder
    isDefault?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
  }

  export type EnumRequestTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.RequestType | EnumRequestTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RequestType[] | ListEnumRequestTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RequestType[] | ListEnumRequestTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRequestTypeFilter<$PrismaModel> | $Enums.RequestType
  }

  export type EnumRequestStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.RequestStatus | EnumRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRequestStatusFilter<$PrismaModel> | $Enums.RequestStatus
  }

  export type PropertyRequestCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    message?: SortOrder
    status?: SortOrder
    preferredDate?: SortOrder
    preferredTime?: SortOrder
    budget?: SortOrder
    timeline?: SortOrder
    sellerResponse?: SortOrder
    responseDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    buyerId?: SortOrder
    propertyId?: SortOrder
    userId?: SortOrder
  }

  export type PropertyRequestAvgOrderByAggregateInput = {
    budget?: SortOrder
  }

  export type PropertyRequestMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    message?: SortOrder
    status?: SortOrder
    preferredDate?: SortOrder
    preferredTime?: SortOrder
    budget?: SortOrder
    timeline?: SortOrder
    sellerResponse?: SortOrder
    responseDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    buyerId?: SortOrder
    propertyId?: SortOrder
    userId?: SortOrder
  }

  export type PropertyRequestMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    message?: SortOrder
    status?: SortOrder
    preferredDate?: SortOrder
    preferredTime?: SortOrder
    budget?: SortOrder
    timeline?: SortOrder
    sellerResponse?: SortOrder
    responseDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    buyerId?: SortOrder
    propertyId?: SortOrder
    userId?: SortOrder
  }

  export type PropertyRequestSumOrderByAggregateInput = {
    budget?: SortOrder
  }

  export type EnumRequestTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RequestType | EnumRequestTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RequestType[] | ListEnumRequestTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RequestType[] | ListEnumRequestTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRequestTypeWithAggregatesFilter<$PrismaModel> | $Enums.RequestType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRequestTypeFilter<$PrismaModel>
    _max?: NestedEnumRequestTypeFilter<$PrismaModel>
  }

  export type EnumRequestStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RequestStatus | EnumRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRequestStatusWithAggregatesFilter<$PrismaModel> | $Enums.RequestStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRequestStatusFilter<$PrismaModel>
    _max?: NestedEnumRequestStatusFilter<$PrismaModel>
  }

  export type PropertyInquiryCountOrderByAggregateInput = {
    id?: SortOrder
    subject?: SortOrder
    message?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    propertyId?: SortOrder
  }

  export type PropertyInquiryMaxOrderByAggregateInput = {
    id?: SortOrder
    subject?: SortOrder
    message?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    propertyId?: SortOrder
  }

  export type PropertyInquiryMinOrderByAggregateInput = {
    id?: SortOrder
    subject?: SortOrder
    message?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    propertyId?: SortOrder
  }

  export type PropertyComparisonCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
  }

  export type PropertyComparisonMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
  }

  export type PropertyComparisonMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
  }

  export type PropertyComparisonScalarRelationFilter = {
    is?: PropertyComparisonWhereInput
    isNot?: PropertyComparisonWhereInput
  }

  export type PropertyComparisonPropertiesPropertyComparisonIdPropertyIdCompoundUniqueInput = {
    propertyComparisonId: string
    propertyId: string
  }

  export type PropertyComparisonPropertiesCountOrderByAggregateInput = {
    id?: SortOrder
    propertyComparisonId?: SortOrder
    propertyId?: SortOrder
  }

  export type PropertyComparisonPropertiesMaxOrderByAggregateInput = {
    id?: SortOrder
    propertyComparisonId?: SortOrder
    propertyId?: SortOrder
  }

  export type PropertyComparisonPropertiesMinOrderByAggregateInput = {
    id?: SortOrder
    propertyComparisonId?: SortOrder
    propertyId?: SortOrder
  }

  export type PropertyReviewReviewerIdPropertyIdCompoundUniqueInput = {
    reviewerId: string
    propertyId: string
  }

  export type PropertyReviewCountOrderByAggregateInput = {
    id?: SortOrder
    rating?: SortOrder
    title?: SortOrder
    comment?: SortOrder
    isVerified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    reviewerId?: SortOrder
    propertyId?: SortOrder
    userId?: SortOrder
  }

  export type PropertyReviewAvgOrderByAggregateInput = {
    rating?: SortOrder
  }

  export type PropertyReviewMaxOrderByAggregateInput = {
    id?: SortOrder
    rating?: SortOrder
    title?: SortOrder
    comment?: SortOrder
    isVerified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    reviewerId?: SortOrder
    propertyId?: SortOrder
    userId?: SortOrder
  }

  export type PropertyReviewMinOrderByAggregateInput = {
    id?: SortOrder
    rating?: SortOrder
    title?: SortOrder
    comment?: SortOrder
    isVerified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    reviewerId?: SortOrder
    propertyId?: SortOrder
    userId?: SortOrder
  }

  export type PropertyReviewSumOrderByAggregateInput = {
    rating?: SortOrder
  }

  export type PropertyCommentCountOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    isPublic?: SortOrder
    isModerated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    authorId?: SortOrder
    propertyId?: SortOrder
    userId?: SortOrder
  }

  export type PropertyCommentMaxOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    isPublic?: SortOrder
    isModerated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    authorId?: SortOrder
    propertyId?: SortOrder
    userId?: SortOrder
  }

  export type PropertyCommentMinOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    isPublic?: SortOrder
    isModerated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    authorId?: SortOrder
    propertyId?: SortOrder
    userId?: SortOrder
  }

  export type PropertyRequestNullableScalarRelationFilter = {
    is?: PropertyRequestWhereInput | null
    isNot?: PropertyRequestWhereInput | null
  }

  export type PropertyViewingCountOrderByAggregateInput = {
    id?: SortOrder
    scheduledAt?: SortOrder
    duration?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    buyerNotes?: SortOrder
    location?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    propertyId?: SortOrder
    sellerId?: SortOrder
    buyerId?: SortOrder
    requestId?: SortOrder
    propertyRequestId?: SortOrder
  }

  export type PropertyViewingAvgOrderByAggregateInput = {
    duration?: SortOrder
  }

  export type PropertyViewingMaxOrderByAggregateInput = {
    id?: SortOrder
    scheduledAt?: SortOrder
    duration?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    buyerNotes?: SortOrder
    location?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    propertyId?: SortOrder
    sellerId?: SortOrder
    buyerId?: SortOrder
    requestId?: SortOrder
    propertyRequestId?: SortOrder
  }

  export type PropertyViewingMinOrderByAggregateInput = {
    id?: SortOrder
    scheduledAt?: SortOrder
    duration?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    buyerNotes?: SortOrder
    location?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    propertyId?: SortOrder
    sellerId?: SortOrder
    buyerId?: SortOrder
    requestId?: SortOrder
    propertyRequestId?: SortOrder
  }

  export type PropertyViewingSumOrderByAggregateInput = {
    duration?: SortOrder
  }

  export type PropertyAnalyticsCountOrderByAggregateInput = {
    id?: SortOrder
    totalViews?: SortOrder
    uniqueViews?: SortOrder
    totalFavorites?: SortOrder
    totalRequests?: SortOrder
    totalInquiries?: SortOrder
    averageViewDuration?: SortOrder
    bounceRate?: SortOrder
    conversionRate?: SortOrder
    viewsThisWeek?: SortOrder
    viewsThisMonth?: SortOrder
    viewsThisYear?: SortOrder
    lastCalculated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    propertyId?: SortOrder
    userId?: SortOrder
  }

  export type PropertyAnalyticsAvgOrderByAggregateInput = {
    totalViews?: SortOrder
    uniqueViews?: SortOrder
    totalFavorites?: SortOrder
    totalRequests?: SortOrder
    totalInquiries?: SortOrder
    averageViewDuration?: SortOrder
    bounceRate?: SortOrder
    conversionRate?: SortOrder
    viewsThisWeek?: SortOrder
    viewsThisMonth?: SortOrder
    viewsThisYear?: SortOrder
  }

  export type PropertyAnalyticsMaxOrderByAggregateInput = {
    id?: SortOrder
    totalViews?: SortOrder
    uniqueViews?: SortOrder
    totalFavorites?: SortOrder
    totalRequests?: SortOrder
    totalInquiries?: SortOrder
    averageViewDuration?: SortOrder
    bounceRate?: SortOrder
    conversionRate?: SortOrder
    viewsThisWeek?: SortOrder
    viewsThisMonth?: SortOrder
    viewsThisYear?: SortOrder
    lastCalculated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    propertyId?: SortOrder
    userId?: SortOrder
  }

  export type PropertyAnalyticsMinOrderByAggregateInput = {
    id?: SortOrder
    totalViews?: SortOrder
    uniqueViews?: SortOrder
    totalFavorites?: SortOrder
    totalRequests?: SortOrder
    totalInquiries?: SortOrder
    averageViewDuration?: SortOrder
    bounceRate?: SortOrder
    conversionRate?: SortOrder
    viewsThisWeek?: SortOrder
    viewsThisMonth?: SortOrder
    viewsThisYear?: SortOrder
    lastCalculated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    propertyId?: SortOrder
    userId?: SortOrder
  }

  export type PropertyAnalyticsSumOrderByAggregateInput = {
    totalViews?: SortOrder
    uniqueViews?: SortOrder
    totalFavorites?: SortOrder
    totalRequests?: SortOrder
    totalInquiries?: SortOrder
    averageViewDuration?: SortOrder
    bounceRate?: SortOrder
    conversionRate?: SortOrder
    viewsThisWeek?: SortOrder
    viewsThisMonth?: SortOrder
    viewsThisYear?: SortOrder
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type AdminActionCountOrderByAggregateInput = {
    id?: SortOrder
    action?: SortOrder
    details?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
    adminId?: SortOrder
    propertyId?: SortOrder
    userId?: SortOrder
    agencyId?: SortOrder
  }

  export type AdminActionMaxOrderByAggregateInput = {
    id?: SortOrder
    action?: SortOrder
    details?: SortOrder
    createdAt?: SortOrder
    adminId?: SortOrder
    propertyId?: SortOrder
    userId?: SortOrder
    agencyId?: SortOrder
  }

  export type AdminActionMinOrderByAggregateInput = {
    id?: SortOrder
    action?: SortOrder
    details?: SortOrder
    createdAt?: SortOrder
    adminId?: SortOrder
    propertyId?: SortOrder
    userId?: SortOrder
    agencyId?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type EnumNotificationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeFilter<$PrismaModel> | $Enums.NotificationType
  }

  export type NotificationCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    title?: SortOrder
    message?: SortOrder
    isRead?: SortOrder
    readAt?: SortOrder
    data?: SortOrder
    link?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
  }

  export type NotificationMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    title?: SortOrder
    message?: SortOrder
    isRead?: SortOrder
    readAt?: SortOrder
    link?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
  }

  export type NotificationMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    title?: SortOrder
    message?: SortOrder
    isRead?: SortOrder
    readAt?: SortOrder
    link?: SortOrder
    createdAt?: SortOrder
    userId?: SortOrder
  }

  export type EnumNotificationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeWithAggregatesFilter<$PrismaModel> | $Enums.NotificationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNotificationTypeFilter<$PrismaModel>
    _max?: NestedEnumNotificationTypeFilter<$PrismaModel>
  }

  export type EnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type PaymentCountOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    transactionId?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    propertyId?: SortOrder
    requestId?: SortOrder
    propertyRequestId?: SortOrder
  }

  export type PaymentAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type PaymentMaxOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    transactionId?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    propertyId?: SortOrder
    requestId?: SortOrder
    propertyRequestId?: SortOrder
  }

  export type PaymentMinOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    transactionId?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    propertyId?: SortOrder
    requestId?: SortOrder
    propertyRequestId?: SortOrder
  }

  export type PaymentSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type EnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type EnumPropertyTypeNullableListFilter<$PrismaModel = never> = {
    equals?: $Enums.PropertyType[] | ListEnumPropertyTypeFieldRefInput<$PrismaModel> | null
    has?: $Enums.PropertyType | EnumPropertyTypeFieldRefInput<$PrismaModel> | null
    hasEvery?: $Enums.PropertyType[] | ListEnumPropertyTypeFieldRefInput<$PrismaModel>
    hasSome?: $Enums.PropertyType[] | ListEnumPropertyTypeFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type EnumTransactionTypeNullableListFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel> | null
    has?: $Enums.TransactionType | EnumTransactionTypeFieldRefInput<$PrismaModel> | null
    hasEvery?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    hasSome?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type SavedSearchCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    propertyTypes?: SortOrder
    transactionTypes?: SortOrder
    minPrice?: SortOrder
    maxPrice?: SortOrder
    minArea?: SortOrder
    maxArea?: SortOrder
    bedrooms?: SortOrder
    bathrooms?: SortOrder
    cities?: SortOrder
    neighborhoods?: SortOrder
    isActive?: SortOrder
    notifyOnMatch?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
  }

  export type SavedSearchAvgOrderByAggregateInput = {
    minPrice?: SortOrder
    maxPrice?: SortOrder
    minArea?: SortOrder
    maxArea?: SortOrder
    bedrooms?: SortOrder
    bathrooms?: SortOrder
  }

  export type SavedSearchMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    minPrice?: SortOrder
    maxPrice?: SortOrder
    minArea?: SortOrder
    maxArea?: SortOrder
    bedrooms?: SortOrder
    bathrooms?: SortOrder
    isActive?: SortOrder
    notifyOnMatch?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
  }

  export type SavedSearchMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    minPrice?: SortOrder
    maxPrice?: SortOrder
    minArea?: SortOrder
    maxArea?: SortOrder
    bedrooms?: SortOrder
    bathrooms?: SortOrder
    isActive?: SortOrder
    notifyOnMatch?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
  }

  export type SavedSearchSumOrderByAggregateInput = {
    minPrice?: SortOrder
    maxPrice?: SortOrder
    minArea?: SortOrder
    maxArea?: SortOrder
    bedrooms?: SortOrder
    bathrooms?: SortOrder
  }

  export type PlatformSettingCountOrderByAggregateInput = {
    id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    description?: SortOrder
    category?: SortOrder
    dataType?: SortOrder
    isPublic?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PlatformSettingMaxOrderByAggregateInput = {
    id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    description?: SortOrder
    category?: SortOrder
    dataType?: SortOrder
    isPublic?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PlatformSettingMinOrderByAggregateInput = {
    id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    description?: SortOrder
    category?: SortOrder
    dataType?: SortOrder
    isPublic?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PlatformAnalyticsCountOrderByAggregateInput = {
    id?: SortOrder
    totalUsers?: SortOrder
    activeUsers?: SortOrder
    totalProperties?: SortOrder
    activeProperties?: SortOrder
    totalSales?: SortOrder
    totalRentals?: SortOrder
    totalRevenue?: SortOrder
    totalViews?: SortOrder
    totalRequests?: SortOrder
    totalFavorites?: SortOrder
    date?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PlatformAnalyticsAvgOrderByAggregateInput = {
    totalUsers?: SortOrder
    activeUsers?: SortOrder
    totalProperties?: SortOrder
    activeProperties?: SortOrder
    totalSales?: SortOrder
    totalRentals?: SortOrder
    totalRevenue?: SortOrder
    totalViews?: SortOrder
    totalRequests?: SortOrder
    totalFavorites?: SortOrder
  }

  export type PlatformAnalyticsMaxOrderByAggregateInput = {
    id?: SortOrder
    totalUsers?: SortOrder
    activeUsers?: SortOrder
    totalProperties?: SortOrder
    activeProperties?: SortOrder
    totalSales?: SortOrder
    totalRentals?: SortOrder
    totalRevenue?: SortOrder
    totalViews?: SortOrder
    totalRequests?: SortOrder
    totalFavorites?: SortOrder
    date?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PlatformAnalyticsMinOrderByAggregateInput = {
    id?: SortOrder
    totalUsers?: SortOrder
    activeUsers?: SortOrder
    totalProperties?: SortOrder
    activeProperties?: SortOrder
    totalSales?: SortOrder
    totalRentals?: SortOrder
    totalRevenue?: SortOrder
    totalViews?: SortOrder
    totalRequests?: SortOrder
    totalFavorites?: SortOrder
    date?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PlatformAnalyticsSumOrderByAggregateInput = {
    totalUsers?: SortOrder
    activeUsers?: SortOrder
    totalProperties?: SortOrder
    activeProperties?: SortOrder
    totalSales?: SortOrder
    totalRentals?: SortOrder
    totalRevenue?: SortOrder
    totalViews?: SortOrder
    totalRequests?: SortOrder
    totalFavorites?: SortOrder
  }

  export type UserCreaterolesInput = {
    set: $Enums.UserRole[]
  }

  export type PropertyViewCreateNestedManyWithoutUserInput = {
    create?: XOR<PropertyViewCreateWithoutUserInput, PropertyViewUncheckedCreateWithoutUserInput> | PropertyViewCreateWithoutUserInput[] | PropertyViewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PropertyViewCreateOrConnectWithoutUserInput | PropertyViewCreateOrConnectWithoutUserInput[]
    createMany?: PropertyViewCreateManyUserInputEnvelope
    connect?: PropertyViewWhereUniqueInput | PropertyViewWhereUniqueInput[]
  }

  export type FavoriteCreateNestedManyWithoutUserInput = {
    create?: XOR<FavoriteCreateWithoutUserInput, FavoriteUncheckedCreateWithoutUserInput> | FavoriteCreateWithoutUserInput[] | FavoriteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutUserInput | FavoriteCreateOrConnectWithoutUserInput[]
    createMany?: FavoriteCreateManyUserInputEnvelope
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
  }

  export type FavoriteListCreateNestedManyWithoutUserInput = {
    create?: XOR<FavoriteListCreateWithoutUserInput, FavoriteListUncheckedCreateWithoutUserInput> | FavoriteListCreateWithoutUserInput[] | FavoriteListUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavoriteListCreateOrConnectWithoutUserInput | FavoriteListCreateOrConnectWithoutUserInput[]
    createMany?: FavoriteListCreateManyUserInputEnvelope
    connect?: FavoriteListWhereUniqueInput | FavoriteListWhereUniqueInput[]
  }

  export type PropertyRequestCreateNestedManyWithoutBuyerInput = {
    create?: XOR<PropertyRequestCreateWithoutBuyerInput, PropertyRequestUncheckedCreateWithoutBuyerInput> | PropertyRequestCreateWithoutBuyerInput[] | PropertyRequestUncheckedCreateWithoutBuyerInput[]
    connectOrCreate?: PropertyRequestCreateOrConnectWithoutBuyerInput | PropertyRequestCreateOrConnectWithoutBuyerInput[]
    createMany?: PropertyRequestCreateManyBuyerInputEnvelope
    connect?: PropertyRequestWhereUniqueInput | PropertyRequestWhereUniqueInput[]
  }

  export type PropertyInquiryCreateNestedManyWithoutUserInput = {
    create?: XOR<PropertyInquiryCreateWithoutUserInput, PropertyInquiryUncheckedCreateWithoutUserInput> | PropertyInquiryCreateWithoutUserInput[] | PropertyInquiryUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PropertyInquiryCreateOrConnectWithoutUserInput | PropertyInquiryCreateOrConnectWithoutUserInput[]
    createMany?: PropertyInquiryCreateManyUserInputEnvelope
    connect?: PropertyInquiryWhereUniqueInput | PropertyInquiryWhereUniqueInput[]
  }

  export type PropertyComparisonCreateNestedManyWithoutUserInput = {
    create?: XOR<PropertyComparisonCreateWithoutUserInput, PropertyComparisonUncheckedCreateWithoutUserInput> | PropertyComparisonCreateWithoutUserInput[] | PropertyComparisonUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PropertyComparisonCreateOrConnectWithoutUserInput | PropertyComparisonCreateOrConnectWithoutUserInput[]
    createMany?: PropertyComparisonCreateManyUserInputEnvelope
    connect?: PropertyComparisonWhereUniqueInput | PropertyComparisonWhereUniqueInput[]
  }

  export type PropertyReviewCreateNestedManyWithoutReviewerInput = {
    create?: XOR<PropertyReviewCreateWithoutReviewerInput, PropertyReviewUncheckedCreateWithoutReviewerInput> | PropertyReviewCreateWithoutReviewerInput[] | PropertyReviewUncheckedCreateWithoutReviewerInput[]
    connectOrCreate?: PropertyReviewCreateOrConnectWithoutReviewerInput | PropertyReviewCreateOrConnectWithoutReviewerInput[]
    createMany?: PropertyReviewCreateManyReviewerInputEnvelope
    connect?: PropertyReviewWhereUniqueInput | PropertyReviewWhereUniqueInput[]
  }

  export type PropertyCommentCreateNestedManyWithoutAuthorInput = {
    create?: XOR<PropertyCommentCreateWithoutAuthorInput, PropertyCommentUncheckedCreateWithoutAuthorInput> | PropertyCommentCreateWithoutAuthorInput[] | PropertyCommentUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: PropertyCommentCreateOrConnectWithoutAuthorInput | PropertyCommentCreateOrConnectWithoutAuthorInput[]
    createMany?: PropertyCommentCreateManyAuthorInputEnvelope
    connect?: PropertyCommentWhereUniqueInput | PropertyCommentWhereUniqueInput[]
  }

  export type PropertyCreateNestedManyWithoutOwnerInput = {
    create?: XOR<PropertyCreateWithoutOwnerInput, PropertyUncheckedCreateWithoutOwnerInput> | PropertyCreateWithoutOwnerInput[] | PropertyUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: PropertyCreateOrConnectWithoutOwnerInput | PropertyCreateOrConnectWithoutOwnerInput[]
    createMany?: PropertyCreateManyOwnerInputEnvelope
    connect?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
  }

  export type PropertyCreateNestedManyWithoutAgentInput = {
    create?: XOR<PropertyCreateWithoutAgentInput, PropertyUncheckedCreateWithoutAgentInput> | PropertyCreateWithoutAgentInput[] | PropertyUncheckedCreateWithoutAgentInput[]
    connectOrCreate?: PropertyCreateOrConnectWithoutAgentInput | PropertyCreateOrConnectWithoutAgentInput[]
    createMany?: PropertyCreateManyAgentInputEnvelope
    connect?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
  }

  export type PropertyViewingCreateNestedManyWithoutSellerInput = {
    create?: XOR<PropertyViewingCreateWithoutSellerInput, PropertyViewingUncheckedCreateWithoutSellerInput> | PropertyViewingCreateWithoutSellerInput[] | PropertyViewingUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: PropertyViewingCreateOrConnectWithoutSellerInput | PropertyViewingCreateOrConnectWithoutSellerInput[]
    createMany?: PropertyViewingCreateManySellerInputEnvelope
    connect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
  }

  export type PropertyViewingCreateNestedManyWithoutBuyerInput = {
    create?: XOR<PropertyViewingCreateWithoutBuyerInput, PropertyViewingUncheckedCreateWithoutBuyerInput> | PropertyViewingCreateWithoutBuyerInput[] | PropertyViewingUncheckedCreateWithoutBuyerInput[]
    connectOrCreate?: PropertyViewingCreateOrConnectWithoutBuyerInput | PropertyViewingCreateOrConnectWithoutBuyerInput[]
    createMany?: PropertyViewingCreateManyBuyerInputEnvelope
    connect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
  }

  export type PropertyAnalyticsCreateNestedManyWithoutUserInput = {
    create?: XOR<PropertyAnalyticsCreateWithoutUserInput, PropertyAnalyticsUncheckedCreateWithoutUserInput> | PropertyAnalyticsCreateWithoutUserInput[] | PropertyAnalyticsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PropertyAnalyticsCreateOrConnectWithoutUserInput | PropertyAnalyticsCreateOrConnectWithoutUserInput[]
    createMany?: PropertyAnalyticsCreateManyUserInputEnvelope
    connect?: PropertyAnalyticsWhereUniqueInput | PropertyAnalyticsWhereUniqueInput[]
  }

  export type AgencyCreateNestedOneWithoutUserInput = {
    create?: XOR<AgencyCreateWithoutUserInput, AgencyUncheckedCreateWithoutUserInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutUserInput
    connect?: AgencyWhereUniqueInput
  }

  export type AgencyRoleCreateNestedManyWithoutUserInput = {
    create?: XOR<AgencyRoleCreateWithoutUserInput, AgencyRoleUncheckedCreateWithoutUserInput> | AgencyRoleCreateWithoutUserInput[] | AgencyRoleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AgencyRoleCreateOrConnectWithoutUserInput | AgencyRoleCreateOrConnectWithoutUserInput[]
    createMany?: AgencyRoleCreateManyUserInputEnvelope
    connect?: AgencyRoleWhereUniqueInput | AgencyRoleWhereUniqueInput[]
  }

  export type AdminActionCreateNestedManyWithoutAdminInput = {
    create?: XOR<AdminActionCreateWithoutAdminInput, AdminActionUncheckedCreateWithoutAdminInput> | AdminActionCreateWithoutAdminInput[] | AdminActionUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: AdminActionCreateOrConnectWithoutAdminInput | AdminActionCreateOrConnectWithoutAdminInput[]
    createMany?: AdminActionCreateManyAdminInputEnvelope
    connect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
  }

  export type AdminActionCreateNestedManyWithoutUserInput = {
    create?: XOR<AdminActionCreateWithoutUserInput, AdminActionUncheckedCreateWithoutUserInput> | AdminActionCreateWithoutUserInput[] | AdminActionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AdminActionCreateOrConnectWithoutUserInput | AdminActionCreateOrConnectWithoutUserInput[]
    createMany?: AdminActionCreateManyUserInputEnvelope
    connect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutUserInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type PaymentCreateNestedManyWithoutUserInput = {
    create?: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput> | PaymentCreateWithoutUserInput[] | PaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUserInput | PaymentCreateOrConnectWithoutUserInput[]
    createMany?: PaymentCreateManyUserInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type AgencyMemberCreateNestedManyWithoutUserInput = {
    create?: XOR<AgencyMemberCreateWithoutUserInput, AgencyMemberUncheckedCreateWithoutUserInput> | AgencyMemberCreateWithoutUserInput[] | AgencyMemberUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AgencyMemberCreateOrConnectWithoutUserInput | AgencyMemberCreateOrConnectWithoutUserInput[]
    createMany?: AgencyMemberCreateManyUserInputEnvelope
    connect?: AgencyMemberWhereUniqueInput | AgencyMemberWhereUniqueInput[]
  }

  export type SavedSearchCreateNestedManyWithoutUserInput = {
    create?: XOR<SavedSearchCreateWithoutUserInput, SavedSearchUncheckedCreateWithoutUserInput> | SavedSearchCreateWithoutUserInput[] | SavedSearchUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SavedSearchCreateOrConnectWithoutUserInput | SavedSearchCreateOrConnectWithoutUserInput[]
    createMany?: SavedSearchCreateManyUserInputEnvelope
    connect?: SavedSearchWhereUniqueInput | SavedSearchWhereUniqueInput[]
  }

  export type PropertyViewUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<PropertyViewCreateWithoutUserInput, PropertyViewUncheckedCreateWithoutUserInput> | PropertyViewCreateWithoutUserInput[] | PropertyViewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PropertyViewCreateOrConnectWithoutUserInput | PropertyViewCreateOrConnectWithoutUserInput[]
    createMany?: PropertyViewCreateManyUserInputEnvelope
    connect?: PropertyViewWhereUniqueInput | PropertyViewWhereUniqueInput[]
  }

  export type FavoriteUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<FavoriteCreateWithoutUserInput, FavoriteUncheckedCreateWithoutUserInput> | FavoriteCreateWithoutUserInput[] | FavoriteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutUserInput | FavoriteCreateOrConnectWithoutUserInput[]
    createMany?: FavoriteCreateManyUserInputEnvelope
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
  }

  export type FavoriteListUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<FavoriteListCreateWithoutUserInput, FavoriteListUncheckedCreateWithoutUserInput> | FavoriteListCreateWithoutUserInput[] | FavoriteListUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavoriteListCreateOrConnectWithoutUserInput | FavoriteListCreateOrConnectWithoutUserInput[]
    createMany?: FavoriteListCreateManyUserInputEnvelope
    connect?: FavoriteListWhereUniqueInput | FavoriteListWhereUniqueInput[]
  }

  export type PropertyRequestUncheckedCreateNestedManyWithoutBuyerInput = {
    create?: XOR<PropertyRequestCreateWithoutBuyerInput, PropertyRequestUncheckedCreateWithoutBuyerInput> | PropertyRequestCreateWithoutBuyerInput[] | PropertyRequestUncheckedCreateWithoutBuyerInput[]
    connectOrCreate?: PropertyRequestCreateOrConnectWithoutBuyerInput | PropertyRequestCreateOrConnectWithoutBuyerInput[]
    createMany?: PropertyRequestCreateManyBuyerInputEnvelope
    connect?: PropertyRequestWhereUniqueInput | PropertyRequestWhereUniqueInput[]
  }

  export type PropertyInquiryUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<PropertyInquiryCreateWithoutUserInput, PropertyInquiryUncheckedCreateWithoutUserInput> | PropertyInquiryCreateWithoutUserInput[] | PropertyInquiryUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PropertyInquiryCreateOrConnectWithoutUserInput | PropertyInquiryCreateOrConnectWithoutUserInput[]
    createMany?: PropertyInquiryCreateManyUserInputEnvelope
    connect?: PropertyInquiryWhereUniqueInput | PropertyInquiryWhereUniqueInput[]
  }

  export type PropertyComparisonUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<PropertyComparisonCreateWithoutUserInput, PropertyComparisonUncheckedCreateWithoutUserInput> | PropertyComparisonCreateWithoutUserInput[] | PropertyComparisonUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PropertyComparisonCreateOrConnectWithoutUserInput | PropertyComparisonCreateOrConnectWithoutUserInput[]
    createMany?: PropertyComparisonCreateManyUserInputEnvelope
    connect?: PropertyComparisonWhereUniqueInput | PropertyComparisonWhereUniqueInput[]
  }

  export type PropertyReviewUncheckedCreateNestedManyWithoutReviewerInput = {
    create?: XOR<PropertyReviewCreateWithoutReviewerInput, PropertyReviewUncheckedCreateWithoutReviewerInput> | PropertyReviewCreateWithoutReviewerInput[] | PropertyReviewUncheckedCreateWithoutReviewerInput[]
    connectOrCreate?: PropertyReviewCreateOrConnectWithoutReviewerInput | PropertyReviewCreateOrConnectWithoutReviewerInput[]
    createMany?: PropertyReviewCreateManyReviewerInputEnvelope
    connect?: PropertyReviewWhereUniqueInput | PropertyReviewWhereUniqueInput[]
  }

  export type PropertyCommentUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<PropertyCommentCreateWithoutAuthorInput, PropertyCommentUncheckedCreateWithoutAuthorInput> | PropertyCommentCreateWithoutAuthorInput[] | PropertyCommentUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: PropertyCommentCreateOrConnectWithoutAuthorInput | PropertyCommentCreateOrConnectWithoutAuthorInput[]
    createMany?: PropertyCommentCreateManyAuthorInputEnvelope
    connect?: PropertyCommentWhereUniqueInput | PropertyCommentWhereUniqueInput[]
  }

  export type PropertyUncheckedCreateNestedManyWithoutOwnerInput = {
    create?: XOR<PropertyCreateWithoutOwnerInput, PropertyUncheckedCreateWithoutOwnerInput> | PropertyCreateWithoutOwnerInput[] | PropertyUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: PropertyCreateOrConnectWithoutOwnerInput | PropertyCreateOrConnectWithoutOwnerInput[]
    createMany?: PropertyCreateManyOwnerInputEnvelope
    connect?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
  }

  export type PropertyUncheckedCreateNestedManyWithoutAgentInput = {
    create?: XOR<PropertyCreateWithoutAgentInput, PropertyUncheckedCreateWithoutAgentInput> | PropertyCreateWithoutAgentInput[] | PropertyUncheckedCreateWithoutAgentInput[]
    connectOrCreate?: PropertyCreateOrConnectWithoutAgentInput | PropertyCreateOrConnectWithoutAgentInput[]
    createMany?: PropertyCreateManyAgentInputEnvelope
    connect?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
  }

  export type PropertyViewingUncheckedCreateNestedManyWithoutSellerInput = {
    create?: XOR<PropertyViewingCreateWithoutSellerInput, PropertyViewingUncheckedCreateWithoutSellerInput> | PropertyViewingCreateWithoutSellerInput[] | PropertyViewingUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: PropertyViewingCreateOrConnectWithoutSellerInput | PropertyViewingCreateOrConnectWithoutSellerInput[]
    createMany?: PropertyViewingCreateManySellerInputEnvelope
    connect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
  }

  export type PropertyViewingUncheckedCreateNestedManyWithoutBuyerInput = {
    create?: XOR<PropertyViewingCreateWithoutBuyerInput, PropertyViewingUncheckedCreateWithoutBuyerInput> | PropertyViewingCreateWithoutBuyerInput[] | PropertyViewingUncheckedCreateWithoutBuyerInput[]
    connectOrCreate?: PropertyViewingCreateOrConnectWithoutBuyerInput | PropertyViewingCreateOrConnectWithoutBuyerInput[]
    createMany?: PropertyViewingCreateManyBuyerInputEnvelope
    connect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
  }

  export type PropertyAnalyticsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<PropertyAnalyticsCreateWithoutUserInput, PropertyAnalyticsUncheckedCreateWithoutUserInput> | PropertyAnalyticsCreateWithoutUserInput[] | PropertyAnalyticsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PropertyAnalyticsCreateOrConnectWithoutUserInput | PropertyAnalyticsCreateOrConnectWithoutUserInput[]
    createMany?: PropertyAnalyticsCreateManyUserInputEnvelope
    connect?: PropertyAnalyticsWhereUniqueInput | PropertyAnalyticsWhereUniqueInput[]
  }

  export type AgencyRoleUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AgencyRoleCreateWithoutUserInput, AgencyRoleUncheckedCreateWithoutUserInput> | AgencyRoleCreateWithoutUserInput[] | AgencyRoleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AgencyRoleCreateOrConnectWithoutUserInput | AgencyRoleCreateOrConnectWithoutUserInput[]
    createMany?: AgencyRoleCreateManyUserInputEnvelope
    connect?: AgencyRoleWhereUniqueInput | AgencyRoleWhereUniqueInput[]
  }

  export type AdminActionUncheckedCreateNestedManyWithoutAdminInput = {
    create?: XOR<AdminActionCreateWithoutAdminInput, AdminActionUncheckedCreateWithoutAdminInput> | AdminActionCreateWithoutAdminInput[] | AdminActionUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: AdminActionCreateOrConnectWithoutAdminInput | AdminActionCreateOrConnectWithoutAdminInput[]
    createMany?: AdminActionCreateManyAdminInputEnvelope
    connect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
  }

  export type AdminActionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AdminActionCreateWithoutUserInput, AdminActionUncheckedCreateWithoutUserInput> | AdminActionCreateWithoutUserInput[] | AdminActionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AdminActionCreateOrConnectWithoutUserInput | AdminActionCreateOrConnectWithoutUserInput[]
    createMany?: AdminActionCreateManyUserInputEnvelope
    connect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type PaymentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput> | PaymentCreateWithoutUserInput[] | PaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUserInput | PaymentCreateOrConnectWithoutUserInput[]
    createMany?: PaymentCreateManyUserInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type AgencyMemberUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AgencyMemberCreateWithoutUserInput, AgencyMemberUncheckedCreateWithoutUserInput> | AgencyMemberCreateWithoutUserInput[] | AgencyMemberUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AgencyMemberCreateOrConnectWithoutUserInput | AgencyMemberCreateOrConnectWithoutUserInput[]
    createMany?: AgencyMemberCreateManyUserInputEnvelope
    connect?: AgencyMemberWhereUniqueInput | AgencyMemberWhereUniqueInput[]
  }

  export type SavedSearchUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SavedSearchCreateWithoutUserInput, SavedSearchUncheckedCreateWithoutUserInput> | SavedSearchCreateWithoutUserInput[] | SavedSearchUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SavedSearchCreateOrConnectWithoutUserInput | SavedSearchCreateOrConnectWithoutUserInput[]
    createMany?: SavedSearchCreateManyUserInputEnvelope
    connect?: SavedSearchWhereUniqueInput | SavedSearchWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type UserUpdaterolesInput = {
    set?: $Enums.UserRole[]
    push?: $Enums.UserRole | $Enums.UserRole[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type PropertyViewUpdateManyWithoutUserNestedInput = {
    create?: XOR<PropertyViewCreateWithoutUserInput, PropertyViewUncheckedCreateWithoutUserInput> | PropertyViewCreateWithoutUserInput[] | PropertyViewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PropertyViewCreateOrConnectWithoutUserInput | PropertyViewCreateOrConnectWithoutUserInput[]
    upsert?: PropertyViewUpsertWithWhereUniqueWithoutUserInput | PropertyViewUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PropertyViewCreateManyUserInputEnvelope
    set?: PropertyViewWhereUniqueInput | PropertyViewWhereUniqueInput[]
    disconnect?: PropertyViewWhereUniqueInput | PropertyViewWhereUniqueInput[]
    delete?: PropertyViewWhereUniqueInput | PropertyViewWhereUniqueInput[]
    connect?: PropertyViewWhereUniqueInput | PropertyViewWhereUniqueInput[]
    update?: PropertyViewUpdateWithWhereUniqueWithoutUserInput | PropertyViewUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PropertyViewUpdateManyWithWhereWithoutUserInput | PropertyViewUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PropertyViewScalarWhereInput | PropertyViewScalarWhereInput[]
  }

  export type FavoriteUpdateManyWithoutUserNestedInput = {
    create?: XOR<FavoriteCreateWithoutUserInput, FavoriteUncheckedCreateWithoutUserInput> | FavoriteCreateWithoutUserInput[] | FavoriteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutUserInput | FavoriteCreateOrConnectWithoutUserInput[]
    upsert?: FavoriteUpsertWithWhereUniqueWithoutUserInput | FavoriteUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FavoriteCreateManyUserInputEnvelope
    set?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    disconnect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    delete?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    update?: FavoriteUpdateWithWhereUniqueWithoutUserInput | FavoriteUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FavoriteUpdateManyWithWhereWithoutUserInput | FavoriteUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
  }

  export type FavoriteListUpdateManyWithoutUserNestedInput = {
    create?: XOR<FavoriteListCreateWithoutUserInput, FavoriteListUncheckedCreateWithoutUserInput> | FavoriteListCreateWithoutUserInput[] | FavoriteListUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavoriteListCreateOrConnectWithoutUserInput | FavoriteListCreateOrConnectWithoutUserInput[]
    upsert?: FavoriteListUpsertWithWhereUniqueWithoutUserInput | FavoriteListUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FavoriteListCreateManyUserInputEnvelope
    set?: FavoriteListWhereUniqueInput | FavoriteListWhereUniqueInput[]
    disconnect?: FavoriteListWhereUniqueInput | FavoriteListWhereUniqueInput[]
    delete?: FavoriteListWhereUniqueInput | FavoriteListWhereUniqueInput[]
    connect?: FavoriteListWhereUniqueInput | FavoriteListWhereUniqueInput[]
    update?: FavoriteListUpdateWithWhereUniqueWithoutUserInput | FavoriteListUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FavoriteListUpdateManyWithWhereWithoutUserInput | FavoriteListUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FavoriteListScalarWhereInput | FavoriteListScalarWhereInput[]
  }

  export type PropertyRequestUpdateManyWithoutBuyerNestedInput = {
    create?: XOR<PropertyRequestCreateWithoutBuyerInput, PropertyRequestUncheckedCreateWithoutBuyerInput> | PropertyRequestCreateWithoutBuyerInput[] | PropertyRequestUncheckedCreateWithoutBuyerInput[]
    connectOrCreate?: PropertyRequestCreateOrConnectWithoutBuyerInput | PropertyRequestCreateOrConnectWithoutBuyerInput[]
    upsert?: PropertyRequestUpsertWithWhereUniqueWithoutBuyerInput | PropertyRequestUpsertWithWhereUniqueWithoutBuyerInput[]
    createMany?: PropertyRequestCreateManyBuyerInputEnvelope
    set?: PropertyRequestWhereUniqueInput | PropertyRequestWhereUniqueInput[]
    disconnect?: PropertyRequestWhereUniqueInput | PropertyRequestWhereUniqueInput[]
    delete?: PropertyRequestWhereUniqueInput | PropertyRequestWhereUniqueInput[]
    connect?: PropertyRequestWhereUniqueInput | PropertyRequestWhereUniqueInput[]
    update?: PropertyRequestUpdateWithWhereUniqueWithoutBuyerInput | PropertyRequestUpdateWithWhereUniqueWithoutBuyerInput[]
    updateMany?: PropertyRequestUpdateManyWithWhereWithoutBuyerInput | PropertyRequestUpdateManyWithWhereWithoutBuyerInput[]
    deleteMany?: PropertyRequestScalarWhereInput | PropertyRequestScalarWhereInput[]
  }

  export type PropertyInquiryUpdateManyWithoutUserNestedInput = {
    create?: XOR<PropertyInquiryCreateWithoutUserInput, PropertyInquiryUncheckedCreateWithoutUserInput> | PropertyInquiryCreateWithoutUserInput[] | PropertyInquiryUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PropertyInquiryCreateOrConnectWithoutUserInput | PropertyInquiryCreateOrConnectWithoutUserInput[]
    upsert?: PropertyInquiryUpsertWithWhereUniqueWithoutUserInput | PropertyInquiryUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PropertyInquiryCreateManyUserInputEnvelope
    set?: PropertyInquiryWhereUniqueInput | PropertyInquiryWhereUniqueInput[]
    disconnect?: PropertyInquiryWhereUniqueInput | PropertyInquiryWhereUniqueInput[]
    delete?: PropertyInquiryWhereUniqueInput | PropertyInquiryWhereUniqueInput[]
    connect?: PropertyInquiryWhereUniqueInput | PropertyInquiryWhereUniqueInput[]
    update?: PropertyInquiryUpdateWithWhereUniqueWithoutUserInput | PropertyInquiryUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PropertyInquiryUpdateManyWithWhereWithoutUserInput | PropertyInquiryUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PropertyInquiryScalarWhereInput | PropertyInquiryScalarWhereInput[]
  }

  export type PropertyComparisonUpdateManyWithoutUserNestedInput = {
    create?: XOR<PropertyComparisonCreateWithoutUserInput, PropertyComparisonUncheckedCreateWithoutUserInput> | PropertyComparisonCreateWithoutUserInput[] | PropertyComparisonUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PropertyComparisonCreateOrConnectWithoutUserInput | PropertyComparisonCreateOrConnectWithoutUserInput[]
    upsert?: PropertyComparisonUpsertWithWhereUniqueWithoutUserInput | PropertyComparisonUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PropertyComparisonCreateManyUserInputEnvelope
    set?: PropertyComparisonWhereUniqueInput | PropertyComparisonWhereUniqueInput[]
    disconnect?: PropertyComparisonWhereUniqueInput | PropertyComparisonWhereUniqueInput[]
    delete?: PropertyComparisonWhereUniqueInput | PropertyComparisonWhereUniqueInput[]
    connect?: PropertyComparisonWhereUniqueInput | PropertyComparisonWhereUniqueInput[]
    update?: PropertyComparisonUpdateWithWhereUniqueWithoutUserInput | PropertyComparisonUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PropertyComparisonUpdateManyWithWhereWithoutUserInput | PropertyComparisonUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PropertyComparisonScalarWhereInput | PropertyComparisonScalarWhereInput[]
  }

  export type PropertyReviewUpdateManyWithoutReviewerNestedInput = {
    create?: XOR<PropertyReviewCreateWithoutReviewerInput, PropertyReviewUncheckedCreateWithoutReviewerInput> | PropertyReviewCreateWithoutReviewerInput[] | PropertyReviewUncheckedCreateWithoutReviewerInput[]
    connectOrCreate?: PropertyReviewCreateOrConnectWithoutReviewerInput | PropertyReviewCreateOrConnectWithoutReviewerInput[]
    upsert?: PropertyReviewUpsertWithWhereUniqueWithoutReviewerInput | PropertyReviewUpsertWithWhereUniqueWithoutReviewerInput[]
    createMany?: PropertyReviewCreateManyReviewerInputEnvelope
    set?: PropertyReviewWhereUniqueInput | PropertyReviewWhereUniqueInput[]
    disconnect?: PropertyReviewWhereUniqueInput | PropertyReviewWhereUniqueInput[]
    delete?: PropertyReviewWhereUniqueInput | PropertyReviewWhereUniqueInput[]
    connect?: PropertyReviewWhereUniqueInput | PropertyReviewWhereUniqueInput[]
    update?: PropertyReviewUpdateWithWhereUniqueWithoutReviewerInput | PropertyReviewUpdateWithWhereUniqueWithoutReviewerInput[]
    updateMany?: PropertyReviewUpdateManyWithWhereWithoutReviewerInput | PropertyReviewUpdateManyWithWhereWithoutReviewerInput[]
    deleteMany?: PropertyReviewScalarWhereInput | PropertyReviewScalarWhereInput[]
  }

  export type PropertyCommentUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<PropertyCommentCreateWithoutAuthorInput, PropertyCommentUncheckedCreateWithoutAuthorInput> | PropertyCommentCreateWithoutAuthorInput[] | PropertyCommentUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: PropertyCommentCreateOrConnectWithoutAuthorInput | PropertyCommentCreateOrConnectWithoutAuthorInput[]
    upsert?: PropertyCommentUpsertWithWhereUniqueWithoutAuthorInput | PropertyCommentUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: PropertyCommentCreateManyAuthorInputEnvelope
    set?: PropertyCommentWhereUniqueInput | PropertyCommentWhereUniqueInput[]
    disconnect?: PropertyCommentWhereUniqueInput | PropertyCommentWhereUniqueInput[]
    delete?: PropertyCommentWhereUniqueInput | PropertyCommentWhereUniqueInput[]
    connect?: PropertyCommentWhereUniqueInput | PropertyCommentWhereUniqueInput[]
    update?: PropertyCommentUpdateWithWhereUniqueWithoutAuthorInput | PropertyCommentUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: PropertyCommentUpdateManyWithWhereWithoutAuthorInput | PropertyCommentUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: PropertyCommentScalarWhereInput | PropertyCommentScalarWhereInput[]
  }

  export type PropertyUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<PropertyCreateWithoutOwnerInput, PropertyUncheckedCreateWithoutOwnerInput> | PropertyCreateWithoutOwnerInput[] | PropertyUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: PropertyCreateOrConnectWithoutOwnerInput | PropertyCreateOrConnectWithoutOwnerInput[]
    upsert?: PropertyUpsertWithWhereUniqueWithoutOwnerInput | PropertyUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: PropertyCreateManyOwnerInputEnvelope
    set?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    disconnect?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    delete?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    connect?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    update?: PropertyUpdateWithWhereUniqueWithoutOwnerInput | PropertyUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: PropertyUpdateManyWithWhereWithoutOwnerInput | PropertyUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: PropertyScalarWhereInput | PropertyScalarWhereInput[]
  }

  export type PropertyUpdateManyWithoutAgentNestedInput = {
    create?: XOR<PropertyCreateWithoutAgentInput, PropertyUncheckedCreateWithoutAgentInput> | PropertyCreateWithoutAgentInput[] | PropertyUncheckedCreateWithoutAgentInput[]
    connectOrCreate?: PropertyCreateOrConnectWithoutAgentInput | PropertyCreateOrConnectWithoutAgentInput[]
    upsert?: PropertyUpsertWithWhereUniqueWithoutAgentInput | PropertyUpsertWithWhereUniqueWithoutAgentInput[]
    createMany?: PropertyCreateManyAgentInputEnvelope
    set?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    disconnect?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    delete?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    connect?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    update?: PropertyUpdateWithWhereUniqueWithoutAgentInput | PropertyUpdateWithWhereUniqueWithoutAgentInput[]
    updateMany?: PropertyUpdateManyWithWhereWithoutAgentInput | PropertyUpdateManyWithWhereWithoutAgentInput[]
    deleteMany?: PropertyScalarWhereInput | PropertyScalarWhereInput[]
  }

  export type PropertyViewingUpdateManyWithoutSellerNestedInput = {
    create?: XOR<PropertyViewingCreateWithoutSellerInput, PropertyViewingUncheckedCreateWithoutSellerInput> | PropertyViewingCreateWithoutSellerInput[] | PropertyViewingUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: PropertyViewingCreateOrConnectWithoutSellerInput | PropertyViewingCreateOrConnectWithoutSellerInput[]
    upsert?: PropertyViewingUpsertWithWhereUniqueWithoutSellerInput | PropertyViewingUpsertWithWhereUniqueWithoutSellerInput[]
    createMany?: PropertyViewingCreateManySellerInputEnvelope
    set?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    disconnect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    delete?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    connect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    update?: PropertyViewingUpdateWithWhereUniqueWithoutSellerInput | PropertyViewingUpdateWithWhereUniqueWithoutSellerInput[]
    updateMany?: PropertyViewingUpdateManyWithWhereWithoutSellerInput | PropertyViewingUpdateManyWithWhereWithoutSellerInput[]
    deleteMany?: PropertyViewingScalarWhereInput | PropertyViewingScalarWhereInput[]
  }

  export type PropertyViewingUpdateManyWithoutBuyerNestedInput = {
    create?: XOR<PropertyViewingCreateWithoutBuyerInput, PropertyViewingUncheckedCreateWithoutBuyerInput> | PropertyViewingCreateWithoutBuyerInput[] | PropertyViewingUncheckedCreateWithoutBuyerInput[]
    connectOrCreate?: PropertyViewingCreateOrConnectWithoutBuyerInput | PropertyViewingCreateOrConnectWithoutBuyerInput[]
    upsert?: PropertyViewingUpsertWithWhereUniqueWithoutBuyerInput | PropertyViewingUpsertWithWhereUniqueWithoutBuyerInput[]
    createMany?: PropertyViewingCreateManyBuyerInputEnvelope
    set?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    disconnect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    delete?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    connect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    update?: PropertyViewingUpdateWithWhereUniqueWithoutBuyerInput | PropertyViewingUpdateWithWhereUniqueWithoutBuyerInput[]
    updateMany?: PropertyViewingUpdateManyWithWhereWithoutBuyerInput | PropertyViewingUpdateManyWithWhereWithoutBuyerInput[]
    deleteMany?: PropertyViewingScalarWhereInput | PropertyViewingScalarWhereInput[]
  }

  export type PropertyAnalyticsUpdateManyWithoutUserNestedInput = {
    create?: XOR<PropertyAnalyticsCreateWithoutUserInput, PropertyAnalyticsUncheckedCreateWithoutUserInput> | PropertyAnalyticsCreateWithoutUserInput[] | PropertyAnalyticsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PropertyAnalyticsCreateOrConnectWithoutUserInput | PropertyAnalyticsCreateOrConnectWithoutUserInput[]
    upsert?: PropertyAnalyticsUpsertWithWhereUniqueWithoutUserInput | PropertyAnalyticsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PropertyAnalyticsCreateManyUserInputEnvelope
    set?: PropertyAnalyticsWhereUniqueInput | PropertyAnalyticsWhereUniqueInput[]
    disconnect?: PropertyAnalyticsWhereUniqueInput | PropertyAnalyticsWhereUniqueInput[]
    delete?: PropertyAnalyticsWhereUniqueInput | PropertyAnalyticsWhereUniqueInput[]
    connect?: PropertyAnalyticsWhereUniqueInput | PropertyAnalyticsWhereUniqueInput[]
    update?: PropertyAnalyticsUpdateWithWhereUniqueWithoutUserInput | PropertyAnalyticsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PropertyAnalyticsUpdateManyWithWhereWithoutUserInput | PropertyAnalyticsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PropertyAnalyticsScalarWhereInput | PropertyAnalyticsScalarWhereInput[]
  }

  export type AgencyUpdateOneWithoutUserNestedInput = {
    create?: XOR<AgencyCreateWithoutUserInput, AgencyUncheckedCreateWithoutUserInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutUserInput
    upsert?: AgencyUpsertWithoutUserInput
    disconnect?: AgencyWhereInput | boolean
    delete?: AgencyWhereInput | boolean
    connect?: AgencyWhereUniqueInput
    update?: XOR<XOR<AgencyUpdateToOneWithWhereWithoutUserInput, AgencyUpdateWithoutUserInput>, AgencyUncheckedUpdateWithoutUserInput>
  }

  export type AgencyRoleUpdateManyWithoutUserNestedInput = {
    create?: XOR<AgencyRoleCreateWithoutUserInput, AgencyRoleUncheckedCreateWithoutUserInput> | AgencyRoleCreateWithoutUserInput[] | AgencyRoleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AgencyRoleCreateOrConnectWithoutUserInput | AgencyRoleCreateOrConnectWithoutUserInput[]
    upsert?: AgencyRoleUpsertWithWhereUniqueWithoutUserInput | AgencyRoleUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AgencyRoleCreateManyUserInputEnvelope
    set?: AgencyRoleWhereUniqueInput | AgencyRoleWhereUniqueInput[]
    disconnect?: AgencyRoleWhereUniqueInput | AgencyRoleWhereUniqueInput[]
    delete?: AgencyRoleWhereUniqueInput | AgencyRoleWhereUniqueInput[]
    connect?: AgencyRoleWhereUniqueInput | AgencyRoleWhereUniqueInput[]
    update?: AgencyRoleUpdateWithWhereUniqueWithoutUserInput | AgencyRoleUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AgencyRoleUpdateManyWithWhereWithoutUserInput | AgencyRoleUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AgencyRoleScalarWhereInput | AgencyRoleScalarWhereInput[]
  }

  export type AdminActionUpdateManyWithoutAdminNestedInput = {
    create?: XOR<AdminActionCreateWithoutAdminInput, AdminActionUncheckedCreateWithoutAdminInput> | AdminActionCreateWithoutAdminInput[] | AdminActionUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: AdminActionCreateOrConnectWithoutAdminInput | AdminActionCreateOrConnectWithoutAdminInput[]
    upsert?: AdminActionUpsertWithWhereUniqueWithoutAdminInput | AdminActionUpsertWithWhereUniqueWithoutAdminInput[]
    createMany?: AdminActionCreateManyAdminInputEnvelope
    set?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    disconnect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    delete?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    connect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    update?: AdminActionUpdateWithWhereUniqueWithoutAdminInput | AdminActionUpdateWithWhereUniqueWithoutAdminInput[]
    updateMany?: AdminActionUpdateManyWithWhereWithoutAdminInput | AdminActionUpdateManyWithWhereWithoutAdminInput[]
    deleteMany?: AdminActionScalarWhereInput | AdminActionScalarWhereInput[]
  }

  export type AdminActionUpdateManyWithoutUserNestedInput = {
    create?: XOR<AdminActionCreateWithoutUserInput, AdminActionUncheckedCreateWithoutUserInput> | AdminActionCreateWithoutUserInput[] | AdminActionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AdminActionCreateOrConnectWithoutUserInput | AdminActionCreateOrConnectWithoutUserInput[]
    upsert?: AdminActionUpsertWithWhereUniqueWithoutUserInput | AdminActionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AdminActionCreateManyUserInputEnvelope
    set?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    disconnect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    delete?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    connect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    update?: AdminActionUpdateWithWhereUniqueWithoutUserInput | AdminActionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AdminActionUpdateManyWithWhereWithoutUserInput | AdminActionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AdminActionScalarWhereInput | AdminActionScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutUserInput | NotificationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutUserInput | NotificationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutUserInput | NotificationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type PaymentUpdateManyWithoutUserNestedInput = {
    create?: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput> | PaymentCreateWithoutUserInput[] | PaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUserInput | PaymentCreateOrConnectWithoutUserInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutUserInput | PaymentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PaymentCreateManyUserInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutUserInput | PaymentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutUserInput | PaymentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type AgencyMemberUpdateManyWithoutUserNestedInput = {
    create?: XOR<AgencyMemberCreateWithoutUserInput, AgencyMemberUncheckedCreateWithoutUserInput> | AgencyMemberCreateWithoutUserInput[] | AgencyMemberUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AgencyMemberCreateOrConnectWithoutUserInput | AgencyMemberCreateOrConnectWithoutUserInput[]
    upsert?: AgencyMemberUpsertWithWhereUniqueWithoutUserInput | AgencyMemberUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AgencyMemberCreateManyUserInputEnvelope
    set?: AgencyMemberWhereUniqueInput | AgencyMemberWhereUniqueInput[]
    disconnect?: AgencyMemberWhereUniqueInput | AgencyMemberWhereUniqueInput[]
    delete?: AgencyMemberWhereUniqueInput | AgencyMemberWhereUniqueInput[]
    connect?: AgencyMemberWhereUniqueInput | AgencyMemberWhereUniqueInput[]
    update?: AgencyMemberUpdateWithWhereUniqueWithoutUserInput | AgencyMemberUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AgencyMemberUpdateManyWithWhereWithoutUserInput | AgencyMemberUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AgencyMemberScalarWhereInput | AgencyMemberScalarWhereInput[]
  }

  export type SavedSearchUpdateManyWithoutUserNestedInput = {
    create?: XOR<SavedSearchCreateWithoutUserInput, SavedSearchUncheckedCreateWithoutUserInput> | SavedSearchCreateWithoutUserInput[] | SavedSearchUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SavedSearchCreateOrConnectWithoutUserInput | SavedSearchCreateOrConnectWithoutUserInput[]
    upsert?: SavedSearchUpsertWithWhereUniqueWithoutUserInput | SavedSearchUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SavedSearchCreateManyUserInputEnvelope
    set?: SavedSearchWhereUniqueInput | SavedSearchWhereUniqueInput[]
    disconnect?: SavedSearchWhereUniqueInput | SavedSearchWhereUniqueInput[]
    delete?: SavedSearchWhereUniqueInput | SavedSearchWhereUniqueInput[]
    connect?: SavedSearchWhereUniqueInput | SavedSearchWhereUniqueInput[]
    update?: SavedSearchUpdateWithWhereUniqueWithoutUserInput | SavedSearchUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SavedSearchUpdateManyWithWhereWithoutUserInput | SavedSearchUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SavedSearchScalarWhereInput | SavedSearchScalarWhereInput[]
  }

  export type PropertyViewUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<PropertyViewCreateWithoutUserInput, PropertyViewUncheckedCreateWithoutUserInput> | PropertyViewCreateWithoutUserInput[] | PropertyViewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PropertyViewCreateOrConnectWithoutUserInput | PropertyViewCreateOrConnectWithoutUserInput[]
    upsert?: PropertyViewUpsertWithWhereUniqueWithoutUserInput | PropertyViewUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PropertyViewCreateManyUserInputEnvelope
    set?: PropertyViewWhereUniqueInput | PropertyViewWhereUniqueInput[]
    disconnect?: PropertyViewWhereUniqueInput | PropertyViewWhereUniqueInput[]
    delete?: PropertyViewWhereUniqueInput | PropertyViewWhereUniqueInput[]
    connect?: PropertyViewWhereUniqueInput | PropertyViewWhereUniqueInput[]
    update?: PropertyViewUpdateWithWhereUniqueWithoutUserInput | PropertyViewUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PropertyViewUpdateManyWithWhereWithoutUserInput | PropertyViewUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PropertyViewScalarWhereInput | PropertyViewScalarWhereInput[]
  }

  export type FavoriteUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<FavoriteCreateWithoutUserInput, FavoriteUncheckedCreateWithoutUserInput> | FavoriteCreateWithoutUserInput[] | FavoriteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutUserInput | FavoriteCreateOrConnectWithoutUserInput[]
    upsert?: FavoriteUpsertWithWhereUniqueWithoutUserInput | FavoriteUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FavoriteCreateManyUserInputEnvelope
    set?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    disconnect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    delete?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    update?: FavoriteUpdateWithWhereUniqueWithoutUserInput | FavoriteUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FavoriteUpdateManyWithWhereWithoutUserInput | FavoriteUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
  }

  export type FavoriteListUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<FavoriteListCreateWithoutUserInput, FavoriteListUncheckedCreateWithoutUserInput> | FavoriteListCreateWithoutUserInput[] | FavoriteListUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavoriteListCreateOrConnectWithoutUserInput | FavoriteListCreateOrConnectWithoutUserInput[]
    upsert?: FavoriteListUpsertWithWhereUniqueWithoutUserInput | FavoriteListUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FavoriteListCreateManyUserInputEnvelope
    set?: FavoriteListWhereUniqueInput | FavoriteListWhereUniqueInput[]
    disconnect?: FavoriteListWhereUniqueInput | FavoriteListWhereUniqueInput[]
    delete?: FavoriteListWhereUniqueInput | FavoriteListWhereUniqueInput[]
    connect?: FavoriteListWhereUniqueInput | FavoriteListWhereUniqueInput[]
    update?: FavoriteListUpdateWithWhereUniqueWithoutUserInput | FavoriteListUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FavoriteListUpdateManyWithWhereWithoutUserInput | FavoriteListUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FavoriteListScalarWhereInput | FavoriteListScalarWhereInput[]
  }

  export type PropertyRequestUncheckedUpdateManyWithoutBuyerNestedInput = {
    create?: XOR<PropertyRequestCreateWithoutBuyerInput, PropertyRequestUncheckedCreateWithoutBuyerInput> | PropertyRequestCreateWithoutBuyerInput[] | PropertyRequestUncheckedCreateWithoutBuyerInput[]
    connectOrCreate?: PropertyRequestCreateOrConnectWithoutBuyerInput | PropertyRequestCreateOrConnectWithoutBuyerInput[]
    upsert?: PropertyRequestUpsertWithWhereUniqueWithoutBuyerInput | PropertyRequestUpsertWithWhereUniqueWithoutBuyerInput[]
    createMany?: PropertyRequestCreateManyBuyerInputEnvelope
    set?: PropertyRequestWhereUniqueInput | PropertyRequestWhereUniqueInput[]
    disconnect?: PropertyRequestWhereUniqueInput | PropertyRequestWhereUniqueInput[]
    delete?: PropertyRequestWhereUniqueInput | PropertyRequestWhereUniqueInput[]
    connect?: PropertyRequestWhereUniqueInput | PropertyRequestWhereUniqueInput[]
    update?: PropertyRequestUpdateWithWhereUniqueWithoutBuyerInput | PropertyRequestUpdateWithWhereUniqueWithoutBuyerInput[]
    updateMany?: PropertyRequestUpdateManyWithWhereWithoutBuyerInput | PropertyRequestUpdateManyWithWhereWithoutBuyerInput[]
    deleteMany?: PropertyRequestScalarWhereInput | PropertyRequestScalarWhereInput[]
  }

  export type PropertyInquiryUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<PropertyInquiryCreateWithoutUserInput, PropertyInquiryUncheckedCreateWithoutUserInput> | PropertyInquiryCreateWithoutUserInput[] | PropertyInquiryUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PropertyInquiryCreateOrConnectWithoutUserInput | PropertyInquiryCreateOrConnectWithoutUserInput[]
    upsert?: PropertyInquiryUpsertWithWhereUniqueWithoutUserInput | PropertyInquiryUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PropertyInquiryCreateManyUserInputEnvelope
    set?: PropertyInquiryWhereUniqueInput | PropertyInquiryWhereUniqueInput[]
    disconnect?: PropertyInquiryWhereUniqueInput | PropertyInquiryWhereUniqueInput[]
    delete?: PropertyInquiryWhereUniqueInput | PropertyInquiryWhereUniqueInput[]
    connect?: PropertyInquiryWhereUniqueInput | PropertyInquiryWhereUniqueInput[]
    update?: PropertyInquiryUpdateWithWhereUniqueWithoutUserInput | PropertyInquiryUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PropertyInquiryUpdateManyWithWhereWithoutUserInput | PropertyInquiryUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PropertyInquiryScalarWhereInput | PropertyInquiryScalarWhereInput[]
  }

  export type PropertyComparisonUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<PropertyComparisonCreateWithoutUserInput, PropertyComparisonUncheckedCreateWithoutUserInput> | PropertyComparisonCreateWithoutUserInput[] | PropertyComparisonUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PropertyComparisonCreateOrConnectWithoutUserInput | PropertyComparisonCreateOrConnectWithoutUserInput[]
    upsert?: PropertyComparisonUpsertWithWhereUniqueWithoutUserInput | PropertyComparisonUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PropertyComparisonCreateManyUserInputEnvelope
    set?: PropertyComparisonWhereUniqueInput | PropertyComparisonWhereUniqueInput[]
    disconnect?: PropertyComparisonWhereUniqueInput | PropertyComparisonWhereUniqueInput[]
    delete?: PropertyComparisonWhereUniqueInput | PropertyComparisonWhereUniqueInput[]
    connect?: PropertyComparisonWhereUniqueInput | PropertyComparisonWhereUniqueInput[]
    update?: PropertyComparisonUpdateWithWhereUniqueWithoutUserInput | PropertyComparisonUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PropertyComparisonUpdateManyWithWhereWithoutUserInput | PropertyComparisonUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PropertyComparisonScalarWhereInput | PropertyComparisonScalarWhereInput[]
  }

  export type PropertyReviewUncheckedUpdateManyWithoutReviewerNestedInput = {
    create?: XOR<PropertyReviewCreateWithoutReviewerInput, PropertyReviewUncheckedCreateWithoutReviewerInput> | PropertyReviewCreateWithoutReviewerInput[] | PropertyReviewUncheckedCreateWithoutReviewerInput[]
    connectOrCreate?: PropertyReviewCreateOrConnectWithoutReviewerInput | PropertyReviewCreateOrConnectWithoutReviewerInput[]
    upsert?: PropertyReviewUpsertWithWhereUniqueWithoutReviewerInput | PropertyReviewUpsertWithWhereUniqueWithoutReviewerInput[]
    createMany?: PropertyReviewCreateManyReviewerInputEnvelope
    set?: PropertyReviewWhereUniqueInput | PropertyReviewWhereUniqueInput[]
    disconnect?: PropertyReviewWhereUniqueInput | PropertyReviewWhereUniqueInput[]
    delete?: PropertyReviewWhereUniqueInput | PropertyReviewWhereUniqueInput[]
    connect?: PropertyReviewWhereUniqueInput | PropertyReviewWhereUniqueInput[]
    update?: PropertyReviewUpdateWithWhereUniqueWithoutReviewerInput | PropertyReviewUpdateWithWhereUniqueWithoutReviewerInput[]
    updateMany?: PropertyReviewUpdateManyWithWhereWithoutReviewerInput | PropertyReviewUpdateManyWithWhereWithoutReviewerInput[]
    deleteMany?: PropertyReviewScalarWhereInput | PropertyReviewScalarWhereInput[]
  }

  export type PropertyCommentUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<PropertyCommentCreateWithoutAuthorInput, PropertyCommentUncheckedCreateWithoutAuthorInput> | PropertyCommentCreateWithoutAuthorInput[] | PropertyCommentUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: PropertyCommentCreateOrConnectWithoutAuthorInput | PropertyCommentCreateOrConnectWithoutAuthorInput[]
    upsert?: PropertyCommentUpsertWithWhereUniqueWithoutAuthorInput | PropertyCommentUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: PropertyCommentCreateManyAuthorInputEnvelope
    set?: PropertyCommentWhereUniqueInput | PropertyCommentWhereUniqueInput[]
    disconnect?: PropertyCommentWhereUniqueInput | PropertyCommentWhereUniqueInput[]
    delete?: PropertyCommentWhereUniqueInput | PropertyCommentWhereUniqueInput[]
    connect?: PropertyCommentWhereUniqueInput | PropertyCommentWhereUniqueInput[]
    update?: PropertyCommentUpdateWithWhereUniqueWithoutAuthorInput | PropertyCommentUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: PropertyCommentUpdateManyWithWhereWithoutAuthorInput | PropertyCommentUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: PropertyCommentScalarWhereInput | PropertyCommentScalarWhereInput[]
  }

  export type PropertyUncheckedUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<PropertyCreateWithoutOwnerInput, PropertyUncheckedCreateWithoutOwnerInput> | PropertyCreateWithoutOwnerInput[] | PropertyUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: PropertyCreateOrConnectWithoutOwnerInput | PropertyCreateOrConnectWithoutOwnerInput[]
    upsert?: PropertyUpsertWithWhereUniqueWithoutOwnerInput | PropertyUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: PropertyCreateManyOwnerInputEnvelope
    set?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    disconnect?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    delete?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    connect?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    update?: PropertyUpdateWithWhereUniqueWithoutOwnerInput | PropertyUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: PropertyUpdateManyWithWhereWithoutOwnerInput | PropertyUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: PropertyScalarWhereInput | PropertyScalarWhereInput[]
  }

  export type PropertyUncheckedUpdateManyWithoutAgentNestedInput = {
    create?: XOR<PropertyCreateWithoutAgentInput, PropertyUncheckedCreateWithoutAgentInput> | PropertyCreateWithoutAgentInput[] | PropertyUncheckedCreateWithoutAgentInput[]
    connectOrCreate?: PropertyCreateOrConnectWithoutAgentInput | PropertyCreateOrConnectWithoutAgentInput[]
    upsert?: PropertyUpsertWithWhereUniqueWithoutAgentInput | PropertyUpsertWithWhereUniqueWithoutAgentInput[]
    createMany?: PropertyCreateManyAgentInputEnvelope
    set?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    disconnect?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    delete?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    connect?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    update?: PropertyUpdateWithWhereUniqueWithoutAgentInput | PropertyUpdateWithWhereUniqueWithoutAgentInput[]
    updateMany?: PropertyUpdateManyWithWhereWithoutAgentInput | PropertyUpdateManyWithWhereWithoutAgentInput[]
    deleteMany?: PropertyScalarWhereInput | PropertyScalarWhereInput[]
  }

  export type PropertyViewingUncheckedUpdateManyWithoutSellerNestedInput = {
    create?: XOR<PropertyViewingCreateWithoutSellerInput, PropertyViewingUncheckedCreateWithoutSellerInput> | PropertyViewingCreateWithoutSellerInput[] | PropertyViewingUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: PropertyViewingCreateOrConnectWithoutSellerInput | PropertyViewingCreateOrConnectWithoutSellerInput[]
    upsert?: PropertyViewingUpsertWithWhereUniqueWithoutSellerInput | PropertyViewingUpsertWithWhereUniqueWithoutSellerInput[]
    createMany?: PropertyViewingCreateManySellerInputEnvelope
    set?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    disconnect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    delete?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    connect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    update?: PropertyViewingUpdateWithWhereUniqueWithoutSellerInput | PropertyViewingUpdateWithWhereUniqueWithoutSellerInput[]
    updateMany?: PropertyViewingUpdateManyWithWhereWithoutSellerInput | PropertyViewingUpdateManyWithWhereWithoutSellerInput[]
    deleteMany?: PropertyViewingScalarWhereInput | PropertyViewingScalarWhereInput[]
  }

  export type PropertyViewingUncheckedUpdateManyWithoutBuyerNestedInput = {
    create?: XOR<PropertyViewingCreateWithoutBuyerInput, PropertyViewingUncheckedCreateWithoutBuyerInput> | PropertyViewingCreateWithoutBuyerInput[] | PropertyViewingUncheckedCreateWithoutBuyerInput[]
    connectOrCreate?: PropertyViewingCreateOrConnectWithoutBuyerInput | PropertyViewingCreateOrConnectWithoutBuyerInput[]
    upsert?: PropertyViewingUpsertWithWhereUniqueWithoutBuyerInput | PropertyViewingUpsertWithWhereUniqueWithoutBuyerInput[]
    createMany?: PropertyViewingCreateManyBuyerInputEnvelope
    set?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    disconnect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    delete?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    connect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    update?: PropertyViewingUpdateWithWhereUniqueWithoutBuyerInput | PropertyViewingUpdateWithWhereUniqueWithoutBuyerInput[]
    updateMany?: PropertyViewingUpdateManyWithWhereWithoutBuyerInput | PropertyViewingUpdateManyWithWhereWithoutBuyerInput[]
    deleteMany?: PropertyViewingScalarWhereInput | PropertyViewingScalarWhereInput[]
  }

  export type PropertyAnalyticsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<PropertyAnalyticsCreateWithoutUserInput, PropertyAnalyticsUncheckedCreateWithoutUserInput> | PropertyAnalyticsCreateWithoutUserInput[] | PropertyAnalyticsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PropertyAnalyticsCreateOrConnectWithoutUserInput | PropertyAnalyticsCreateOrConnectWithoutUserInput[]
    upsert?: PropertyAnalyticsUpsertWithWhereUniqueWithoutUserInput | PropertyAnalyticsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PropertyAnalyticsCreateManyUserInputEnvelope
    set?: PropertyAnalyticsWhereUniqueInput | PropertyAnalyticsWhereUniqueInput[]
    disconnect?: PropertyAnalyticsWhereUniqueInput | PropertyAnalyticsWhereUniqueInput[]
    delete?: PropertyAnalyticsWhereUniqueInput | PropertyAnalyticsWhereUniqueInput[]
    connect?: PropertyAnalyticsWhereUniqueInput | PropertyAnalyticsWhereUniqueInput[]
    update?: PropertyAnalyticsUpdateWithWhereUniqueWithoutUserInput | PropertyAnalyticsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PropertyAnalyticsUpdateManyWithWhereWithoutUserInput | PropertyAnalyticsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PropertyAnalyticsScalarWhereInput | PropertyAnalyticsScalarWhereInput[]
  }

  export type AgencyRoleUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AgencyRoleCreateWithoutUserInput, AgencyRoleUncheckedCreateWithoutUserInput> | AgencyRoleCreateWithoutUserInput[] | AgencyRoleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AgencyRoleCreateOrConnectWithoutUserInput | AgencyRoleCreateOrConnectWithoutUserInput[]
    upsert?: AgencyRoleUpsertWithWhereUniqueWithoutUserInput | AgencyRoleUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AgencyRoleCreateManyUserInputEnvelope
    set?: AgencyRoleWhereUniqueInput | AgencyRoleWhereUniqueInput[]
    disconnect?: AgencyRoleWhereUniqueInput | AgencyRoleWhereUniqueInput[]
    delete?: AgencyRoleWhereUniqueInput | AgencyRoleWhereUniqueInput[]
    connect?: AgencyRoleWhereUniqueInput | AgencyRoleWhereUniqueInput[]
    update?: AgencyRoleUpdateWithWhereUniqueWithoutUserInput | AgencyRoleUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AgencyRoleUpdateManyWithWhereWithoutUserInput | AgencyRoleUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AgencyRoleScalarWhereInput | AgencyRoleScalarWhereInput[]
  }

  export type AdminActionUncheckedUpdateManyWithoutAdminNestedInput = {
    create?: XOR<AdminActionCreateWithoutAdminInput, AdminActionUncheckedCreateWithoutAdminInput> | AdminActionCreateWithoutAdminInput[] | AdminActionUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: AdminActionCreateOrConnectWithoutAdminInput | AdminActionCreateOrConnectWithoutAdminInput[]
    upsert?: AdminActionUpsertWithWhereUniqueWithoutAdminInput | AdminActionUpsertWithWhereUniqueWithoutAdminInput[]
    createMany?: AdminActionCreateManyAdminInputEnvelope
    set?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    disconnect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    delete?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    connect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    update?: AdminActionUpdateWithWhereUniqueWithoutAdminInput | AdminActionUpdateWithWhereUniqueWithoutAdminInput[]
    updateMany?: AdminActionUpdateManyWithWhereWithoutAdminInput | AdminActionUpdateManyWithWhereWithoutAdminInput[]
    deleteMany?: AdminActionScalarWhereInput | AdminActionScalarWhereInput[]
  }

  export type AdminActionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AdminActionCreateWithoutUserInput, AdminActionUncheckedCreateWithoutUserInput> | AdminActionCreateWithoutUserInput[] | AdminActionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AdminActionCreateOrConnectWithoutUserInput | AdminActionCreateOrConnectWithoutUserInput[]
    upsert?: AdminActionUpsertWithWhereUniqueWithoutUserInput | AdminActionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AdminActionCreateManyUserInputEnvelope
    set?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    disconnect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    delete?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    connect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    update?: AdminActionUpdateWithWhereUniqueWithoutUserInput | AdminActionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AdminActionUpdateManyWithWhereWithoutUserInput | AdminActionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AdminActionScalarWhereInput | AdminActionScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutUserInput | NotificationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutUserInput | NotificationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutUserInput | NotificationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type PaymentUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput> | PaymentCreateWithoutUserInput[] | PaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUserInput | PaymentCreateOrConnectWithoutUserInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutUserInput | PaymentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PaymentCreateManyUserInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutUserInput | PaymentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutUserInput | PaymentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type AgencyMemberUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AgencyMemberCreateWithoutUserInput, AgencyMemberUncheckedCreateWithoutUserInput> | AgencyMemberCreateWithoutUserInput[] | AgencyMemberUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AgencyMemberCreateOrConnectWithoutUserInput | AgencyMemberCreateOrConnectWithoutUserInput[]
    upsert?: AgencyMemberUpsertWithWhereUniqueWithoutUserInput | AgencyMemberUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AgencyMemberCreateManyUserInputEnvelope
    set?: AgencyMemberWhereUniqueInput | AgencyMemberWhereUniqueInput[]
    disconnect?: AgencyMemberWhereUniqueInput | AgencyMemberWhereUniqueInput[]
    delete?: AgencyMemberWhereUniqueInput | AgencyMemberWhereUniqueInput[]
    connect?: AgencyMemberWhereUniqueInput | AgencyMemberWhereUniqueInput[]
    update?: AgencyMemberUpdateWithWhereUniqueWithoutUserInput | AgencyMemberUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AgencyMemberUpdateManyWithWhereWithoutUserInput | AgencyMemberUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AgencyMemberScalarWhereInput | AgencyMemberScalarWhereInput[]
  }

  export type SavedSearchUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SavedSearchCreateWithoutUserInput, SavedSearchUncheckedCreateWithoutUserInput> | SavedSearchCreateWithoutUserInput[] | SavedSearchUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SavedSearchCreateOrConnectWithoutUserInput | SavedSearchCreateOrConnectWithoutUserInput[]
    upsert?: SavedSearchUpsertWithWhereUniqueWithoutUserInput | SavedSearchUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SavedSearchCreateManyUserInputEnvelope
    set?: SavedSearchWhereUniqueInput | SavedSearchWhereUniqueInput[]
    disconnect?: SavedSearchWhereUniqueInput | SavedSearchWhereUniqueInput[]
    delete?: SavedSearchWhereUniqueInput | SavedSearchWhereUniqueInput[]
    connect?: SavedSearchWhereUniqueInput | SavedSearchWhereUniqueInput[]
    update?: SavedSearchUpdateWithWhereUniqueWithoutUserInput | SavedSearchUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SavedSearchUpdateManyWithWhereWithoutUserInput | SavedSearchUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SavedSearchScalarWhereInput | SavedSearchScalarWhereInput[]
  }

  export type AgencyVerificationDocumentCreateNestedManyWithoutAgencyInput = {
    create?: XOR<AgencyVerificationDocumentCreateWithoutAgencyInput, AgencyVerificationDocumentUncheckedCreateWithoutAgencyInput> | AgencyVerificationDocumentCreateWithoutAgencyInput[] | AgencyVerificationDocumentUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyVerificationDocumentCreateOrConnectWithoutAgencyInput | AgencyVerificationDocumentCreateOrConnectWithoutAgencyInput[]
    createMany?: AgencyVerificationDocumentCreateManyAgencyInputEnvelope
    connect?: AgencyVerificationDocumentWhereUniqueInput | AgencyVerificationDocumentWhereUniqueInput[]
  }

  export type AgencyMemberCreateNestedManyWithoutAgencyInput = {
    create?: XOR<AgencyMemberCreateWithoutAgencyInput, AgencyMemberUncheckedCreateWithoutAgencyInput> | AgencyMemberCreateWithoutAgencyInput[] | AgencyMemberUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyMemberCreateOrConnectWithoutAgencyInput | AgencyMemberCreateOrConnectWithoutAgencyInput[]
    createMany?: AgencyMemberCreateManyAgencyInputEnvelope
    connect?: AgencyMemberWhereUniqueInput | AgencyMemberWhereUniqueInput[]
  }

  export type AgencyRoleCreateNestedManyWithoutAgencyInput = {
    create?: XOR<AgencyRoleCreateWithoutAgencyInput, AgencyRoleUncheckedCreateWithoutAgencyInput> | AgencyRoleCreateWithoutAgencyInput[] | AgencyRoleUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyRoleCreateOrConnectWithoutAgencyInput | AgencyRoleCreateOrConnectWithoutAgencyInput[]
    createMany?: AgencyRoleCreateManyAgencyInputEnvelope
    connect?: AgencyRoleWhereUniqueInput | AgencyRoleWhereUniqueInput[]
  }

  export type PropertyCreateNestedManyWithoutAgencyInput = {
    create?: XOR<PropertyCreateWithoutAgencyInput, PropertyUncheckedCreateWithoutAgencyInput> | PropertyCreateWithoutAgencyInput[] | PropertyUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: PropertyCreateOrConnectWithoutAgencyInput | PropertyCreateOrConnectWithoutAgencyInput[]
    createMany?: PropertyCreateManyAgencyInputEnvelope
    connect?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
  }

  export type AgencyPerformanceCreateNestedOneWithoutAgencyInput = {
    create?: XOR<AgencyPerformanceCreateWithoutAgencyInput, AgencyPerformanceUncheckedCreateWithoutAgencyInput>
    connectOrCreate?: AgencyPerformanceCreateOrConnectWithoutAgencyInput
    connect?: AgencyPerformanceWhereUniqueInput
  }

  export type AgencyInquiryCreateNestedManyWithoutAgencyInput = {
    create?: XOR<AgencyInquiryCreateWithoutAgencyInput, AgencyInquiryUncheckedCreateWithoutAgencyInput> | AgencyInquiryCreateWithoutAgencyInput[] | AgencyInquiryUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyInquiryCreateOrConnectWithoutAgencyInput | AgencyInquiryCreateOrConnectWithoutAgencyInput[]
    createMany?: AgencyInquiryCreateManyAgencyInputEnvelope
    connect?: AgencyInquiryWhereUniqueInput | AgencyInquiryWhereUniqueInput[]
  }

  export type AdminActionCreateNestedManyWithoutAgencyInput = {
    create?: XOR<AdminActionCreateWithoutAgencyInput, AdminActionUncheckedCreateWithoutAgencyInput> | AdminActionCreateWithoutAgencyInput[] | AdminActionUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AdminActionCreateOrConnectWithoutAgencyInput | AdminActionCreateOrConnectWithoutAgencyInput[]
    createMany?: AdminActionCreateManyAgencyInputEnvelope
    connect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
  }

  export type UserCreateNestedManyWithoutAgencyInput = {
    create?: XOR<UserCreateWithoutAgencyInput, UserUncheckedCreateWithoutAgencyInput> | UserCreateWithoutAgencyInput[] | UserUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAgencyInput | UserCreateOrConnectWithoutAgencyInput[]
    createMany?: UserCreateManyAgencyInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type AgencyVerificationDocumentUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<AgencyVerificationDocumentCreateWithoutAgencyInput, AgencyVerificationDocumentUncheckedCreateWithoutAgencyInput> | AgencyVerificationDocumentCreateWithoutAgencyInput[] | AgencyVerificationDocumentUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyVerificationDocumentCreateOrConnectWithoutAgencyInput | AgencyVerificationDocumentCreateOrConnectWithoutAgencyInput[]
    createMany?: AgencyVerificationDocumentCreateManyAgencyInputEnvelope
    connect?: AgencyVerificationDocumentWhereUniqueInput | AgencyVerificationDocumentWhereUniqueInput[]
  }

  export type AgencyMemberUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<AgencyMemberCreateWithoutAgencyInput, AgencyMemberUncheckedCreateWithoutAgencyInput> | AgencyMemberCreateWithoutAgencyInput[] | AgencyMemberUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyMemberCreateOrConnectWithoutAgencyInput | AgencyMemberCreateOrConnectWithoutAgencyInput[]
    createMany?: AgencyMemberCreateManyAgencyInputEnvelope
    connect?: AgencyMemberWhereUniqueInput | AgencyMemberWhereUniqueInput[]
  }

  export type AgencyRoleUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<AgencyRoleCreateWithoutAgencyInput, AgencyRoleUncheckedCreateWithoutAgencyInput> | AgencyRoleCreateWithoutAgencyInput[] | AgencyRoleUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyRoleCreateOrConnectWithoutAgencyInput | AgencyRoleCreateOrConnectWithoutAgencyInput[]
    createMany?: AgencyRoleCreateManyAgencyInputEnvelope
    connect?: AgencyRoleWhereUniqueInput | AgencyRoleWhereUniqueInput[]
  }

  export type PropertyUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<PropertyCreateWithoutAgencyInput, PropertyUncheckedCreateWithoutAgencyInput> | PropertyCreateWithoutAgencyInput[] | PropertyUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: PropertyCreateOrConnectWithoutAgencyInput | PropertyCreateOrConnectWithoutAgencyInput[]
    createMany?: PropertyCreateManyAgencyInputEnvelope
    connect?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
  }

  export type AgencyPerformanceUncheckedCreateNestedOneWithoutAgencyInput = {
    create?: XOR<AgencyPerformanceCreateWithoutAgencyInput, AgencyPerformanceUncheckedCreateWithoutAgencyInput>
    connectOrCreate?: AgencyPerformanceCreateOrConnectWithoutAgencyInput
    connect?: AgencyPerformanceWhereUniqueInput
  }

  export type AgencyInquiryUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<AgencyInquiryCreateWithoutAgencyInput, AgencyInquiryUncheckedCreateWithoutAgencyInput> | AgencyInquiryCreateWithoutAgencyInput[] | AgencyInquiryUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyInquiryCreateOrConnectWithoutAgencyInput | AgencyInquiryCreateOrConnectWithoutAgencyInput[]
    createMany?: AgencyInquiryCreateManyAgencyInputEnvelope
    connect?: AgencyInquiryWhereUniqueInput | AgencyInquiryWhereUniqueInput[]
  }

  export type AdminActionUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<AdminActionCreateWithoutAgencyInput, AdminActionUncheckedCreateWithoutAgencyInput> | AdminActionCreateWithoutAgencyInput[] | AdminActionUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AdminActionCreateOrConnectWithoutAgencyInput | AdminActionCreateOrConnectWithoutAgencyInput[]
    createMany?: AdminActionCreateManyAgencyInputEnvelope
    connect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<UserCreateWithoutAgencyInput, UserUncheckedCreateWithoutAgencyInput> | UserCreateWithoutAgencyInput[] | UserUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAgencyInput | UserCreateOrConnectWithoutAgencyInput[]
    createMany?: UserCreateManyAgencyInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type EnumAgencyActivityTypeFieldUpdateOperationsInput = {
    set?: $Enums.AgencyActivityType
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumAgencyVerificationStatusFieldUpdateOperationsInput = {
    set?: $Enums.AgencyVerificationStatus
  }

  export type AgencyVerificationDocumentUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<AgencyVerificationDocumentCreateWithoutAgencyInput, AgencyVerificationDocumentUncheckedCreateWithoutAgencyInput> | AgencyVerificationDocumentCreateWithoutAgencyInput[] | AgencyVerificationDocumentUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyVerificationDocumentCreateOrConnectWithoutAgencyInput | AgencyVerificationDocumentCreateOrConnectWithoutAgencyInput[]
    upsert?: AgencyVerificationDocumentUpsertWithWhereUniqueWithoutAgencyInput | AgencyVerificationDocumentUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: AgencyVerificationDocumentCreateManyAgencyInputEnvelope
    set?: AgencyVerificationDocumentWhereUniqueInput | AgencyVerificationDocumentWhereUniqueInput[]
    disconnect?: AgencyVerificationDocumentWhereUniqueInput | AgencyVerificationDocumentWhereUniqueInput[]
    delete?: AgencyVerificationDocumentWhereUniqueInput | AgencyVerificationDocumentWhereUniqueInput[]
    connect?: AgencyVerificationDocumentWhereUniqueInput | AgencyVerificationDocumentWhereUniqueInput[]
    update?: AgencyVerificationDocumentUpdateWithWhereUniqueWithoutAgencyInput | AgencyVerificationDocumentUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: AgencyVerificationDocumentUpdateManyWithWhereWithoutAgencyInput | AgencyVerificationDocumentUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: AgencyVerificationDocumentScalarWhereInput | AgencyVerificationDocumentScalarWhereInput[]
  }

  export type AgencyMemberUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<AgencyMemberCreateWithoutAgencyInput, AgencyMemberUncheckedCreateWithoutAgencyInput> | AgencyMemberCreateWithoutAgencyInput[] | AgencyMemberUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyMemberCreateOrConnectWithoutAgencyInput | AgencyMemberCreateOrConnectWithoutAgencyInput[]
    upsert?: AgencyMemberUpsertWithWhereUniqueWithoutAgencyInput | AgencyMemberUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: AgencyMemberCreateManyAgencyInputEnvelope
    set?: AgencyMemberWhereUniqueInput | AgencyMemberWhereUniqueInput[]
    disconnect?: AgencyMemberWhereUniqueInput | AgencyMemberWhereUniqueInput[]
    delete?: AgencyMemberWhereUniqueInput | AgencyMemberWhereUniqueInput[]
    connect?: AgencyMemberWhereUniqueInput | AgencyMemberWhereUniqueInput[]
    update?: AgencyMemberUpdateWithWhereUniqueWithoutAgencyInput | AgencyMemberUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: AgencyMemberUpdateManyWithWhereWithoutAgencyInput | AgencyMemberUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: AgencyMemberScalarWhereInput | AgencyMemberScalarWhereInput[]
  }

  export type AgencyRoleUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<AgencyRoleCreateWithoutAgencyInput, AgencyRoleUncheckedCreateWithoutAgencyInput> | AgencyRoleCreateWithoutAgencyInput[] | AgencyRoleUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyRoleCreateOrConnectWithoutAgencyInput | AgencyRoleCreateOrConnectWithoutAgencyInput[]
    upsert?: AgencyRoleUpsertWithWhereUniqueWithoutAgencyInput | AgencyRoleUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: AgencyRoleCreateManyAgencyInputEnvelope
    set?: AgencyRoleWhereUniqueInput | AgencyRoleWhereUniqueInput[]
    disconnect?: AgencyRoleWhereUniqueInput | AgencyRoleWhereUniqueInput[]
    delete?: AgencyRoleWhereUniqueInput | AgencyRoleWhereUniqueInput[]
    connect?: AgencyRoleWhereUniqueInput | AgencyRoleWhereUniqueInput[]
    update?: AgencyRoleUpdateWithWhereUniqueWithoutAgencyInput | AgencyRoleUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: AgencyRoleUpdateManyWithWhereWithoutAgencyInput | AgencyRoleUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: AgencyRoleScalarWhereInput | AgencyRoleScalarWhereInput[]
  }

  export type PropertyUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<PropertyCreateWithoutAgencyInput, PropertyUncheckedCreateWithoutAgencyInput> | PropertyCreateWithoutAgencyInput[] | PropertyUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: PropertyCreateOrConnectWithoutAgencyInput | PropertyCreateOrConnectWithoutAgencyInput[]
    upsert?: PropertyUpsertWithWhereUniqueWithoutAgencyInput | PropertyUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: PropertyCreateManyAgencyInputEnvelope
    set?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    disconnect?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    delete?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    connect?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    update?: PropertyUpdateWithWhereUniqueWithoutAgencyInput | PropertyUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: PropertyUpdateManyWithWhereWithoutAgencyInput | PropertyUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: PropertyScalarWhereInput | PropertyScalarWhereInput[]
  }

  export type AgencyPerformanceUpdateOneWithoutAgencyNestedInput = {
    create?: XOR<AgencyPerformanceCreateWithoutAgencyInput, AgencyPerformanceUncheckedCreateWithoutAgencyInput>
    connectOrCreate?: AgencyPerformanceCreateOrConnectWithoutAgencyInput
    upsert?: AgencyPerformanceUpsertWithoutAgencyInput
    disconnect?: AgencyPerformanceWhereInput | boolean
    delete?: AgencyPerformanceWhereInput | boolean
    connect?: AgencyPerformanceWhereUniqueInput
    update?: XOR<XOR<AgencyPerformanceUpdateToOneWithWhereWithoutAgencyInput, AgencyPerformanceUpdateWithoutAgencyInput>, AgencyPerformanceUncheckedUpdateWithoutAgencyInput>
  }

  export type AgencyInquiryUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<AgencyInquiryCreateWithoutAgencyInput, AgencyInquiryUncheckedCreateWithoutAgencyInput> | AgencyInquiryCreateWithoutAgencyInput[] | AgencyInquiryUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyInquiryCreateOrConnectWithoutAgencyInput | AgencyInquiryCreateOrConnectWithoutAgencyInput[]
    upsert?: AgencyInquiryUpsertWithWhereUniqueWithoutAgencyInput | AgencyInquiryUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: AgencyInquiryCreateManyAgencyInputEnvelope
    set?: AgencyInquiryWhereUniqueInput | AgencyInquiryWhereUniqueInput[]
    disconnect?: AgencyInquiryWhereUniqueInput | AgencyInquiryWhereUniqueInput[]
    delete?: AgencyInquiryWhereUniqueInput | AgencyInquiryWhereUniqueInput[]
    connect?: AgencyInquiryWhereUniqueInput | AgencyInquiryWhereUniqueInput[]
    update?: AgencyInquiryUpdateWithWhereUniqueWithoutAgencyInput | AgencyInquiryUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: AgencyInquiryUpdateManyWithWhereWithoutAgencyInput | AgencyInquiryUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: AgencyInquiryScalarWhereInput | AgencyInquiryScalarWhereInput[]
  }

  export type AdminActionUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<AdminActionCreateWithoutAgencyInput, AdminActionUncheckedCreateWithoutAgencyInput> | AdminActionCreateWithoutAgencyInput[] | AdminActionUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AdminActionCreateOrConnectWithoutAgencyInput | AdminActionCreateOrConnectWithoutAgencyInput[]
    upsert?: AdminActionUpsertWithWhereUniqueWithoutAgencyInput | AdminActionUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: AdminActionCreateManyAgencyInputEnvelope
    set?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    disconnect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    delete?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    connect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    update?: AdminActionUpdateWithWhereUniqueWithoutAgencyInput | AdminActionUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: AdminActionUpdateManyWithWhereWithoutAgencyInput | AdminActionUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: AdminActionScalarWhereInput | AdminActionScalarWhereInput[]
  }

  export type UserUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<UserCreateWithoutAgencyInput, UserUncheckedCreateWithoutAgencyInput> | UserCreateWithoutAgencyInput[] | UserUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAgencyInput | UserCreateOrConnectWithoutAgencyInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutAgencyInput | UserUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: UserCreateManyAgencyInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutAgencyInput | UserUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: UserUpdateManyWithWhereWithoutAgencyInput | UserUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type AgencyVerificationDocumentUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<AgencyVerificationDocumentCreateWithoutAgencyInput, AgencyVerificationDocumentUncheckedCreateWithoutAgencyInput> | AgencyVerificationDocumentCreateWithoutAgencyInput[] | AgencyVerificationDocumentUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyVerificationDocumentCreateOrConnectWithoutAgencyInput | AgencyVerificationDocumentCreateOrConnectWithoutAgencyInput[]
    upsert?: AgencyVerificationDocumentUpsertWithWhereUniqueWithoutAgencyInput | AgencyVerificationDocumentUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: AgencyVerificationDocumentCreateManyAgencyInputEnvelope
    set?: AgencyVerificationDocumentWhereUniqueInput | AgencyVerificationDocumentWhereUniqueInput[]
    disconnect?: AgencyVerificationDocumentWhereUniqueInput | AgencyVerificationDocumentWhereUniqueInput[]
    delete?: AgencyVerificationDocumentWhereUniqueInput | AgencyVerificationDocumentWhereUniqueInput[]
    connect?: AgencyVerificationDocumentWhereUniqueInput | AgencyVerificationDocumentWhereUniqueInput[]
    update?: AgencyVerificationDocumentUpdateWithWhereUniqueWithoutAgencyInput | AgencyVerificationDocumentUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: AgencyVerificationDocumentUpdateManyWithWhereWithoutAgencyInput | AgencyVerificationDocumentUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: AgencyVerificationDocumentScalarWhereInput | AgencyVerificationDocumentScalarWhereInput[]
  }

  export type AgencyMemberUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<AgencyMemberCreateWithoutAgencyInput, AgencyMemberUncheckedCreateWithoutAgencyInput> | AgencyMemberCreateWithoutAgencyInput[] | AgencyMemberUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyMemberCreateOrConnectWithoutAgencyInput | AgencyMemberCreateOrConnectWithoutAgencyInput[]
    upsert?: AgencyMemberUpsertWithWhereUniqueWithoutAgencyInput | AgencyMemberUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: AgencyMemberCreateManyAgencyInputEnvelope
    set?: AgencyMemberWhereUniqueInput | AgencyMemberWhereUniqueInput[]
    disconnect?: AgencyMemberWhereUniqueInput | AgencyMemberWhereUniqueInput[]
    delete?: AgencyMemberWhereUniqueInput | AgencyMemberWhereUniqueInput[]
    connect?: AgencyMemberWhereUniqueInput | AgencyMemberWhereUniqueInput[]
    update?: AgencyMemberUpdateWithWhereUniqueWithoutAgencyInput | AgencyMemberUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: AgencyMemberUpdateManyWithWhereWithoutAgencyInput | AgencyMemberUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: AgencyMemberScalarWhereInput | AgencyMemberScalarWhereInput[]
  }

  export type AgencyRoleUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<AgencyRoleCreateWithoutAgencyInput, AgencyRoleUncheckedCreateWithoutAgencyInput> | AgencyRoleCreateWithoutAgencyInput[] | AgencyRoleUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyRoleCreateOrConnectWithoutAgencyInput | AgencyRoleCreateOrConnectWithoutAgencyInput[]
    upsert?: AgencyRoleUpsertWithWhereUniqueWithoutAgencyInput | AgencyRoleUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: AgencyRoleCreateManyAgencyInputEnvelope
    set?: AgencyRoleWhereUniqueInput | AgencyRoleWhereUniqueInput[]
    disconnect?: AgencyRoleWhereUniqueInput | AgencyRoleWhereUniqueInput[]
    delete?: AgencyRoleWhereUniqueInput | AgencyRoleWhereUniqueInput[]
    connect?: AgencyRoleWhereUniqueInput | AgencyRoleWhereUniqueInput[]
    update?: AgencyRoleUpdateWithWhereUniqueWithoutAgencyInput | AgencyRoleUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: AgencyRoleUpdateManyWithWhereWithoutAgencyInput | AgencyRoleUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: AgencyRoleScalarWhereInput | AgencyRoleScalarWhereInput[]
  }

  export type PropertyUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<PropertyCreateWithoutAgencyInput, PropertyUncheckedCreateWithoutAgencyInput> | PropertyCreateWithoutAgencyInput[] | PropertyUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: PropertyCreateOrConnectWithoutAgencyInput | PropertyCreateOrConnectWithoutAgencyInput[]
    upsert?: PropertyUpsertWithWhereUniqueWithoutAgencyInput | PropertyUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: PropertyCreateManyAgencyInputEnvelope
    set?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    disconnect?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    delete?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    connect?: PropertyWhereUniqueInput | PropertyWhereUniqueInput[]
    update?: PropertyUpdateWithWhereUniqueWithoutAgencyInput | PropertyUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: PropertyUpdateManyWithWhereWithoutAgencyInput | PropertyUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: PropertyScalarWhereInput | PropertyScalarWhereInput[]
  }

  export type AgencyPerformanceUncheckedUpdateOneWithoutAgencyNestedInput = {
    create?: XOR<AgencyPerformanceCreateWithoutAgencyInput, AgencyPerformanceUncheckedCreateWithoutAgencyInput>
    connectOrCreate?: AgencyPerformanceCreateOrConnectWithoutAgencyInput
    upsert?: AgencyPerformanceUpsertWithoutAgencyInput
    disconnect?: AgencyPerformanceWhereInput | boolean
    delete?: AgencyPerformanceWhereInput | boolean
    connect?: AgencyPerformanceWhereUniqueInput
    update?: XOR<XOR<AgencyPerformanceUpdateToOneWithWhereWithoutAgencyInput, AgencyPerformanceUpdateWithoutAgencyInput>, AgencyPerformanceUncheckedUpdateWithoutAgencyInput>
  }

  export type AgencyInquiryUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<AgencyInquiryCreateWithoutAgencyInput, AgencyInquiryUncheckedCreateWithoutAgencyInput> | AgencyInquiryCreateWithoutAgencyInput[] | AgencyInquiryUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyInquiryCreateOrConnectWithoutAgencyInput | AgencyInquiryCreateOrConnectWithoutAgencyInput[]
    upsert?: AgencyInquiryUpsertWithWhereUniqueWithoutAgencyInput | AgencyInquiryUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: AgencyInquiryCreateManyAgencyInputEnvelope
    set?: AgencyInquiryWhereUniqueInput | AgencyInquiryWhereUniqueInput[]
    disconnect?: AgencyInquiryWhereUniqueInput | AgencyInquiryWhereUniqueInput[]
    delete?: AgencyInquiryWhereUniqueInput | AgencyInquiryWhereUniqueInput[]
    connect?: AgencyInquiryWhereUniqueInput | AgencyInquiryWhereUniqueInput[]
    update?: AgencyInquiryUpdateWithWhereUniqueWithoutAgencyInput | AgencyInquiryUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: AgencyInquiryUpdateManyWithWhereWithoutAgencyInput | AgencyInquiryUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: AgencyInquiryScalarWhereInput | AgencyInquiryScalarWhereInput[]
  }

  export type AdminActionUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<AdminActionCreateWithoutAgencyInput, AdminActionUncheckedCreateWithoutAgencyInput> | AdminActionCreateWithoutAgencyInput[] | AdminActionUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AdminActionCreateOrConnectWithoutAgencyInput | AdminActionCreateOrConnectWithoutAgencyInput[]
    upsert?: AdminActionUpsertWithWhereUniqueWithoutAgencyInput | AdminActionUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: AdminActionCreateManyAgencyInputEnvelope
    set?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    disconnect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    delete?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    connect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    update?: AdminActionUpdateWithWhereUniqueWithoutAgencyInput | AdminActionUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: AdminActionUpdateManyWithWhereWithoutAgencyInput | AdminActionUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: AdminActionScalarWhereInput | AdminActionScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<UserCreateWithoutAgencyInput, UserUncheckedCreateWithoutAgencyInput> | UserCreateWithoutAgencyInput[] | UserUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAgencyInput | UserCreateOrConnectWithoutAgencyInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutAgencyInput | UserUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: UserCreateManyAgencyInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutAgencyInput | UserUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: UserUpdateManyWithWhereWithoutAgencyInput | UserUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutAgencyMemberInput = {
    create?: XOR<UserCreateWithoutAgencyMemberInput, UserUncheckedCreateWithoutAgencyMemberInput>
    connectOrCreate?: UserCreateOrConnectWithoutAgencyMemberInput
    connect?: UserWhereUniqueInput
  }

  export type AgencyCreateNestedOneWithoutTeamMembersInput = {
    create?: XOR<AgencyCreateWithoutTeamMembersInput, AgencyUncheckedCreateWithoutTeamMembersInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutTeamMembersInput
    connect?: AgencyWhereUniqueInput
  }

  export type AgentPerformanceCreateNestedOneWithoutAgentInput = {
    create?: XOR<AgentPerformanceCreateWithoutAgentInput, AgentPerformanceUncheckedCreateWithoutAgentInput>
    connectOrCreate?: AgentPerformanceCreateOrConnectWithoutAgentInput
    connect?: AgentPerformanceWhereUniqueInput
  }

  export type AgentPerformanceUncheckedCreateNestedOneWithoutAgentInput = {
    create?: XOR<AgentPerformanceCreateWithoutAgentInput, AgentPerformanceUncheckedCreateWithoutAgentInput>
    connectOrCreate?: AgentPerformanceCreateOrConnectWithoutAgentInput
    connect?: AgentPerformanceWhereUniqueInput
  }

  export type EnumUserRoleFieldUpdateOperationsInput = {
    set?: $Enums.UserRole
  }

  export type UserUpdateOneRequiredWithoutAgencyMemberNestedInput = {
    create?: XOR<UserCreateWithoutAgencyMemberInput, UserUncheckedCreateWithoutAgencyMemberInput>
    connectOrCreate?: UserCreateOrConnectWithoutAgencyMemberInput
    upsert?: UserUpsertWithoutAgencyMemberInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAgencyMemberInput, UserUpdateWithoutAgencyMemberInput>, UserUncheckedUpdateWithoutAgencyMemberInput>
  }

  export type AgencyUpdateOneRequiredWithoutTeamMembersNestedInput = {
    create?: XOR<AgencyCreateWithoutTeamMembersInput, AgencyUncheckedCreateWithoutTeamMembersInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutTeamMembersInput
    upsert?: AgencyUpsertWithoutTeamMembersInput
    connect?: AgencyWhereUniqueInput
    update?: XOR<XOR<AgencyUpdateToOneWithWhereWithoutTeamMembersInput, AgencyUpdateWithoutTeamMembersInput>, AgencyUncheckedUpdateWithoutTeamMembersInput>
  }

  export type AgentPerformanceUpdateOneWithoutAgentNestedInput = {
    create?: XOR<AgentPerformanceCreateWithoutAgentInput, AgentPerformanceUncheckedCreateWithoutAgentInput>
    connectOrCreate?: AgentPerformanceCreateOrConnectWithoutAgentInput
    upsert?: AgentPerformanceUpsertWithoutAgentInput
    disconnect?: AgentPerformanceWhereInput | boolean
    delete?: AgentPerformanceWhereInput | boolean
    connect?: AgentPerformanceWhereUniqueInput
    update?: XOR<XOR<AgentPerformanceUpdateToOneWithWhereWithoutAgentInput, AgentPerformanceUpdateWithoutAgentInput>, AgentPerformanceUncheckedUpdateWithoutAgentInput>
  }

  export type AgentPerformanceUncheckedUpdateOneWithoutAgentNestedInput = {
    create?: XOR<AgentPerformanceCreateWithoutAgentInput, AgentPerformanceUncheckedCreateWithoutAgentInput>
    connectOrCreate?: AgentPerformanceCreateOrConnectWithoutAgentInput
    upsert?: AgentPerformanceUpsertWithoutAgentInput
    disconnect?: AgentPerformanceWhereInput | boolean
    delete?: AgentPerformanceWhereInput | boolean
    connect?: AgentPerformanceWhereUniqueInput
    update?: XOR<XOR<AgentPerformanceUpdateToOneWithWhereWithoutAgentInput, AgentPerformanceUpdateWithoutAgentInput>, AgentPerformanceUncheckedUpdateWithoutAgentInput>
  }

  export type UserCreateNestedOneWithoutAgencyRolesInput = {
    create?: XOR<UserCreateWithoutAgencyRolesInput, UserUncheckedCreateWithoutAgencyRolesInput>
    connectOrCreate?: UserCreateOrConnectWithoutAgencyRolesInput
    connect?: UserWhereUniqueInput
  }

  export type AgencyCreateNestedOneWithoutTeamRolesInput = {
    create?: XOR<AgencyCreateWithoutTeamRolesInput, AgencyUncheckedCreateWithoutTeamRolesInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutTeamRolesInput
    connect?: AgencyWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutAgencyRolesNestedInput = {
    create?: XOR<UserCreateWithoutAgencyRolesInput, UserUncheckedCreateWithoutAgencyRolesInput>
    connectOrCreate?: UserCreateOrConnectWithoutAgencyRolesInput
    upsert?: UserUpsertWithoutAgencyRolesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAgencyRolesInput, UserUpdateWithoutAgencyRolesInput>, UserUncheckedUpdateWithoutAgencyRolesInput>
  }

  export type AgencyUpdateOneRequiredWithoutTeamRolesNestedInput = {
    create?: XOR<AgencyCreateWithoutTeamRolesInput, AgencyUncheckedCreateWithoutTeamRolesInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutTeamRolesInput
    upsert?: AgencyUpsertWithoutTeamRolesInput
    connect?: AgencyWhereUniqueInput
    update?: XOR<XOR<AgencyUpdateToOneWithWhereWithoutTeamRolesInput, AgencyUpdateWithoutTeamRolesInput>, AgencyUncheckedUpdateWithoutTeamRolesInput>
  }

  export type AgencyCreateNestedOneWithoutVerificationDocumentsInput = {
    create?: XOR<AgencyCreateWithoutVerificationDocumentsInput, AgencyUncheckedCreateWithoutVerificationDocumentsInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutVerificationDocumentsInput
    connect?: AgencyWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type AgencyUpdateOneRequiredWithoutVerificationDocumentsNestedInput = {
    create?: XOR<AgencyCreateWithoutVerificationDocumentsInput, AgencyUncheckedCreateWithoutVerificationDocumentsInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutVerificationDocumentsInput
    upsert?: AgencyUpsertWithoutVerificationDocumentsInput
    connect?: AgencyWhereUniqueInput
    update?: XOR<XOR<AgencyUpdateToOneWithWhereWithoutVerificationDocumentsInput, AgencyUpdateWithoutVerificationDocumentsInput>, AgencyUncheckedUpdateWithoutVerificationDocumentsInput>
  }

  export type AgencyCreateNestedOneWithoutPerformanceInput = {
    create?: XOR<AgencyCreateWithoutPerformanceInput, AgencyUncheckedCreateWithoutPerformanceInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutPerformanceInput
    connect?: AgencyWhereUniqueInput
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type AgencyUpdateOneRequiredWithoutPerformanceNestedInput = {
    create?: XOR<AgencyCreateWithoutPerformanceInput, AgencyUncheckedCreateWithoutPerformanceInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutPerformanceInput
    upsert?: AgencyUpsertWithoutPerformanceInput
    connect?: AgencyWhereUniqueInput
    update?: XOR<XOR<AgencyUpdateToOneWithWhereWithoutPerformanceInput, AgencyUpdateWithoutPerformanceInput>, AgencyUncheckedUpdateWithoutPerformanceInput>
  }

  export type AgencyMemberCreateNestedOneWithoutPerformanceInput = {
    create?: XOR<AgencyMemberCreateWithoutPerformanceInput, AgencyMemberUncheckedCreateWithoutPerformanceInput>
    connectOrCreate?: AgencyMemberCreateOrConnectWithoutPerformanceInput
    connect?: AgencyMemberWhereUniqueInput
  }

  export type AgencyMemberUpdateOneRequiredWithoutPerformanceNestedInput = {
    create?: XOR<AgencyMemberCreateWithoutPerformanceInput, AgencyMemberUncheckedCreateWithoutPerformanceInput>
    connectOrCreate?: AgencyMemberCreateOrConnectWithoutPerformanceInput
    upsert?: AgencyMemberUpsertWithoutPerformanceInput
    connect?: AgencyMemberWhereUniqueInput
    update?: XOR<XOR<AgencyMemberUpdateToOneWithWhereWithoutPerformanceInput, AgencyMemberUpdateWithoutPerformanceInput>, AgencyMemberUncheckedUpdateWithoutPerformanceInput>
  }

  export type AgencyCreateNestedOneWithoutInquiriesInput = {
    create?: XOR<AgencyCreateWithoutInquiriesInput, AgencyUncheckedCreateWithoutInquiriesInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutInquiriesInput
    connect?: AgencyWhereUniqueInput
  }

  export type PropertyCreateNestedOneWithoutAgencyInquiriesInput = {
    create?: XOR<PropertyCreateWithoutAgencyInquiriesInput, PropertyUncheckedCreateWithoutAgencyInquiriesInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutAgencyInquiriesInput
    connect?: PropertyWhereUniqueInput
  }

  export type EnumInquiryStatusFieldUpdateOperationsInput = {
    set?: $Enums.InquiryStatus
  }

  export type AgencyUpdateOneRequiredWithoutInquiriesNestedInput = {
    create?: XOR<AgencyCreateWithoutInquiriesInput, AgencyUncheckedCreateWithoutInquiriesInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutInquiriesInput
    upsert?: AgencyUpsertWithoutInquiriesInput
    connect?: AgencyWhereUniqueInput
    update?: XOR<XOR<AgencyUpdateToOneWithWhereWithoutInquiriesInput, AgencyUpdateWithoutInquiriesInput>, AgencyUncheckedUpdateWithoutInquiriesInput>
  }

  export type PropertyUpdateOneWithoutAgencyInquiriesNestedInput = {
    create?: XOR<PropertyCreateWithoutAgencyInquiriesInput, PropertyUncheckedCreateWithoutAgencyInquiriesInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutAgencyInquiriesInput
    upsert?: PropertyUpsertWithoutAgencyInquiriesInput
    disconnect?: PropertyWhereInput | boolean
    delete?: PropertyWhereInput | boolean
    connect?: PropertyWhereUniqueInput
    update?: XOR<XOR<PropertyUpdateToOneWithWhereWithoutAgencyInquiriesInput, PropertyUpdateWithoutAgencyInquiriesInput>, PropertyUncheckedUpdateWithoutAgencyInquiriesInput>
  }

  export type PropertyCreateamenitiesInput = {
    set: string[]
  }

  export type PropertyCreateutilitiesInput = {
    set: string[]
  }

  export type PropertyCreatenearbyServicesInput = {
    set: string[]
  }

  export type UserCreateNestedOneWithoutOwnedPropertiesInput = {
    create?: XOR<UserCreateWithoutOwnedPropertiesInput, UserUncheckedCreateWithoutOwnedPropertiesInput>
    connectOrCreate?: UserCreateOrConnectWithoutOwnedPropertiesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutManagedPropertiesInput = {
    create?: XOR<UserCreateWithoutManagedPropertiesInput, UserUncheckedCreateWithoutManagedPropertiesInput>
    connectOrCreate?: UserCreateOrConnectWithoutManagedPropertiesInput
    connect?: UserWhereUniqueInput
  }

  export type AgencyCreateNestedOneWithoutPropertiesInput = {
    create?: XOR<AgencyCreateWithoutPropertiesInput, AgencyUncheckedCreateWithoutPropertiesInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutPropertiesInput
    connect?: AgencyWhereUniqueInput
  }

  export type PropertyPhotoCreateNestedManyWithoutPropertyInput = {
    create?: XOR<PropertyPhotoCreateWithoutPropertyInput, PropertyPhotoUncheckedCreateWithoutPropertyInput> | PropertyPhotoCreateWithoutPropertyInput[] | PropertyPhotoUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyPhotoCreateOrConnectWithoutPropertyInput | PropertyPhotoCreateOrConnectWithoutPropertyInput[]
    createMany?: PropertyPhotoCreateManyPropertyInputEnvelope
    connect?: PropertyPhotoWhereUniqueInput | PropertyPhotoWhereUniqueInput[]
  }

  export type PropertyVideoCreateNestedManyWithoutPropertyInput = {
    create?: XOR<PropertyVideoCreateWithoutPropertyInput, PropertyVideoUncheckedCreateWithoutPropertyInput> | PropertyVideoCreateWithoutPropertyInput[] | PropertyVideoUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyVideoCreateOrConnectWithoutPropertyInput | PropertyVideoCreateOrConnectWithoutPropertyInput[]
    createMany?: PropertyVideoCreateManyPropertyInputEnvelope
    connect?: PropertyVideoWhereUniqueInput | PropertyVideoWhereUniqueInput[]
  }

  export type VirtualTourCreateNestedManyWithoutPropertyInput = {
    create?: XOR<VirtualTourCreateWithoutPropertyInput, VirtualTourUncheckedCreateWithoutPropertyInput> | VirtualTourCreateWithoutPropertyInput[] | VirtualTourUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: VirtualTourCreateOrConnectWithoutPropertyInput | VirtualTourCreateOrConnectWithoutPropertyInput[]
    createMany?: VirtualTourCreateManyPropertyInputEnvelope
    connect?: VirtualTourWhereUniqueInput | VirtualTourWhereUniqueInput[]
  }

  export type PropertyViewCreateNestedManyWithoutPropertyInput = {
    create?: XOR<PropertyViewCreateWithoutPropertyInput, PropertyViewUncheckedCreateWithoutPropertyInput> | PropertyViewCreateWithoutPropertyInput[] | PropertyViewUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyViewCreateOrConnectWithoutPropertyInput | PropertyViewCreateOrConnectWithoutPropertyInput[]
    createMany?: PropertyViewCreateManyPropertyInputEnvelope
    connect?: PropertyViewWhereUniqueInput | PropertyViewWhereUniqueInput[]
  }

  export type FavoriteCreateNestedManyWithoutPropertyInput = {
    create?: XOR<FavoriteCreateWithoutPropertyInput, FavoriteUncheckedCreateWithoutPropertyInput> | FavoriteCreateWithoutPropertyInput[] | FavoriteUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutPropertyInput | FavoriteCreateOrConnectWithoutPropertyInput[]
    createMany?: FavoriteCreateManyPropertyInputEnvelope
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
  }

  export type PropertyRequestCreateNestedManyWithoutPropertyInput = {
    create?: XOR<PropertyRequestCreateWithoutPropertyInput, PropertyRequestUncheckedCreateWithoutPropertyInput> | PropertyRequestCreateWithoutPropertyInput[] | PropertyRequestUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyRequestCreateOrConnectWithoutPropertyInput | PropertyRequestCreateOrConnectWithoutPropertyInput[]
    createMany?: PropertyRequestCreateManyPropertyInputEnvelope
    connect?: PropertyRequestWhereUniqueInput | PropertyRequestWhereUniqueInput[]
  }

  export type PropertyInquiryCreateNestedManyWithoutPropertyInput = {
    create?: XOR<PropertyInquiryCreateWithoutPropertyInput, PropertyInquiryUncheckedCreateWithoutPropertyInput> | PropertyInquiryCreateWithoutPropertyInput[] | PropertyInquiryUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyInquiryCreateOrConnectWithoutPropertyInput | PropertyInquiryCreateOrConnectWithoutPropertyInput[]
    createMany?: PropertyInquiryCreateManyPropertyInputEnvelope
    connect?: PropertyInquiryWhereUniqueInput | PropertyInquiryWhereUniqueInput[]
  }

  export type PropertyComparisonPropertiesCreateNestedManyWithoutPropertyInput = {
    create?: XOR<PropertyComparisonPropertiesCreateWithoutPropertyInput, PropertyComparisonPropertiesUncheckedCreateWithoutPropertyInput> | PropertyComparisonPropertiesCreateWithoutPropertyInput[] | PropertyComparisonPropertiesUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyComparisonPropertiesCreateOrConnectWithoutPropertyInput | PropertyComparisonPropertiesCreateOrConnectWithoutPropertyInput[]
    createMany?: PropertyComparisonPropertiesCreateManyPropertyInputEnvelope
    connect?: PropertyComparisonPropertiesWhereUniqueInput | PropertyComparisonPropertiesWhereUniqueInput[]
  }

  export type PropertyReviewCreateNestedManyWithoutPropertyInput = {
    create?: XOR<PropertyReviewCreateWithoutPropertyInput, PropertyReviewUncheckedCreateWithoutPropertyInput> | PropertyReviewCreateWithoutPropertyInput[] | PropertyReviewUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyReviewCreateOrConnectWithoutPropertyInput | PropertyReviewCreateOrConnectWithoutPropertyInput[]
    createMany?: PropertyReviewCreateManyPropertyInputEnvelope
    connect?: PropertyReviewWhereUniqueInput | PropertyReviewWhereUniqueInput[]
  }

  export type PropertyCommentCreateNestedManyWithoutPropertyInput = {
    create?: XOR<PropertyCommentCreateWithoutPropertyInput, PropertyCommentUncheckedCreateWithoutPropertyInput> | PropertyCommentCreateWithoutPropertyInput[] | PropertyCommentUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyCommentCreateOrConnectWithoutPropertyInput | PropertyCommentCreateOrConnectWithoutPropertyInput[]
    createMany?: PropertyCommentCreateManyPropertyInputEnvelope
    connect?: PropertyCommentWhereUniqueInput | PropertyCommentWhereUniqueInput[]
  }

  export type PropertyViewingCreateNestedManyWithoutPropertyInput = {
    create?: XOR<PropertyViewingCreateWithoutPropertyInput, PropertyViewingUncheckedCreateWithoutPropertyInput> | PropertyViewingCreateWithoutPropertyInput[] | PropertyViewingUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyViewingCreateOrConnectWithoutPropertyInput | PropertyViewingCreateOrConnectWithoutPropertyInput[]
    createMany?: PropertyViewingCreateManyPropertyInputEnvelope
    connect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
  }

  export type PropertyAnalyticsCreateNestedManyWithoutPropertyInput = {
    create?: XOR<PropertyAnalyticsCreateWithoutPropertyInput, PropertyAnalyticsUncheckedCreateWithoutPropertyInput> | PropertyAnalyticsCreateWithoutPropertyInput[] | PropertyAnalyticsUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyAnalyticsCreateOrConnectWithoutPropertyInput | PropertyAnalyticsCreateOrConnectWithoutPropertyInput[]
    createMany?: PropertyAnalyticsCreateManyPropertyInputEnvelope
    connect?: PropertyAnalyticsWhereUniqueInput | PropertyAnalyticsWhereUniqueInput[]
  }

  export type AdminActionCreateNestedManyWithoutPropertyInput = {
    create?: XOR<AdminActionCreateWithoutPropertyInput, AdminActionUncheckedCreateWithoutPropertyInput> | AdminActionCreateWithoutPropertyInput[] | AdminActionUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: AdminActionCreateOrConnectWithoutPropertyInput | AdminActionCreateOrConnectWithoutPropertyInput[]
    createMany?: AdminActionCreateManyPropertyInputEnvelope
    connect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
  }

  export type PaymentCreateNestedManyWithoutPropertyInput = {
    create?: XOR<PaymentCreateWithoutPropertyInput, PaymentUncheckedCreateWithoutPropertyInput> | PaymentCreateWithoutPropertyInput[] | PaymentUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutPropertyInput | PaymentCreateOrConnectWithoutPropertyInput[]
    createMany?: PaymentCreateManyPropertyInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type AgencyInquiryCreateNestedManyWithoutPropertyInput = {
    create?: XOR<AgencyInquiryCreateWithoutPropertyInput, AgencyInquiryUncheckedCreateWithoutPropertyInput> | AgencyInquiryCreateWithoutPropertyInput[] | AgencyInquiryUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: AgencyInquiryCreateOrConnectWithoutPropertyInput | AgencyInquiryCreateOrConnectWithoutPropertyInput[]
    createMany?: AgencyInquiryCreateManyPropertyInputEnvelope
    connect?: AgencyInquiryWhereUniqueInput | AgencyInquiryWhereUniqueInput[]
  }

  export type PropertyPhotoUncheckedCreateNestedManyWithoutPropertyInput = {
    create?: XOR<PropertyPhotoCreateWithoutPropertyInput, PropertyPhotoUncheckedCreateWithoutPropertyInput> | PropertyPhotoCreateWithoutPropertyInput[] | PropertyPhotoUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyPhotoCreateOrConnectWithoutPropertyInput | PropertyPhotoCreateOrConnectWithoutPropertyInput[]
    createMany?: PropertyPhotoCreateManyPropertyInputEnvelope
    connect?: PropertyPhotoWhereUniqueInput | PropertyPhotoWhereUniqueInput[]
  }

  export type PropertyVideoUncheckedCreateNestedManyWithoutPropertyInput = {
    create?: XOR<PropertyVideoCreateWithoutPropertyInput, PropertyVideoUncheckedCreateWithoutPropertyInput> | PropertyVideoCreateWithoutPropertyInput[] | PropertyVideoUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyVideoCreateOrConnectWithoutPropertyInput | PropertyVideoCreateOrConnectWithoutPropertyInput[]
    createMany?: PropertyVideoCreateManyPropertyInputEnvelope
    connect?: PropertyVideoWhereUniqueInput | PropertyVideoWhereUniqueInput[]
  }

  export type VirtualTourUncheckedCreateNestedManyWithoutPropertyInput = {
    create?: XOR<VirtualTourCreateWithoutPropertyInput, VirtualTourUncheckedCreateWithoutPropertyInput> | VirtualTourCreateWithoutPropertyInput[] | VirtualTourUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: VirtualTourCreateOrConnectWithoutPropertyInput | VirtualTourCreateOrConnectWithoutPropertyInput[]
    createMany?: VirtualTourCreateManyPropertyInputEnvelope
    connect?: VirtualTourWhereUniqueInput | VirtualTourWhereUniqueInput[]
  }

  export type PropertyViewUncheckedCreateNestedManyWithoutPropertyInput = {
    create?: XOR<PropertyViewCreateWithoutPropertyInput, PropertyViewUncheckedCreateWithoutPropertyInput> | PropertyViewCreateWithoutPropertyInput[] | PropertyViewUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyViewCreateOrConnectWithoutPropertyInput | PropertyViewCreateOrConnectWithoutPropertyInput[]
    createMany?: PropertyViewCreateManyPropertyInputEnvelope
    connect?: PropertyViewWhereUniqueInput | PropertyViewWhereUniqueInput[]
  }

  export type FavoriteUncheckedCreateNestedManyWithoutPropertyInput = {
    create?: XOR<FavoriteCreateWithoutPropertyInput, FavoriteUncheckedCreateWithoutPropertyInput> | FavoriteCreateWithoutPropertyInput[] | FavoriteUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutPropertyInput | FavoriteCreateOrConnectWithoutPropertyInput[]
    createMany?: FavoriteCreateManyPropertyInputEnvelope
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
  }

  export type PropertyRequestUncheckedCreateNestedManyWithoutPropertyInput = {
    create?: XOR<PropertyRequestCreateWithoutPropertyInput, PropertyRequestUncheckedCreateWithoutPropertyInput> | PropertyRequestCreateWithoutPropertyInput[] | PropertyRequestUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyRequestCreateOrConnectWithoutPropertyInput | PropertyRequestCreateOrConnectWithoutPropertyInput[]
    createMany?: PropertyRequestCreateManyPropertyInputEnvelope
    connect?: PropertyRequestWhereUniqueInput | PropertyRequestWhereUniqueInput[]
  }

  export type PropertyInquiryUncheckedCreateNestedManyWithoutPropertyInput = {
    create?: XOR<PropertyInquiryCreateWithoutPropertyInput, PropertyInquiryUncheckedCreateWithoutPropertyInput> | PropertyInquiryCreateWithoutPropertyInput[] | PropertyInquiryUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyInquiryCreateOrConnectWithoutPropertyInput | PropertyInquiryCreateOrConnectWithoutPropertyInput[]
    createMany?: PropertyInquiryCreateManyPropertyInputEnvelope
    connect?: PropertyInquiryWhereUniqueInput | PropertyInquiryWhereUniqueInput[]
  }

  export type PropertyComparisonPropertiesUncheckedCreateNestedManyWithoutPropertyInput = {
    create?: XOR<PropertyComparisonPropertiesCreateWithoutPropertyInput, PropertyComparisonPropertiesUncheckedCreateWithoutPropertyInput> | PropertyComparisonPropertiesCreateWithoutPropertyInput[] | PropertyComparisonPropertiesUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyComparisonPropertiesCreateOrConnectWithoutPropertyInput | PropertyComparisonPropertiesCreateOrConnectWithoutPropertyInput[]
    createMany?: PropertyComparisonPropertiesCreateManyPropertyInputEnvelope
    connect?: PropertyComparisonPropertiesWhereUniqueInput | PropertyComparisonPropertiesWhereUniqueInput[]
  }

  export type PropertyReviewUncheckedCreateNestedManyWithoutPropertyInput = {
    create?: XOR<PropertyReviewCreateWithoutPropertyInput, PropertyReviewUncheckedCreateWithoutPropertyInput> | PropertyReviewCreateWithoutPropertyInput[] | PropertyReviewUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyReviewCreateOrConnectWithoutPropertyInput | PropertyReviewCreateOrConnectWithoutPropertyInput[]
    createMany?: PropertyReviewCreateManyPropertyInputEnvelope
    connect?: PropertyReviewWhereUniqueInput | PropertyReviewWhereUniqueInput[]
  }

  export type PropertyCommentUncheckedCreateNestedManyWithoutPropertyInput = {
    create?: XOR<PropertyCommentCreateWithoutPropertyInput, PropertyCommentUncheckedCreateWithoutPropertyInput> | PropertyCommentCreateWithoutPropertyInput[] | PropertyCommentUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyCommentCreateOrConnectWithoutPropertyInput | PropertyCommentCreateOrConnectWithoutPropertyInput[]
    createMany?: PropertyCommentCreateManyPropertyInputEnvelope
    connect?: PropertyCommentWhereUniqueInput | PropertyCommentWhereUniqueInput[]
  }

  export type PropertyViewingUncheckedCreateNestedManyWithoutPropertyInput = {
    create?: XOR<PropertyViewingCreateWithoutPropertyInput, PropertyViewingUncheckedCreateWithoutPropertyInput> | PropertyViewingCreateWithoutPropertyInput[] | PropertyViewingUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyViewingCreateOrConnectWithoutPropertyInput | PropertyViewingCreateOrConnectWithoutPropertyInput[]
    createMany?: PropertyViewingCreateManyPropertyInputEnvelope
    connect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
  }

  export type PropertyAnalyticsUncheckedCreateNestedManyWithoutPropertyInput = {
    create?: XOR<PropertyAnalyticsCreateWithoutPropertyInput, PropertyAnalyticsUncheckedCreateWithoutPropertyInput> | PropertyAnalyticsCreateWithoutPropertyInput[] | PropertyAnalyticsUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyAnalyticsCreateOrConnectWithoutPropertyInput | PropertyAnalyticsCreateOrConnectWithoutPropertyInput[]
    createMany?: PropertyAnalyticsCreateManyPropertyInputEnvelope
    connect?: PropertyAnalyticsWhereUniqueInput | PropertyAnalyticsWhereUniqueInput[]
  }

  export type AdminActionUncheckedCreateNestedManyWithoutPropertyInput = {
    create?: XOR<AdminActionCreateWithoutPropertyInput, AdminActionUncheckedCreateWithoutPropertyInput> | AdminActionCreateWithoutPropertyInput[] | AdminActionUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: AdminActionCreateOrConnectWithoutPropertyInput | AdminActionCreateOrConnectWithoutPropertyInput[]
    createMany?: AdminActionCreateManyPropertyInputEnvelope
    connect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
  }

  export type PaymentUncheckedCreateNestedManyWithoutPropertyInput = {
    create?: XOR<PaymentCreateWithoutPropertyInput, PaymentUncheckedCreateWithoutPropertyInput> | PaymentCreateWithoutPropertyInput[] | PaymentUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutPropertyInput | PaymentCreateOrConnectWithoutPropertyInput[]
    createMany?: PaymentCreateManyPropertyInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type AgencyInquiryUncheckedCreateNestedManyWithoutPropertyInput = {
    create?: XOR<AgencyInquiryCreateWithoutPropertyInput, AgencyInquiryUncheckedCreateWithoutPropertyInput> | AgencyInquiryCreateWithoutPropertyInput[] | AgencyInquiryUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: AgencyInquiryCreateOrConnectWithoutPropertyInput | AgencyInquiryCreateOrConnectWithoutPropertyInput[]
    createMany?: AgencyInquiryCreateManyPropertyInputEnvelope
    connect?: AgencyInquiryWhereUniqueInput | AgencyInquiryWhereUniqueInput[]
  }

  export type EnumPropertyTypeFieldUpdateOperationsInput = {
    set?: $Enums.PropertyType
  }

  export type EnumTransactionTypeFieldUpdateOperationsInput = {
    set?: $Enums.TransactionType
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumPropertyConditionFieldUpdateOperationsInput = {
    set?: $Enums.PropertyCondition
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type PropertyUpdateamenitiesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type PropertyUpdateutilitiesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type PropertyUpdatenearbyServicesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type NullableEnumLeaseTypeFieldUpdateOperationsInput = {
    set?: $Enums.LeaseType | null
  }

  export type EnumPropertyStatusFieldUpdateOperationsInput = {
    set?: $Enums.PropertyStatus
  }

  export type UserUpdateOneRequiredWithoutOwnedPropertiesNestedInput = {
    create?: XOR<UserCreateWithoutOwnedPropertiesInput, UserUncheckedCreateWithoutOwnedPropertiesInput>
    connectOrCreate?: UserCreateOrConnectWithoutOwnedPropertiesInput
    upsert?: UserUpsertWithoutOwnedPropertiesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOwnedPropertiesInput, UserUpdateWithoutOwnedPropertiesInput>, UserUncheckedUpdateWithoutOwnedPropertiesInput>
  }

  export type UserUpdateOneWithoutManagedPropertiesNestedInput = {
    create?: XOR<UserCreateWithoutManagedPropertiesInput, UserUncheckedCreateWithoutManagedPropertiesInput>
    connectOrCreate?: UserCreateOrConnectWithoutManagedPropertiesInput
    upsert?: UserUpsertWithoutManagedPropertiesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutManagedPropertiesInput, UserUpdateWithoutManagedPropertiesInput>, UserUncheckedUpdateWithoutManagedPropertiesInput>
  }

  export type AgencyUpdateOneWithoutPropertiesNestedInput = {
    create?: XOR<AgencyCreateWithoutPropertiesInput, AgencyUncheckedCreateWithoutPropertiesInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutPropertiesInput
    upsert?: AgencyUpsertWithoutPropertiesInput
    disconnect?: AgencyWhereInput | boolean
    delete?: AgencyWhereInput | boolean
    connect?: AgencyWhereUniqueInput
    update?: XOR<XOR<AgencyUpdateToOneWithWhereWithoutPropertiesInput, AgencyUpdateWithoutPropertiesInput>, AgencyUncheckedUpdateWithoutPropertiesInput>
  }

  export type PropertyPhotoUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<PropertyPhotoCreateWithoutPropertyInput, PropertyPhotoUncheckedCreateWithoutPropertyInput> | PropertyPhotoCreateWithoutPropertyInput[] | PropertyPhotoUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyPhotoCreateOrConnectWithoutPropertyInput | PropertyPhotoCreateOrConnectWithoutPropertyInput[]
    upsert?: PropertyPhotoUpsertWithWhereUniqueWithoutPropertyInput | PropertyPhotoUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: PropertyPhotoCreateManyPropertyInputEnvelope
    set?: PropertyPhotoWhereUniqueInput | PropertyPhotoWhereUniqueInput[]
    disconnect?: PropertyPhotoWhereUniqueInput | PropertyPhotoWhereUniqueInput[]
    delete?: PropertyPhotoWhereUniqueInput | PropertyPhotoWhereUniqueInput[]
    connect?: PropertyPhotoWhereUniqueInput | PropertyPhotoWhereUniqueInput[]
    update?: PropertyPhotoUpdateWithWhereUniqueWithoutPropertyInput | PropertyPhotoUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: PropertyPhotoUpdateManyWithWhereWithoutPropertyInput | PropertyPhotoUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: PropertyPhotoScalarWhereInput | PropertyPhotoScalarWhereInput[]
  }

  export type PropertyVideoUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<PropertyVideoCreateWithoutPropertyInput, PropertyVideoUncheckedCreateWithoutPropertyInput> | PropertyVideoCreateWithoutPropertyInput[] | PropertyVideoUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyVideoCreateOrConnectWithoutPropertyInput | PropertyVideoCreateOrConnectWithoutPropertyInput[]
    upsert?: PropertyVideoUpsertWithWhereUniqueWithoutPropertyInput | PropertyVideoUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: PropertyVideoCreateManyPropertyInputEnvelope
    set?: PropertyVideoWhereUniqueInput | PropertyVideoWhereUniqueInput[]
    disconnect?: PropertyVideoWhereUniqueInput | PropertyVideoWhereUniqueInput[]
    delete?: PropertyVideoWhereUniqueInput | PropertyVideoWhereUniqueInput[]
    connect?: PropertyVideoWhereUniqueInput | PropertyVideoWhereUniqueInput[]
    update?: PropertyVideoUpdateWithWhereUniqueWithoutPropertyInput | PropertyVideoUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: PropertyVideoUpdateManyWithWhereWithoutPropertyInput | PropertyVideoUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: PropertyVideoScalarWhereInput | PropertyVideoScalarWhereInput[]
  }

  export type VirtualTourUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<VirtualTourCreateWithoutPropertyInput, VirtualTourUncheckedCreateWithoutPropertyInput> | VirtualTourCreateWithoutPropertyInput[] | VirtualTourUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: VirtualTourCreateOrConnectWithoutPropertyInput | VirtualTourCreateOrConnectWithoutPropertyInput[]
    upsert?: VirtualTourUpsertWithWhereUniqueWithoutPropertyInput | VirtualTourUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: VirtualTourCreateManyPropertyInputEnvelope
    set?: VirtualTourWhereUniqueInput | VirtualTourWhereUniqueInput[]
    disconnect?: VirtualTourWhereUniqueInput | VirtualTourWhereUniqueInput[]
    delete?: VirtualTourWhereUniqueInput | VirtualTourWhereUniqueInput[]
    connect?: VirtualTourWhereUniqueInput | VirtualTourWhereUniqueInput[]
    update?: VirtualTourUpdateWithWhereUniqueWithoutPropertyInput | VirtualTourUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: VirtualTourUpdateManyWithWhereWithoutPropertyInput | VirtualTourUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: VirtualTourScalarWhereInput | VirtualTourScalarWhereInput[]
  }

  export type PropertyViewUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<PropertyViewCreateWithoutPropertyInput, PropertyViewUncheckedCreateWithoutPropertyInput> | PropertyViewCreateWithoutPropertyInput[] | PropertyViewUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyViewCreateOrConnectWithoutPropertyInput | PropertyViewCreateOrConnectWithoutPropertyInput[]
    upsert?: PropertyViewUpsertWithWhereUniqueWithoutPropertyInput | PropertyViewUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: PropertyViewCreateManyPropertyInputEnvelope
    set?: PropertyViewWhereUniqueInput | PropertyViewWhereUniqueInput[]
    disconnect?: PropertyViewWhereUniqueInput | PropertyViewWhereUniqueInput[]
    delete?: PropertyViewWhereUniqueInput | PropertyViewWhereUniqueInput[]
    connect?: PropertyViewWhereUniqueInput | PropertyViewWhereUniqueInput[]
    update?: PropertyViewUpdateWithWhereUniqueWithoutPropertyInput | PropertyViewUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: PropertyViewUpdateManyWithWhereWithoutPropertyInput | PropertyViewUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: PropertyViewScalarWhereInput | PropertyViewScalarWhereInput[]
  }

  export type FavoriteUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<FavoriteCreateWithoutPropertyInput, FavoriteUncheckedCreateWithoutPropertyInput> | FavoriteCreateWithoutPropertyInput[] | FavoriteUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutPropertyInput | FavoriteCreateOrConnectWithoutPropertyInput[]
    upsert?: FavoriteUpsertWithWhereUniqueWithoutPropertyInput | FavoriteUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: FavoriteCreateManyPropertyInputEnvelope
    set?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    disconnect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    delete?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    update?: FavoriteUpdateWithWhereUniqueWithoutPropertyInput | FavoriteUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: FavoriteUpdateManyWithWhereWithoutPropertyInput | FavoriteUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
  }

  export type PropertyRequestUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<PropertyRequestCreateWithoutPropertyInput, PropertyRequestUncheckedCreateWithoutPropertyInput> | PropertyRequestCreateWithoutPropertyInput[] | PropertyRequestUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyRequestCreateOrConnectWithoutPropertyInput | PropertyRequestCreateOrConnectWithoutPropertyInput[]
    upsert?: PropertyRequestUpsertWithWhereUniqueWithoutPropertyInput | PropertyRequestUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: PropertyRequestCreateManyPropertyInputEnvelope
    set?: PropertyRequestWhereUniqueInput | PropertyRequestWhereUniqueInput[]
    disconnect?: PropertyRequestWhereUniqueInput | PropertyRequestWhereUniqueInput[]
    delete?: PropertyRequestWhereUniqueInput | PropertyRequestWhereUniqueInput[]
    connect?: PropertyRequestWhereUniqueInput | PropertyRequestWhereUniqueInput[]
    update?: PropertyRequestUpdateWithWhereUniqueWithoutPropertyInput | PropertyRequestUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: PropertyRequestUpdateManyWithWhereWithoutPropertyInput | PropertyRequestUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: PropertyRequestScalarWhereInput | PropertyRequestScalarWhereInput[]
  }

  export type PropertyInquiryUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<PropertyInquiryCreateWithoutPropertyInput, PropertyInquiryUncheckedCreateWithoutPropertyInput> | PropertyInquiryCreateWithoutPropertyInput[] | PropertyInquiryUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyInquiryCreateOrConnectWithoutPropertyInput | PropertyInquiryCreateOrConnectWithoutPropertyInput[]
    upsert?: PropertyInquiryUpsertWithWhereUniqueWithoutPropertyInput | PropertyInquiryUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: PropertyInquiryCreateManyPropertyInputEnvelope
    set?: PropertyInquiryWhereUniqueInput | PropertyInquiryWhereUniqueInput[]
    disconnect?: PropertyInquiryWhereUniqueInput | PropertyInquiryWhereUniqueInput[]
    delete?: PropertyInquiryWhereUniqueInput | PropertyInquiryWhereUniqueInput[]
    connect?: PropertyInquiryWhereUniqueInput | PropertyInquiryWhereUniqueInput[]
    update?: PropertyInquiryUpdateWithWhereUniqueWithoutPropertyInput | PropertyInquiryUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: PropertyInquiryUpdateManyWithWhereWithoutPropertyInput | PropertyInquiryUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: PropertyInquiryScalarWhereInput | PropertyInquiryScalarWhereInput[]
  }

  export type PropertyComparisonPropertiesUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<PropertyComparisonPropertiesCreateWithoutPropertyInput, PropertyComparisonPropertiesUncheckedCreateWithoutPropertyInput> | PropertyComparisonPropertiesCreateWithoutPropertyInput[] | PropertyComparisonPropertiesUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyComparisonPropertiesCreateOrConnectWithoutPropertyInput | PropertyComparisonPropertiesCreateOrConnectWithoutPropertyInput[]
    upsert?: PropertyComparisonPropertiesUpsertWithWhereUniqueWithoutPropertyInput | PropertyComparisonPropertiesUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: PropertyComparisonPropertiesCreateManyPropertyInputEnvelope
    set?: PropertyComparisonPropertiesWhereUniqueInput | PropertyComparisonPropertiesWhereUniqueInput[]
    disconnect?: PropertyComparisonPropertiesWhereUniqueInput | PropertyComparisonPropertiesWhereUniqueInput[]
    delete?: PropertyComparisonPropertiesWhereUniqueInput | PropertyComparisonPropertiesWhereUniqueInput[]
    connect?: PropertyComparisonPropertiesWhereUniqueInput | PropertyComparisonPropertiesWhereUniqueInput[]
    update?: PropertyComparisonPropertiesUpdateWithWhereUniqueWithoutPropertyInput | PropertyComparisonPropertiesUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: PropertyComparisonPropertiesUpdateManyWithWhereWithoutPropertyInput | PropertyComparisonPropertiesUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: PropertyComparisonPropertiesScalarWhereInput | PropertyComparisonPropertiesScalarWhereInput[]
  }

  export type PropertyReviewUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<PropertyReviewCreateWithoutPropertyInput, PropertyReviewUncheckedCreateWithoutPropertyInput> | PropertyReviewCreateWithoutPropertyInput[] | PropertyReviewUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyReviewCreateOrConnectWithoutPropertyInput | PropertyReviewCreateOrConnectWithoutPropertyInput[]
    upsert?: PropertyReviewUpsertWithWhereUniqueWithoutPropertyInput | PropertyReviewUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: PropertyReviewCreateManyPropertyInputEnvelope
    set?: PropertyReviewWhereUniqueInput | PropertyReviewWhereUniqueInput[]
    disconnect?: PropertyReviewWhereUniqueInput | PropertyReviewWhereUniqueInput[]
    delete?: PropertyReviewWhereUniqueInput | PropertyReviewWhereUniqueInput[]
    connect?: PropertyReviewWhereUniqueInput | PropertyReviewWhereUniqueInput[]
    update?: PropertyReviewUpdateWithWhereUniqueWithoutPropertyInput | PropertyReviewUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: PropertyReviewUpdateManyWithWhereWithoutPropertyInput | PropertyReviewUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: PropertyReviewScalarWhereInput | PropertyReviewScalarWhereInput[]
  }

  export type PropertyCommentUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<PropertyCommentCreateWithoutPropertyInput, PropertyCommentUncheckedCreateWithoutPropertyInput> | PropertyCommentCreateWithoutPropertyInput[] | PropertyCommentUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyCommentCreateOrConnectWithoutPropertyInput | PropertyCommentCreateOrConnectWithoutPropertyInput[]
    upsert?: PropertyCommentUpsertWithWhereUniqueWithoutPropertyInput | PropertyCommentUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: PropertyCommentCreateManyPropertyInputEnvelope
    set?: PropertyCommentWhereUniqueInput | PropertyCommentWhereUniqueInput[]
    disconnect?: PropertyCommentWhereUniqueInput | PropertyCommentWhereUniqueInput[]
    delete?: PropertyCommentWhereUniqueInput | PropertyCommentWhereUniqueInput[]
    connect?: PropertyCommentWhereUniqueInput | PropertyCommentWhereUniqueInput[]
    update?: PropertyCommentUpdateWithWhereUniqueWithoutPropertyInput | PropertyCommentUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: PropertyCommentUpdateManyWithWhereWithoutPropertyInput | PropertyCommentUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: PropertyCommentScalarWhereInput | PropertyCommentScalarWhereInput[]
  }

  export type PropertyViewingUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<PropertyViewingCreateWithoutPropertyInput, PropertyViewingUncheckedCreateWithoutPropertyInput> | PropertyViewingCreateWithoutPropertyInput[] | PropertyViewingUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyViewingCreateOrConnectWithoutPropertyInput | PropertyViewingCreateOrConnectWithoutPropertyInput[]
    upsert?: PropertyViewingUpsertWithWhereUniqueWithoutPropertyInput | PropertyViewingUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: PropertyViewingCreateManyPropertyInputEnvelope
    set?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    disconnect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    delete?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    connect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    update?: PropertyViewingUpdateWithWhereUniqueWithoutPropertyInput | PropertyViewingUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: PropertyViewingUpdateManyWithWhereWithoutPropertyInput | PropertyViewingUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: PropertyViewingScalarWhereInput | PropertyViewingScalarWhereInput[]
  }

  export type PropertyAnalyticsUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<PropertyAnalyticsCreateWithoutPropertyInput, PropertyAnalyticsUncheckedCreateWithoutPropertyInput> | PropertyAnalyticsCreateWithoutPropertyInput[] | PropertyAnalyticsUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyAnalyticsCreateOrConnectWithoutPropertyInput | PropertyAnalyticsCreateOrConnectWithoutPropertyInput[]
    upsert?: PropertyAnalyticsUpsertWithWhereUniqueWithoutPropertyInput | PropertyAnalyticsUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: PropertyAnalyticsCreateManyPropertyInputEnvelope
    set?: PropertyAnalyticsWhereUniqueInput | PropertyAnalyticsWhereUniqueInput[]
    disconnect?: PropertyAnalyticsWhereUniqueInput | PropertyAnalyticsWhereUniqueInput[]
    delete?: PropertyAnalyticsWhereUniqueInput | PropertyAnalyticsWhereUniqueInput[]
    connect?: PropertyAnalyticsWhereUniqueInput | PropertyAnalyticsWhereUniqueInput[]
    update?: PropertyAnalyticsUpdateWithWhereUniqueWithoutPropertyInput | PropertyAnalyticsUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: PropertyAnalyticsUpdateManyWithWhereWithoutPropertyInput | PropertyAnalyticsUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: PropertyAnalyticsScalarWhereInput | PropertyAnalyticsScalarWhereInput[]
  }

  export type AdminActionUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<AdminActionCreateWithoutPropertyInput, AdminActionUncheckedCreateWithoutPropertyInput> | AdminActionCreateWithoutPropertyInput[] | AdminActionUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: AdminActionCreateOrConnectWithoutPropertyInput | AdminActionCreateOrConnectWithoutPropertyInput[]
    upsert?: AdminActionUpsertWithWhereUniqueWithoutPropertyInput | AdminActionUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: AdminActionCreateManyPropertyInputEnvelope
    set?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    disconnect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    delete?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    connect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    update?: AdminActionUpdateWithWhereUniqueWithoutPropertyInput | AdminActionUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: AdminActionUpdateManyWithWhereWithoutPropertyInput | AdminActionUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: AdminActionScalarWhereInput | AdminActionScalarWhereInput[]
  }

  export type PaymentUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<PaymentCreateWithoutPropertyInput, PaymentUncheckedCreateWithoutPropertyInput> | PaymentCreateWithoutPropertyInput[] | PaymentUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutPropertyInput | PaymentCreateOrConnectWithoutPropertyInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutPropertyInput | PaymentUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: PaymentCreateManyPropertyInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutPropertyInput | PaymentUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutPropertyInput | PaymentUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type AgencyInquiryUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<AgencyInquiryCreateWithoutPropertyInput, AgencyInquiryUncheckedCreateWithoutPropertyInput> | AgencyInquiryCreateWithoutPropertyInput[] | AgencyInquiryUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: AgencyInquiryCreateOrConnectWithoutPropertyInput | AgencyInquiryCreateOrConnectWithoutPropertyInput[]
    upsert?: AgencyInquiryUpsertWithWhereUniqueWithoutPropertyInput | AgencyInquiryUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: AgencyInquiryCreateManyPropertyInputEnvelope
    set?: AgencyInquiryWhereUniqueInput | AgencyInquiryWhereUniqueInput[]
    disconnect?: AgencyInquiryWhereUniqueInput | AgencyInquiryWhereUniqueInput[]
    delete?: AgencyInquiryWhereUniqueInput | AgencyInquiryWhereUniqueInput[]
    connect?: AgencyInquiryWhereUniqueInput | AgencyInquiryWhereUniqueInput[]
    update?: AgencyInquiryUpdateWithWhereUniqueWithoutPropertyInput | AgencyInquiryUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: AgencyInquiryUpdateManyWithWhereWithoutPropertyInput | AgencyInquiryUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: AgencyInquiryScalarWhereInput | AgencyInquiryScalarWhereInput[]
  }

  export type PropertyPhotoUncheckedUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<PropertyPhotoCreateWithoutPropertyInput, PropertyPhotoUncheckedCreateWithoutPropertyInput> | PropertyPhotoCreateWithoutPropertyInput[] | PropertyPhotoUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyPhotoCreateOrConnectWithoutPropertyInput | PropertyPhotoCreateOrConnectWithoutPropertyInput[]
    upsert?: PropertyPhotoUpsertWithWhereUniqueWithoutPropertyInput | PropertyPhotoUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: PropertyPhotoCreateManyPropertyInputEnvelope
    set?: PropertyPhotoWhereUniqueInput | PropertyPhotoWhereUniqueInput[]
    disconnect?: PropertyPhotoWhereUniqueInput | PropertyPhotoWhereUniqueInput[]
    delete?: PropertyPhotoWhereUniqueInput | PropertyPhotoWhereUniqueInput[]
    connect?: PropertyPhotoWhereUniqueInput | PropertyPhotoWhereUniqueInput[]
    update?: PropertyPhotoUpdateWithWhereUniqueWithoutPropertyInput | PropertyPhotoUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: PropertyPhotoUpdateManyWithWhereWithoutPropertyInput | PropertyPhotoUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: PropertyPhotoScalarWhereInput | PropertyPhotoScalarWhereInput[]
  }

  export type PropertyVideoUncheckedUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<PropertyVideoCreateWithoutPropertyInput, PropertyVideoUncheckedCreateWithoutPropertyInput> | PropertyVideoCreateWithoutPropertyInput[] | PropertyVideoUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyVideoCreateOrConnectWithoutPropertyInput | PropertyVideoCreateOrConnectWithoutPropertyInput[]
    upsert?: PropertyVideoUpsertWithWhereUniqueWithoutPropertyInput | PropertyVideoUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: PropertyVideoCreateManyPropertyInputEnvelope
    set?: PropertyVideoWhereUniqueInput | PropertyVideoWhereUniqueInput[]
    disconnect?: PropertyVideoWhereUniqueInput | PropertyVideoWhereUniqueInput[]
    delete?: PropertyVideoWhereUniqueInput | PropertyVideoWhereUniqueInput[]
    connect?: PropertyVideoWhereUniqueInput | PropertyVideoWhereUniqueInput[]
    update?: PropertyVideoUpdateWithWhereUniqueWithoutPropertyInput | PropertyVideoUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: PropertyVideoUpdateManyWithWhereWithoutPropertyInput | PropertyVideoUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: PropertyVideoScalarWhereInput | PropertyVideoScalarWhereInput[]
  }

  export type VirtualTourUncheckedUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<VirtualTourCreateWithoutPropertyInput, VirtualTourUncheckedCreateWithoutPropertyInput> | VirtualTourCreateWithoutPropertyInput[] | VirtualTourUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: VirtualTourCreateOrConnectWithoutPropertyInput | VirtualTourCreateOrConnectWithoutPropertyInput[]
    upsert?: VirtualTourUpsertWithWhereUniqueWithoutPropertyInput | VirtualTourUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: VirtualTourCreateManyPropertyInputEnvelope
    set?: VirtualTourWhereUniqueInput | VirtualTourWhereUniqueInput[]
    disconnect?: VirtualTourWhereUniqueInput | VirtualTourWhereUniqueInput[]
    delete?: VirtualTourWhereUniqueInput | VirtualTourWhereUniqueInput[]
    connect?: VirtualTourWhereUniqueInput | VirtualTourWhereUniqueInput[]
    update?: VirtualTourUpdateWithWhereUniqueWithoutPropertyInput | VirtualTourUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: VirtualTourUpdateManyWithWhereWithoutPropertyInput | VirtualTourUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: VirtualTourScalarWhereInput | VirtualTourScalarWhereInput[]
  }

  export type PropertyViewUncheckedUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<PropertyViewCreateWithoutPropertyInput, PropertyViewUncheckedCreateWithoutPropertyInput> | PropertyViewCreateWithoutPropertyInput[] | PropertyViewUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyViewCreateOrConnectWithoutPropertyInput | PropertyViewCreateOrConnectWithoutPropertyInput[]
    upsert?: PropertyViewUpsertWithWhereUniqueWithoutPropertyInput | PropertyViewUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: PropertyViewCreateManyPropertyInputEnvelope
    set?: PropertyViewWhereUniqueInput | PropertyViewWhereUniqueInput[]
    disconnect?: PropertyViewWhereUniqueInput | PropertyViewWhereUniqueInput[]
    delete?: PropertyViewWhereUniqueInput | PropertyViewWhereUniqueInput[]
    connect?: PropertyViewWhereUniqueInput | PropertyViewWhereUniqueInput[]
    update?: PropertyViewUpdateWithWhereUniqueWithoutPropertyInput | PropertyViewUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: PropertyViewUpdateManyWithWhereWithoutPropertyInput | PropertyViewUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: PropertyViewScalarWhereInput | PropertyViewScalarWhereInput[]
  }

  export type FavoriteUncheckedUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<FavoriteCreateWithoutPropertyInput, FavoriteUncheckedCreateWithoutPropertyInput> | FavoriteCreateWithoutPropertyInput[] | FavoriteUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutPropertyInput | FavoriteCreateOrConnectWithoutPropertyInput[]
    upsert?: FavoriteUpsertWithWhereUniqueWithoutPropertyInput | FavoriteUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: FavoriteCreateManyPropertyInputEnvelope
    set?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    disconnect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    delete?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    update?: FavoriteUpdateWithWhereUniqueWithoutPropertyInput | FavoriteUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: FavoriteUpdateManyWithWhereWithoutPropertyInput | FavoriteUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
  }

  export type PropertyRequestUncheckedUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<PropertyRequestCreateWithoutPropertyInput, PropertyRequestUncheckedCreateWithoutPropertyInput> | PropertyRequestCreateWithoutPropertyInput[] | PropertyRequestUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyRequestCreateOrConnectWithoutPropertyInput | PropertyRequestCreateOrConnectWithoutPropertyInput[]
    upsert?: PropertyRequestUpsertWithWhereUniqueWithoutPropertyInput | PropertyRequestUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: PropertyRequestCreateManyPropertyInputEnvelope
    set?: PropertyRequestWhereUniqueInput | PropertyRequestWhereUniqueInput[]
    disconnect?: PropertyRequestWhereUniqueInput | PropertyRequestWhereUniqueInput[]
    delete?: PropertyRequestWhereUniqueInput | PropertyRequestWhereUniqueInput[]
    connect?: PropertyRequestWhereUniqueInput | PropertyRequestWhereUniqueInput[]
    update?: PropertyRequestUpdateWithWhereUniqueWithoutPropertyInput | PropertyRequestUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: PropertyRequestUpdateManyWithWhereWithoutPropertyInput | PropertyRequestUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: PropertyRequestScalarWhereInput | PropertyRequestScalarWhereInput[]
  }

  export type PropertyInquiryUncheckedUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<PropertyInquiryCreateWithoutPropertyInput, PropertyInquiryUncheckedCreateWithoutPropertyInput> | PropertyInquiryCreateWithoutPropertyInput[] | PropertyInquiryUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyInquiryCreateOrConnectWithoutPropertyInput | PropertyInquiryCreateOrConnectWithoutPropertyInput[]
    upsert?: PropertyInquiryUpsertWithWhereUniqueWithoutPropertyInput | PropertyInquiryUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: PropertyInquiryCreateManyPropertyInputEnvelope
    set?: PropertyInquiryWhereUniqueInput | PropertyInquiryWhereUniqueInput[]
    disconnect?: PropertyInquiryWhereUniqueInput | PropertyInquiryWhereUniqueInput[]
    delete?: PropertyInquiryWhereUniqueInput | PropertyInquiryWhereUniqueInput[]
    connect?: PropertyInquiryWhereUniqueInput | PropertyInquiryWhereUniqueInput[]
    update?: PropertyInquiryUpdateWithWhereUniqueWithoutPropertyInput | PropertyInquiryUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: PropertyInquiryUpdateManyWithWhereWithoutPropertyInput | PropertyInquiryUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: PropertyInquiryScalarWhereInput | PropertyInquiryScalarWhereInput[]
  }

  export type PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<PropertyComparisonPropertiesCreateWithoutPropertyInput, PropertyComparisonPropertiesUncheckedCreateWithoutPropertyInput> | PropertyComparisonPropertiesCreateWithoutPropertyInput[] | PropertyComparisonPropertiesUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyComparisonPropertiesCreateOrConnectWithoutPropertyInput | PropertyComparisonPropertiesCreateOrConnectWithoutPropertyInput[]
    upsert?: PropertyComparisonPropertiesUpsertWithWhereUniqueWithoutPropertyInput | PropertyComparisonPropertiesUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: PropertyComparisonPropertiesCreateManyPropertyInputEnvelope
    set?: PropertyComparisonPropertiesWhereUniqueInput | PropertyComparisonPropertiesWhereUniqueInput[]
    disconnect?: PropertyComparisonPropertiesWhereUniqueInput | PropertyComparisonPropertiesWhereUniqueInput[]
    delete?: PropertyComparisonPropertiesWhereUniqueInput | PropertyComparisonPropertiesWhereUniqueInput[]
    connect?: PropertyComparisonPropertiesWhereUniqueInput | PropertyComparisonPropertiesWhereUniqueInput[]
    update?: PropertyComparisonPropertiesUpdateWithWhereUniqueWithoutPropertyInput | PropertyComparisonPropertiesUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: PropertyComparisonPropertiesUpdateManyWithWhereWithoutPropertyInput | PropertyComparisonPropertiesUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: PropertyComparisonPropertiesScalarWhereInput | PropertyComparisonPropertiesScalarWhereInput[]
  }

  export type PropertyReviewUncheckedUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<PropertyReviewCreateWithoutPropertyInput, PropertyReviewUncheckedCreateWithoutPropertyInput> | PropertyReviewCreateWithoutPropertyInput[] | PropertyReviewUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyReviewCreateOrConnectWithoutPropertyInput | PropertyReviewCreateOrConnectWithoutPropertyInput[]
    upsert?: PropertyReviewUpsertWithWhereUniqueWithoutPropertyInput | PropertyReviewUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: PropertyReviewCreateManyPropertyInputEnvelope
    set?: PropertyReviewWhereUniqueInput | PropertyReviewWhereUniqueInput[]
    disconnect?: PropertyReviewWhereUniqueInput | PropertyReviewWhereUniqueInput[]
    delete?: PropertyReviewWhereUniqueInput | PropertyReviewWhereUniqueInput[]
    connect?: PropertyReviewWhereUniqueInput | PropertyReviewWhereUniqueInput[]
    update?: PropertyReviewUpdateWithWhereUniqueWithoutPropertyInput | PropertyReviewUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: PropertyReviewUpdateManyWithWhereWithoutPropertyInput | PropertyReviewUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: PropertyReviewScalarWhereInput | PropertyReviewScalarWhereInput[]
  }

  export type PropertyCommentUncheckedUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<PropertyCommentCreateWithoutPropertyInput, PropertyCommentUncheckedCreateWithoutPropertyInput> | PropertyCommentCreateWithoutPropertyInput[] | PropertyCommentUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyCommentCreateOrConnectWithoutPropertyInput | PropertyCommentCreateOrConnectWithoutPropertyInput[]
    upsert?: PropertyCommentUpsertWithWhereUniqueWithoutPropertyInput | PropertyCommentUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: PropertyCommentCreateManyPropertyInputEnvelope
    set?: PropertyCommentWhereUniqueInput | PropertyCommentWhereUniqueInput[]
    disconnect?: PropertyCommentWhereUniqueInput | PropertyCommentWhereUniqueInput[]
    delete?: PropertyCommentWhereUniqueInput | PropertyCommentWhereUniqueInput[]
    connect?: PropertyCommentWhereUniqueInput | PropertyCommentWhereUniqueInput[]
    update?: PropertyCommentUpdateWithWhereUniqueWithoutPropertyInput | PropertyCommentUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: PropertyCommentUpdateManyWithWhereWithoutPropertyInput | PropertyCommentUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: PropertyCommentScalarWhereInput | PropertyCommentScalarWhereInput[]
  }

  export type PropertyViewingUncheckedUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<PropertyViewingCreateWithoutPropertyInput, PropertyViewingUncheckedCreateWithoutPropertyInput> | PropertyViewingCreateWithoutPropertyInput[] | PropertyViewingUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyViewingCreateOrConnectWithoutPropertyInput | PropertyViewingCreateOrConnectWithoutPropertyInput[]
    upsert?: PropertyViewingUpsertWithWhereUniqueWithoutPropertyInput | PropertyViewingUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: PropertyViewingCreateManyPropertyInputEnvelope
    set?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    disconnect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    delete?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    connect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    update?: PropertyViewingUpdateWithWhereUniqueWithoutPropertyInput | PropertyViewingUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: PropertyViewingUpdateManyWithWhereWithoutPropertyInput | PropertyViewingUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: PropertyViewingScalarWhereInput | PropertyViewingScalarWhereInput[]
  }

  export type PropertyAnalyticsUncheckedUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<PropertyAnalyticsCreateWithoutPropertyInput, PropertyAnalyticsUncheckedCreateWithoutPropertyInput> | PropertyAnalyticsCreateWithoutPropertyInput[] | PropertyAnalyticsUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PropertyAnalyticsCreateOrConnectWithoutPropertyInput | PropertyAnalyticsCreateOrConnectWithoutPropertyInput[]
    upsert?: PropertyAnalyticsUpsertWithWhereUniqueWithoutPropertyInput | PropertyAnalyticsUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: PropertyAnalyticsCreateManyPropertyInputEnvelope
    set?: PropertyAnalyticsWhereUniqueInput | PropertyAnalyticsWhereUniqueInput[]
    disconnect?: PropertyAnalyticsWhereUniqueInput | PropertyAnalyticsWhereUniqueInput[]
    delete?: PropertyAnalyticsWhereUniqueInput | PropertyAnalyticsWhereUniqueInput[]
    connect?: PropertyAnalyticsWhereUniqueInput | PropertyAnalyticsWhereUniqueInput[]
    update?: PropertyAnalyticsUpdateWithWhereUniqueWithoutPropertyInput | PropertyAnalyticsUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: PropertyAnalyticsUpdateManyWithWhereWithoutPropertyInput | PropertyAnalyticsUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: PropertyAnalyticsScalarWhereInput | PropertyAnalyticsScalarWhereInput[]
  }

  export type AdminActionUncheckedUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<AdminActionCreateWithoutPropertyInput, AdminActionUncheckedCreateWithoutPropertyInput> | AdminActionCreateWithoutPropertyInput[] | AdminActionUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: AdminActionCreateOrConnectWithoutPropertyInput | AdminActionCreateOrConnectWithoutPropertyInput[]
    upsert?: AdminActionUpsertWithWhereUniqueWithoutPropertyInput | AdminActionUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: AdminActionCreateManyPropertyInputEnvelope
    set?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    disconnect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    delete?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    connect?: AdminActionWhereUniqueInput | AdminActionWhereUniqueInput[]
    update?: AdminActionUpdateWithWhereUniqueWithoutPropertyInput | AdminActionUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: AdminActionUpdateManyWithWhereWithoutPropertyInput | AdminActionUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: AdminActionScalarWhereInput | AdminActionScalarWhereInput[]
  }

  export type PaymentUncheckedUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<PaymentCreateWithoutPropertyInput, PaymentUncheckedCreateWithoutPropertyInput> | PaymentCreateWithoutPropertyInput[] | PaymentUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutPropertyInput | PaymentCreateOrConnectWithoutPropertyInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutPropertyInput | PaymentUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: PaymentCreateManyPropertyInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutPropertyInput | PaymentUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutPropertyInput | PaymentUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type AgencyInquiryUncheckedUpdateManyWithoutPropertyNestedInput = {
    create?: XOR<AgencyInquiryCreateWithoutPropertyInput, AgencyInquiryUncheckedCreateWithoutPropertyInput> | AgencyInquiryCreateWithoutPropertyInput[] | AgencyInquiryUncheckedCreateWithoutPropertyInput[]
    connectOrCreate?: AgencyInquiryCreateOrConnectWithoutPropertyInput | AgencyInquiryCreateOrConnectWithoutPropertyInput[]
    upsert?: AgencyInquiryUpsertWithWhereUniqueWithoutPropertyInput | AgencyInquiryUpsertWithWhereUniqueWithoutPropertyInput[]
    createMany?: AgencyInquiryCreateManyPropertyInputEnvelope
    set?: AgencyInquiryWhereUniqueInput | AgencyInquiryWhereUniqueInput[]
    disconnect?: AgencyInquiryWhereUniqueInput | AgencyInquiryWhereUniqueInput[]
    delete?: AgencyInquiryWhereUniqueInput | AgencyInquiryWhereUniqueInput[]
    connect?: AgencyInquiryWhereUniqueInput | AgencyInquiryWhereUniqueInput[]
    update?: AgencyInquiryUpdateWithWhereUniqueWithoutPropertyInput | AgencyInquiryUpdateWithWhereUniqueWithoutPropertyInput[]
    updateMany?: AgencyInquiryUpdateManyWithWhereWithoutPropertyInput | AgencyInquiryUpdateManyWithWhereWithoutPropertyInput[]
    deleteMany?: AgencyInquiryScalarWhereInput | AgencyInquiryScalarWhereInput[]
  }

  export type PropertyCreateNestedOneWithoutPhotosInput = {
    create?: XOR<PropertyCreateWithoutPhotosInput, PropertyUncheckedCreateWithoutPhotosInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutPhotosInput
    connect?: PropertyWhereUniqueInput
  }

  export type PropertyUpdateOneRequiredWithoutPhotosNestedInput = {
    create?: XOR<PropertyCreateWithoutPhotosInput, PropertyUncheckedCreateWithoutPhotosInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutPhotosInput
    upsert?: PropertyUpsertWithoutPhotosInput
    connect?: PropertyWhereUniqueInput
    update?: XOR<XOR<PropertyUpdateToOneWithWhereWithoutPhotosInput, PropertyUpdateWithoutPhotosInput>, PropertyUncheckedUpdateWithoutPhotosInput>
  }

  export type PropertyCreateNestedOneWithoutVideosInput = {
    create?: XOR<PropertyCreateWithoutVideosInput, PropertyUncheckedCreateWithoutVideosInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutVideosInput
    connect?: PropertyWhereUniqueInput
  }

  export type PropertyUpdateOneRequiredWithoutVideosNestedInput = {
    create?: XOR<PropertyCreateWithoutVideosInput, PropertyUncheckedCreateWithoutVideosInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutVideosInput
    upsert?: PropertyUpsertWithoutVideosInput
    connect?: PropertyWhereUniqueInput
    update?: XOR<XOR<PropertyUpdateToOneWithWhereWithoutVideosInput, PropertyUpdateWithoutVideosInput>, PropertyUncheckedUpdateWithoutVideosInput>
  }

  export type PropertyCreateNestedOneWithoutVirtualToursInput = {
    create?: XOR<PropertyCreateWithoutVirtualToursInput, PropertyUncheckedCreateWithoutVirtualToursInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutVirtualToursInput
    connect?: PropertyWhereUniqueInput
  }

  export type PropertyUpdateOneRequiredWithoutVirtualToursNestedInput = {
    create?: XOR<PropertyCreateWithoutVirtualToursInput, PropertyUncheckedCreateWithoutVirtualToursInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutVirtualToursInput
    upsert?: PropertyUpsertWithoutVirtualToursInput
    connect?: PropertyWhereUniqueInput
    update?: XOR<XOR<PropertyUpdateToOneWithWhereWithoutVirtualToursInput, PropertyUpdateWithoutVirtualToursInput>, PropertyUncheckedUpdateWithoutVirtualToursInput>
  }

  export type UserCreateNestedOneWithoutViewedPropertiesInput = {
    create?: XOR<UserCreateWithoutViewedPropertiesInput, UserUncheckedCreateWithoutViewedPropertiesInput>
    connectOrCreate?: UserCreateOrConnectWithoutViewedPropertiesInput
    connect?: UserWhereUniqueInput
  }

  export type PropertyCreateNestedOneWithoutViewsInput = {
    create?: XOR<PropertyCreateWithoutViewsInput, PropertyUncheckedCreateWithoutViewsInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutViewsInput
    connect?: PropertyWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutViewedPropertiesNestedInput = {
    create?: XOR<UserCreateWithoutViewedPropertiesInput, UserUncheckedCreateWithoutViewedPropertiesInput>
    connectOrCreate?: UserCreateOrConnectWithoutViewedPropertiesInput
    upsert?: UserUpsertWithoutViewedPropertiesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutViewedPropertiesInput, UserUpdateWithoutViewedPropertiesInput>, UserUncheckedUpdateWithoutViewedPropertiesInput>
  }

  export type PropertyUpdateOneRequiredWithoutViewsNestedInput = {
    create?: XOR<PropertyCreateWithoutViewsInput, PropertyUncheckedCreateWithoutViewsInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutViewsInput
    upsert?: PropertyUpsertWithoutViewsInput
    connect?: PropertyWhereUniqueInput
    update?: XOR<XOR<PropertyUpdateToOneWithWhereWithoutViewsInput, PropertyUpdateWithoutViewsInput>, PropertyUncheckedUpdateWithoutViewsInput>
  }

  export type UserCreateNestedOneWithoutFavoritesInput = {
    create?: XOR<UserCreateWithoutFavoritesInput, UserUncheckedCreateWithoutFavoritesInput>
    connectOrCreate?: UserCreateOrConnectWithoutFavoritesInput
    connect?: UserWhereUniqueInput
  }

  export type PropertyCreateNestedOneWithoutFavoritesInput = {
    create?: XOR<PropertyCreateWithoutFavoritesInput, PropertyUncheckedCreateWithoutFavoritesInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutFavoritesInput
    connect?: PropertyWhereUniqueInput
  }

  export type FavoriteListCreateNestedOneWithoutFavoritesInput = {
    create?: XOR<FavoriteListCreateWithoutFavoritesInput, FavoriteListUncheckedCreateWithoutFavoritesInput>
    connectOrCreate?: FavoriteListCreateOrConnectWithoutFavoritesInput
    connect?: FavoriteListWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutFavoritesNestedInput = {
    create?: XOR<UserCreateWithoutFavoritesInput, UserUncheckedCreateWithoutFavoritesInput>
    connectOrCreate?: UserCreateOrConnectWithoutFavoritesInput
    upsert?: UserUpsertWithoutFavoritesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFavoritesInput, UserUpdateWithoutFavoritesInput>, UserUncheckedUpdateWithoutFavoritesInput>
  }

  export type PropertyUpdateOneRequiredWithoutFavoritesNestedInput = {
    create?: XOR<PropertyCreateWithoutFavoritesInput, PropertyUncheckedCreateWithoutFavoritesInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutFavoritesInput
    upsert?: PropertyUpsertWithoutFavoritesInput
    connect?: PropertyWhereUniqueInput
    update?: XOR<XOR<PropertyUpdateToOneWithWhereWithoutFavoritesInput, PropertyUpdateWithoutFavoritesInput>, PropertyUncheckedUpdateWithoutFavoritesInput>
  }

  export type FavoriteListUpdateOneWithoutFavoritesNestedInput = {
    create?: XOR<FavoriteListCreateWithoutFavoritesInput, FavoriteListUncheckedCreateWithoutFavoritesInput>
    connectOrCreate?: FavoriteListCreateOrConnectWithoutFavoritesInput
    upsert?: FavoriteListUpsertWithoutFavoritesInput
    disconnect?: FavoriteListWhereInput | boolean
    delete?: FavoriteListWhereInput | boolean
    connect?: FavoriteListWhereUniqueInput
    update?: XOR<XOR<FavoriteListUpdateToOneWithWhereWithoutFavoritesInput, FavoriteListUpdateWithoutFavoritesInput>, FavoriteListUncheckedUpdateWithoutFavoritesInput>
  }

  export type UserCreateNestedOneWithoutFavoriteListsInput = {
    create?: XOR<UserCreateWithoutFavoriteListsInput, UserUncheckedCreateWithoutFavoriteListsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFavoriteListsInput
    connect?: UserWhereUniqueInput
  }

  export type FavoriteCreateNestedManyWithoutListInput = {
    create?: XOR<FavoriteCreateWithoutListInput, FavoriteUncheckedCreateWithoutListInput> | FavoriteCreateWithoutListInput[] | FavoriteUncheckedCreateWithoutListInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutListInput | FavoriteCreateOrConnectWithoutListInput[]
    createMany?: FavoriteCreateManyListInputEnvelope
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
  }

  export type FavoriteUncheckedCreateNestedManyWithoutListInput = {
    create?: XOR<FavoriteCreateWithoutListInput, FavoriteUncheckedCreateWithoutListInput> | FavoriteCreateWithoutListInput[] | FavoriteUncheckedCreateWithoutListInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutListInput | FavoriteCreateOrConnectWithoutListInput[]
    createMany?: FavoriteCreateManyListInputEnvelope
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutFavoriteListsNestedInput = {
    create?: XOR<UserCreateWithoutFavoriteListsInput, UserUncheckedCreateWithoutFavoriteListsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFavoriteListsInput
    upsert?: UserUpsertWithoutFavoriteListsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFavoriteListsInput, UserUpdateWithoutFavoriteListsInput>, UserUncheckedUpdateWithoutFavoriteListsInput>
  }

  export type FavoriteUpdateManyWithoutListNestedInput = {
    create?: XOR<FavoriteCreateWithoutListInput, FavoriteUncheckedCreateWithoutListInput> | FavoriteCreateWithoutListInput[] | FavoriteUncheckedCreateWithoutListInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutListInput | FavoriteCreateOrConnectWithoutListInput[]
    upsert?: FavoriteUpsertWithWhereUniqueWithoutListInput | FavoriteUpsertWithWhereUniqueWithoutListInput[]
    createMany?: FavoriteCreateManyListInputEnvelope
    set?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    disconnect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    delete?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    update?: FavoriteUpdateWithWhereUniqueWithoutListInput | FavoriteUpdateWithWhereUniqueWithoutListInput[]
    updateMany?: FavoriteUpdateManyWithWhereWithoutListInput | FavoriteUpdateManyWithWhereWithoutListInput[]
    deleteMany?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
  }

  export type FavoriteUncheckedUpdateManyWithoutListNestedInput = {
    create?: XOR<FavoriteCreateWithoutListInput, FavoriteUncheckedCreateWithoutListInput> | FavoriteCreateWithoutListInput[] | FavoriteUncheckedCreateWithoutListInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutListInput | FavoriteCreateOrConnectWithoutListInput[]
    upsert?: FavoriteUpsertWithWhereUniqueWithoutListInput | FavoriteUpsertWithWhereUniqueWithoutListInput[]
    createMany?: FavoriteCreateManyListInputEnvelope
    set?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    disconnect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    delete?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    update?: FavoriteUpdateWithWhereUniqueWithoutListInput | FavoriteUpdateWithWhereUniqueWithoutListInput[]
    updateMany?: FavoriteUpdateManyWithWhereWithoutListInput | FavoriteUpdateManyWithWhereWithoutListInput[]
    deleteMany?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutRequestsInput = {
    create?: XOR<UserCreateWithoutRequestsInput, UserUncheckedCreateWithoutRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutRequestsInput
    connect?: UserWhereUniqueInput
  }

  export type PropertyCreateNestedOneWithoutRequestsInput = {
    create?: XOR<PropertyCreateWithoutRequestsInput, PropertyUncheckedCreateWithoutRequestsInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutRequestsInput
    connect?: PropertyWhereUniqueInput
  }

  export type PropertyViewingCreateNestedManyWithoutRequestInput = {
    create?: XOR<PropertyViewingCreateWithoutRequestInput, PropertyViewingUncheckedCreateWithoutRequestInput> | PropertyViewingCreateWithoutRequestInput[] | PropertyViewingUncheckedCreateWithoutRequestInput[]
    connectOrCreate?: PropertyViewingCreateOrConnectWithoutRequestInput | PropertyViewingCreateOrConnectWithoutRequestInput[]
    createMany?: PropertyViewingCreateManyRequestInputEnvelope
    connect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
  }

  export type PaymentCreateNestedManyWithoutRequestInput = {
    create?: XOR<PaymentCreateWithoutRequestInput, PaymentUncheckedCreateWithoutRequestInput> | PaymentCreateWithoutRequestInput[] | PaymentUncheckedCreateWithoutRequestInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutRequestInput | PaymentCreateOrConnectWithoutRequestInput[]
    createMany?: PaymentCreateManyRequestInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type PropertyViewingUncheckedCreateNestedManyWithoutRequestInput = {
    create?: XOR<PropertyViewingCreateWithoutRequestInput, PropertyViewingUncheckedCreateWithoutRequestInput> | PropertyViewingCreateWithoutRequestInput[] | PropertyViewingUncheckedCreateWithoutRequestInput[]
    connectOrCreate?: PropertyViewingCreateOrConnectWithoutRequestInput | PropertyViewingCreateOrConnectWithoutRequestInput[]
    createMany?: PropertyViewingCreateManyRequestInputEnvelope
    connect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
  }

  export type PaymentUncheckedCreateNestedManyWithoutRequestInput = {
    create?: XOR<PaymentCreateWithoutRequestInput, PaymentUncheckedCreateWithoutRequestInput> | PaymentCreateWithoutRequestInput[] | PaymentUncheckedCreateWithoutRequestInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutRequestInput | PaymentCreateOrConnectWithoutRequestInput[]
    createMany?: PaymentCreateManyRequestInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type EnumRequestTypeFieldUpdateOperationsInput = {
    set?: $Enums.RequestType
  }

  export type EnumRequestStatusFieldUpdateOperationsInput = {
    set?: $Enums.RequestStatus
  }

  export type UserUpdateOneRequiredWithoutRequestsNestedInput = {
    create?: XOR<UserCreateWithoutRequestsInput, UserUncheckedCreateWithoutRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutRequestsInput
    upsert?: UserUpsertWithoutRequestsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutRequestsInput, UserUpdateWithoutRequestsInput>, UserUncheckedUpdateWithoutRequestsInput>
  }

  export type PropertyUpdateOneRequiredWithoutRequestsNestedInput = {
    create?: XOR<PropertyCreateWithoutRequestsInput, PropertyUncheckedCreateWithoutRequestsInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutRequestsInput
    upsert?: PropertyUpsertWithoutRequestsInput
    connect?: PropertyWhereUniqueInput
    update?: XOR<XOR<PropertyUpdateToOneWithWhereWithoutRequestsInput, PropertyUpdateWithoutRequestsInput>, PropertyUncheckedUpdateWithoutRequestsInput>
  }

  export type PropertyViewingUpdateManyWithoutRequestNestedInput = {
    create?: XOR<PropertyViewingCreateWithoutRequestInput, PropertyViewingUncheckedCreateWithoutRequestInput> | PropertyViewingCreateWithoutRequestInput[] | PropertyViewingUncheckedCreateWithoutRequestInput[]
    connectOrCreate?: PropertyViewingCreateOrConnectWithoutRequestInput | PropertyViewingCreateOrConnectWithoutRequestInput[]
    upsert?: PropertyViewingUpsertWithWhereUniqueWithoutRequestInput | PropertyViewingUpsertWithWhereUniqueWithoutRequestInput[]
    createMany?: PropertyViewingCreateManyRequestInputEnvelope
    set?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    disconnect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    delete?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    connect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    update?: PropertyViewingUpdateWithWhereUniqueWithoutRequestInput | PropertyViewingUpdateWithWhereUniqueWithoutRequestInput[]
    updateMany?: PropertyViewingUpdateManyWithWhereWithoutRequestInput | PropertyViewingUpdateManyWithWhereWithoutRequestInput[]
    deleteMany?: PropertyViewingScalarWhereInput | PropertyViewingScalarWhereInput[]
  }

  export type PaymentUpdateManyWithoutRequestNestedInput = {
    create?: XOR<PaymentCreateWithoutRequestInput, PaymentUncheckedCreateWithoutRequestInput> | PaymentCreateWithoutRequestInput[] | PaymentUncheckedCreateWithoutRequestInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutRequestInput | PaymentCreateOrConnectWithoutRequestInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutRequestInput | PaymentUpsertWithWhereUniqueWithoutRequestInput[]
    createMany?: PaymentCreateManyRequestInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutRequestInput | PaymentUpdateWithWhereUniqueWithoutRequestInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutRequestInput | PaymentUpdateManyWithWhereWithoutRequestInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type PropertyViewingUncheckedUpdateManyWithoutRequestNestedInput = {
    create?: XOR<PropertyViewingCreateWithoutRequestInput, PropertyViewingUncheckedCreateWithoutRequestInput> | PropertyViewingCreateWithoutRequestInput[] | PropertyViewingUncheckedCreateWithoutRequestInput[]
    connectOrCreate?: PropertyViewingCreateOrConnectWithoutRequestInput | PropertyViewingCreateOrConnectWithoutRequestInput[]
    upsert?: PropertyViewingUpsertWithWhereUniqueWithoutRequestInput | PropertyViewingUpsertWithWhereUniqueWithoutRequestInput[]
    createMany?: PropertyViewingCreateManyRequestInputEnvelope
    set?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    disconnect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    delete?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    connect?: PropertyViewingWhereUniqueInput | PropertyViewingWhereUniqueInput[]
    update?: PropertyViewingUpdateWithWhereUniqueWithoutRequestInput | PropertyViewingUpdateWithWhereUniqueWithoutRequestInput[]
    updateMany?: PropertyViewingUpdateManyWithWhereWithoutRequestInput | PropertyViewingUpdateManyWithWhereWithoutRequestInput[]
    deleteMany?: PropertyViewingScalarWhereInput | PropertyViewingScalarWhereInput[]
  }

  export type PaymentUncheckedUpdateManyWithoutRequestNestedInput = {
    create?: XOR<PaymentCreateWithoutRequestInput, PaymentUncheckedCreateWithoutRequestInput> | PaymentCreateWithoutRequestInput[] | PaymentUncheckedCreateWithoutRequestInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutRequestInput | PaymentCreateOrConnectWithoutRequestInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutRequestInput | PaymentUpsertWithWhereUniqueWithoutRequestInput[]
    createMany?: PaymentCreateManyRequestInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutRequestInput | PaymentUpdateWithWhereUniqueWithoutRequestInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutRequestInput | PaymentUpdateManyWithWhereWithoutRequestInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutInquiriesInput = {
    create?: XOR<UserCreateWithoutInquiriesInput, UserUncheckedCreateWithoutInquiriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutInquiriesInput
    connect?: UserWhereUniqueInput
  }

  export type PropertyCreateNestedOneWithoutInquiriesInput = {
    create?: XOR<PropertyCreateWithoutInquiriesInput, PropertyUncheckedCreateWithoutInquiriesInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutInquiriesInput
    connect?: PropertyWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutInquiriesNestedInput = {
    create?: XOR<UserCreateWithoutInquiriesInput, UserUncheckedCreateWithoutInquiriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutInquiriesInput
    upsert?: UserUpsertWithoutInquiriesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutInquiriesInput, UserUpdateWithoutInquiriesInput>, UserUncheckedUpdateWithoutInquiriesInput>
  }

  export type PropertyUpdateOneRequiredWithoutInquiriesNestedInput = {
    create?: XOR<PropertyCreateWithoutInquiriesInput, PropertyUncheckedCreateWithoutInquiriesInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutInquiriesInput
    upsert?: PropertyUpsertWithoutInquiriesInput
    connect?: PropertyWhereUniqueInput
    update?: XOR<XOR<PropertyUpdateToOneWithWhereWithoutInquiriesInput, PropertyUpdateWithoutInquiriesInput>, PropertyUncheckedUpdateWithoutInquiriesInput>
  }

  export type UserCreateNestedOneWithoutPropertyComparisonsInput = {
    create?: XOR<UserCreateWithoutPropertyComparisonsInput, UserUncheckedCreateWithoutPropertyComparisonsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPropertyComparisonsInput
    connect?: UserWhereUniqueInput
  }

  export type PropertyComparisonPropertiesCreateNestedManyWithoutPropertyComparisonInput = {
    create?: XOR<PropertyComparisonPropertiesCreateWithoutPropertyComparisonInput, PropertyComparisonPropertiesUncheckedCreateWithoutPropertyComparisonInput> | PropertyComparisonPropertiesCreateWithoutPropertyComparisonInput[] | PropertyComparisonPropertiesUncheckedCreateWithoutPropertyComparisonInput[]
    connectOrCreate?: PropertyComparisonPropertiesCreateOrConnectWithoutPropertyComparisonInput | PropertyComparisonPropertiesCreateOrConnectWithoutPropertyComparisonInput[]
    createMany?: PropertyComparisonPropertiesCreateManyPropertyComparisonInputEnvelope
    connect?: PropertyComparisonPropertiesWhereUniqueInput | PropertyComparisonPropertiesWhereUniqueInput[]
  }

  export type PropertyComparisonPropertiesUncheckedCreateNestedManyWithoutPropertyComparisonInput = {
    create?: XOR<PropertyComparisonPropertiesCreateWithoutPropertyComparisonInput, PropertyComparisonPropertiesUncheckedCreateWithoutPropertyComparisonInput> | PropertyComparisonPropertiesCreateWithoutPropertyComparisonInput[] | PropertyComparisonPropertiesUncheckedCreateWithoutPropertyComparisonInput[]
    connectOrCreate?: PropertyComparisonPropertiesCreateOrConnectWithoutPropertyComparisonInput | PropertyComparisonPropertiesCreateOrConnectWithoutPropertyComparisonInput[]
    createMany?: PropertyComparisonPropertiesCreateManyPropertyComparisonInputEnvelope
    connect?: PropertyComparisonPropertiesWhereUniqueInput | PropertyComparisonPropertiesWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutPropertyComparisonsNestedInput = {
    create?: XOR<UserCreateWithoutPropertyComparisonsInput, UserUncheckedCreateWithoutPropertyComparisonsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPropertyComparisonsInput
    upsert?: UserUpsertWithoutPropertyComparisonsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPropertyComparisonsInput, UserUpdateWithoutPropertyComparisonsInput>, UserUncheckedUpdateWithoutPropertyComparisonsInput>
  }

  export type PropertyComparisonPropertiesUpdateManyWithoutPropertyComparisonNestedInput = {
    create?: XOR<PropertyComparisonPropertiesCreateWithoutPropertyComparisonInput, PropertyComparisonPropertiesUncheckedCreateWithoutPropertyComparisonInput> | PropertyComparisonPropertiesCreateWithoutPropertyComparisonInput[] | PropertyComparisonPropertiesUncheckedCreateWithoutPropertyComparisonInput[]
    connectOrCreate?: PropertyComparisonPropertiesCreateOrConnectWithoutPropertyComparisonInput | PropertyComparisonPropertiesCreateOrConnectWithoutPropertyComparisonInput[]
    upsert?: PropertyComparisonPropertiesUpsertWithWhereUniqueWithoutPropertyComparisonInput | PropertyComparisonPropertiesUpsertWithWhereUniqueWithoutPropertyComparisonInput[]
    createMany?: PropertyComparisonPropertiesCreateManyPropertyComparisonInputEnvelope
    set?: PropertyComparisonPropertiesWhereUniqueInput | PropertyComparisonPropertiesWhereUniqueInput[]
    disconnect?: PropertyComparisonPropertiesWhereUniqueInput | PropertyComparisonPropertiesWhereUniqueInput[]
    delete?: PropertyComparisonPropertiesWhereUniqueInput | PropertyComparisonPropertiesWhereUniqueInput[]
    connect?: PropertyComparisonPropertiesWhereUniqueInput | PropertyComparisonPropertiesWhereUniqueInput[]
    update?: PropertyComparisonPropertiesUpdateWithWhereUniqueWithoutPropertyComparisonInput | PropertyComparisonPropertiesUpdateWithWhereUniqueWithoutPropertyComparisonInput[]
    updateMany?: PropertyComparisonPropertiesUpdateManyWithWhereWithoutPropertyComparisonInput | PropertyComparisonPropertiesUpdateManyWithWhereWithoutPropertyComparisonInput[]
    deleteMany?: PropertyComparisonPropertiesScalarWhereInput | PropertyComparisonPropertiesScalarWhereInput[]
  }

  export type PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyComparisonNestedInput = {
    create?: XOR<PropertyComparisonPropertiesCreateWithoutPropertyComparisonInput, PropertyComparisonPropertiesUncheckedCreateWithoutPropertyComparisonInput> | PropertyComparisonPropertiesCreateWithoutPropertyComparisonInput[] | PropertyComparisonPropertiesUncheckedCreateWithoutPropertyComparisonInput[]
    connectOrCreate?: PropertyComparisonPropertiesCreateOrConnectWithoutPropertyComparisonInput | PropertyComparisonPropertiesCreateOrConnectWithoutPropertyComparisonInput[]
    upsert?: PropertyComparisonPropertiesUpsertWithWhereUniqueWithoutPropertyComparisonInput | PropertyComparisonPropertiesUpsertWithWhereUniqueWithoutPropertyComparisonInput[]
    createMany?: PropertyComparisonPropertiesCreateManyPropertyComparisonInputEnvelope
    set?: PropertyComparisonPropertiesWhereUniqueInput | PropertyComparisonPropertiesWhereUniqueInput[]
    disconnect?: PropertyComparisonPropertiesWhereUniqueInput | PropertyComparisonPropertiesWhereUniqueInput[]
    delete?: PropertyComparisonPropertiesWhereUniqueInput | PropertyComparisonPropertiesWhereUniqueInput[]
    connect?: PropertyComparisonPropertiesWhereUniqueInput | PropertyComparisonPropertiesWhereUniqueInput[]
    update?: PropertyComparisonPropertiesUpdateWithWhereUniqueWithoutPropertyComparisonInput | PropertyComparisonPropertiesUpdateWithWhereUniqueWithoutPropertyComparisonInput[]
    updateMany?: PropertyComparisonPropertiesUpdateManyWithWhereWithoutPropertyComparisonInput | PropertyComparisonPropertiesUpdateManyWithWhereWithoutPropertyComparisonInput[]
    deleteMany?: PropertyComparisonPropertiesScalarWhereInput | PropertyComparisonPropertiesScalarWhereInput[]
  }

  export type PropertyComparisonCreateNestedOneWithoutPropertyComparisonPropertiesInput = {
    create?: XOR<PropertyComparisonCreateWithoutPropertyComparisonPropertiesInput, PropertyComparisonUncheckedCreateWithoutPropertyComparisonPropertiesInput>
    connectOrCreate?: PropertyComparisonCreateOrConnectWithoutPropertyComparisonPropertiesInput
    connect?: PropertyComparisonWhereUniqueInput
  }

  export type PropertyCreateNestedOneWithoutComparisonsInput = {
    create?: XOR<PropertyCreateWithoutComparisonsInput, PropertyUncheckedCreateWithoutComparisonsInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutComparisonsInput
    connect?: PropertyWhereUniqueInput
  }

  export type PropertyComparisonUpdateOneRequiredWithoutPropertyComparisonPropertiesNestedInput = {
    create?: XOR<PropertyComparisonCreateWithoutPropertyComparisonPropertiesInput, PropertyComparisonUncheckedCreateWithoutPropertyComparisonPropertiesInput>
    connectOrCreate?: PropertyComparisonCreateOrConnectWithoutPropertyComparisonPropertiesInput
    upsert?: PropertyComparisonUpsertWithoutPropertyComparisonPropertiesInput
    connect?: PropertyComparisonWhereUniqueInput
    update?: XOR<XOR<PropertyComparisonUpdateToOneWithWhereWithoutPropertyComparisonPropertiesInput, PropertyComparisonUpdateWithoutPropertyComparisonPropertiesInput>, PropertyComparisonUncheckedUpdateWithoutPropertyComparisonPropertiesInput>
  }

  export type PropertyUpdateOneRequiredWithoutComparisonsNestedInput = {
    create?: XOR<PropertyCreateWithoutComparisonsInput, PropertyUncheckedCreateWithoutComparisonsInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutComparisonsInput
    upsert?: PropertyUpsertWithoutComparisonsInput
    connect?: PropertyWhereUniqueInput
    update?: XOR<XOR<PropertyUpdateToOneWithWhereWithoutComparisonsInput, PropertyUpdateWithoutComparisonsInput>, PropertyUncheckedUpdateWithoutComparisonsInput>
  }

  export type UserCreateNestedOneWithoutReviewsInput = {
    create?: XOR<UserCreateWithoutReviewsInput, UserUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewsInput
    connect?: UserWhereUniqueInput
  }

  export type PropertyCreateNestedOneWithoutReviewsInput = {
    create?: XOR<PropertyCreateWithoutReviewsInput, PropertyUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutReviewsInput
    connect?: PropertyWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutReviewsNestedInput = {
    create?: XOR<UserCreateWithoutReviewsInput, UserUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewsInput
    upsert?: UserUpsertWithoutReviewsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReviewsInput, UserUpdateWithoutReviewsInput>, UserUncheckedUpdateWithoutReviewsInput>
  }

  export type PropertyUpdateOneRequiredWithoutReviewsNestedInput = {
    create?: XOR<PropertyCreateWithoutReviewsInput, PropertyUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutReviewsInput
    upsert?: PropertyUpsertWithoutReviewsInput
    connect?: PropertyWhereUniqueInput
    update?: XOR<XOR<PropertyUpdateToOneWithWhereWithoutReviewsInput, PropertyUpdateWithoutReviewsInput>, PropertyUncheckedUpdateWithoutReviewsInput>
  }

  export type UserCreateNestedOneWithoutCommentsInput = {
    create?: XOR<UserCreateWithoutCommentsInput, UserUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCommentsInput
    connect?: UserWhereUniqueInput
  }

  export type PropertyCreateNestedOneWithoutCommentsInput = {
    create?: XOR<PropertyCreateWithoutCommentsInput, PropertyUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutCommentsInput
    connect?: PropertyWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutCommentsNestedInput = {
    create?: XOR<UserCreateWithoutCommentsInput, UserUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCommentsInput
    upsert?: UserUpsertWithoutCommentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCommentsInput, UserUpdateWithoutCommentsInput>, UserUncheckedUpdateWithoutCommentsInput>
  }

  export type PropertyUpdateOneRequiredWithoutCommentsNestedInput = {
    create?: XOR<PropertyCreateWithoutCommentsInput, PropertyUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutCommentsInput
    upsert?: PropertyUpsertWithoutCommentsInput
    connect?: PropertyWhereUniqueInput
    update?: XOR<XOR<PropertyUpdateToOneWithWhereWithoutCommentsInput, PropertyUpdateWithoutCommentsInput>, PropertyUncheckedUpdateWithoutCommentsInput>
  }

  export type PropertyCreateNestedOneWithoutViewingsInput = {
    create?: XOR<PropertyCreateWithoutViewingsInput, PropertyUncheckedCreateWithoutViewingsInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutViewingsInput
    connect?: PropertyWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutScheduledViewingsInput = {
    create?: XOR<UserCreateWithoutScheduledViewingsInput, UserUncheckedCreateWithoutScheduledViewingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutScheduledViewingsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutBuyerViewingsInput = {
    create?: XOR<UserCreateWithoutBuyerViewingsInput, UserUncheckedCreateWithoutBuyerViewingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutBuyerViewingsInput
    connect?: UserWhereUniqueInput
  }

  export type PropertyRequestCreateNestedOneWithoutViewingsInput = {
    create?: XOR<PropertyRequestCreateWithoutViewingsInput, PropertyRequestUncheckedCreateWithoutViewingsInput>
    connectOrCreate?: PropertyRequestCreateOrConnectWithoutViewingsInput
    connect?: PropertyRequestWhereUniqueInput
  }

  export type PropertyUpdateOneRequiredWithoutViewingsNestedInput = {
    create?: XOR<PropertyCreateWithoutViewingsInput, PropertyUncheckedCreateWithoutViewingsInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutViewingsInput
    upsert?: PropertyUpsertWithoutViewingsInput
    connect?: PropertyWhereUniqueInput
    update?: XOR<XOR<PropertyUpdateToOneWithWhereWithoutViewingsInput, PropertyUpdateWithoutViewingsInput>, PropertyUncheckedUpdateWithoutViewingsInput>
  }

  export type UserUpdateOneRequiredWithoutScheduledViewingsNestedInput = {
    create?: XOR<UserCreateWithoutScheduledViewingsInput, UserUncheckedCreateWithoutScheduledViewingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutScheduledViewingsInput
    upsert?: UserUpsertWithoutScheduledViewingsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutScheduledViewingsInput, UserUpdateWithoutScheduledViewingsInput>, UserUncheckedUpdateWithoutScheduledViewingsInput>
  }

  export type UserUpdateOneWithoutBuyerViewingsNestedInput = {
    create?: XOR<UserCreateWithoutBuyerViewingsInput, UserUncheckedCreateWithoutBuyerViewingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutBuyerViewingsInput
    upsert?: UserUpsertWithoutBuyerViewingsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutBuyerViewingsInput, UserUpdateWithoutBuyerViewingsInput>, UserUncheckedUpdateWithoutBuyerViewingsInput>
  }

  export type PropertyRequestUpdateOneWithoutViewingsNestedInput = {
    create?: XOR<PropertyRequestCreateWithoutViewingsInput, PropertyRequestUncheckedCreateWithoutViewingsInput>
    connectOrCreate?: PropertyRequestCreateOrConnectWithoutViewingsInput
    upsert?: PropertyRequestUpsertWithoutViewingsInput
    disconnect?: PropertyRequestWhereInput | boolean
    delete?: PropertyRequestWhereInput | boolean
    connect?: PropertyRequestWhereUniqueInput
    update?: XOR<XOR<PropertyRequestUpdateToOneWithWhereWithoutViewingsInput, PropertyRequestUpdateWithoutViewingsInput>, PropertyRequestUncheckedUpdateWithoutViewingsInput>
  }

  export type PropertyCreateNestedOneWithoutAnalyticsInput = {
    create?: XOR<PropertyCreateWithoutAnalyticsInput, PropertyUncheckedCreateWithoutAnalyticsInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutAnalyticsInput
    connect?: PropertyWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutPropertyAnalyticsInput = {
    create?: XOR<UserCreateWithoutPropertyAnalyticsInput, UserUncheckedCreateWithoutPropertyAnalyticsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPropertyAnalyticsInput
    connect?: UserWhereUniqueInput
  }

  export type PropertyUpdateOneRequiredWithoutAnalyticsNestedInput = {
    create?: XOR<PropertyCreateWithoutAnalyticsInput, PropertyUncheckedCreateWithoutAnalyticsInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutAnalyticsInput
    upsert?: PropertyUpsertWithoutAnalyticsInput
    connect?: PropertyWhereUniqueInput
    update?: XOR<XOR<PropertyUpdateToOneWithWhereWithoutAnalyticsInput, PropertyUpdateWithoutAnalyticsInput>, PropertyUncheckedUpdateWithoutAnalyticsInput>
  }

  export type UserUpdateOneWithoutPropertyAnalyticsNestedInput = {
    create?: XOR<UserCreateWithoutPropertyAnalyticsInput, UserUncheckedCreateWithoutPropertyAnalyticsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPropertyAnalyticsInput
    upsert?: UserUpsertWithoutPropertyAnalyticsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPropertyAnalyticsInput, UserUpdateWithoutPropertyAnalyticsInput>, UserUncheckedUpdateWithoutPropertyAnalyticsInput>
  }

  export type UserCreateNestedOneWithoutAdminActionsInput = {
    create?: XOR<UserCreateWithoutAdminActionsInput, UserUncheckedCreateWithoutAdminActionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAdminActionsInput
    connect?: UserWhereUniqueInput
  }

  export type PropertyCreateNestedOneWithoutAdminActionsInput = {
    create?: XOR<PropertyCreateWithoutAdminActionsInput, PropertyUncheckedCreateWithoutAdminActionsInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutAdminActionsInput
    connect?: PropertyWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAdminActionTargetsInput = {
    create?: XOR<UserCreateWithoutAdminActionTargetsInput, UserUncheckedCreateWithoutAdminActionTargetsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAdminActionTargetsInput
    connect?: UserWhereUniqueInput
  }

  export type AgencyCreateNestedOneWithoutAdminActionsInput = {
    create?: XOR<AgencyCreateWithoutAdminActionsInput, AgencyUncheckedCreateWithoutAdminActionsInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutAdminActionsInput
    connect?: AgencyWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutAdminActionsNestedInput = {
    create?: XOR<UserCreateWithoutAdminActionsInput, UserUncheckedCreateWithoutAdminActionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAdminActionsInput
    upsert?: UserUpsertWithoutAdminActionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAdminActionsInput, UserUpdateWithoutAdminActionsInput>, UserUncheckedUpdateWithoutAdminActionsInput>
  }

  export type PropertyUpdateOneWithoutAdminActionsNestedInput = {
    create?: XOR<PropertyCreateWithoutAdminActionsInput, PropertyUncheckedCreateWithoutAdminActionsInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutAdminActionsInput
    upsert?: PropertyUpsertWithoutAdminActionsInput
    disconnect?: PropertyWhereInput | boolean
    delete?: PropertyWhereInput | boolean
    connect?: PropertyWhereUniqueInput
    update?: XOR<XOR<PropertyUpdateToOneWithWhereWithoutAdminActionsInput, PropertyUpdateWithoutAdminActionsInput>, PropertyUncheckedUpdateWithoutAdminActionsInput>
  }

  export type UserUpdateOneWithoutAdminActionTargetsNestedInput = {
    create?: XOR<UserCreateWithoutAdminActionTargetsInput, UserUncheckedCreateWithoutAdminActionTargetsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAdminActionTargetsInput
    upsert?: UserUpsertWithoutAdminActionTargetsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAdminActionTargetsInput, UserUpdateWithoutAdminActionTargetsInput>, UserUncheckedUpdateWithoutAdminActionTargetsInput>
  }

  export type AgencyUpdateOneWithoutAdminActionsNestedInput = {
    create?: XOR<AgencyCreateWithoutAdminActionsInput, AgencyUncheckedCreateWithoutAdminActionsInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutAdminActionsInput
    upsert?: AgencyUpsertWithoutAdminActionsInput
    disconnect?: AgencyWhereInput | boolean
    delete?: AgencyWhereInput | boolean
    connect?: AgencyWhereUniqueInput
    update?: XOR<XOR<AgencyUpdateToOneWithWhereWithoutAdminActionsInput, AgencyUpdateWithoutAdminActionsInput>, AgencyUncheckedUpdateWithoutAdminActionsInput>
  }

  export type UserCreateNestedOneWithoutNotificationsInput = {
    create?: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumNotificationTypeFieldUpdateOperationsInput = {
    set?: $Enums.NotificationType
  }

  export type UserUpdateOneRequiredWithoutNotificationsNestedInput = {
    create?: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationsInput
    upsert?: UserUpsertWithoutNotificationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutNotificationsInput, UserUpdateWithoutNotificationsInput>, UserUncheckedUpdateWithoutNotificationsInput>
  }

  export type UserCreateNestedOneWithoutPaymentsInput = {
    create?: XOR<UserCreateWithoutPaymentsInput, UserUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPaymentsInput
    connect?: UserWhereUniqueInput
  }

  export type PropertyCreateNestedOneWithoutPaymentsInput = {
    create?: XOR<PropertyCreateWithoutPaymentsInput, PropertyUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutPaymentsInput
    connect?: PropertyWhereUniqueInput
  }

  export type PropertyRequestCreateNestedOneWithoutPaymentsInput = {
    create?: XOR<PropertyRequestCreateWithoutPaymentsInput, PropertyRequestUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: PropertyRequestCreateOrConnectWithoutPaymentsInput
    connect?: PropertyRequestWhereUniqueInput
  }

  export type EnumPaymentStatusFieldUpdateOperationsInput = {
    set?: $Enums.PaymentStatus
  }

  export type UserUpdateOneRequiredWithoutPaymentsNestedInput = {
    create?: XOR<UserCreateWithoutPaymentsInput, UserUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPaymentsInput
    upsert?: UserUpsertWithoutPaymentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPaymentsInput, UserUpdateWithoutPaymentsInput>, UserUncheckedUpdateWithoutPaymentsInput>
  }

  export type PropertyUpdateOneWithoutPaymentsNestedInput = {
    create?: XOR<PropertyCreateWithoutPaymentsInput, PropertyUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: PropertyCreateOrConnectWithoutPaymentsInput
    upsert?: PropertyUpsertWithoutPaymentsInput
    disconnect?: PropertyWhereInput | boolean
    delete?: PropertyWhereInput | boolean
    connect?: PropertyWhereUniqueInput
    update?: XOR<XOR<PropertyUpdateToOneWithWhereWithoutPaymentsInput, PropertyUpdateWithoutPaymentsInput>, PropertyUncheckedUpdateWithoutPaymentsInput>
  }

  export type PropertyRequestUpdateOneWithoutPaymentsNestedInput = {
    create?: XOR<PropertyRequestCreateWithoutPaymentsInput, PropertyRequestUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: PropertyRequestCreateOrConnectWithoutPaymentsInput
    upsert?: PropertyRequestUpsertWithoutPaymentsInput
    disconnect?: PropertyRequestWhereInput | boolean
    delete?: PropertyRequestWhereInput | boolean
    connect?: PropertyRequestWhereUniqueInput
    update?: XOR<XOR<PropertyRequestUpdateToOneWithWhereWithoutPaymentsInput, PropertyRequestUpdateWithoutPaymentsInput>, PropertyRequestUncheckedUpdateWithoutPaymentsInput>
  }

  export type SavedSearchCreatepropertyTypesInput = {
    set: $Enums.PropertyType[]
  }

  export type SavedSearchCreatetransactionTypesInput = {
    set: $Enums.TransactionType[]
  }

  export type SavedSearchCreatecitiesInput = {
    set: string[]
  }

  export type SavedSearchCreateneighborhoodsInput = {
    set: string[]
  }

  export type UserCreateNestedOneWithoutSavedSearchInput = {
    create?: XOR<UserCreateWithoutSavedSearchInput, UserUncheckedCreateWithoutSavedSearchInput>
    connectOrCreate?: UserCreateOrConnectWithoutSavedSearchInput
    connect?: UserWhereUniqueInput
  }

  export type SavedSearchUpdatepropertyTypesInput = {
    set?: $Enums.PropertyType[]
    push?: $Enums.PropertyType | $Enums.PropertyType[]
  }

  export type SavedSearchUpdatetransactionTypesInput = {
    set?: $Enums.TransactionType[]
    push?: $Enums.TransactionType | $Enums.TransactionType[]
  }

  export type SavedSearchUpdatecitiesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type SavedSearchUpdateneighborhoodsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type UserUpdateOneRequiredWithoutSavedSearchNestedInput = {
    create?: XOR<UserCreateWithoutSavedSearchInput, UserUncheckedCreateWithoutSavedSearchInput>
    connectOrCreate?: UserCreateOrConnectWithoutSavedSearchInput
    upsert?: UserUpsertWithoutSavedSearchInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSavedSearchInput, UserUpdateWithoutSavedSearchInput>, UserUncheckedUpdateWithoutSavedSearchInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumAgencyActivityTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AgencyActivityType | EnumAgencyActivityTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AgencyActivityType[] | ListEnumAgencyActivityTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AgencyActivityType[] | ListEnumAgencyActivityTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAgencyActivityTypeFilter<$PrismaModel> | $Enums.AgencyActivityType
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumAgencyVerificationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AgencyVerificationStatus | EnumAgencyVerificationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AgencyVerificationStatus[] | ListEnumAgencyVerificationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AgencyVerificationStatus[] | ListEnumAgencyVerificationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAgencyVerificationStatusFilter<$PrismaModel> | $Enums.AgencyVerificationStatus
  }

  export type NestedEnumAgencyActivityTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AgencyActivityType | EnumAgencyActivityTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AgencyActivityType[] | ListEnumAgencyActivityTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AgencyActivityType[] | ListEnumAgencyActivityTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAgencyActivityTypeWithAggregatesFilter<$PrismaModel> | $Enums.AgencyActivityType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAgencyActivityTypeFilter<$PrismaModel>
    _max?: NestedEnumAgencyActivityTypeFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumAgencyVerificationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AgencyVerificationStatus | EnumAgencyVerificationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AgencyVerificationStatus[] | ListEnumAgencyVerificationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AgencyVerificationStatus[] | ListEnumAgencyVerificationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAgencyVerificationStatusWithAggregatesFilter<$PrismaModel> | $Enums.AgencyVerificationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAgencyVerificationStatusFilter<$PrismaModel>
    _max?: NestedEnumAgencyVerificationStatusFilter<$PrismaModel>
  }

  export type NestedEnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type NestedEnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumInquiryStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.InquiryStatus | EnumInquiryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InquiryStatus[] | ListEnumInquiryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InquiryStatus[] | ListEnumInquiryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInquiryStatusFilter<$PrismaModel> | $Enums.InquiryStatus
  }

  export type NestedEnumInquiryStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.InquiryStatus | EnumInquiryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InquiryStatus[] | ListEnumInquiryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InquiryStatus[] | ListEnumInquiryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInquiryStatusWithAggregatesFilter<$PrismaModel> | $Enums.InquiryStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumInquiryStatusFilter<$PrismaModel>
    _max?: NestedEnumInquiryStatusFilter<$PrismaModel>
  }

  export type NestedEnumPropertyTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.PropertyType | EnumPropertyTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PropertyType[] | ListEnumPropertyTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PropertyType[] | ListEnumPropertyTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPropertyTypeFilter<$PrismaModel> | $Enums.PropertyType
  }

  export type NestedEnumTransactionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionType | EnumTransactionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionTypeFilter<$PrismaModel> | $Enums.TransactionType
  }

  export type NestedEnumPropertyConditionFilter<$PrismaModel = never> = {
    equals?: $Enums.PropertyCondition | EnumPropertyConditionFieldRefInput<$PrismaModel>
    in?: $Enums.PropertyCondition[] | ListEnumPropertyConditionFieldRefInput<$PrismaModel>
    notIn?: $Enums.PropertyCondition[] | ListEnumPropertyConditionFieldRefInput<$PrismaModel>
    not?: NestedEnumPropertyConditionFilter<$PrismaModel> | $Enums.PropertyCondition
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedEnumLeaseTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.LeaseType | EnumLeaseTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.LeaseType[] | ListEnumLeaseTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.LeaseType[] | ListEnumLeaseTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumLeaseTypeNullableFilter<$PrismaModel> | $Enums.LeaseType | null
  }

  export type NestedEnumPropertyStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PropertyStatus | EnumPropertyStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PropertyStatus[] | ListEnumPropertyStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PropertyStatus[] | ListEnumPropertyStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPropertyStatusFilter<$PrismaModel> | $Enums.PropertyStatus
  }

  export type NestedEnumPropertyTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PropertyType | EnumPropertyTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PropertyType[] | ListEnumPropertyTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PropertyType[] | ListEnumPropertyTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPropertyTypeWithAggregatesFilter<$PrismaModel> | $Enums.PropertyType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPropertyTypeFilter<$PrismaModel>
    _max?: NestedEnumPropertyTypeFilter<$PrismaModel>
  }

  export type NestedEnumTransactionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionType | EnumTransactionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionTypeWithAggregatesFilter<$PrismaModel> | $Enums.TransactionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransactionTypeFilter<$PrismaModel>
    _max?: NestedEnumTransactionTypeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedEnumPropertyConditionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PropertyCondition | EnumPropertyConditionFieldRefInput<$PrismaModel>
    in?: $Enums.PropertyCondition[] | ListEnumPropertyConditionFieldRefInput<$PrismaModel>
    notIn?: $Enums.PropertyCondition[] | ListEnumPropertyConditionFieldRefInput<$PrismaModel>
    not?: NestedEnumPropertyConditionWithAggregatesFilter<$PrismaModel> | $Enums.PropertyCondition
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPropertyConditionFilter<$PrismaModel>
    _max?: NestedEnumPropertyConditionFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedEnumLeaseTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LeaseType | EnumLeaseTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.LeaseType[] | ListEnumLeaseTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.LeaseType[] | ListEnumLeaseTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumLeaseTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.LeaseType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumLeaseTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumLeaseTypeNullableFilter<$PrismaModel>
  }

  export type NestedEnumPropertyStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PropertyStatus | EnumPropertyStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PropertyStatus[] | ListEnumPropertyStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PropertyStatus[] | ListEnumPropertyStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPropertyStatusWithAggregatesFilter<$PrismaModel> | $Enums.PropertyStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPropertyStatusFilter<$PrismaModel>
    _max?: NestedEnumPropertyStatusFilter<$PrismaModel>
  }

  export type NestedEnumRequestTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.RequestType | EnumRequestTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RequestType[] | ListEnumRequestTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RequestType[] | ListEnumRequestTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRequestTypeFilter<$PrismaModel> | $Enums.RequestType
  }

  export type NestedEnumRequestStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.RequestStatus | EnumRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRequestStatusFilter<$PrismaModel> | $Enums.RequestStatus
  }

  export type NestedEnumRequestTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RequestType | EnumRequestTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RequestType[] | ListEnumRequestTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RequestType[] | ListEnumRequestTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRequestTypeWithAggregatesFilter<$PrismaModel> | $Enums.RequestType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRequestTypeFilter<$PrismaModel>
    _max?: NestedEnumRequestTypeFilter<$PrismaModel>
  }

  export type NestedEnumRequestStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RequestStatus | EnumRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRequestStatusWithAggregatesFilter<$PrismaModel> | $Enums.RequestStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRequestStatusFilter<$PrismaModel>
    _max?: NestedEnumRequestStatusFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumNotificationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeFilter<$PrismaModel> | $Enums.NotificationType
  }

  export type NestedEnumNotificationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeWithAggregatesFilter<$PrismaModel> | $Enums.NotificationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNotificationTypeFilter<$PrismaModel>
    _max?: NestedEnumNotificationTypeFilter<$PrismaModel>
  }

  export type NestedEnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type PropertyViewCreateWithoutUserInput = {
    id?: string
    viewedAt?: Date | string
    viewDuration?: number | null
    ipAddress?: string | null
    userAgent?: string | null
    property: PropertyCreateNestedOneWithoutViewsInput
  }

  export type PropertyViewUncheckedCreateWithoutUserInput = {
    id?: string
    viewedAt?: Date | string
    viewDuration?: number | null
    ipAddress?: string | null
    userAgent?: string | null
    propertyId: string
  }

  export type PropertyViewCreateOrConnectWithoutUserInput = {
    where: PropertyViewWhereUniqueInput
    create: XOR<PropertyViewCreateWithoutUserInput, PropertyViewUncheckedCreateWithoutUserInput>
  }

  export type PropertyViewCreateManyUserInputEnvelope = {
    data: PropertyViewCreateManyUserInput | PropertyViewCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type FavoriteCreateWithoutUserInput = {
    id?: string
    notes?: string | null
    priority?: number | null
    createdAt?: Date | string
    listId?: string | null
    property: PropertyCreateNestedOneWithoutFavoritesInput
    list?: FavoriteListCreateNestedOneWithoutFavoritesInput
  }

  export type FavoriteUncheckedCreateWithoutUserInput = {
    id?: string
    notes?: string | null
    priority?: number | null
    createdAt?: Date | string
    propertyId: string
    listId?: string | null
    favoriteListId?: string | null
  }

  export type FavoriteCreateOrConnectWithoutUserInput = {
    where: FavoriteWhereUniqueInput
    create: XOR<FavoriteCreateWithoutUserInput, FavoriteUncheckedCreateWithoutUserInput>
  }

  export type FavoriteCreateManyUserInputEnvelope = {
    data: FavoriteCreateManyUserInput | FavoriteCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type FavoriteListCreateWithoutUserInput = {
    id?: string
    name: string
    description?: string | null
    isPublic?: boolean
    isDefault?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    favorites?: FavoriteCreateNestedManyWithoutListInput
  }

  export type FavoriteListUncheckedCreateWithoutUserInput = {
    id?: string
    name: string
    description?: string | null
    isPublic?: boolean
    isDefault?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    favorites?: FavoriteUncheckedCreateNestedManyWithoutListInput
  }

  export type FavoriteListCreateOrConnectWithoutUserInput = {
    where: FavoriteListWhereUniqueInput
    create: XOR<FavoriteListCreateWithoutUserInput, FavoriteListUncheckedCreateWithoutUserInput>
  }

  export type FavoriteListCreateManyUserInputEnvelope = {
    data: FavoriteListCreateManyUserInput | FavoriteListCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type PropertyRequestCreateWithoutBuyerInput = {
    id?: string
    type: $Enums.RequestType
    message: string
    status?: $Enums.RequestStatus
    preferredDate?: Date | string | null
    preferredTime?: string | null
    budget?: number | null
    timeline?: string | null
    sellerResponse?: string | null
    responseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    buyerId: string
    property: PropertyCreateNestedOneWithoutRequestsInput
    viewings?: PropertyViewingCreateNestedManyWithoutRequestInput
    payments?: PaymentCreateNestedManyWithoutRequestInput
  }

  export type PropertyRequestUncheckedCreateWithoutBuyerInput = {
    id?: string
    type: $Enums.RequestType
    message: string
    status?: $Enums.RequestStatus
    preferredDate?: Date | string | null
    preferredTime?: string | null
    budget?: number | null
    timeline?: string | null
    sellerResponse?: string | null
    responseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    buyerId: string
    propertyId: string
    viewings?: PropertyViewingUncheckedCreateNestedManyWithoutRequestInput
    payments?: PaymentUncheckedCreateNestedManyWithoutRequestInput
  }

  export type PropertyRequestCreateOrConnectWithoutBuyerInput = {
    where: PropertyRequestWhereUniqueInput
    create: XOR<PropertyRequestCreateWithoutBuyerInput, PropertyRequestUncheckedCreateWithoutBuyerInput>
  }

  export type PropertyRequestCreateManyBuyerInputEnvelope = {
    data: PropertyRequestCreateManyBuyerInput | PropertyRequestCreateManyBuyerInput[]
    skipDuplicates?: boolean
  }

  export type PropertyInquiryCreateWithoutUserInput = {
    id?: string
    subject: string
    message: string
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    property: PropertyCreateNestedOneWithoutInquiriesInput
  }

  export type PropertyInquiryUncheckedCreateWithoutUserInput = {
    id?: string
    subject: string
    message: string
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    propertyId: string
  }

  export type PropertyInquiryCreateOrConnectWithoutUserInput = {
    where: PropertyInquiryWhereUniqueInput
    create: XOR<PropertyInquiryCreateWithoutUserInput, PropertyInquiryUncheckedCreateWithoutUserInput>
  }

  export type PropertyInquiryCreateManyUserInputEnvelope = {
    data: PropertyInquiryCreateManyUserInput | PropertyInquiryCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type PropertyComparisonCreateWithoutUserInput = {
    id?: string
    name: string
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    PropertyComparisonProperties?: PropertyComparisonPropertiesCreateNestedManyWithoutPropertyComparisonInput
  }

  export type PropertyComparisonUncheckedCreateWithoutUserInput = {
    id?: string
    name: string
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    PropertyComparisonProperties?: PropertyComparisonPropertiesUncheckedCreateNestedManyWithoutPropertyComparisonInput
  }

  export type PropertyComparisonCreateOrConnectWithoutUserInput = {
    where: PropertyComparisonWhereUniqueInput
    create: XOR<PropertyComparisonCreateWithoutUserInput, PropertyComparisonUncheckedCreateWithoutUserInput>
  }

  export type PropertyComparisonCreateManyUserInputEnvelope = {
    data: PropertyComparisonCreateManyUserInput | PropertyComparisonCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type PropertyReviewCreateWithoutReviewerInput = {
    id?: string
    rating: number
    title: string
    comment: string
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewerId: string
    property: PropertyCreateNestedOneWithoutReviewsInput
  }

  export type PropertyReviewUncheckedCreateWithoutReviewerInput = {
    id?: string
    rating: number
    title: string
    comment: string
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewerId: string
    propertyId: string
  }

  export type PropertyReviewCreateOrConnectWithoutReviewerInput = {
    where: PropertyReviewWhereUniqueInput
    create: XOR<PropertyReviewCreateWithoutReviewerInput, PropertyReviewUncheckedCreateWithoutReviewerInput>
  }

  export type PropertyReviewCreateManyReviewerInputEnvelope = {
    data: PropertyReviewCreateManyReviewerInput | PropertyReviewCreateManyReviewerInput[]
    skipDuplicates?: boolean
  }

  export type PropertyCommentCreateWithoutAuthorInput = {
    id?: string
    content: string
    isPublic?: boolean
    isModerated?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    authorId: string
    property: PropertyCreateNestedOneWithoutCommentsInput
  }

  export type PropertyCommentUncheckedCreateWithoutAuthorInput = {
    id?: string
    content: string
    isPublic?: boolean
    isModerated?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    authorId: string
    propertyId: string
  }

  export type PropertyCommentCreateOrConnectWithoutAuthorInput = {
    where: PropertyCommentWhereUniqueInput
    create: XOR<PropertyCommentCreateWithoutAuthorInput, PropertyCommentUncheckedCreateWithoutAuthorInput>
  }

  export type PropertyCommentCreateManyAuthorInputEnvelope = {
    data: PropertyCommentCreateManyAuthorInput | PropertyCommentCreateManyAuthorInput[]
    skipDuplicates?: boolean
  }

  export type PropertyCreateWithoutOwnerInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    agent?: UserCreateNestedOneWithoutManagedPropertiesInput
    agency?: AgencyCreateNestedOneWithoutPropertiesInput
    photos?: PropertyPhotoCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourCreateNestedManyWithoutPropertyInput
    views?: PropertyViewCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionCreateNestedManyWithoutPropertyInput
    payments?: PaymentCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryCreateNestedManyWithoutPropertyInput
  }

  export type PropertyUncheckedCreateWithoutOwnerInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    agentId?: string | null
    agencyId?: string | null
    photos?: PropertyPhotoUncheckedCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoUncheckedCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourUncheckedCreateNestedManyWithoutPropertyInput
    views?: PropertyViewUncheckedCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesUncheckedCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingUncheckedCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutPropertyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutPropertyInput
  }

  export type PropertyCreateOrConnectWithoutOwnerInput = {
    where: PropertyWhereUniqueInput
    create: XOR<PropertyCreateWithoutOwnerInput, PropertyUncheckedCreateWithoutOwnerInput>
  }

  export type PropertyCreateManyOwnerInputEnvelope = {
    data: PropertyCreateManyOwnerInput | PropertyCreateManyOwnerInput[]
    skipDuplicates?: boolean
  }

  export type PropertyCreateWithoutAgentInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    owner: UserCreateNestedOneWithoutOwnedPropertiesInput
    agency?: AgencyCreateNestedOneWithoutPropertiesInput
    photos?: PropertyPhotoCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourCreateNestedManyWithoutPropertyInput
    views?: PropertyViewCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionCreateNestedManyWithoutPropertyInput
    payments?: PaymentCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryCreateNestedManyWithoutPropertyInput
  }

  export type PropertyUncheckedCreateWithoutAgentInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    ownerId: string
    agencyId?: string | null
    photos?: PropertyPhotoUncheckedCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoUncheckedCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourUncheckedCreateNestedManyWithoutPropertyInput
    views?: PropertyViewUncheckedCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesUncheckedCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingUncheckedCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutPropertyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutPropertyInput
  }

  export type PropertyCreateOrConnectWithoutAgentInput = {
    where: PropertyWhereUniqueInput
    create: XOR<PropertyCreateWithoutAgentInput, PropertyUncheckedCreateWithoutAgentInput>
  }

  export type PropertyCreateManyAgentInputEnvelope = {
    data: PropertyCreateManyAgentInput | PropertyCreateManyAgentInput[]
    skipDuplicates?: boolean
  }

  export type PropertyViewingCreateWithoutSellerInput = {
    id?: string
    scheduledAt: Date | string
    duration: number
    status?: string
    notes?: string | null
    buyerNotes?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    requestId?: string | null
    property: PropertyCreateNestedOneWithoutViewingsInput
    buyer?: UserCreateNestedOneWithoutBuyerViewingsInput
    request?: PropertyRequestCreateNestedOneWithoutViewingsInput
  }

  export type PropertyViewingUncheckedCreateWithoutSellerInput = {
    id?: string
    scheduledAt: Date | string
    duration: number
    status?: string
    notes?: string | null
    buyerNotes?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    propertyId: string
    buyerId?: string | null
    requestId?: string | null
    propertyRequestId?: string | null
  }

  export type PropertyViewingCreateOrConnectWithoutSellerInput = {
    where: PropertyViewingWhereUniqueInput
    create: XOR<PropertyViewingCreateWithoutSellerInput, PropertyViewingUncheckedCreateWithoutSellerInput>
  }

  export type PropertyViewingCreateManySellerInputEnvelope = {
    data: PropertyViewingCreateManySellerInput | PropertyViewingCreateManySellerInput[]
    skipDuplicates?: boolean
  }

  export type PropertyViewingCreateWithoutBuyerInput = {
    id?: string
    scheduledAt: Date | string
    duration: number
    status?: string
    notes?: string | null
    buyerNotes?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    requestId?: string | null
    property: PropertyCreateNestedOneWithoutViewingsInput
    seller: UserCreateNestedOneWithoutScheduledViewingsInput
    request?: PropertyRequestCreateNestedOneWithoutViewingsInput
  }

  export type PropertyViewingUncheckedCreateWithoutBuyerInput = {
    id?: string
    scheduledAt: Date | string
    duration: number
    status?: string
    notes?: string | null
    buyerNotes?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    propertyId: string
    sellerId: string
    requestId?: string | null
    propertyRequestId?: string | null
  }

  export type PropertyViewingCreateOrConnectWithoutBuyerInput = {
    where: PropertyViewingWhereUniqueInput
    create: XOR<PropertyViewingCreateWithoutBuyerInput, PropertyViewingUncheckedCreateWithoutBuyerInput>
  }

  export type PropertyViewingCreateManyBuyerInputEnvelope = {
    data: PropertyViewingCreateManyBuyerInput | PropertyViewingCreateManyBuyerInput[]
    skipDuplicates?: boolean
  }

  export type PropertyAnalyticsCreateWithoutUserInput = {
    id?: string
    totalViews?: number
    uniqueViews?: number
    totalFavorites?: number
    totalRequests?: number
    totalInquiries?: number
    averageViewDuration?: number
    bounceRate?: number
    conversionRate?: number
    viewsThisWeek?: number
    viewsThisMonth?: number
    viewsThisYear?: number
    lastCalculated?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    property: PropertyCreateNestedOneWithoutAnalyticsInput
  }

  export type PropertyAnalyticsUncheckedCreateWithoutUserInput = {
    id?: string
    totalViews?: number
    uniqueViews?: number
    totalFavorites?: number
    totalRequests?: number
    totalInquiries?: number
    averageViewDuration?: number
    bounceRate?: number
    conversionRate?: number
    viewsThisWeek?: number
    viewsThisMonth?: number
    viewsThisYear?: number
    lastCalculated?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    propertyId: string
  }

  export type PropertyAnalyticsCreateOrConnectWithoutUserInput = {
    where: PropertyAnalyticsWhereUniqueInput
    create: XOR<PropertyAnalyticsCreateWithoutUserInput, PropertyAnalyticsUncheckedCreateWithoutUserInput>
  }

  export type PropertyAnalyticsCreateManyUserInputEnvelope = {
    data: PropertyAnalyticsCreateManyUserInput | PropertyAnalyticsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AgencyCreateWithoutUserInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    activityType: $Enums.AgencyActivityType
    businessPhone: string
    businessEmail: string
    website?: string | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    businessRegistrationNumber?: string | null
    activityLicense?: string | null
    taxId?: string | null
    bankAccountInfo?: string | null
    isVerified?: boolean
    isActive?: boolean
    isSuspended?: boolean
    suspensionReason?: string | null
    suspendedAt?: Date | string | null
    suspendedBy?: string | null
    verificationStatus?: $Enums.AgencyVerificationStatus
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    verificationDocuments?: AgencyVerificationDocumentCreateNestedManyWithoutAgencyInput
    teamMembers?: AgencyMemberCreateNestedManyWithoutAgencyInput
    teamRoles?: AgencyRoleCreateNestedManyWithoutAgencyInput
    properties?: PropertyCreateNestedManyWithoutAgencyInput
    performance?: AgencyPerformanceCreateNestedOneWithoutAgencyInput
    inquiries?: AgencyInquiryCreateNestedManyWithoutAgencyInput
    adminActions?: AdminActionCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutUserInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    activityType: $Enums.AgencyActivityType
    businessPhone: string
    businessEmail: string
    website?: string | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    businessRegistrationNumber?: string | null
    activityLicense?: string | null
    taxId?: string | null
    bankAccountInfo?: string | null
    isVerified?: boolean
    isActive?: boolean
    isSuspended?: boolean
    suspensionReason?: string | null
    suspendedAt?: Date | string | null
    suspendedBy?: string | null
    verificationStatus?: $Enums.AgencyVerificationStatus
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    verificationDocuments?: AgencyVerificationDocumentUncheckedCreateNestedManyWithoutAgencyInput
    teamMembers?: AgencyMemberUncheckedCreateNestedManyWithoutAgencyInput
    teamRoles?: AgencyRoleUncheckedCreateNestedManyWithoutAgencyInput
    properties?: PropertyUncheckedCreateNestedManyWithoutAgencyInput
    performance?: AgencyPerformanceUncheckedCreateNestedOneWithoutAgencyInput
    inquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutAgencyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutUserInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutUserInput, AgencyUncheckedCreateWithoutUserInput>
  }

  export type AgencyRoleCreateWithoutUserInput = {
    id?: string
    role: $Enums.UserRole
    title?: string | null
    description?: string | null
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    assignedAt?: Date | string
    updatedAt?: Date | string
    agency: AgencyCreateNestedOneWithoutTeamRolesInput
  }

  export type AgencyRoleUncheckedCreateWithoutUserInput = {
    id?: string
    agencyId: string
    role: $Enums.UserRole
    title?: string | null
    description?: string | null
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    assignedAt?: Date | string
    updatedAt?: Date | string
  }

  export type AgencyRoleCreateOrConnectWithoutUserInput = {
    where: AgencyRoleWhereUniqueInput
    create: XOR<AgencyRoleCreateWithoutUserInput, AgencyRoleUncheckedCreateWithoutUserInput>
  }

  export type AgencyRoleCreateManyUserInputEnvelope = {
    data: AgencyRoleCreateManyUserInput | AgencyRoleCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AdminActionCreateWithoutAdminInput = {
    id?: string
    action: string
    details?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    property?: PropertyCreateNestedOneWithoutAdminActionsInput
    user?: UserCreateNestedOneWithoutAdminActionTargetsInput
    agency?: AgencyCreateNestedOneWithoutAdminActionsInput
  }

  export type AdminActionUncheckedCreateWithoutAdminInput = {
    id?: string
    action: string
    details?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    propertyId?: string | null
    userId?: string | null
    agencyId?: string | null
  }

  export type AdminActionCreateOrConnectWithoutAdminInput = {
    where: AdminActionWhereUniqueInput
    create: XOR<AdminActionCreateWithoutAdminInput, AdminActionUncheckedCreateWithoutAdminInput>
  }

  export type AdminActionCreateManyAdminInputEnvelope = {
    data: AdminActionCreateManyAdminInput | AdminActionCreateManyAdminInput[]
    skipDuplicates?: boolean
  }

  export type AdminActionCreateWithoutUserInput = {
    id?: string
    action: string
    details?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    admin: UserCreateNestedOneWithoutAdminActionsInput
    property?: PropertyCreateNestedOneWithoutAdminActionsInput
    agency?: AgencyCreateNestedOneWithoutAdminActionsInput
  }

  export type AdminActionUncheckedCreateWithoutUserInput = {
    id?: string
    action: string
    details?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    adminId: string
    propertyId?: string | null
    agencyId?: string | null
  }

  export type AdminActionCreateOrConnectWithoutUserInput = {
    where: AdminActionWhereUniqueInput
    create: XOR<AdminActionCreateWithoutUserInput, AdminActionUncheckedCreateWithoutUserInput>
  }

  export type AdminActionCreateManyUserInputEnvelope = {
    data: AdminActionCreateManyUserInput | AdminActionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type NotificationCreateWithoutUserInput = {
    id?: string
    type: $Enums.NotificationType
    title: string
    message: string
    isRead?: boolean
    readAt?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    link?: string | null
    createdAt?: Date | string
  }

  export type NotificationUncheckedCreateWithoutUserInput = {
    id?: string
    type: $Enums.NotificationType
    title: string
    message: string
    isRead?: boolean
    readAt?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    link?: string | null
    createdAt?: Date | string
  }

  export type NotificationCreateOrConnectWithoutUserInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput>
  }

  export type NotificationCreateManyUserInputEnvelope = {
    data: NotificationCreateManyUserInput | NotificationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type PaymentCreateWithoutUserInput = {
    id?: string
    amount: number
    currency?: string
    status?: $Enums.PaymentStatus
    paymentMethod: string
    transactionId?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    requestId?: string | null
    property?: PropertyCreateNestedOneWithoutPaymentsInput
    request?: PropertyRequestCreateNestedOneWithoutPaymentsInput
  }

  export type PaymentUncheckedCreateWithoutUserInput = {
    id?: string
    amount: number
    currency?: string
    status?: $Enums.PaymentStatus
    paymentMethod: string
    transactionId?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    propertyId?: string | null
    requestId?: string | null
    propertyRequestId?: string | null
  }

  export type PaymentCreateOrConnectWithoutUserInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput>
  }

  export type PaymentCreateManyUserInputEnvelope = {
    data: PaymentCreateManyUserInput | PaymentCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AgencyMemberCreateWithoutUserInput = {
    id?: string
    role: $Enums.UserRole
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    joinedAt?: Date | string
    updatedAt?: Date | string
    agency: AgencyCreateNestedOneWithoutTeamMembersInput
    performance?: AgentPerformanceCreateNestedOneWithoutAgentInput
  }

  export type AgencyMemberUncheckedCreateWithoutUserInput = {
    id?: string
    agencyId: string
    role: $Enums.UserRole
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    joinedAt?: Date | string
    updatedAt?: Date | string
    performance?: AgentPerformanceUncheckedCreateNestedOneWithoutAgentInput
  }

  export type AgencyMemberCreateOrConnectWithoutUserInput = {
    where: AgencyMemberWhereUniqueInput
    create: XOR<AgencyMemberCreateWithoutUserInput, AgencyMemberUncheckedCreateWithoutUserInput>
  }

  export type AgencyMemberCreateManyUserInputEnvelope = {
    data: AgencyMemberCreateManyUserInput | AgencyMemberCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SavedSearchCreateWithoutUserInput = {
    id?: string
    name: string
    description?: string | null
    propertyTypes?: SavedSearchCreatepropertyTypesInput | $Enums.PropertyType[]
    transactionTypes?: SavedSearchCreatetransactionTypesInput | $Enums.TransactionType[]
    minPrice?: number | null
    maxPrice?: number | null
    minArea?: number | null
    maxArea?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    cities?: SavedSearchCreatecitiesInput | string[]
    neighborhoods?: SavedSearchCreateneighborhoodsInput | string[]
    isActive?: boolean
    notifyOnMatch?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SavedSearchUncheckedCreateWithoutUserInput = {
    id?: string
    name: string
    description?: string | null
    propertyTypes?: SavedSearchCreatepropertyTypesInput | $Enums.PropertyType[]
    transactionTypes?: SavedSearchCreatetransactionTypesInput | $Enums.TransactionType[]
    minPrice?: number | null
    maxPrice?: number | null
    minArea?: number | null
    maxArea?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    cities?: SavedSearchCreatecitiesInput | string[]
    neighborhoods?: SavedSearchCreateneighborhoodsInput | string[]
    isActive?: boolean
    notifyOnMatch?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SavedSearchCreateOrConnectWithoutUserInput = {
    where: SavedSearchWhereUniqueInput
    create: XOR<SavedSearchCreateWithoutUserInput, SavedSearchUncheckedCreateWithoutUserInput>
  }

  export type SavedSearchCreateManyUserInputEnvelope = {
    data: SavedSearchCreateManyUserInput | SavedSearchCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type PropertyViewUpsertWithWhereUniqueWithoutUserInput = {
    where: PropertyViewWhereUniqueInput
    update: XOR<PropertyViewUpdateWithoutUserInput, PropertyViewUncheckedUpdateWithoutUserInput>
    create: XOR<PropertyViewCreateWithoutUserInput, PropertyViewUncheckedCreateWithoutUserInput>
  }

  export type PropertyViewUpdateWithWhereUniqueWithoutUserInput = {
    where: PropertyViewWhereUniqueInput
    data: XOR<PropertyViewUpdateWithoutUserInput, PropertyViewUncheckedUpdateWithoutUserInput>
  }

  export type PropertyViewUpdateManyWithWhereWithoutUserInput = {
    where: PropertyViewScalarWhereInput
    data: XOR<PropertyViewUpdateManyMutationInput, PropertyViewUncheckedUpdateManyWithoutUserInput>
  }

  export type PropertyViewScalarWhereInput = {
    AND?: PropertyViewScalarWhereInput | PropertyViewScalarWhereInput[]
    OR?: PropertyViewScalarWhereInput[]
    NOT?: PropertyViewScalarWhereInput | PropertyViewScalarWhereInput[]
    id?: StringFilter<"PropertyView"> | string
    viewedAt?: DateTimeFilter<"PropertyView"> | Date | string
    viewDuration?: IntNullableFilter<"PropertyView"> | number | null
    ipAddress?: StringNullableFilter<"PropertyView"> | string | null
    userAgent?: StringNullableFilter<"PropertyView"> | string | null
    userId?: StringFilter<"PropertyView"> | string
    propertyId?: StringFilter<"PropertyView"> | string
  }

  export type FavoriteUpsertWithWhereUniqueWithoutUserInput = {
    where: FavoriteWhereUniqueInput
    update: XOR<FavoriteUpdateWithoutUserInput, FavoriteUncheckedUpdateWithoutUserInput>
    create: XOR<FavoriteCreateWithoutUserInput, FavoriteUncheckedCreateWithoutUserInput>
  }

  export type FavoriteUpdateWithWhereUniqueWithoutUserInput = {
    where: FavoriteWhereUniqueInput
    data: XOR<FavoriteUpdateWithoutUserInput, FavoriteUncheckedUpdateWithoutUserInput>
  }

  export type FavoriteUpdateManyWithWhereWithoutUserInput = {
    where: FavoriteScalarWhereInput
    data: XOR<FavoriteUpdateManyMutationInput, FavoriteUncheckedUpdateManyWithoutUserInput>
  }

  export type FavoriteScalarWhereInput = {
    AND?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
    OR?: FavoriteScalarWhereInput[]
    NOT?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
    id?: StringFilter<"Favorite"> | string
    notes?: StringNullableFilter<"Favorite"> | string | null
    priority?: IntNullableFilter<"Favorite"> | number | null
    createdAt?: DateTimeFilter<"Favorite"> | Date | string
    userId?: StringFilter<"Favorite"> | string
    propertyId?: StringFilter<"Favorite"> | string
    listId?: StringNullableFilter<"Favorite"> | string | null
    favoriteListId?: StringNullableFilter<"Favorite"> | string | null
  }

  export type FavoriteListUpsertWithWhereUniqueWithoutUserInput = {
    where: FavoriteListWhereUniqueInput
    update: XOR<FavoriteListUpdateWithoutUserInput, FavoriteListUncheckedUpdateWithoutUserInput>
    create: XOR<FavoriteListCreateWithoutUserInput, FavoriteListUncheckedCreateWithoutUserInput>
  }

  export type FavoriteListUpdateWithWhereUniqueWithoutUserInput = {
    where: FavoriteListWhereUniqueInput
    data: XOR<FavoriteListUpdateWithoutUserInput, FavoriteListUncheckedUpdateWithoutUserInput>
  }

  export type FavoriteListUpdateManyWithWhereWithoutUserInput = {
    where: FavoriteListScalarWhereInput
    data: XOR<FavoriteListUpdateManyMutationInput, FavoriteListUncheckedUpdateManyWithoutUserInput>
  }

  export type FavoriteListScalarWhereInput = {
    AND?: FavoriteListScalarWhereInput | FavoriteListScalarWhereInput[]
    OR?: FavoriteListScalarWhereInput[]
    NOT?: FavoriteListScalarWhereInput | FavoriteListScalarWhereInput[]
    id?: StringFilter<"FavoriteList"> | string
    name?: StringFilter<"FavoriteList"> | string
    description?: StringNullableFilter<"FavoriteList"> | string | null
    isPublic?: BoolFilter<"FavoriteList"> | boolean
    isDefault?: BoolFilter<"FavoriteList"> | boolean
    createdAt?: DateTimeFilter<"FavoriteList"> | Date | string
    updatedAt?: DateTimeFilter<"FavoriteList"> | Date | string
    userId?: StringFilter<"FavoriteList"> | string
  }

  export type PropertyRequestUpsertWithWhereUniqueWithoutBuyerInput = {
    where: PropertyRequestWhereUniqueInput
    update: XOR<PropertyRequestUpdateWithoutBuyerInput, PropertyRequestUncheckedUpdateWithoutBuyerInput>
    create: XOR<PropertyRequestCreateWithoutBuyerInput, PropertyRequestUncheckedCreateWithoutBuyerInput>
  }

  export type PropertyRequestUpdateWithWhereUniqueWithoutBuyerInput = {
    where: PropertyRequestWhereUniqueInput
    data: XOR<PropertyRequestUpdateWithoutBuyerInput, PropertyRequestUncheckedUpdateWithoutBuyerInput>
  }

  export type PropertyRequestUpdateManyWithWhereWithoutBuyerInput = {
    where: PropertyRequestScalarWhereInput
    data: XOR<PropertyRequestUpdateManyMutationInput, PropertyRequestUncheckedUpdateManyWithoutBuyerInput>
  }

  export type PropertyRequestScalarWhereInput = {
    AND?: PropertyRequestScalarWhereInput | PropertyRequestScalarWhereInput[]
    OR?: PropertyRequestScalarWhereInput[]
    NOT?: PropertyRequestScalarWhereInput | PropertyRequestScalarWhereInput[]
    id?: StringFilter<"PropertyRequest"> | string
    type?: EnumRequestTypeFilter<"PropertyRequest"> | $Enums.RequestType
    message?: StringFilter<"PropertyRequest"> | string
    status?: EnumRequestStatusFilter<"PropertyRequest"> | $Enums.RequestStatus
    preferredDate?: DateTimeNullableFilter<"PropertyRequest"> | Date | string | null
    preferredTime?: StringNullableFilter<"PropertyRequest"> | string | null
    budget?: FloatNullableFilter<"PropertyRequest"> | number | null
    timeline?: StringNullableFilter<"PropertyRequest"> | string | null
    sellerResponse?: StringNullableFilter<"PropertyRequest"> | string | null
    responseDate?: DateTimeNullableFilter<"PropertyRequest"> | Date | string | null
    createdAt?: DateTimeFilter<"PropertyRequest"> | Date | string
    updatedAt?: DateTimeFilter<"PropertyRequest"> | Date | string
    buyerId?: StringFilter<"PropertyRequest"> | string
    propertyId?: StringFilter<"PropertyRequest"> | string
    userId?: StringFilter<"PropertyRequest"> | string
  }

  export type PropertyInquiryUpsertWithWhereUniqueWithoutUserInput = {
    where: PropertyInquiryWhereUniqueInput
    update: XOR<PropertyInquiryUpdateWithoutUserInput, PropertyInquiryUncheckedUpdateWithoutUserInput>
    create: XOR<PropertyInquiryCreateWithoutUserInput, PropertyInquiryUncheckedCreateWithoutUserInput>
  }

  export type PropertyInquiryUpdateWithWhereUniqueWithoutUserInput = {
    where: PropertyInquiryWhereUniqueInput
    data: XOR<PropertyInquiryUpdateWithoutUserInput, PropertyInquiryUncheckedUpdateWithoutUserInput>
  }

  export type PropertyInquiryUpdateManyWithWhereWithoutUserInput = {
    where: PropertyInquiryScalarWhereInput
    data: XOR<PropertyInquiryUpdateManyMutationInput, PropertyInquiryUncheckedUpdateManyWithoutUserInput>
  }

  export type PropertyInquiryScalarWhereInput = {
    AND?: PropertyInquiryScalarWhereInput | PropertyInquiryScalarWhereInput[]
    OR?: PropertyInquiryScalarWhereInput[]
    NOT?: PropertyInquiryScalarWhereInput | PropertyInquiryScalarWhereInput[]
    id?: StringFilter<"PropertyInquiry"> | string
    subject?: StringFilter<"PropertyInquiry"> | string
    message?: StringFilter<"PropertyInquiry"> | string
    status?: StringFilter<"PropertyInquiry"> | string
    createdAt?: DateTimeFilter<"PropertyInquiry"> | Date | string
    updatedAt?: DateTimeFilter<"PropertyInquiry"> | Date | string
    userId?: StringFilter<"PropertyInquiry"> | string
    propertyId?: StringFilter<"PropertyInquiry"> | string
  }

  export type PropertyComparisonUpsertWithWhereUniqueWithoutUserInput = {
    where: PropertyComparisonWhereUniqueInput
    update: XOR<PropertyComparisonUpdateWithoutUserInput, PropertyComparisonUncheckedUpdateWithoutUserInput>
    create: XOR<PropertyComparisonCreateWithoutUserInput, PropertyComparisonUncheckedCreateWithoutUserInput>
  }

  export type PropertyComparisonUpdateWithWhereUniqueWithoutUserInput = {
    where: PropertyComparisonWhereUniqueInput
    data: XOR<PropertyComparisonUpdateWithoutUserInput, PropertyComparisonUncheckedUpdateWithoutUserInput>
  }

  export type PropertyComparisonUpdateManyWithWhereWithoutUserInput = {
    where: PropertyComparisonScalarWhereInput
    data: XOR<PropertyComparisonUpdateManyMutationInput, PropertyComparisonUncheckedUpdateManyWithoutUserInput>
  }

  export type PropertyComparisonScalarWhereInput = {
    AND?: PropertyComparisonScalarWhereInput | PropertyComparisonScalarWhereInput[]
    OR?: PropertyComparisonScalarWhereInput[]
    NOT?: PropertyComparisonScalarWhereInput | PropertyComparisonScalarWhereInput[]
    id?: StringFilter<"PropertyComparison"> | string
    name?: StringFilter<"PropertyComparison"> | string
    notes?: StringNullableFilter<"PropertyComparison"> | string | null
    createdAt?: DateTimeFilter<"PropertyComparison"> | Date | string
    updatedAt?: DateTimeFilter<"PropertyComparison"> | Date | string
    userId?: StringFilter<"PropertyComparison"> | string
  }

  export type PropertyReviewUpsertWithWhereUniqueWithoutReviewerInput = {
    where: PropertyReviewWhereUniqueInput
    update: XOR<PropertyReviewUpdateWithoutReviewerInput, PropertyReviewUncheckedUpdateWithoutReviewerInput>
    create: XOR<PropertyReviewCreateWithoutReviewerInput, PropertyReviewUncheckedCreateWithoutReviewerInput>
  }

  export type PropertyReviewUpdateWithWhereUniqueWithoutReviewerInput = {
    where: PropertyReviewWhereUniqueInput
    data: XOR<PropertyReviewUpdateWithoutReviewerInput, PropertyReviewUncheckedUpdateWithoutReviewerInput>
  }

  export type PropertyReviewUpdateManyWithWhereWithoutReviewerInput = {
    where: PropertyReviewScalarWhereInput
    data: XOR<PropertyReviewUpdateManyMutationInput, PropertyReviewUncheckedUpdateManyWithoutReviewerInput>
  }

  export type PropertyReviewScalarWhereInput = {
    AND?: PropertyReviewScalarWhereInput | PropertyReviewScalarWhereInput[]
    OR?: PropertyReviewScalarWhereInput[]
    NOT?: PropertyReviewScalarWhereInput | PropertyReviewScalarWhereInput[]
    id?: StringFilter<"PropertyReview"> | string
    rating?: IntFilter<"PropertyReview"> | number
    title?: StringFilter<"PropertyReview"> | string
    comment?: StringFilter<"PropertyReview"> | string
    isVerified?: BoolFilter<"PropertyReview"> | boolean
    createdAt?: DateTimeFilter<"PropertyReview"> | Date | string
    updatedAt?: DateTimeFilter<"PropertyReview"> | Date | string
    reviewerId?: StringFilter<"PropertyReview"> | string
    propertyId?: StringFilter<"PropertyReview"> | string
    userId?: StringFilter<"PropertyReview"> | string
  }

  export type PropertyCommentUpsertWithWhereUniqueWithoutAuthorInput = {
    where: PropertyCommentWhereUniqueInput
    update: XOR<PropertyCommentUpdateWithoutAuthorInput, PropertyCommentUncheckedUpdateWithoutAuthorInput>
    create: XOR<PropertyCommentCreateWithoutAuthorInput, PropertyCommentUncheckedCreateWithoutAuthorInput>
  }

  export type PropertyCommentUpdateWithWhereUniqueWithoutAuthorInput = {
    where: PropertyCommentWhereUniqueInput
    data: XOR<PropertyCommentUpdateWithoutAuthorInput, PropertyCommentUncheckedUpdateWithoutAuthorInput>
  }

  export type PropertyCommentUpdateManyWithWhereWithoutAuthorInput = {
    where: PropertyCommentScalarWhereInput
    data: XOR<PropertyCommentUpdateManyMutationInput, PropertyCommentUncheckedUpdateManyWithoutAuthorInput>
  }

  export type PropertyCommentScalarWhereInput = {
    AND?: PropertyCommentScalarWhereInput | PropertyCommentScalarWhereInput[]
    OR?: PropertyCommentScalarWhereInput[]
    NOT?: PropertyCommentScalarWhereInput | PropertyCommentScalarWhereInput[]
    id?: StringFilter<"PropertyComment"> | string
    content?: StringFilter<"PropertyComment"> | string
    isPublic?: BoolFilter<"PropertyComment"> | boolean
    isModerated?: BoolFilter<"PropertyComment"> | boolean
    createdAt?: DateTimeFilter<"PropertyComment"> | Date | string
    updatedAt?: DateTimeFilter<"PropertyComment"> | Date | string
    authorId?: StringFilter<"PropertyComment"> | string
    propertyId?: StringFilter<"PropertyComment"> | string
    userId?: StringFilter<"PropertyComment"> | string
  }

  export type PropertyUpsertWithWhereUniqueWithoutOwnerInput = {
    where: PropertyWhereUniqueInput
    update: XOR<PropertyUpdateWithoutOwnerInput, PropertyUncheckedUpdateWithoutOwnerInput>
    create: XOR<PropertyCreateWithoutOwnerInput, PropertyUncheckedCreateWithoutOwnerInput>
  }

  export type PropertyUpdateWithWhereUniqueWithoutOwnerInput = {
    where: PropertyWhereUniqueInput
    data: XOR<PropertyUpdateWithoutOwnerInput, PropertyUncheckedUpdateWithoutOwnerInput>
  }

  export type PropertyUpdateManyWithWhereWithoutOwnerInput = {
    where: PropertyScalarWhereInput
    data: XOR<PropertyUpdateManyMutationInput, PropertyUncheckedUpdateManyWithoutOwnerInput>
  }

  export type PropertyScalarWhereInput = {
    AND?: PropertyScalarWhereInput | PropertyScalarWhereInput[]
    OR?: PropertyScalarWhereInput[]
    NOT?: PropertyScalarWhereInput | PropertyScalarWhereInput[]
    id?: StringFilter<"Property"> | string
    title?: StringFilter<"Property"> | string
    description?: StringFilter<"Property"> | string
    type?: EnumPropertyTypeFilter<"Property"> | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFilter<"Property"> | $Enums.TransactionType
    price?: FloatNullableFilter<"Property"> | number | null
    rentAmount?: FloatNullableFilter<"Property"> | number | null
    pricePerSqm?: FloatNullableFilter<"Property"> | number | null
    deposit?: FloatNullableFilter<"Property"> | number | null
    address?: StringFilter<"Property"> | string
    city?: StringFilter<"Property"> | string
    state?: StringFilter<"Property"> | string
    zipCode?: StringFilter<"Property"> | string
    country?: StringFilter<"Property"> | string
    latitude?: FloatNullableFilter<"Property"> | number | null
    longitude?: FloatNullableFilter<"Property"> | number | null
    neighborhood?: StringNullableFilter<"Property"> | string | null
    totalArea?: FloatFilter<"Property"> | number
    landArea?: FloatNullableFilter<"Property"> | number | null
    floorNumber?: IntNullableFilter<"Property"> | number | null
    totalFloors?: IntNullableFilter<"Property"> | number | null
    bedrooms?: IntNullableFilter<"Property"> | number | null
    bathrooms?: IntNullableFilter<"Property"> | number | null
    livingRooms?: IntNullableFilter<"Property"> | number | null
    kitchen?: StringNullableFilter<"Property"> | string | null
    yearBuilt?: IntNullableFilter<"Property"> | number | null
    condition?: EnumPropertyConditionFilter<"Property"> | $Enums.PropertyCondition
    furnished?: BoolNullableFilter<"Property"> | boolean | null
    amenities?: StringNullableListFilter<"Property">
    utilities?: StringNullableListFilter<"Property">
    parking?: BoolNullableFilter<"Property"> | boolean | null
    garden?: BoolNullableFilter<"Property"> | boolean | null
    balcony?: BoolNullableFilter<"Property"> | boolean | null
    elevator?: BoolNullableFilter<"Property"> | boolean | null
    pool?: BoolNullableFilter<"Property"> | boolean | null
    ac?: BoolNullableFilter<"Property"> | boolean | null
    petPolicy?: StringNullableFilter<"Property"> | string | null
    nearbyServices?: StringNullableListFilter<"Property">
    energyRating?: StringNullableFilter<"Property"> | string | null
    leaseType?: EnumLeaseTypeNullableFilter<"Property"> | $Enums.LeaseType | null
    minRentalPeriod?: StringNullableFilter<"Property"> | string | null
    availableDate?: DateTimeNullableFilter<"Property"> | Date | string | null
    status?: EnumPropertyStatusFilter<"Property"> | $Enums.PropertyStatus
    isVerified?: BoolFilter<"Property"> | boolean
    verifiedBy?: StringNullableFilter<"Property"> | string | null
    verifiedAt?: DateTimeNullableFilter<"Property"> | Date | string | null
    verificationNotes?: StringNullableFilter<"Property"> | string | null
    createdAt?: DateTimeFilter<"Property"> | Date | string
    updatedAt?: DateTimeFilter<"Property"> | Date | string
    listedAt?: DateTimeNullableFilter<"Property"> | Date | string | null
    soldAt?: DateTimeNullableFilter<"Property"> | Date | string | null
    rentedAt?: DateTimeNullableFilter<"Property"> | Date | string | null
    ownerId?: StringFilter<"Property"> | string
    agentId?: StringNullableFilter<"Property"> | string | null
    agencyId?: StringNullableFilter<"Property"> | string | null
  }

  export type PropertyUpsertWithWhereUniqueWithoutAgentInput = {
    where: PropertyWhereUniqueInput
    update: XOR<PropertyUpdateWithoutAgentInput, PropertyUncheckedUpdateWithoutAgentInput>
    create: XOR<PropertyCreateWithoutAgentInput, PropertyUncheckedCreateWithoutAgentInput>
  }

  export type PropertyUpdateWithWhereUniqueWithoutAgentInput = {
    where: PropertyWhereUniqueInput
    data: XOR<PropertyUpdateWithoutAgentInput, PropertyUncheckedUpdateWithoutAgentInput>
  }

  export type PropertyUpdateManyWithWhereWithoutAgentInput = {
    where: PropertyScalarWhereInput
    data: XOR<PropertyUpdateManyMutationInput, PropertyUncheckedUpdateManyWithoutAgentInput>
  }

  export type PropertyViewingUpsertWithWhereUniqueWithoutSellerInput = {
    where: PropertyViewingWhereUniqueInput
    update: XOR<PropertyViewingUpdateWithoutSellerInput, PropertyViewingUncheckedUpdateWithoutSellerInput>
    create: XOR<PropertyViewingCreateWithoutSellerInput, PropertyViewingUncheckedCreateWithoutSellerInput>
  }

  export type PropertyViewingUpdateWithWhereUniqueWithoutSellerInput = {
    where: PropertyViewingWhereUniqueInput
    data: XOR<PropertyViewingUpdateWithoutSellerInput, PropertyViewingUncheckedUpdateWithoutSellerInput>
  }

  export type PropertyViewingUpdateManyWithWhereWithoutSellerInput = {
    where: PropertyViewingScalarWhereInput
    data: XOR<PropertyViewingUpdateManyMutationInput, PropertyViewingUncheckedUpdateManyWithoutSellerInput>
  }

  export type PropertyViewingScalarWhereInput = {
    AND?: PropertyViewingScalarWhereInput | PropertyViewingScalarWhereInput[]
    OR?: PropertyViewingScalarWhereInput[]
    NOT?: PropertyViewingScalarWhereInput | PropertyViewingScalarWhereInput[]
    id?: StringFilter<"PropertyViewing"> | string
    scheduledAt?: DateTimeFilter<"PropertyViewing"> | Date | string
    duration?: IntFilter<"PropertyViewing"> | number
    status?: StringFilter<"PropertyViewing"> | string
    notes?: StringNullableFilter<"PropertyViewing"> | string | null
    buyerNotes?: StringNullableFilter<"PropertyViewing"> | string | null
    location?: StringNullableFilter<"PropertyViewing"> | string | null
    createdAt?: DateTimeFilter<"PropertyViewing"> | Date | string
    updatedAt?: DateTimeFilter<"PropertyViewing"> | Date | string
    propertyId?: StringFilter<"PropertyViewing"> | string
    sellerId?: StringFilter<"PropertyViewing"> | string
    buyerId?: StringNullableFilter<"PropertyViewing"> | string | null
    requestId?: StringNullableFilter<"PropertyViewing"> | string | null
    propertyRequestId?: StringNullableFilter<"PropertyViewing"> | string | null
  }

  export type PropertyViewingUpsertWithWhereUniqueWithoutBuyerInput = {
    where: PropertyViewingWhereUniqueInput
    update: XOR<PropertyViewingUpdateWithoutBuyerInput, PropertyViewingUncheckedUpdateWithoutBuyerInput>
    create: XOR<PropertyViewingCreateWithoutBuyerInput, PropertyViewingUncheckedCreateWithoutBuyerInput>
  }

  export type PropertyViewingUpdateWithWhereUniqueWithoutBuyerInput = {
    where: PropertyViewingWhereUniqueInput
    data: XOR<PropertyViewingUpdateWithoutBuyerInput, PropertyViewingUncheckedUpdateWithoutBuyerInput>
  }

  export type PropertyViewingUpdateManyWithWhereWithoutBuyerInput = {
    where: PropertyViewingScalarWhereInput
    data: XOR<PropertyViewingUpdateManyMutationInput, PropertyViewingUncheckedUpdateManyWithoutBuyerInput>
  }

  export type PropertyAnalyticsUpsertWithWhereUniqueWithoutUserInput = {
    where: PropertyAnalyticsWhereUniqueInput
    update: XOR<PropertyAnalyticsUpdateWithoutUserInput, PropertyAnalyticsUncheckedUpdateWithoutUserInput>
    create: XOR<PropertyAnalyticsCreateWithoutUserInput, PropertyAnalyticsUncheckedCreateWithoutUserInput>
  }

  export type PropertyAnalyticsUpdateWithWhereUniqueWithoutUserInput = {
    where: PropertyAnalyticsWhereUniqueInput
    data: XOR<PropertyAnalyticsUpdateWithoutUserInput, PropertyAnalyticsUncheckedUpdateWithoutUserInput>
  }

  export type PropertyAnalyticsUpdateManyWithWhereWithoutUserInput = {
    where: PropertyAnalyticsScalarWhereInput
    data: XOR<PropertyAnalyticsUpdateManyMutationInput, PropertyAnalyticsUncheckedUpdateManyWithoutUserInput>
  }

  export type PropertyAnalyticsScalarWhereInput = {
    AND?: PropertyAnalyticsScalarWhereInput | PropertyAnalyticsScalarWhereInput[]
    OR?: PropertyAnalyticsScalarWhereInput[]
    NOT?: PropertyAnalyticsScalarWhereInput | PropertyAnalyticsScalarWhereInput[]
    id?: StringFilter<"PropertyAnalytics"> | string
    totalViews?: IntFilter<"PropertyAnalytics"> | number
    uniqueViews?: IntFilter<"PropertyAnalytics"> | number
    totalFavorites?: IntFilter<"PropertyAnalytics"> | number
    totalRequests?: IntFilter<"PropertyAnalytics"> | number
    totalInquiries?: IntFilter<"PropertyAnalytics"> | number
    averageViewDuration?: FloatFilter<"PropertyAnalytics"> | number
    bounceRate?: FloatFilter<"PropertyAnalytics"> | number
    conversionRate?: FloatFilter<"PropertyAnalytics"> | number
    viewsThisWeek?: IntFilter<"PropertyAnalytics"> | number
    viewsThisMonth?: IntFilter<"PropertyAnalytics"> | number
    viewsThisYear?: IntFilter<"PropertyAnalytics"> | number
    lastCalculated?: DateTimeFilter<"PropertyAnalytics"> | Date | string
    createdAt?: DateTimeFilter<"PropertyAnalytics"> | Date | string
    updatedAt?: DateTimeFilter<"PropertyAnalytics"> | Date | string
    propertyId?: StringFilter<"PropertyAnalytics"> | string
    userId?: StringNullableFilter<"PropertyAnalytics"> | string | null
  }

  export type AgencyUpsertWithoutUserInput = {
    update: XOR<AgencyUpdateWithoutUserInput, AgencyUncheckedUpdateWithoutUserInput>
    create: XOR<AgencyCreateWithoutUserInput, AgencyUncheckedCreateWithoutUserInput>
    where?: AgencyWhereInput
  }

  export type AgencyUpdateToOneWithWhereWithoutUserInput = {
    where?: AgencyWhereInput
    data: XOR<AgencyUpdateWithoutUserInput, AgencyUncheckedUpdateWithoutUserInput>
  }

  export type AgencyUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    activityType?: EnumAgencyActivityTypeFieldUpdateOperationsInput | $Enums.AgencyActivityType
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    businessRegistrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    activityLicense?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    bankAccountInfo?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    suspensionReason?: NullableStringFieldUpdateOperationsInput | string | null
    suspendedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    suspendedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumAgencyVerificationStatusFieldUpdateOperationsInput | $Enums.AgencyVerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationDocuments?: AgencyVerificationDocumentUpdateManyWithoutAgencyNestedInput
    teamMembers?: AgencyMemberUpdateManyWithoutAgencyNestedInput
    teamRoles?: AgencyRoleUpdateManyWithoutAgencyNestedInput
    properties?: PropertyUpdateManyWithoutAgencyNestedInput
    performance?: AgencyPerformanceUpdateOneWithoutAgencyNestedInput
    inquiries?: AgencyInquiryUpdateManyWithoutAgencyNestedInput
    adminActions?: AdminActionUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    activityType?: EnumAgencyActivityTypeFieldUpdateOperationsInput | $Enums.AgencyActivityType
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    businessRegistrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    activityLicense?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    bankAccountInfo?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    suspensionReason?: NullableStringFieldUpdateOperationsInput | string | null
    suspendedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    suspendedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumAgencyVerificationStatusFieldUpdateOperationsInput | $Enums.AgencyVerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationDocuments?: AgencyVerificationDocumentUncheckedUpdateManyWithoutAgencyNestedInput
    teamMembers?: AgencyMemberUncheckedUpdateManyWithoutAgencyNestedInput
    teamRoles?: AgencyRoleUncheckedUpdateManyWithoutAgencyNestedInput
    properties?: PropertyUncheckedUpdateManyWithoutAgencyNestedInput
    performance?: AgencyPerformanceUncheckedUpdateOneWithoutAgencyNestedInput
    inquiries?: AgencyInquiryUncheckedUpdateManyWithoutAgencyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyRoleUpsertWithWhereUniqueWithoutUserInput = {
    where: AgencyRoleWhereUniqueInput
    update: XOR<AgencyRoleUpdateWithoutUserInput, AgencyRoleUncheckedUpdateWithoutUserInput>
    create: XOR<AgencyRoleCreateWithoutUserInput, AgencyRoleUncheckedCreateWithoutUserInput>
  }

  export type AgencyRoleUpdateWithWhereUniqueWithoutUserInput = {
    where: AgencyRoleWhereUniqueInput
    data: XOR<AgencyRoleUpdateWithoutUserInput, AgencyRoleUncheckedUpdateWithoutUserInput>
  }

  export type AgencyRoleUpdateManyWithWhereWithoutUserInput = {
    where: AgencyRoleScalarWhereInput
    data: XOR<AgencyRoleUpdateManyMutationInput, AgencyRoleUncheckedUpdateManyWithoutUserInput>
  }

  export type AgencyRoleScalarWhereInput = {
    AND?: AgencyRoleScalarWhereInput | AgencyRoleScalarWhereInput[]
    OR?: AgencyRoleScalarWhereInput[]
    NOT?: AgencyRoleScalarWhereInput | AgencyRoleScalarWhereInput[]
    id?: StringFilter<"AgencyRole"> | string
    userId?: StringFilter<"AgencyRole"> | string
    agencyId?: StringFilter<"AgencyRole"> | string
    role?: EnumUserRoleFilter<"AgencyRole"> | $Enums.UserRole
    title?: StringNullableFilter<"AgencyRole"> | string | null
    description?: StringNullableFilter<"AgencyRole"> | string | null
    canManageProperties?: BoolFilter<"AgencyRole"> | boolean
    canManageTeam?: BoolFilter<"AgencyRole"> | boolean
    canViewAllData?: BoolFilter<"AgencyRole"> | boolean
    canContactClients?: BoolFilter<"AgencyRole"> | boolean
    canScheduleViewings?: BoolFilter<"AgencyRole"> | boolean
    canSetPrices?: BoolFilter<"AgencyRole"> | boolean
    canUploadDocuments?: BoolFilter<"AgencyRole"> | boolean
    assignedAt?: DateTimeFilter<"AgencyRole"> | Date | string
    updatedAt?: DateTimeFilter<"AgencyRole"> | Date | string
  }

  export type AdminActionUpsertWithWhereUniqueWithoutAdminInput = {
    where: AdminActionWhereUniqueInput
    update: XOR<AdminActionUpdateWithoutAdminInput, AdminActionUncheckedUpdateWithoutAdminInput>
    create: XOR<AdminActionCreateWithoutAdminInput, AdminActionUncheckedCreateWithoutAdminInput>
  }

  export type AdminActionUpdateWithWhereUniqueWithoutAdminInput = {
    where: AdminActionWhereUniqueInput
    data: XOR<AdminActionUpdateWithoutAdminInput, AdminActionUncheckedUpdateWithoutAdminInput>
  }

  export type AdminActionUpdateManyWithWhereWithoutAdminInput = {
    where: AdminActionScalarWhereInput
    data: XOR<AdminActionUpdateManyMutationInput, AdminActionUncheckedUpdateManyWithoutAdminInput>
  }

  export type AdminActionScalarWhereInput = {
    AND?: AdminActionScalarWhereInput | AdminActionScalarWhereInput[]
    OR?: AdminActionScalarWhereInput[]
    NOT?: AdminActionScalarWhereInput | AdminActionScalarWhereInput[]
    id?: StringFilter<"AdminAction"> | string
    action?: StringFilter<"AdminAction"> | string
    details?: StringNullableFilter<"AdminAction"> | string | null
    metadata?: JsonNullableFilter<"AdminAction">
    createdAt?: DateTimeFilter<"AdminAction"> | Date | string
    adminId?: StringFilter<"AdminAction"> | string
    propertyId?: StringNullableFilter<"AdminAction"> | string | null
    userId?: StringNullableFilter<"AdminAction"> | string | null
    agencyId?: StringNullableFilter<"AdminAction"> | string | null
  }

  export type AdminActionUpsertWithWhereUniqueWithoutUserInput = {
    where: AdminActionWhereUniqueInput
    update: XOR<AdminActionUpdateWithoutUserInput, AdminActionUncheckedUpdateWithoutUserInput>
    create: XOR<AdminActionCreateWithoutUserInput, AdminActionUncheckedCreateWithoutUserInput>
  }

  export type AdminActionUpdateWithWhereUniqueWithoutUserInput = {
    where: AdminActionWhereUniqueInput
    data: XOR<AdminActionUpdateWithoutUserInput, AdminActionUncheckedUpdateWithoutUserInput>
  }

  export type AdminActionUpdateManyWithWhereWithoutUserInput = {
    where: AdminActionScalarWhereInput
    data: XOR<AdminActionUpdateManyMutationInput, AdminActionUncheckedUpdateManyWithoutUserInput>
  }

  export type NotificationUpsertWithWhereUniqueWithoutUserInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutUserInput, NotificationUncheckedUpdateWithoutUserInput>
    create: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutUserInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutUserInput, NotificationUncheckedUpdateWithoutUserInput>
  }

  export type NotificationUpdateManyWithWhereWithoutUserInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutUserInput>
  }

  export type NotificationScalarWhereInput = {
    AND?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    OR?: NotificationScalarWhereInput[]
    NOT?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    id?: StringFilter<"Notification"> | string
    type?: EnumNotificationTypeFilter<"Notification"> | $Enums.NotificationType
    title?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    isRead?: BoolFilter<"Notification"> | boolean
    readAt?: DateTimeNullableFilter<"Notification"> | Date | string | null
    data?: JsonNullableFilter<"Notification">
    link?: StringNullableFilter<"Notification"> | string | null
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    userId?: StringFilter<"Notification"> | string
  }

  export type PaymentUpsertWithWhereUniqueWithoutUserInput = {
    where: PaymentWhereUniqueInput
    update: XOR<PaymentUpdateWithoutUserInput, PaymentUncheckedUpdateWithoutUserInput>
    create: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput>
  }

  export type PaymentUpdateWithWhereUniqueWithoutUserInput = {
    where: PaymentWhereUniqueInput
    data: XOR<PaymentUpdateWithoutUserInput, PaymentUncheckedUpdateWithoutUserInput>
  }

  export type PaymentUpdateManyWithWhereWithoutUserInput = {
    where: PaymentScalarWhereInput
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyWithoutUserInput>
  }

  export type PaymentScalarWhereInput = {
    AND?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
    OR?: PaymentScalarWhereInput[]
    NOT?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
    id?: StringFilter<"Payment"> | string
    amount?: FloatFilter<"Payment"> | number
    currency?: StringFilter<"Payment"> | string
    status?: EnumPaymentStatusFilter<"Payment"> | $Enums.PaymentStatus
    paymentMethod?: StringFilter<"Payment"> | string
    transactionId?: StringNullableFilter<"Payment"> | string | null
    description?: StringNullableFilter<"Payment"> | string | null
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
    userId?: StringFilter<"Payment"> | string
    propertyId?: StringNullableFilter<"Payment"> | string | null
    requestId?: StringNullableFilter<"Payment"> | string | null
    propertyRequestId?: StringNullableFilter<"Payment"> | string | null
  }

  export type AgencyMemberUpsertWithWhereUniqueWithoutUserInput = {
    where: AgencyMemberWhereUniqueInput
    update: XOR<AgencyMemberUpdateWithoutUserInput, AgencyMemberUncheckedUpdateWithoutUserInput>
    create: XOR<AgencyMemberCreateWithoutUserInput, AgencyMemberUncheckedCreateWithoutUserInput>
  }

  export type AgencyMemberUpdateWithWhereUniqueWithoutUserInput = {
    where: AgencyMemberWhereUniqueInput
    data: XOR<AgencyMemberUpdateWithoutUserInput, AgencyMemberUncheckedUpdateWithoutUserInput>
  }

  export type AgencyMemberUpdateManyWithWhereWithoutUserInput = {
    where: AgencyMemberScalarWhereInput
    data: XOR<AgencyMemberUpdateManyMutationInput, AgencyMemberUncheckedUpdateManyWithoutUserInput>
  }

  export type AgencyMemberScalarWhereInput = {
    AND?: AgencyMemberScalarWhereInput | AgencyMemberScalarWhereInput[]
    OR?: AgencyMemberScalarWhereInput[]
    NOT?: AgencyMemberScalarWhereInput | AgencyMemberScalarWhereInput[]
    id?: StringFilter<"AgencyMember"> | string
    userId?: StringFilter<"AgencyMember"> | string
    agencyId?: StringFilter<"AgencyMember"> | string
    role?: EnumUserRoleFilter<"AgencyMember"> | $Enums.UserRole
    canManageProperties?: BoolFilter<"AgencyMember"> | boolean
    canManageTeam?: BoolFilter<"AgencyMember"> | boolean
    canViewAllData?: BoolFilter<"AgencyMember"> | boolean
    canContactClients?: BoolFilter<"AgencyMember"> | boolean
    canScheduleViewings?: BoolFilter<"AgencyMember"> | boolean
    canSetPrices?: BoolFilter<"AgencyMember"> | boolean
    canUploadDocuments?: BoolFilter<"AgencyMember"> | boolean
    joinedAt?: DateTimeFilter<"AgencyMember"> | Date | string
    updatedAt?: DateTimeFilter<"AgencyMember"> | Date | string
  }

  export type SavedSearchUpsertWithWhereUniqueWithoutUserInput = {
    where: SavedSearchWhereUniqueInput
    update: XOR<SavedSearchUpdateWithoutUserInput, SavedSearchUncheckedUpdateWithoutUserInput>
    create: XOR<SavedSearchCreateWithoutUserInput, SavedSearchUncheckedCreateWithoutUserInput>
  }

  export type SavedSearchUpdateWithWhereUniqueWithoutUserInput = {
    where: SavedSearchWhereUniqueInput
    data: XOR<SavedSearchUpdateWithoutUserInput, SavedSearchUncheckedUpdateWithoutUserInput>
  }

  export type SavedSearchUpdateManyWithWhereWithoutUserInput = {
    where: SavedSearchScalarWhereInput
    data: XOR<SavedSearchUpdateManyMutationInput, SavedSearchUncheckedUpdateManyWithoutUserInput>
  }

  export type SavedSearchScalarWhereInput = {
    AND?: SavedSearchScalarWhereInput | SavedSearchScalarWhereInput[]
    OR?: SavedSearchScalarWhereInput[]
    NOT?: SavedSearchScalarWhereInput | SavedSearchScalarWhereInput[]
    id?: StringFilter<"SavedSearch"> | string
    name?: StringFilter<"SavedSearch"> | string
    description?: StringNullableFilter<"SavedSearch"> | string | null
    propertyTypes?: EnumPropertyTypeNullableListFilter<"SavedSearch">
    transactionTypes?: EnumTransactionTypeNullableListFilter<"SavedSearch">
    minPrice?: FloatNullableFilter<"SavedSearch"> | number | null
    maxPrice?: FloatNullableFilter<"SavedSearch"> | number | null
    minArea?: FloatNullableFilter<"SavedSearch"> | number | null
    maxArea?: FloatNullableFilter<"SavedSearch"> | number | null
    bedrooms?: IntNullableFilter<"SavedSearch"> | number | null
    bathrooms?: IntNullableFilter<"SavedSearch"> | number | null
    cities?: StringNullableListFilter<"SavedSearch">
    neighborhoods?: StringNullableListFilter<"SavedSearch">
    isActive?: BoolFilter<"SavedSearch"> | boolean
    notifyOnMatch?: BoolFilter<"SavedSearch"> | boolean
    createdAt?: DateTimeFilter<"SavedSearch"> | Date | string
    updatedAt?: DateTimeFilter<"SavedSearch"> | Date | string
    userId?: StringFilter<"SavedSearch"> | string
  }

  export type AgencyVerificationDocumentCreateWithoutAgencyInput = {
    id?: string
    documentType: string
    fileName: string
    fileUrl: string
    fileSize: number
    mimeType: string
    title: string
    description?: string | null
    isVerified?: boolean
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    uploadedAt?: Date | string
  }

  export type AgencyVerificationDocumentUncheckedCreateWithoutAgencyInput = {
    id?: string
    documentType: string
    fileName: string
    fileUrl: string
    fileSize: number
    mimeType: string
    title: string
    description?: string | null
    isVerified?: boolean
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    uploadedAt?: Date | string
  }

  export type AgencyVerificationDocumentCreateOrConnectWithoutAgencyInput = {
    where: AgencyVerificationDocumentWhereUniqueInput
    create: XOR<AgencyVerificationDocumentCreateWithoutAgencyInput, AgencyVerificationDocumentUncheckedCreateWithoutAgencyInput>
  }

  export type AgencyVerificationDocumentCreateManyAgencyInputEnvelope = {
    data: AgencyVerificationDocumentCreateManyAgencyInput | AgencyVerificationDocumentCreateManyAgencyInput[]
    skipDuplicates?: boolean
  }

  export type AgencyMemberCreateWithoutAgencyInput = {
    id?: string
    role: $Enums.UserRole
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    joinedAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutAgencyMemberInput
    performance?: AgentPerformanceCreateNestedOneWithoutAgentInput
  }

  export type AgencyMemberUncheckedCreateWithoutAgencyInput = {
    id?: string
    userId: string
    role: $Enums.UserRole
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    joinedAt?: Date | string
    updatedAt?: Date | string
    performance?: AgentPerformanceUncheckedCreateNestedOneWithoutAgentInput
  }

  export type AgencyMemberCreateOrConnectWithoutAgencyInput = {
    where: AgencyMemberWhereUniqueInput
    create: XOR<AgencyMemberCreateWithoutAgencyInput, AgencyMemberUncheckedCreateWithoutAgencyInput>
  }

  export type AgencyMemberCreateManyAgencyInputEnvelope = {
    data: AgencyMemberCreateManyAgencyInput | AgencyMemberCreateManyAgencyInput[]
    skipDuplicates?: boolean
  }

  export type AgencyRoleCreateWithoutAgencyInput = {
    id?: string
    role: $Enums.UserRole
    title?: string | null
    description?: string | null
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    assignedAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutAgencyRolesInput
  }

  export type AgencyRoleUncheckedCreateWithoutAgencyInput = {
    id?: string
    userId: string
    role: $Enums.UserRole
    title?: string | null
    description?: string | null
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    assignedAt?: Date | string
    updatedAt?: Date | string
  }

  export type AgencyRoleCreateOrConnectWithoutAgencyInput = {
    where: AgencyRoleWhereUniqueInput
    create: XOR<AgencyRoleCreateWithoutAgencyInput, AgencyRoleUncheckedCreateWithoutAgencyInput>
  }

  export type AgencyRoleCreateManyAgencyInputEnvelope = {
    data: AgencyRoleCreateManyAgencyInput | AgencyRoleCreateManyAgencyInput[]
    skipDuplicates?: boolean
  }

  export type PropertyCreateWithoutAgencyInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    owner: UserCreateNestedOneWithoutOwnedPropertiesInput
    agent?: UserCreateNestedOneWithoutManagedPropertiesInput
    photos?: PropertyPhotoCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourCreateNestedManyWithoutPropertyInput
    views?: PropertyViewCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionCreateNestedManyWithoutPropertyInput
    payments?: PaymentCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryCreateNestedManyWithoutPropertyInput
  }

  export type PropertyUncheckedCreateWithoutAgencyInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    ownerId: string
    agentId?: string | null
    photos?: PropertyPhotoUncheckedCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoUncheckedCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourUncheckedCreateNestedManyWithoutPropertyInput
    views?: PropertyViewUncheckedCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesUncheckedCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingUncheckedCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutPropertyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutPropertyInput
  }

  export type PropertyCreateOrConnectWithoutAgencyInput = {
    where: PropertyWhereUniqueInput
    create: XOR<PropertyCreateWithoutAgencyInput, PropertyUncheckedCreateWithoutAgencyInput>
  }

  export type PropertyCreateManyAgencyInputEnvelope = {
    data: PropertyCreateManyAgencyInput | PropertyCreateManyAgencyInput[]
    skipDuplicates?: boolean
  }

  export type AgencyPerformanceCreateWithoutAgencyInput = {
    id?: string
    totalSales?: number
    totalRentals?: number
    totalRevenue?: number
    topAgent?: string | null
    topAgentSales?: number
    topAgentRevenue?: number
    salesThisMonth?: number
    salesThisYear?: number
    revenueThisMonth?: number
    revenueThisYear?: number
    lastCalculated?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AgencyPerformanceUncheckedCreateWithoutAgencyInput = {
    id?: string
    totalSales?: number
    totalRentals?: number
    totalRevenue?: number
    topAgent?: string | null
    topAgentSales?: number
    topAgentRevenue?: number
    salesThisMonth?: number
    salesThisYear?: number
    revenueThisMonth?: number
    revenueThisYear?: number
    lastCalculated?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AgencyPerformanceCreateOrConnectWithoutAgencyInput = {
    where: AgencyPerformanceWhereUniqueInput
    create: XOR<AgencyPerformanceCreateWithoutAgencyInput, AgencyPerformanceUncheckedCreateWithoutAgencyInput>
  }

  export type AgencyInquiryCreateWithoutAgencyInput = {
    id?: string
    subject: string
    message: string
    whoSentIt: string
    whichProperty?: string | null
    status?: $Enums.InquiryStatus
    whenSent?: Date | string
    response?: string | null
    respondedAt?: Date | string | null
    respondedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    property?: PropertyCreateNestedOneWithoutAgencyInquiriesInput
  }

  export type AgencyInquiryUncheckedCreateWithoutAgencyInput = {
    id?: string
    subject: string
    message: string
    whoSentIt: string
    whichProperty?: string | null
    status?: $Enums.InquiryStatus
    whenSent?: Date | string
    response?: string | null
    respondedAt?: Date | string | null
    respondedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    propertyId?: string | null
  }

  export type AgencyInquiryCreateOrConnectWithoutAgencyInput = {
    where: AgencyInquiryWhereUniqueInput
    create: XOR<AgencyInquiryCreateWithoutAgencyInput, AgencyInquiryUncheckedCreateWithoutAgencyInput>
  }

  export type AgencyInquiryCreateManyAgencyInputEnvelope = {
    data: AgencyInquiryCreateManyAgencyInput | AgencyInquiryCreateManyAgencyInput[]
    skipDuplicates?: boolean
  }

  export type AdminActionCreateWithoutAgencyInput = {
    id?: string
    action: string
    details?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    admin: UserCreateNestedOneWithoutAdminActionsInput
    property?: PropertyCreateNestedOneWithoutAdminActionsInput
    user?: UserCreateNestedOneWithoutAdminActionTargetsInput
  }

  export type AdminActionUncheckedCreateWithoutAgencyInput = {
    id?: string
    action: string
    details?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    adminId: string
    propertyId?: string | null
    userId?: string | null
  }

  export type AdminActionCreateOrConnectWithoutAgencyInput = {
    where: AdminActionWhereUniqueInput
    create: XOR<AdminActionCreateWithoutAgencyInput, AdminActionUncheckedCreateWithoutAgencyInput>
  }

  export type AdminActionCreateManyAgencyInputEnvelope = {
    data: AdminActionCreateManyAgencyInput | AdminActionCreateManyAgencyInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutAgencyInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    viewedProperties?: PropertyViewCreateNestedManyWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListCreateNestedManyWithoutUserInput
    requests?: PropertyRequestCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsCreateNestedManyWithoutUserInput
    agencyRoles?: AgencyRoleCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAgencyInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    viewedProperties?: PropertyViewUncheckedCreateNestedManyWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListUncheckedCreateNestedManyWithoutUserInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonUncheckedCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyUncheckedCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyUncheckedCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingUncheckedCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingUncheckedCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutUserInput
    agencyRoles?: AgencyRoleUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberUncheckedCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAgencyInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAgencyInput, UserUncheckedCreateWithoutAgencyInput>
  }

  export type UserCreateManyAgencyInputEnvelope = {
    data: UserCreateManyAgencyInput | UserCreateManyAgencyInput[]
    skipDuplicates?: boolean
  }

  export type AgencyVerificationDocumentUpsertWithWhereUniqueWithoutAgencyInput = {
    where: AgencyVerificationDocumentWhereUniqueInput
    update: XOR<AgencyVerificationDocumentUpdateWithoutAgencyInput, AgencyVerificationDocumentUncheckedUpdateWithoutAgencyInput>
    create: XOR<AgencyVerificationDocumentCreateWithoutAgencyInput, AgencyVerificationDocumentUncheckedCreateWithoutAgencyInput>
  }

  export type AgencyVerificationDocumentUpdateWithWhereUniqueWithoutAgencyInput = {
    where: AgencyVerificationDocumentWhereUniqueInput
    data: XOR<AgencyVerificationDocumentUpdateWithoutAgencyInput, AgencyVerificationDocumentUncheckedUpdateWithoutAgencyInput>
  }

  export type AgencyVerificationDocumentUpdateManyWithWhereWithoutAgencyInput = {
    where: AgencyVerificationDocumentScalarWhereInput
    data: XOR<AgencyVerificationDocumentUpdateManyMutationInput, AgencyVerificationDocumentUncheckedUpdateManyWithoutAgencyInput>
  }

  export type AgencyVerificationDocumentScalarWhereInput = {
    AND?: AgencyVerificationDocumentScalarWhereInput | AgencyVerificationDocumentScalarWhereInput[]
    OR?: AgencyVerificationDocumentScalarWhereInput[]
    NOT?: AgencyVerificationDocumentScalarWhereInput | AgencyVerificationDocumentScalarWhereInput[]
    id?: StringFilter<"AgencyVerificationDocument"> | string
    documentType?: StringFilter<"AgencyVerificationDocument"> | string
    fileName?: StringFilter<"AgencyVerificationDocument"> | string
    fileUrl?: StringFilter<"AgencyVerificationDocument"> | string
    fileSize?: IntFilter<"AgencyVerificationDocument"> | number
    mimeType?: StringFilter<"AgencyVerificationDocument"> | string
    title?: StringFilter<"AgencyVerificationDocument"> | string
    description?: StringNullableFilter<"AgencyVerificationDocument"> | string | null
    isVerified?: BoolFilter<"AgencyVerificationDocument"> | boolean
    reviewedBy?: StringNullableFilter<"AgencyVerificationDocument"> | string | null
    reviewedAt?: DateTimeNullableFilter<"AgencyVerificationDocument"> | Date | string | null
    reviewNotes?: StringNullableFilter<"AgencyVerificationDocument"> | string | null
    uploadedAt?: DateTimeFilter<"AgencyVerificationDocument"> | Date | string
    agencyId?: StringFilter<"AgencyVerificationDocument"> | string
  }

  export type AgencyMemberUpsertWithWhereUniqueWithoutAgencyInput = {
    where: AgencyMemberWhereUniqueInput
    update: XOR<AgencyMemberUpdateWithoutAgencyInput, AgencyMemberUncheckedUpdateWithoutAgencyInput>
    create: XOR<AgencyMemberCreateWithoutAgencyInput, AgencyMemberUncheckedCreateWithoutAgencyInput>
  }

  export type AgencyMemberUpdateWithWhereUniqueWithoutAgencyInput = {
    where: AgencyMemberWhereUniqueInput
    data: XOR<AgencyMemberUpdateWithoutAgencyInput, AgencyMemberUncheckedUpdateWithoutAgencyInput>
  }

  export type AgencyMemberUpdateManyWithWhereWithoutAgencyInput = {
    where: AgencyMemberScalarWhereInput
    data: XOR<AgencyMemberUpdateManyMutationInput, AgencyMemberUncheckedUpdateManyWithoutAgencyInput>
  }

  export type AgencyRoleUpsertWithWhereUniqueWithoutAgencyInput = {
    where: AgencyRoleWhereUniqueInput
    update: XOR<AgencyRoleUpdateWithoutAgencyInput, AgencyRoleUncheckedUpdateWithoutAgencyInput>
    create: XOR<AgencyRoleCreateWithoutAgencyInput, AgencyRoleUncheckedCreateWithoutAgencyInput>
  }

  export type AgencyRoleUpdateWithWhereUniqueWithoutAgencyInput = {
    where: AgencyRoleWhereUniqueInput
    data: XOR<AgencyRoleUpdateWithoutAgencyInput, AgencyRoleUncheckedUpdateWithoutAgencyInput>
  }

  export type AgencyRoleUpdateManyWithWhereWithoutAgencyInput = {
    where: AgencyRoleScalarWhereInput
    data: XOR<AgencyRoleUpdateManyMutationInput, AgencyRoleUncheckedUpdateManyWithoutAgencyInput>
  }

  export type PropertyUpsertWithWhereUniqueWithoutAgencyInput = {
    where: PropertyWhereUniqueInput
    update: XOR<PropertyUpdateWithoutAgencyInput, PropertyUncheckedUpdateWithoutAgencyInput>
    create: XOR<PropertyCreateWithoutAgencyInput, PropertyUncheckedCreateWithoutAgencyInput>
  }

  export type PropertyUpdateWithWhereUniqueWithoutAgencyInput = {
    where: PropertyWhereUniqueInput
    data: XOR<PropertyUpdateWithoutAgencyInput, PropertyUncheckedUpdateWithoutAgencyInput>
  }

  export type PropertyUpdateManyWithWhereWithoutAgencyInput = {
    where: PropertyScalarWhereInput
    data: XOR<PropertyUpdateManyMutationInput, PropertyUncheckedUpdateManyWithoutAgencyInput>
  }

  export type AgencyPerformanceUpsertWithoutAgencyInput = {
    update: XOR<AgencyPerformanceUpdateWithoutAgencyInput, AgencyPerformanceUncheckedUpdateWithoutAgencyInput>
    create: XOR<AgencyPerformanceCreateWithoutAgencyInput, AgencyPerformanceUncheckedCreateWithoutAgencyInput>
    where?: AgencyPerformanceWhereInput
  }

  export type AgencyPerformanceUpdateToOneWithWhereWithoutAgencyInput = {
    where?: AgencyPerformanceWhereInput
    data: XOR<AgencyPerformanceUpdateWithoutAgencyInput, AgencyPerformanceUncheckedUpdateWithoutAgencyInput>
  }

  export type AgencyPerformanceUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalSales?: IntFieldUpdateOperationsInput | number
    totalRentals?: IntFieldUpdateOperationsInput | number
    totalRevenue?: FloatFieldUpdateOperationsInput | number
    topAgent?: NullableStringFieldUpdateOperationsInput | string | null
    topAgentSales?: IntFieldUpdateOperationsInput | number
    topAgentRevenue?: FloatFieldUpdateOperationsInput | number
    salesThisMonth?: IntFieldUpdateOperationsInput | number
    salesThisYear?: IntFieldUpdateOperationsInput | number
    revenueThisMonth?: FloatFieldUpdateOperationsInput | number
    revenueThisYear?: FloatFieldUpdateOperationsInput | number
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyPerformanceUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalSales?: IntFieldUpdateOperationsInput | number
    totalRentals?: IntFieldUpdateOperationsInput | number
    totalRevenue?: FloatFieldUpdateOperationsInput | number
    topAgent?: NullableStringFieldUpdateOperationsInput | string | null
    topAgentSales?: IntFieldUpdateOperationsInput | number
    topAgentRevenue?: FloatFieldUpdateOperationsInput | number
    salesThisMonth?: IntFieldUpdateOperationsInput | number
    salesThisYear?: IntFieldUpdateOperationsInput | number
    revenueThisMonth?: FloatFieldUpdateOperationsInput | number
    revenueThisYear?: FloatFieldUpdateOperationsInput | number
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyInquiryUpsertWithWhereUniqueWithoutAgencyInput = {
    where: AgencyInquiryWhereUniqueInput
    update: XOR<AgencyInquiryUpdateWithoutAgencyInput, AgencyInquiryUncheckedUpdateWithoutAgencyInput>
    create: XOR<AgencyInquiryCreateWithoutAgencyInput, AgencyInquiryUncheckedCreateWithoutAgencyInput>
  }

  export type AgencyInquiryUpdateWithWhereUniqueWithoutAgencyInput = {
    where: AgencyInquiryWhereUniqueInput
    data: XOR<AgencyInquiryUpdateWithoutAgencyInput, AgencyInquiryUncheckedUpdateWithoutAgencyInput>
  }

  export type AgencyInquiryUpdateManyWithWhereWithoutAgencyInput = {
    where: AgencyInquiryScalarWhereInput
    data: XOR<AgencyInquiryUpdateManyMutationInput, AgencyInquiryUncheckedUpdateManyWithoutAgencyInput>
  }

  export type AgencyInquiryScalarWhereInput = {
    AND?: AgencyInquiryScalarWhereInput | AgencyInquiryScalarWhereInput[]
    OR?: AgencyInquiryScalarWhereInput[]
    NOT?: AgencyInquiryScalarWhereInput | AgencyInquiryScalarWhereInput[]
    id?: StringFilter<"AgencyInquiry"> | string
    subject?: StringFilter<"AgencyInquiry"> | string
    message?: StringFilter<"AgencyInquiry"> | string
    whoSentIt?: StringFilter<"AgencyInquiry"> | string
    whichProperty?: StringNullableFilter<"AgencyInquiry"> | string | null
    status?: EnumInquiryStatusFilter<"AgencyInquiry"> | $Enums.InquiryStatus
    whenSent?: DateTimeFilter<"AgencyInquiry"> | Date | string
    response?: StringNullableFilter<"AgencyInquiry"> | string | null
    respondedAt?: DateTimeNullableFilter<"AgencyInquiry"> | Date | string | null
    respondedBy?: StringNullableFilter<"AgencyInquiry"> | string | null
    createdAt?: DateTimeFilter<"AgencyInquiry"> | Date | string
    updatedAt?: DateTimeFilter<"AgencyInquiry"> | Date | string
    agencyId?: StringFilter<"AgencyInquiry"> | string
    propertyId?: StringNullableFilter<"AgencyInquiry"> | string | null
  }

  export type AdminActionUpsertWithWhereUniqueWithoutAgencyInput = {
    where: AdminActionWhereUniqueInput
    update: XOR<AdminActionUpdateWithoutAgencyInput, AdminActionUncheckedUpdateWithoutAgencyInput>
    create: XOR<AdminActionCreateWithoutAgencyInput, AdminActionUncheckedCreateWithoutAgencyInput>
  }

  export type AdminActionUpdateWithWhereUniqueWithoutAgencyInput = {
    where: AdminActionWhereUniqueInput
    data: XOR<AdminActionUpdateWithoutAgencyInput, AdminActionUncheckedUpdateWithoutAgencyInput>
  }

  export type AdminActionUpdateManyWithWhereWithoutAgencyInput = {
    where: AdminActionScalarWhereInput
    data: XOR<AdminActionUpdateManyMutationInput, AdminActionUncheckedUpdateManyWithoutAgencyInput>
  }

  export type UserUpsertWithWhereUniqueWithoutAgencyInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutAgencyInput, UserUncheckedUpdateWithoutAgencyInput>
    create: XOR<UserCreateWithoutAgencyInput, UserUncheckedCreateWithoutAgencyInput>
  }

  export type UserUpdateWithWhereUniqueWithoutAgencyInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutAgencyInput, UserUncheckedUpdateWithoutAgencyInput>
  }

  export type UserUpdateManyWithWhereWithoutAgencyInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutAgencyInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    phone?: StringNullableFilter<"User"> | string | null
    avatar?: StringNullableFilter<"User"> | string | null
    roles?: EnumUserRoleNullableListFilter<"User">
    dateOfBirth?: DateTimeNullableFilter<"User"> | Date | string | null
    address?: StringNullableFilter<"User"> | string | null
    city?: StringNullableFilter<"User"> | string | null
    state?: StringNullableFilter<"User"> | string | null
    zipCode?: StringNullableFilter<"User"> | string | null
    country?: StringNullableFilter<"User"> | string | null
    isVerified?: BoolFilter<"User"> | boolean
    isActive?: BoolFilter<"User"> | boolean
    isBanned?: BoolFilter<"User"> | boolean
    banReason?: StringNullableFilter<"User"> | string | null
    bannedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    bannedBy?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    agencyId?: StringNullableFilter<"User"> | string | null
  }

  export type UserCreateWithoutAgencyMemberInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    viewedProperties?: PropertyViewCreateNestedManyWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListCreateNestedManyWithoutUserInput
    requests?: PropertyRequestCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsCreateNestedManyWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    agencyRoles?: AgencyRoleCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAgencyMemberInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    viewedProperties?: PropertyViewUncheckedCreateNestedManyWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListUncheckedCreateNestedManyWithoutUserInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonUncheckedCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyUncheckedCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyUncheckedCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingUncheckedCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingUncheckedCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutUserInput
    agencyRoles?: AgencyRoleUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAgencyMemberInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAgencyMemberInput, UserUncheckedCreateWithoutAgencyMemberInput>
  }

  export type AgencyCreateWithoutTeamMembersInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    activityType: $Enums.AgencyActivityType
    businessPhone: string
    businessEmail: string
    website?: string | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    businessRegistrationNumber?: string | null
    activityLicense?: string | null
    taxId?: string | null
    bankAccountInfo?: string | null
    isVerified?: boolean
    isActive?: boolean
    isSuspended?: boolean
    suspensionReason?: string | null
    suspendedAt?: Date | string | null
    suspendedBy?: string | null
    verificationStatus?: $Enums.AgencyVerificationStatus
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    verificationDocuments?: AgencyVerificationDocumentCreateNestedManyWithoutAgencyInput
    teamRoles?: AgencyRoleCreateNestedManyWithoutAgencyInput
    properties?: PropertyCreateNestedManyWithoutAgencyInput
    performance?: AgencyPerformanceCreateNestedOneWithoutAgencyInput
    inquiries?: AgencyInquiryCreateNestedManyWithoutAgencyInput
    adminActions?: AdminActionCreateNestedManyWithoutAgencyInput
    User?: UserCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutTeamMembersInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    activityType: $Enums.AgencyActivityType
    businessPhone: string
    businessEmail: string
    website?: string | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    businessRegistrationNumber?: string | null
    activityLicense?: string | null
    taxId?: string | null
    bankAccountInfo?: string | null
    isVerified?: boolean
    isActive?: boolean
    isSuspended?: boolean
    suspensionReason?: string | null
    suspendedAt?: Date | string | null
    suspendedBy?: string | null
    verificationStatus?: $Enums.AgencyVerificationStatus
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    verificationDocuments?: AgencyVerificationDocumentUncheckedCreateNestedManyWithoutAgencyInput
    teamRoles?: AgencyRoleUncheckedCreateNestedManyWithoutAgencyInput
    properties?: PropertyUncheckedCreateNestedManyWithoutAgencyInput
    performance?: AgencyPerformanceUncheckedCreateNestedOneWithoutAgencyInput
    inquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutAgencyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAgencyInput
    User?: UserUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutTeamMembersInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutTeamMembersInput, AgencyUncheckedCreateWithoutTeamMembersInput>
  }

  export type AgentPerformanceCreateWithoutAgentInput = {
    id?: string
    totalSales?: number
    totalRentals?: number
    totalRevenue?: number
    salesThisMonth?: number
    salesThisYear?: number
    revenueThisMonth?: number
    revenueThisYear?: number
    averageResponseTime?: number
    totalInquiries?: number
    convertedInquiries?: number
    lastCalculated?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AgentPerformanceUncheckedCreateWithoutAgentInput = {
    id?: string
    totalSales?: number
    totalRentals?: number
    totalRevenue?: number
    salesThisMonth?: number
    salesThisYear?: number
    revenueThisMonth?: number
    revenueThisYear?: number
    averageResponseTime?: number
    totalInquiries?: number
    convertedInquiries?: number
    lastCalculated?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AgentPerformanceCreateOrConnectWithoutAgentInput = {
    where: AgentPerformanceWhereUniqueInput
    create: XOR<AgentPerformanceCreateWithoutAgentInput, AgentPerformanceUncheckedCreateWithoutAgentInput>
  }

  export type UserUpsertWithoutAgencyMemberInput = {
    update: XOR<UserUpdateWithoutAgencyMemberInput, UserUncheckedUpdateWithoutAgencyMemberInput>
    create: XOR<UserCreateWithoutAgencyMemberInput, UserUncheckedCreateWithoutAgencyMemberInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAgencyMemberInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAgencyMemberInput, UserUncheckedUpdateWithoutAgencyMemberInput>
  }

  export type UserUpdateWithoutAgencyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewedProperties?: PropertyViewUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUpdateManyWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    agencyRoles?: AgencyRoleUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAgencyMemberInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    viewedProperties?: PropertyViewUncheckedUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUncheckedUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUncheckedUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUncheckedUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUncheckedUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUncheckedUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUncheckedUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUncheckedUpdateManyWithoutUserNestedInput
    agencyRoles?: AgencyRoleUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type AgencyUpsertWithoutTeamMembersInput = {
    update: XOR<AgencyUpdateWithoutTeamMembersInput, AgencyUncheckedUpdateWithoutTeamMembersInput>
    create: XOR<AgencyCreateWithoutTeamMembersInput, AgencyUncheckedCreateWithoutTeamMembersInput>
    where?: AgencyWhereInput
  }

  export type AgencyUpdateToOneWithWhereWithoutTeamMembersInput = {
    where?: AgencyWhereInput
    data: XOR<AgencyUpdateWithoutTeamMembersInput, AgencyUncheckedUpdateWithoutTeamMembersInput>
  }

  export type AgencyUpdateWithoutTeamMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    activityType?: EnumAgencyActivityTypeFieldUpdateOperationsInput | $Enums.AgencyActivityType
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    businessRegistrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    activityLicense?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    bankAccountInfo?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    suspensionReason?: NullableStringFieldUpdateOperationsInput | string | null
    suspendedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    suspendedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumAgencyVerificationStatusFieldUpdateOperationsInput | $Enums.AgencyVerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationDocuments?: AgencyVerificationDocumentUpdateManyWithoutAgencyNestedInput
    teamRoles?: AgencyRoleUpdateManyWithoutAgencyNestedInput
    properties?: PropertyUpdateManyWithoutAgencyNestedInput
    performance?: AgencyPerformanceUpdateOneWithoutAgencyNestedInput
    inquiries?: AgencyInquiryUpdateManyWithoutAgencyNestedInput
    adminActions?: AdminActionUpdateManyWithoutAgencyNestedInput
    User?: UserUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutTeamMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    activityType?: EnumAgencyActivityTypeFieldUpdateOperationsInput | $Enums.AgencyActivityType
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    businessRegistrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    activityLicense?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    bankAccountInfo?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    suspensionReason?: NullableStringFieldUpdateOperationsInput | string | null
    suspendedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    suspendedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumAgencyVerificationStatusFieldUpdateOperationsInput | $Enums.AgencyVerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationDocuments?: AgencyVerificationDocumentUncheckedUpdateManyWithoutAgencyNestedInput
    teamRoles?: AgencyRoleUncheckedUpdateManyWithoutAgencyNestedInput
    properties?: PropertyUncheckedUpdateManyWithoutAgencyNestedInput
    performance?: AgencyPerformanceUncheckedUpdateOneWithoutAgencyNestedInput
    inquiries?: AgencyInquiryUncheckedUpdateManyWithoutAgencyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAgencyNestedInput
    User?: UserUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type AgentPerformanceUpsertWithoutAgentInput = {
    update: XOR<AgentPerformanceUpdateWithoutAgentInput, AgentPerformanceUncheckedUpdateWithoutAgentInput>
    create: XOR<AgentPerformanceCreateWithoutAgentInput, AgentPerformanceUncheckedCreateWithoutAgentInput>
    where?: AgentPerformanceWhereInput
  }

  export type AgentPerformanceUpdateToOneWithWhereWithoutAgentInput = {
    where?: AgentPerformanceWhereInput
    data: XOR<AgentPerformanceUpdateWithoutAgentInput, AgentPerformanceUncheckedUpdateWithoutAgentInput>
  }

  export type AgentPerformanceUpdateWithoutAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalSales?: IntFieldUpdateOperationsInput | number
    totalRentals?: IntFieldUpdateOperationsInput | number
    totalRevenue?: FloatFieldUpdateOperationsInput | number
    salesThisMonth?: IntFieldUpdateOperationsInput | number
    salesThisYear?: IntFieldUpdateOperationsInput | number
    revenueThisMonth?: FloatFieldUpdateOperationsInput | number
    revenueThisYear?: FloatFieldUpdateOperationsInput | number
    averageResponseTime?: FloatFieldUpdateOperationsInput | number
    totalInquiries?: IntFieldUpdateOperationsInput | number
    convertedInquiries?: IntFieldUpdateOperationsInput | number
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgentPerformanceUncheckedUpdateWithoutAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalSales?: IntFieldUpdateOperationsInput | number
    totalRentals?: IntFieldUpdateOperationsInput | number
    totalRevenue?: FloatFieldUpdateOperationsInput | number
    salesThisMonth?: IntFieldUpdateOperationsInput | number
    salesThisYear?: IntFieldUpdateOperationsInput | number
    revenueThisMonth?: FloatFieldUpdateOperationsInput | number
    revenueThisYear?: FloatFieldUpdateOperationsInput | number
    averageResponseTime?: FloatFieldUpdateOperationsInput | number
    totalInquiries?: IntFieldUpdateOperationsInput | number
    convertedInquiries?: IntFieldUpdateOperationsInput | number
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateWithoutAgencyRolesInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    viewedProperties?: PropertyViewCreateNestedManyWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListCreateNestedManyWithoutUserInput
    requests?: PropertyRequestCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsCreateNestedManyWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAgencyRolesInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    viewedProperties?: PropertyViewUncheckedCreateNestedManyWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListUncheckedCreateNestedManyWithoutUserInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonUncheckedCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyUncheckedCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyUncheckedCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingUncheckedCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingUncheckedCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberUncheckedCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAgencyRolesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAgencyRolesInput, UserUncheckedCreateWithoutAgencyRolesInput>
  }

  export type AgencyCreateWithoutTeamRolesInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    activityType: $Enums.AgencyActivityType
    businessPhone: string
    businessEmail: string
    website?: string | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    businessRegistrationNumber?: string | null
    activityLicense?: string | null
    taxId?: string | null
    bankAccountInfo?: string | null
    isVerified?: boolean
    isActive?: boolean
    isSuspended?: boolean
    suspensionReason?: string | null
    suspendedAt?: Date | string | null
    suspendedBy?: string | null
    verificationStatus?: $Enums.AgencyVerificationStatus
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    verificationDocuments?: AgencyVerificationDocumentCreateNestedManyWithoutAgencyInput
    teamMembers?: AgencyMemberCreateNestedManyWithoutAgencyInput
    properties?: PropertyCreateNestedManyWithoutAgencyInput
    performance?: AgencyPerformanceCreateNestedOneWithoutAgencyInput
    inquiries?: AgencyInquiryCreateNestedManyWithoutAgencyInput
    adminActions?: AdminActionCreateNestedManyWithoutAgencyInput
    User?: UserCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutTeamRolesInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    activityType: $Enums.AgencyActivityType
    businessPhone: string
    businessEmail: string
    website?: string | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    businessRegistrationNumber?: string | null
    activityLicense?: string | null
    taxId?: string | null
    bankAccountInfo?: string | null
    isVerified?: boolean
    isActive?: boolean
    isSuspended?: boolean
    suspensionReason?: string | null
    suspendedAt?: Date | string | null
    suspendedBy?: string | null
    verificationStatus?: $Enums.AgencyVerificationStatus
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    verificationDocuments?: AgencyVerificationDocumentUncheckedCreateNestedManyWithoutAgencyInput
    teamMembers?: AgencyMemberUncheckedCreateNestedManyWithoutAgencyInput
    properties?: PropertyUncheckedCreateNestedManyWithoutAgencyInput
    performance?: AgencyPerformanceUncheckedCreateNestedOneWithoutAgencyInput
    inquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutAgencyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAgencyInput
    User?: UserUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutTeamRolesInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutTeamRolesInput, AgencyUncheckedCreateWithoutTeamRolesInput>
  }

  export type UserUpsertWithoutAgencyRolesInput = {
    update: XOR<UserUpdateWithoutAgencyRolesInput, UserUncheckedUpdateWithoutAgencyRolesInput>
    create: XOR<UserCreateWithoutAgencyRolesInput, UserUncheckedCreateWithoutAgencyRolesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAgencyRolesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAgencyRolesInput, UserUncheckedUpdateWithoutAgencyRolesInput>
  }

  export type UserUpdateWithoutAgencyRolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewedProperties?: PropertyViewUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUpdateManyWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAgencyRolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    viewedProperties?: PropertyViewUncheckedUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUncheckedUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUncheckedUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUncheckedUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUncheckedUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUncheckedUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUncheckedUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUncheckedUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type AgencyUpsertWithoutTeamRolesInput = {
    update: XOR<AgencyUpdateWithoutTeamRolesInput, AgencyUncheckedUpdateWithoutTeamRolesInput>
    create: XOR<AgencyCreateWithoutTeamRolesInput, AgencyUncheckedCreateWithoutTeamRolesInput>
    where?: AgencyWhereInput
  }

  export type AgencyUpdateToOneWithWhereWithoutTeamRolesInput = {
    where?: AgencyWhereInput
    data: XOR<AgencyUpdateWithoutTeamRolesInput, AgencyUncheckedUpdateWithoutTeamRolesInput>
  }

  export type AgencyUpdateWithoutTeamRolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    activityType?: EnumAgencyActivityTypeFieldUpdateOperationsInput | $Enums.AgencyActivityType
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    businessRegistrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    activityLicense?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    bankAccountInfo?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    suspensionReason?: NullableStringFieldUpdateOperationsInput | string | null
    suspendedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    suspendedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumAgencyVerificationStatusFieldUpdateOperationsInput | $Enums.AgencyVerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationDocuments?: AgencyVerificationDocumentUpdateManyWithoutAgencyNestedInput
    teamMembers?: AgencyMemberUpdateManyWithoutAgencyNestedInput
    properties?: PropertyUpdateManyWithoutAgencyNestedInput
    performance?: AgencyPerformanceUpdateOneWithoutAgencyNestedInput
    inquiries?: AgencyInquiryUpdateManyWithoutAgencyNestedInput
    adminActions?: AdminActionUpdateManyWithoutAgencyNestedInput
    User?: UserUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutTeamRolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    activityType?: EnumAgencyActivityTypeFieldUpdateOperationsInput | $Enums.AgencyActivityType
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    businessRegistrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    activityLicense?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    bankAccountInfo?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    suspensionReason?: NullableStringFieldUpdateOperationsInput | string | null
    suspendedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    suspendedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumAgencyVerificationStatusFieldUpdateOperationsInput | $Enums.AgencyVerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationDocuments?: AgencyVerificationDocumentUncheckedUpdateManyWithoutAgencyNestedInput
    teamMembers?: AgencyMemberUncheckedUpdateManyWithoutAgencyNestedInput
    properties?: PropertyUncheckedUpdateManyWithoutAgencyNestedInput
    performance?: AgencyPerformanceUncheckedUpdateOneWithoutAgencyNestedInput
    inquiries?: AgencyInquiryUncheckedUpdateManyWithoutAgencyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAgencyNestedInput
    User?: UserUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyCreateWithoutVerificationDocumentsInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    activityType: $Enums.AgencyActivityType
    businessPhone: string
    businessEmail: string
    website?: string | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    businessRegistrationNumber?: string | null
    activityLicense?: string | null
    taxId?: string | null
    bankAccountInfo?: string | null
    isVerified?: boolean
    isActive?: boolean
    isSuspended?: boolean
    suspensionReason?: string | null
    suspendedAt?: Date | string | null
    suspendedBy?: string | null
    verificationStatus?: $Enums.AgencyVerificationStatus
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    teamMembers?: AgencyMemberCreateNestedManyWithoutAgencyInput
    teamRoles?: AgencyRoleCreateNestedManyWithoutAgencyInput
    properties?: PropertyCreateNestedManyWithoutAgencyInput
    performance?: AgencyPerformanceCreateNestedOneWithoutAgencyInput
    inquiries?: AgencyInquiryCreateNestedManyWithoutAgencyInput
    adminActions?: AdminActionCreateNestedManyWithoutAgencyInput
    User?: UserCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutVerificationDocumentsInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    activityType: $Enums.AgencyActivityType
    businessPhone: string
    businessEmail: string
    website?: string | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    businessRegistrationNumber?: string | null
    activityLicense?: string | null
    taxId?: string | null
    bankAccountInfo?: string | null
    isVerified?: boolean
    isActive?: boolean
    isSuspended?: boolean
    suspensionReason?: string | null
    suspendedAt?: Date | string | null
    suspendedBy?: string | null
    verificationStatus?: $Enums.AgencyVerificationStatus
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    teamMembers?: AgencyMemberUncheckedCreateNestedManyWithoutAgencyInput
    teamRoles?: AgencyRoleUncheckedCreateNestedManyWithoutAgencyInput
    properties?: PropertyUncheckedCreateNestedManyWithoutAgencyInput
    performance?: AgencyPerformanceUncheckedCreateNestedOneWithoutAgencyInput
    inquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutAgencyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAgencyInput
    User?: UserUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutVerificationDocumentsInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutVerificationDocumentsInput, AgencyUncheckedCreateWithoutVerificationDocumentsInput>
  }

  export type AgencyUpsertWithoutVerificationDocumentsInput = {
    update: XOR<AgencyUpdateWithoutVerificationDocumentsInput, AgencyUncheckedUpdateWithoutVerificationDocumentsInput>
    create: XOR<AgencyCreateWithoutVerificationDocumentsInput, AgencyUncheckedCreateWithoutVerificationDocumentsInput>
    where?: AgencyWhereInput
  }

  export type AgencyUpdateToOneWithWhereWithoutVerificationDocumentsInput = {
    where?: AgencyWhereInput
    data: XOR<AgencyUpdateWithoutVerificationDocumentsInput, AgencyUncheckedUpdateWithoutVerificationDocumentsInput>
  }

  export type AgencyUpdateWithoutVerificationDocumentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    activityType?: EnumAgencyActivityTypeFieldUpdateOperationsInput | $Enums.AgencyActivityType
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    businessRegistrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    activityLicense?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    bankAccountInfo?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    suspensionReason?: NullableStringFieldUpdateOperationsInput | string | null
    suspendedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    suspendedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumAgencyVerificationStatusFieldUpdateOperationsInput | $Enums.AgencyVerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teamMembers?: AgencyMemberUpdateManyWithoutAgencyNestedInput
    teamRoles?: AgencyRoleUpdateManyWithoutAgencyNestedInput
    properties?: PropertyUpdateManyWithoutAgencyNestedInput
    performance?: AgencyPerformanceUpdateOneWithoutAgencyNestedInput
    inquiries?: AgencyInquiryUpdateManyWithoutAgencyNestedInput
    adminActions?: AdminActionUpdateManyWithoutAgencyNestedInput
    User?: UserUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutVerificationDocumentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    activityType?: EnumAgencyActivityTypeFieldUpdateOperationsInput | $Enums.AgencyActivityType
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    businessRegistrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    activityLicense?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    bankAccountInfo?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    suspensionReason?: NullableStringFieldUpdateOperationsInput | string | null
    suspendedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    suspendedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumAgencyVerificationStatusFieldUpdateOperationsInput | $Enums.AgencyVerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    teamMembers?: AgencyMemberUncheckedUpdateManyWithoutAgencyNestedInput
    teamRoles?: AgencyRoleUncheckedUpdateManyWithoutAgencyNestedInput
    properties?: PropertyUncheckedUpdateManyWithoutAgencyNestedInput
    performance?: AgencyPerformanceUncheckedUpdateOneWithoutAgencyNestedInput
    inquiries?: AgencyInquiryUncheckedUpdateManyWithoutAgencyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAgencyNestedInput
    User?: UserUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyCreateWithoutPerformanceInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    activityType: $Enums.AgencyActivityType
    businessPhone: string
    businessEmail: string
    website?: string | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    businessRegistrationNumber?: string | null
    activityLicense?: string | null
    taxId?: string | null
    bankAccountInfo?: string | null
    isVerified?: boolean
    isActive?: boolean
    isSuspended?: boolean
    suspensionReason?: string | null
    suspendedAt?: Date | string | null
    suspendedBy?: string | null
    verificationStatus?: $Enums.AgencyVerificationStatus
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    verificationDocuments?: AgencyVerificationDocumentCreateNestedManyWithoutAgencyInput
    teamMembers?: AgencyMemberCreateNestedManyWithoutAgencyInput
    teamRoles?: AgencyRoleCreateNestedManyWithoutAgencyInput
    properties?: PropertyCreateNestedManyWithoutAgencyInput
    inquiries?: AgencyInquiryCreateNestedManyWithoutAgencyInput
    adminActions?: AdminActionCreateNestedManyWithoutAgencyInput
    User?: UserCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutPerformanceInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    activityType: $Enums.AgencyActivityType
    businessPhone: string
    businessEmail: string
    website?: string | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    businessRegistrationNumber?: string | null
    activityLicense?: string | null
    taxId?: string | null
    bankAccountInfo?: string | null
    isVerified?: boolean
    isActive?: boolean
    isSuspended?: boolean
    suspensionReason?: string | null
    suspendedAt?: Date | string | null
    suspendedBy?: string | null
    verificationStatus?: $Enums.AgencyVerificationStatus
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    verificationDocuments?: AgencyVerificationDocumentUncheckedCreateNestedManyWithoutAgencyInput
    teamMembers?: AgencyMemberUncheckedCreateNestedManyWithoutAgencyInput
    teamRoles?: AgencyRoleUncheckedCreateNestedManyWithoutAgencyInput
    properties?: PropertyUncheckedCreateNestedManyWithoutAgencyInput
    inquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutAgencyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAgencyInput
    User?: UserUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutPerformanceInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutPerformanceInput, AgencyUncheckedCreateWithoutPerformanceInput>
  }

  export type AgencyUpsertWithoutPerformanceInput = {
    update: XOR<AgencyUpdateWithoutPerformanceInput, AgencyUncheckedUpdateWithoutPerformanceInput>
    create: XOR<AgencyCreateWithoutPerformanceInput, AgencyUncheckedCreateWithoutPerformanceInput>
    where?: AgencyWhereInput
  }

  export type AgencyUpdateToOneWithWhereWithoutPerformanceInput = {
    where?: AgencyWhereInput
    data: XOR<AgencyUpdateWithoutPerformanceInput, AgencyUncheckedUpdateWithoutPerformanceInput>
  }

  export type AgencyUpdateWithoutPerformanceInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    activityType?: EnumAgencyActivityTypeFieldUpdateOperationsInput | $Enums.AgencyActivityType
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    businessRegistrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    activityLicense?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    bankAccountInfo?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    suspensionReason?: NullableStringFieldUpdateOperationsInput | string | null
    suspendedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    suspendedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumAgencyVerificationStatusFieldUpdateOperationsInput | $Enums.AgencyVerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationDocuments?: AgencyVerificationDocumentUpdateManyWithoutAgencyNestedInput
    teamMembers?: AgencyMemberUpdateManyWithoutAgencyNestedInput
    teamRoles?: AgencyRoleUpdateManyWithoutAgencyNestedInput
    properties?: PropertyUpdateManyWithoutAgencyNestedInput
    inquiries?: AgencyInquiryUpdateManyWithoutAgencyNestedInput
    adminActions?: AdminActionUpdateManyWithoutAgencyNestedInput
    User?: UserUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutPerformanceInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    activityType?: EnumAgencyActivityTypeFieldUpdateOperationsInput | $Enums.AgencyActivityType
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    businessRegistrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    activityLicense?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    bankAccountInfo?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    suspensionReason?: NullableStringFieldUpdateOperationsInput | string | null
    suspendedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    suspendedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumAgencyVerificationStatusFieldUpdateOperationsInput | $Enums.AgencyVerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationDocuments?: AgencyVerificationDocumentUncheckedUpdateManyWithoutAgencyNestedInput
    teamMembers?: AgencyMemberUncheckedUpdateManyWithoutAgencyNestedInput
    teamRoles?: AgencyRoleUncheckedUpdateManyWithoutAgencyNestedInput
    properties?: PropertyUncheckedUpdateManyWithoutAgencyNestedInput
    inquiries?: AgencyInquiryUncheckedUpdateManyWithoutAgencyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAgencyNestedInput
    User?: UserUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyMemberCreateWithoutPerformanceInput = {
    id?: string
    role: $Enums.UserRole
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    joinedAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutAgencyMemberInput
    agency: AgencyCreateNestedOneWithoutTeamMembersInput
  }

  export type AgencyMemberUncheckedCreateWithoutPerformanceInput = {
    id?: string
    userId: string
    agencyId: string
    role: $Enums.UserRole
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    joinedAt?: Date | string
    updatedAt?: Date | string
  }

  export type AgencyMemberCreateOrConnectWithoutPerformanceInput = {
    where: AgencyMemberWhereUniqueInput
    create: XOR<AgencyMemberCreateWithoutPerformanceInput, AgencyMemberUncheckedCreateWithoutPerformanceInput>
  }

  export type AgencyMemberUpsertWithoutPerformanceInput = {
    update: XOR<AgencyMemberUpdateWithoutPerformanceInput, AgencyMemberUncheckedUpdateWithoutPerformanceInput>
    create: XOR<AgencyMemberCreateWithoutPerformanceInput, AgencyMemberUncheckedCreateWithoutPerformanceInput>
    where?: AgencyMemberWhereInput
  }

  export type AgencyMemberUpdateToOneWithWhereWithoutPerformanceInput = {
    where?: AgencyMemberWhereInput
    data: XOR<AgencyMemberUpdateWithoutPerformanceInput, AgencyMemberUncheckedUpdateWithoutPerformanceInput>
  }

  export type AgencyMemberUpdateWithoutPerformanceInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    canManageProperties?: BoolFieldUpdateOperationsInput | boolean
    canManageTeam?: BoolFieldUpdateOperationsInput | boolean
    canViewAllData?: BoolFieldUpdateOperationsInput | boolean
    canContactClients?: BoolFieldUpdateOperationsInput | boolean
    canScheduleViewings?: BoolFieldUpdateOperationsInput | boolean
    canSetPrices?: BoolFieldUpdateOperationsInput | boolean
    canUploadDocuments?: BoolFieldUpdateOperationsInput | boolean
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutAgencyMemberNestedInput
    agency?: AgencyUpdateOneRequiredWithoutTeamMembersNestedInput
  }

  export type AgencyMemberUncheckedUpdateWithoutPerformanceInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    canManageProperties?: BoolFieldUpdateOperationsInput | boolean
    canManageTeam?: BoolFieldUpdateOperationsInput | boolean
    canViewAllData?: BoolFieldUpdateOperationsInput | boolean
    canContactClients?: BoolFieldUpdateOperationsInput | boolean
    canScheduleViewings?: BoolFieldUpdateOperationsInput | boolean
    canSetPrices?: BoolFieldUpdateOperationsInput | boolean
    canUploadDocuments?: BoolFieldUpdateOperationsInput | boolean
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyCreateWithoutInquiriesInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    activityType: $Enums.AgencyActivityType
    businessPhone: string
    businessEmail: string
    website?: string | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    businessRegistrationNumber?: string | null
    activityLicense?: string | null
    taxId?: string | null
    bankAccountInfo?: string | null
    isVerified?: boolean
    isActive?: boolean
    isSuspended?: boolean
    suspensionReason?: string | null
    suspendedAt?: Date | string | null
    suspendedBy?: string | null
    verificationStatus?: $Enums.AgencyVerificationStatus
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    verificationDocuments?: AgencyVerificationDocumentCreateNestedManyWithoutAgencyInput
    teamMembers?: AgencyMemberCreateNestedManyWithoutAgencyInput
    teamRoles?: AgencyRoleCreateNestedManyWithoutAgencyInput
    properties?: PropertyCreateNestedManyWithoutAgencyInput
    performance?: AgencyPerformanceCreateNestedOneWithoutAgencyInput
    adminActions?: AdminActionCreateNestedManyWithoutAgencyInput
    User?: UserCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutInquiriesInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    activityType: $Enums.AgencyActivityType
    businessPhone: string
    businessEmail: string
    website?: string | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    businessRegistrationNumber?: string | null
    activityLicense?: string | null
    taxId?: string | null
    bankAccountInfo?: string | null
    isVerified?: boolean
    isActive?: boolean
    isSuspended?: boolean
    suspensionReason?: string | null
    suspendedAt?: Date | string | null
    suspendedBy?: string | null
    verificationStatus?: $Enums.AgencyVerificationStatus
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    verificationDocuments?: AgencyVerificationDocumentUncheckedCreateNestedManyWithoutAgencyInput
    teamMembers?: AgencyMemberUncheckedCreateNestedManyWithoutAgencyInput
    teamRoles?: AgencyRoleUncheckedCreateNestedManyWithoutAgencyInput
    properties?: PropertyUncheckedCreateNestedManyWithoutAgencyInput
    performance?: AgencyPerformanceUncheckedCreateNestedOneWithoutAgencyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAgencyInput
    User?: UserUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutInquiriesInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutInquiriesInput, AgencyUncheckedCreateWithoutInquiriesInput>
  }

  export type PropertyCreateWithoutAgencyInquiriesInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    owner: UserCreateNestedOneWithoutOwnedPropertiesInput
    agent?: UserCreateNestedOneWithoutManagedPropertiesInput
    agency?: AgencyCreateNestedOneWithoutPropertiesInput
    photos?: PropertyPhotoCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourCreateNestedManyWithoutPropertyInput
    views?: PropertyViewCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionCreateNestedManyWithoutPropertyInput
    payments?: PaymentCreateNestedManyWithoutPropertyInput
  }

  export type PropertyUncheckedCreateWithoutAgencyInquiriesInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    ownerId: string
    agentId?: string | null
    agencyId?: string | null
    photos?: PropertyPhotoUncheckedCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoUncheckedCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourUncheckedCreateNestedManyWithoutPropertyInput
    views?: PropertyViewUncheckedCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesUncheckedCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingUncheckedCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutPropertyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutPropertyInput
  }

  export type PropertyCreateOrConnectWithoutAgencyInquiriesInput = {
    where: PropertyWhereUniqueInput
    create: XOR<PropertyCreateWithoutAgencyInquiriesInput, PropertyUncheckedCreateWithoutAgencyInquiriesInput>
  }

  export type AgencyUpsertWithoutInquiriesInput = {
    update: XOR<AgencyUpdateWithoutInquiriesInput, AgencyUncheckedUpdateWithoutInquiriesInput>
    create: XOR<AgencyCreateWithoutInquiriesInput, AgencyUncheckedCreateWithoutInquiriesInput>
    where?: AgencyWhereInput
  }

  export type AgencyUpdateToOneWithWhereWithoutInquiriesInput = {
    where?: AgencyWhereInput
    data: XOR<AgencyUpdateWithoutInquiriesInput, AgencyUncheckedUpdateWithoutInquiriesInput>
  }

  export type AgencyUpdateWithoutInquiriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    activityType?: EnumAgencyActivityTypeFieldUpdateOperationsInput | $Enums.AgencyActivityType
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    businessRegistrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    activityLicense?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    bankAccountInfo?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    suspensionReason?: NullableStringFieldUpdateOperationsInput | string | null
    suspendedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    suspendedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumAgencyVerificationStatusFieldUpdateOperationsInput | $Enums.AgencyVerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationDocuments?: AgencyVerificationDocumentUpdateManyWithoutAgencyNestedInput
    teamMembers?: AgencyMemberUpdateManyWithoutAgencyNestedInput
    teamRoles?: AgencyRoleUpdateManyWithoutAgencyNestedInput
    properties?: PropertyUpdateManyWithoutAgencyNestedInput
    performance?: AgencyPerformanceUpdateOneWithoutAgencyNestedInput
    adminActions?: AdminActionUpdateManyWithoutAgencyNestedInput
    User?: UserUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutInquiriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    activityType?: EnumAgencyActivityTypeFieldUpdateOperationsInput | $Enums.AgencyActivityType
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    businessRegistrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    activityLicense?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    bankAccountInfo?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    suspensionReason?: NullableStringFieldUpdateOperationsInput | string | null
    suspendedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    suspendedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumAgencyVerificationStatusFieldUpdateOperationsInput | $Enums.AgencyVerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationDocuments?: AgencyVerificationDocumentUncheckedUpdateManyWithoutAgencyNestedInput
    teamMembers?: AgencyMemberUncheckedUpdateManyWithoutAgencyNestedInput
    teamRoles?: AgencyRoleUncheckedUpdateManyWithoutAgencyNestedInput
    properties?: PropertyUncheckedUpdateManyWithoutAgencyNestedInput
    performance?: AgencyPerformanceUncheckedUpdateOneWithoutAgencyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAgencyNestedInput
    User?: UserUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type PropertyUpsertWithoutAgencyInquiriesInput = {
    update: XOR<PropertyUpdateWithoutAgencyInquiriesInput, PropertyUncheckedUpdateWithoutAgencyInquiriesInput>
    create: XOR<PropertyCreateWithoutAgencyInquiriesInput, PropertyUncheckedCreateWithoutAgencyInquiriesInput>
    where?: PropertyWhereInput
  }

  export type PropertyUpdateToOneWithWhereWithoutAgencyInquiriesInput = {
    where?: PropertyWhereInput
    data: XOR<PropertyUpdateWithoutAgencyInquiriesInput, PropertyUncheckedUpdateWithoutAgencyInquiriesInput>
  }

  export type PropertyUpdateWithoutAgencyInquiriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedPropertiesNestedInput
    agent?: UserUpdateOneWithoutManagedPropertiesNestedInput
    agency?: AgencyUpdateOneWithoutPropertiesNestedInput
    photos?: PropertyPhotoUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyUncheckedUpdateWithoutAgencyInquiriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    agentId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: PropertyPhotoUncheckedUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUncheckedUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUncheckedUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUncheckedUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUncheckedUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUncheckedUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutPropertyNestedInput
  }

  export type UserCreateWithoutOwnedPropertiesInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    viewedProperties?: PropertyViewCreateNestedManyWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListCreateNestedManyWithoutUserInput
    requests?: PropertyRequestCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentCreateNestedManyWithoutAuthorInput
    managedProperties?: PropertyCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsCreateNestedManyWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    agencyRoles?: AgencyRoleCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutOwnedPropertiesInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    viewedProperties?: PropertyViewUncheckedCreateNestedManyWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListUncheckedCreateNestedManyWithoutUserInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonUncheckedCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutAuthorInput
    managedProperties?: PropertyUncheckedCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingUncheckedCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingUncheckedCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutUserInput
    agencyRoles?: AgencyRoleUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberUncheckedCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutOwnedPropertiesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOwnedPropertiesInput, UserUncheckedCreateWithoutOwnedPropertiesInput>
  }

  export type UserCreateWithoutManagedPropertiesInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    viewedProperties?: PropertyViewCreateNestedManyWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListCreateNestedManyWithoutUserInput
    requests?: PropertyRequestCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyCreateNestedManyWithoutOwnerInput
    scheduledViewings?: PropertyViewingCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsCreateNestedManyWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    agencyRoles?: AgencyRoleCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutManagedPropertiesInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    viewedProperties?: PropertyViewUncheckedCreateNestedManyWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListUncheckedCreateNestedManyWithoutUserInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonUncheckedCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyUncheckedCreateNestedManyWithoutOwnerInput
    scheduledViewings?: PropertyViewingUncheckedCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingUncheckedCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutUserInput
    agencyRoles?: AgencyRoleUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberUncheckedCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutManagedPropertiesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutManagedPropertiesInput, UserUncheckedCreateWithoutManagedPropertiesInput>
  }

  export type AgencyCreateWithoutPropertiesInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    activityType: $Enums.AgencyActivityType
    businessPhone: string
    businessEmail: string
    website?: string | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    businessRegistrationNumber?: string | null
    activityLicense?: string | null
    taxId?: string | null
    bankAccountInfo?: string | null
    isVerified?: boolean
    isActive?: boolean
    isSuspended?: boolean
    suspensionReason?: string | null
    suspendedAt?: Date | string | null
    suspendedBy?: string | null
    verificationStatus?: $Enums.AgencyVerificationStatus
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    verificationDocuments?: AgencyVerificationDocumentCreateNestedManyWithoutAgencyInput
    teamMembers?: AgencyMemberCreateNestedManyWithoutAgencyInput
    teamRoles?: AgencyRoleCreateNestedManyWithoutAgencyInput
    performance?: AgencyPerformanceCreateNestedOneWithoutAgencyInput
    inquiries?: AgencyInquiryCreateNestedManyWithoutAgencyInput
    adminActions?: AdminActionCreateNestedManyWithoutAgencyInput
    User?: UserCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutPropertiesInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    activityType: $Enums.AgencyActivityType
    businessPhone: string
    businessEmail: string
    website?: string | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    businessRegistrationNumber?: string | null
    activityLicense?: string | null
    taxId?: string | null
    bankAccountInfo?: string | null
    isVerified?: boolean
    isActive?: boolean
    isSuspended?: boolean
    suspensionReason?: string | null
    suspendedAt?: Date | string | null
    suspendedBy?: string | null
    verificationStatus?: $Enums.AgencyVerificationStatus
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    verificationDocuments?: AgencyVerificationDocumentUncheckedCreateNestedManyWithoutAgencyInput
    teamMembers?: AgencyMemberUncheckedCreateNestedManyWithoutAgencyInput
    teamRoles?: AgencyRoleUncheckedCreateNestedManyWithoutAgencyInput
    performance?: AgencyPerformanceUncheckedCreateNestedOneWithoutAgencyInput
    inquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutAgencyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAgencyInput
    User?: UserUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutPropertiesInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutPropertiesInput, AgencyUncheckedCreateWithoutPropertiesInput>
  }

  export type PropertyPhotoCreateWithoutPropertyInput = {
    id?: string
    url: string
    caption?: string | null
    altText?: string | null
    isPrimary?: boolean
    order?: number
    category?: string | null
    createdAt?: Date | string
  }

  export type PropertyPhotoUncheckedCreateWithoutPropertyInput = {
    id?: string
    url: string
    caption?: string | null
    altText?: string | null
    isPrimary?: boolean
    order?: number
    category?: string | null
    createdAt?: Date | string
  }

  export type PropertyPhotoCreateOrConnectWithoutPropertyInput = {
    where: PropertyPhotoWhereUniqueInput
    create: XOR<PropertyPhotoCreateWithoutPropertyInput, PropertyPhotoUncheckedCreateWithoutPropertyInput>
  }

  export type PropertyPhotoCreateManyPropertyInputEnvelope = {
    data: PropertyPhotoCreateManyPropertyInput | PropertyPhotoCreateManyPropertyInput[]
    skipDuplicates?: boolean
  }

  export type PropertyVideoCreateWithoutPropertyInput = {
    id?: string
    url: string
    thumbnail?: string | null
    duration?: number | null
    caption?: string | null
    order?: number
    createdAt?: Date | string
  }

  export type PropertyVideoUncheckedCreateWithoutPropertyInput = {
    id?: string
    url: string
    thumbnail?: string | null
    duration?: number | null
    caption?: string | null
    order?: number
    createdAt?: Date | string
  }

  export type PropertyVideoCreateOrConnectWithoutPropertyInput = {
    where: PropertyVideoWhereUniqueInput
    create: XOR<PropertyVideoCreateWithoutPropertyInput, PropertyVideoUncheckedCreateWithoutPropertyInput>
  }

  export type PropertyVideoCreateManyPropertyInputEnvelope = {
    data: PropertyVideoCreateManyPropertyInput | PropertyVideoCreateManyPropertyInput[]
    skipDuplicates?: boolean
  }

  export type VirtualTourCreateWithoutPropertyInput = {
    id?: string
    url: string
    platform?: string | null
    caption?: string | null
    order?: number
    createdAt?: Date | string
  }

  export type VirtualTourUncheckedCreateWithoutPropertyInput = {
    id?: string
    url: string
    platform?: string | null
    caption?: string | null
    order?: number
    createdAt?: Date | string
  }

  export type VirtualTourCreateOrConnectWithoutPropertyInput = {
    where: VirtualTourWhereUniqueInput
    create: XOR<VirtualTourCreateWithoutPropertyInput, VirtualTourUncheckedCreateWithoutPropertyInput>
  }

  export type VirtualTourCreateManyPropertyInputEnvelope = {
    data: VirtualTourCreateManyPropertyInput | VirtualTourCreateManyPropertyInput[]
    skipDuplicates?: boolean
  }

  export type PropertyViewCreateWithoutPropertyInput = {
    id?: string
    viewedAt?: Date | string
    viewDuration?: number | null
    ipAddress?: string | null
    userAgent?: string | null
    user: UserCreateNestedOneWithoutViewedPropertiesInput
  }

  export type PropertyViewUncheckedCreateWithoutPropertyInput = {
    id?: string
    viewedAt?: Date | string
    viewDuration?: number | null
    ipAddress?: string | null
    userAgent?: string | null
    userId: string
  }

  export type PropertyViewCreateOrConnectWithoutPropertyInput = {
    where: PropertyViewWhereUniqueInput
    create: XOR<PropertyViewCreateWithoutPropertyInput, PropertyViewUncheckedCreateWithoutPropertyInput>
  }

  export type PropertyViewCreateManyPropertyInputEnvelope = {
    data: PropertyViewCreateManyPropertyInput | PropertyViewCreateManyPropertyInput[]
    skipDuplicates?: boolean
  }

  export type FavoriteCreateWithoutPropertyInput = {
    id?: string
    notes?: string | null
    priority?: number | null
    createdAt?: Date | string
    listId?: string | null
    user: UserCreateNestedOneWithoutFavoritesInput
    list?: FavoriteListCreateNestedOneWithoutFavoritesInput
  }

  export type FavoriteUncheckedCreateWithoutPropertyInput = {
    id?: string
    notes?: string | null
    priority?: number | null
    createdAt?: Date | string
    userId: string
    listId?: string | null
    favoriteListId?: string | null
  }

  export type FavoriteCreateOrConnectWithoutPropertyInput = {
    where: FavoriteWhereUniqueInput
    create: XOR<FavoriteCreateWithoutPropertyInput, FavoriteUncheckedCreateWithoutPropertyInput>
  }

  export type FavoriteCreateManyPropertyInputEnvelope = {
    data: FavoriteCreateManyPropertyInput | FavoriteCreateManyPropertyInput[]
    skipDuplicates?: boolean
  }

  export type PropertyRequestCreateWithoutPropertyInput = {
    id?: string
    type: $Enums.RequestType
    message: string
    status?: $Enums.RequestStatus
    preferredDate?: Date | string | null
    preferredTime?: string | null
    budget?: number | null
    timeline?: string | null
    sellerResponse?: string | null
    responseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    buyerId: string
    buyer: UserCreateNestedOneWithoutRequestsInput
    viewings?: PropertyViewingCreateNestedManyWithoutRequestInput
    payments?: PaymentCreateNestedManyWithoutRequestInput
  }

  export type PropertyRequestUncheckedCreateWithoutPropertyInput = {
    id?: string
    type: $Enums.RequestType
    message: string
    status?: $Enums.RequestStatus
    preferredDate?: Date | string | null
    preferredTime?: string | null
    budget?: number | null
    timeline?: string | null
    sellerResponse?: string | null
    responseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    buyerId: string
    userId: string
    viewings?: PropertyViewingUncheckedCreateNestedManyWithoutRequestInput
    payments?: PaymentUncheckedCreateNestedManyWithoutRequestInput
  }

  export type PropertyRequestCreateOrConnectWithoutPropertyInput = {
    where: PropertyRequestWhereUniqueInput
    create: XOR<PropertyRequestCreateWithoutPropertyInput, PropertyRequestUncheckedCreateWithoutPropertyInput>
  }

  export type PropertyRequestCreateManyPropertyInputEnvelope = {
    data: PropertyRequestCreateManyPropertyInput | PropertyRequestCreateManyPropertyInput[]
    skipDuplicates?: boolean
  }

  export type PropertyInquiryCreateWithoutPropertyInput = {
    id?: string
    subject: string
    message: string
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutInquiriesInput
  }

  export type PropertyInquiryUncheckedCreateWithoutPropertyInput = {
    id?: string
    subject: string
    message: string
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
  }

  export type PropertyInquiryCreateOrConnectWithoutPropertyInput = {
    where: PropertyInquiryWhereUniqueInput
    create: XOR<PropertyInquiryCreateWithoutPropertyInput, PropertyInquiryUncheckedCreateWithoutPropertyInput>
  }

  export type PropertyInquiryCreateManyPropertyInputEnvelope = {
    data: PropertyInquiryCreateManyPropertyInput | PropertyInquiryCreateManyPropertyInput[]
    skipDuplicates?: boolean
  }

  export type PropertyComparisonPropertiesCreateWithoutPropertyInput = {
    id?: string
    propertyComparison: PropertyComparisonCreateNestedOneWithoutPropertyComparisonPropertiesInput
  }

  export type PropertyComparisonPropertiesUncheckedCreateWithoutPropertyInput = {
    id?: string
    propertyComparisonId: string
  }

  export type PropertyComparisonPropertiesCreateOrConnectWithoutPropertyInput = {
    where: PropertyComparisonPropertiesWhereUniqueInput
    create: XOR<PropertyComparisonPropertiesCreateWithoutPropertyInput, PropertyComparisonPropertiesUncheckedCreateWithoutPropertyInput>
  }

  export type PropertyComparisonPropertiesCreateManyPropertyInputEnvelope = {
    data: PropertyComparisonPropertiesCreateManyPropertyInput | PropertyComparisonPropertiesCreateManyPropertyInput[]
    skipDuplicates?: boolean
  }

  export type PropertyReviewCreateWithoutPropertyInput = {
    id?: string
    rating: number
    title: string
    comment: string
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewerId: string
    reviewer: UserCreateNestedOneWithoutReviewsInput
  }

  export type PropertyReviewUncheckedCreateWithoutPropertyInput = {
    id?: string
    rating: number
    title: string
    comment: string
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewerId: string
    userId: string
  }

  export type PropertyReviewCreateOrConnectWithoutPropertyInput = {
    where: PropertyReviewWhereUniqueInput
    create: XOR<PropertyReviewCreateWithoutPropertyInput, PropertyReviewUncheckedCreateWithoutPropertyInput>
  }

  export type PropertyReviewCreateManyPropertyInputEnvelope = {
    data: PropertyReviewCreateManyPropertyInput | PropertyReviewCreateManyPropertyInput[]
    skipDuplicates?: boolean
  }

  export type PropertyCommentCreateWithoutPropertyInput = {
    id?: string
    content: string
    isPublic?: boolean
    isModerated?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    authorId: string
    author: UserCreateNestedOneWithoutCommentsInput
  }

  export type PropertyCommentUncheckedCreateWithoutPropertyInput = {
    id?: string
    content: string
    isPublic?: boolean
    isModerated?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    authorId: string
    userId: string
  }

  export type PropertyCommentCreateOrConnectWithoutPropertyInput = {
    where: PropertyCommentWhereUniqueInput
    create: XOR<PropertyCommentCreateWithoutPropertyInput, PropertyCommentUncheckedCreateWithoutPropertyInput>
  }

  export type PropertyCommentCreateManyPropertyInputEnvelope = {
    data: PropertyCommentCreateManyPropertyInput | PropertyCommentCreateManyPropertyInput[]
    skipDuplicates?: boolean
  }

  export type PropertyViewingCreateWithoutPropertyInput = {
    id?: string
    scheduledAt: Date | string
    duration: number
    status?: string
    notes?: string | null
    buyerNotes?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    requestId?: string | null
    seller: UserCreateNestedOneWithoutScheduledViewingsInput
    buyer?: UserCreateNestedOneWithoutBuyerViewingsInput
    request?: PropertyRequestCreateNestedOneWithoutViewingsInput
  }

  export type PropertyViewingUncheckedCreateWithoutPropertyInput = {
    id?: string
    scheduledAt: Date | string
    duration: number
    status?: string
    notes?: string | null
    buyerNotes?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    sellerId: string
    buyerId?: string | null
    requestId?: string | null
    propertyRequestId?: string | null
  }

  export type PropertyViewingCreateOrConnectWithoutPropertyInput = {
    where: PropertyViewingWhereUniqueInput
    create: XOR<PropertyViewingCreateWithoutPropertyInput, PropertyViewingUncheckedCreateWithoutPropertyInput>
  }

  export type PropertyViewingCreateManyPropertyInputEnvelope = {
    data: PropertyViewingCreateManyPropertyInput | PropertyViewingCreateManyPropertyInput[]
    skipDuplicates?: boolean
  }

  export type PropertyAnalyticsCreateWithoutPropertyInput = {
    id?: string
    totalViews?: number
    uniqueViews?: number
    totalFavorites?: number
    totalRequests?: number
    totalInquiries?: number
    averageViewDuration?: number
    bounceRate?: number
    conversionRate?: number
    viewsThisWeek?: number
    viewsThisMonth?: number
    viewsThisYear?: number
    lastCalculated?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    User?: UserCreateNestedOneWithoutPropertyAnalyticsInput
  }

  export type PropertyAnalyticsUncheckedCreateWithoutPropertyInput = {
    id?: string
    totalViews?: number
    uniqueViews?: number
    totalFavorites?: number
    totalRequests?: number
    totalInquiries?: number
    averageViewDuration?: number
    bounceRate?: number
    conversionRate?: number
    viewsThisWeek?: number
    viewsThisMonth?: number
    viewsThisYear?: number
    lastCalculated?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    userId?: string | null
  }

  export type PropertyAnalyticsCreateOrConnectWithoutPropertyInput = {
    where: PropertyAnalyticsWhereUniqueInput
    create: XOR<PropertyAnalyticsCreateWithoutPropertyInput, PropertyAnalyticsUncheckedCreateWithoutPropertyInput>
  }

  export type PropertyAnalyticsCreateManyPropertyInputEnvelope = {
    data: PropertyAnalyticsCreateManyPropertyInput | PropertyAnalyticsCreateManyPropertyInput[]
    skipDuplicates?: boolean
  }

  export type AdminActionCreateWithoutPropertyInput = {
    id?: string
    action: string
    details?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    admin: UserCreateNestedOneWithoutAdminActionsInput
    user?: UserCreateNestedOneWithoutAdminActionTargetsInput
    agency?: AgencyCreateNestedOneWithoutAdminActionsInput
  }

  export type AdminActionUncheckedCreateWithoutPropertyInput = {
    id?: string
    action: string
    details?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    adminId: string
    userId?: string | null
    agencyId?: string | null
  }

  export type AdminActionCreateOrConnectWithoutPropertyInput = {
    where: AdminActionWhereUniqueInput
    create: XOR<AdminActionCreateWithoutPropertyInput, AdminActionUncheckedCreateWithoutPropertyInput>
  }

  export type AdminActionCreateManyPropertyInputEnvelope = {
    data: AdminActionCreateManyPropertyInput | AdminActionCreateManyPropertyInput[]
    skipDuplicates?: boolean
  }

  export type PaymentCreateWithoutPropertyInput = {
    id?: string
    amount: number
    currency?: string
    status?: $Enums.PaymentStatus
    paymentMethod: string
    transactionId?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    requestId?: string | null
    user: UserCreateNestedOneWithoutPaymentsInput
    request?: PropertyRequestCreateNestedOneWithoutPaymentsInput
  }

  export type PaymentUncheckedCreateWithoutPropertyInput = {
    id?: string
    amount: number
    currency?: string
    status?: $Enums.PaymentStatus
    paymentMethod: string
    transactionId?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    requestId?: string | null
    propertyRequestId?: string | null
  }

  export type PaymentCreateOrConnectWithoutPropertyInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutPropertyInput, PaymentUncheckedCreateWithoutPropertyInput>
  }

  export type PaymentCreateManyPropertyInputEnvelope = {
    data: PaymentCreateManyPropertyInput | PaymentCreateManyPropertyInput[]
    skipDuplicates?: boolean
  }

  export type AgencyInquiryCreateWithoutPropertyInput = {
    id?: string
    subject: string
    message: string
    whoSentIt: string
    whichProperty?: string | null
    status?: $Enums.InquiryStatus
    whenSent?: Date | string
    response?: string | null
    respondedAt?: Date | string | null
    respondedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agency: AgencyCreateNestedOneWithoutInquiriesInput
  }

  export type AgencyInquiryUncheckedCreateWithoutPropertyInput = {
    id?: string
    subject: string
    message: string
    whoSentIt: string
    whichProperty?: string | null
    status?: $Enums.InquiryStatus
    whenSent?: Date | string
    response?: string | null
    respondedAt?: Date | string | null
    respondedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId: string
  }

  export type AgencyInquiryCreateOrConnectWithoutPropertyInput = {
    where: AgencyInquiryWhereUniqueInput
    create: XOR<AgencyInquiryCreateWithoutPropertyInput, AgencyInquiryUncheckedCreateWithoutPropertyInput>
  }

  export type AgencyInquiryCreateManyPropertyInputEnvelope = {
    data: AgencyInquiryCreateManyPropertyInput | AgencyInquiryCreateManyPropertyInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutOwnedPropertiesInput = {
    update: XOR<UserUpdateWithoutOwnedPropertiesInput, UserUncheckedUpdateWithoutOwnedPropertiesInput>
    create: XOR<UserCreateWithoutOwnedPropertiesInput, UserUncheckedCreateWithoutOwnedPropertiesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOwnedPropertiesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOwnedPropertiesInput, UserUncheckedUpdateWithoutOwnedPropertiesInput>
  }

  export type UserUpdateWithoutOwnedPropertiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewedProperties?: PropertyViewUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUpdateManyWithoutAuthorNestedInput
    managedProperties?: PropertyUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUpdateManyWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    agencyRoles?: AgencyRoleUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutOwnedPropertiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    viewedProperties?: PropertyViewUncheckedUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUncheckedUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUncheckedUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutAuthorNestedInput
    managedProperties?: PropertyUncheckedUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUncheckedUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUncheckedUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUncheckedUpdateManyWithoutUserNestedInput
    agencyRoles?: AgencyRoleUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUncheckedUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUpsertWithoutManagedPropertiesInput = {
    update: XOR<UserUpdateWithoutManagedPropertiesInput, UserUncheckedUpdateWithoutManagedPropertiesInput>
    create: XOR<UserCreateWithoutManagedPropertiesInput, UserUncheckedCreateWithoutManagedPropertiesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutManagedPropertiesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutManagedPropertiesInput, UserUncheckedUpdateWithoutManagedPropertiesInput>
  }

  export type UserUpdateWithoutManagedPropertiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewedProperties?: PropertyViewUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUpdateManyWithoutOwnerNestedInput
    scheduledViewings?: PropertyViewingUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUpdateManyWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    agencyRoles?: AgencyRoleUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutManagedPropertiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    viewedProperties?: PropertyViewUncheckedUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUncheckedUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUncheckedUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUncheckedUpdateManyWithoutOwnerNestedInput
    scheduledViewings?: PropertyViewingUncheckedUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUncheckedUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUncheckedUpdateManyWithoutUserNestedInput
    agencyRoles?: AgencyRoleUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUncheckedUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type AgencyUpsertWithoutPropertiesInput = {
    update: XOR<AgencyUpdateWithoutPropertiesInput, AgencyUncheckedUpdateWithoutPropertiesInput>
    create: XOR<AgencyCreateWithoutPropertiesInput, AgencyUncheckedCreateWithoutPropertiesInput>
    where?: AgencyWhereInput
  }

  export type AgencyUpdateToOneWithWhereWithoutPropertiesInput = {
    where?: AgencyWhereInput
    data: XOR<AgencyUpdateWithoutPropertiesInput, AgencyUncheckedUpdateWithoutPropertiesInput>
  }

  export type AgencyUpdateWithoutPropertiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    activityType?: EnumAgencyActivityTypeFieldUpdateOperationsInput | $Enums.AgencyActivityType
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    businessRegistrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    activityLicense?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    bankAccountInfo?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    suspensionReason?: NullableStringFieldUpdateOperationsInput | string | null
    suspendedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    suspendedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumAgencyVerificationStatusFieldUpdateOperationsInput | $Enums.AgencyVerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationDocuments?: AgencyVerificationDocumentUpdateManyWithoutAgencyNestedInput
    teamMembers?: AgencyMemberUpdateManyWithoutAgencyNestedInput
    teamRoles?: AgencyRoleUpdateManyWithoutAgencyNestedInput
    performance?: AgencyPerformanceUpdateOneWithoutAgencyNestedInput
    inquiries?: AgencyInquiryUpdateManyWithoutAgencyNestedInput
    adminActions?: AdminActionUpdateManyWithoutAgencyNestedInput
    User?: UserUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutPropertiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    activityType?: EnumAgencyActivityTypeFieldUpdateOperationsInput | $Enums.AgencyActivityType
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    businessRegistrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    activityLicense?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    bankAccountInfo?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    suspensionReason?: NullableStringFieldUpdateOperationsInput | string | null
    suspendedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    suspendedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumAgencyVerificationStatusFieldUpdateOperationsInput | $Enums.AgencyVerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationDocuments?: AgencyVerificationDocumentUncheckedUpdateManyWithoutAgencyNestedInput
    teamMembers?: AgencyMemberUncheckedUpdateManyWithoutAgencyNestedInput
    teamRoles?: AgencyRoleUncheckedUpdateManyWithoutAgencyNestedInput
    performance?: AgencyPerformanceUncheckedUpdateOneWithoutAgencyNestedInput
    inquiries?: AgencyInquiryUncheckedUpdateManyWithoutAgencyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAgencyNestedInput
    User?: UserUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type PropertyPhotoUpsertWithWhereUniqueWithoutPropertyInput = {
    where: PropertyPhotoWhereUniqueInput
    update: XOR<PropertyPhotoUpdateWithoutPropertyInput, PropertyPhotoUncheckedUpdateWithoutPropertyInput>
    create: XOR<PropertyPhotoCreateWithoutPropertyInput, PropertyPhotoUncheckedCreateWithoutPropertyInput>
  }

  export type PropertyPhotoUpdateWithWhereUniqueWithoutPropertyInput = {
    where: PropertyPhotoWhereUniqueInput
    data: XOR<PropertyPhotoUpdateWithoutPropertyInput, PropertyPhotoUncheckedUpdateWithoutPropertyInput>
  }

  export type PropertyPhotoUpdateManyWithWhereWithoutPropertyInput = {
    where: PropertyPhotoScalarWhereInput
    data: XOR<PropertyPhotoUpdateManyMutationInput, PropertyPhotoUncheckedUpdateManyWithoutPropertyInput>
  }

  export type PropertyPhotoScalarWhereInput = {
    AND?: PropertyPhotoScalarWhereInput | PropertyPhotoScalarWhereInput[]
    OR?: PropertyPhotoScalarWhereInput[]
    NOT?: PropertyPhotoScalarWhereInput | PropertyPhotoScalarWhereInput[]
    id?: StringFilter<"PropertyPhoto"> | string
    url?: StringFilter<"PropertyPhoto"> | string
    caption?: StringNullableFilter<"PropertyPhoto"> | string | null
    altText?: StringNullableFilter<"PropertyPhoto"> | string | null
    isPrimary?: BoolFilter<"PropertyPhoto"> | boolean
    order?: IntFilter<"PropertyPhoto"> | number
    category?: StringNullableFilter<"PropertyPhoto"> | string | null
    createdAt?: DateTimeFilter<"PropertyPhoto"> | Date | string
    propertyId?: StringFilter<"PropertyPhoto"> | string
  }

  export type PropertyVideoUpsertWithWhereUniqueWithoutPropertyInput = {
    where: PropertyVideoWhereUniqueInput
    update: XOR<PropertyVideoUpdateWithoutPropertyInput, PropertyVideoUncheckedUpdateWithoutPropertyInput>
    create: XOR<PropertyVideoCreateWithoutPropertyInput, PropertyVideoUncheckedCreateWithoutPropertyInput>
  }

  export type PropertyVideoUpdateWithWhereUniqueWithoutPropertyInput = {
    where: PropertyVideoWhereUniqueInput
    data: XOR<PropertyVideoUpdateWithoutPropertyInput, PropertyVideoUncheckedUpdateWithoutPropertyInput>
  }

  export type PropertyVideoUpdateManyWithWhereWithoutPropertyInput = {
    where: PropertyVideoScalarWhereInput
    data: XOR<PropertyVideoUpdateManyMutationInput, PropertyVideoUncheckedUpdateManyWithoutPropertyInput>
  }

  export type PropertyVideoScalarWhereInput = {
    AND?: PropertyVideoScalarWhereInput | PropertyVideoScalarWhereInput[]
    OR?: PropertyVideoScalarWhereInput[]
    NOT?: PropertyVideoScalarWhereInput | PropertyVideoScalarWhereInput[]
    id?: StringFilter<"PropertyVideo"> | string
    url?: StringFilter<"PropertyVideo"> | string
    thumbnail?: StringNullableFilter<"PropertyVideo"> | string | null
    duration?: IntNullableFilter<"PropertyVideo"> | number | null
    caption?: StringNullableFilter<"PropertyVideo"> | string | null
    order?: IntFilter<"PropertyVideo"> | number
    createdAt?: DateTimeFilter<"PropertyVideo"> | Date | string
    propertyId?: StringFilter<"PropertyVideo"> | string
  }

  export type VirtualTourUpsertWithWhereUniqueWithoutPropertyInput = {
    where: VirtualTourWhereUniqueInput
    update: XOR<VirtualTourUpdateWithoutPropertyInput, VirtualTourUncheckedUpdateWithoutPropertyInput>
    create: XOR<VirtualTourCreateWithoutPropertyInput, VirtualTourUncheckedCreateWithoutPropertyInput>
  }

  export type VirtualTourUpdateWithWhereUniqueWithoutPropertyInput = {
    where: VirtualTourWhereUniqueInput
    data: XOR<VirtualTourUpdateWithoutPropertyInput, VirtualTourUncheckedUpdateWithoutPropertyInput>
  }

  export type VirtualTourUpdateManyWithWhereWithoutPropertyInput = {
    where: VirtualTourScalarWhereInput
    data: XOR<VirtualTourUpdateManyMutationInput, VirtualTourUncheckedUpdateManyWithoutPropertyInput>
  }

  export type VirtualTourScalarWhereInput = {
    AND?: VirtualTourScalarWhereInput | VirtualTourScalarWhereInput[]
    OR?: VirtualTourScalarWhereInput[]
    NOT?: VirtualTourScalarWhereInput | VirtualTourScalarWhereInput[]
    id?: StringFilter<"VirtualTour"> | string
    url?: StringFilter<"VirtualTour"> | string
    platform?: StringNullableFilter<"VirtualTour"> | string | null
    caption?: StringNullableFilter<"VirtualTour"> | string | null
    order?: IntFilter<"VirtualTour"> | number
    createdAt?: DateTimeFilter<"VirtualTour"> | Date | string
    propertyId?: StringFilter<"VirtualTour"> | string
  }

  export type PropertyViewUpsertWithWhereUniqueWithoutPropertyInput = {
    where: PropertyViewWhereUniqueInput
    update: XOR<PropertyViewUpdateWithoutPropertyInput, PropertyViewUncheckedUpdateWithoutPropertyInput>
    create: XOR<PropertyViewCreateWithoutPropertyInput, PropertyViewUncheckedCreateWithoutPropertyInput>
  }

  export type PropertyViewUpdateWithWhereUniqueWithoutPropertyInput = {
    where: PropertyViewWhereUniqueInput
    data: XOR<PropertyViewUpdateWithoutPropertyInput, PropertyViewUncheckedUpdateWithoutPropertyInput>
  }

  export type PropertyViewUpdateManyWithWhereWithoutPropertyInput = {
    where: PropertyViewScalarWhereInput
    data: XOR<PropertyViewUpdateManyMutationInput, PropertyViewUncheckedUpdateManyWithoutPropertyInput>
  }

  export type FavoriteUpsertWithWhereUniqueWithoutPropertyInput = {
    where: FavoriteWhereUniqueInput
    update: XOR<FavoriteUpdateWithoutPropertyInput, FavoriteUncheckedUpdateWithoutPropertyInput>
    create: XOR<FavoriteCreateWithoutPropertyInput, FavoriteUncheckedCreateWithoutPropertyInput>
  }

  export type FavoriteUpdateWithWhereUniqueWithoutPropertyInput = {
    where: FavoriteWhereUniqueInput
    data: XOR<FavoriteUpdateWithoutPropertyInput, FavoriteUncheckedUpdateWithoutPropertyInput>
  }

  export type FavoriteUpdateManyWithWhereWithoutPropertyInput = {
    where: FavoriteScalarWhereInput
    data: XOR<FavoriteUpdateManyMutationInput, FavoriteUncheckedUpdateManyWithoutPropertyInput>
  }

  export type PropertyRequestUpsertWithWhereUniqueWithoutPropertyInput = {
    where: PropertyRequestWhereUniqueInput
    update: XOR<PropertyRequestUpdateWithoutPropertyInput, PropertyRequestUncheckedUpdateWithoutPropertyInput>
    create: XOR<PropertyRequestCreateWithoutPropertyInput, PropertyRequestUncheckedCreateWithoutPropertyInput>
  }

  export type PropertyRequestUpdateWithWhereUniqueWithoutPropertyInput = {
    where: PropertyRequestWhereUniqueInput
    data: XOR<PropertyRequestUpdateWithoutPropertyInput, PropertyRequestUncheckedUpdateWithoutPropertyInput>
  }

  export type PropertyRequestUpdateManyWithWhereWithoutPropertyInput = {
    where: PropertyRequestScalarWhereInput
    data: XOR<PropertyRequestUpdateManyMutationInput, PropertyRequestUncheckedUpdateManyWithoutPropertyInput>
  }

  export type PropertyInquiryUpsertWithWhereUniqueWithoutPropertyInput = {
    where: PropertyInquiryWhereUniqueInput
    update: XOR<PropertyInquiryUpdateWithoutPropertyInput, PropertyInquiryUncheckedUpdateWithoutPropertyInput>
    create: XOR<PropertyInquiryCreateWithoutPropertyInput, PropertyInquiryUncheckedCreateWithoutPropertyInput>
  }

  export type PropertyInquiryUpdateWithWhereUniqueWithoutPropertyInput = {
    where: PropertyInquiryWhereUniqueInput
    data: XOR<PropertyInquiryUpdateWithoutPropertyInput, PropertyInquiryUncheckedUpdateWithoutPropertyInput>
  }

  export type PropertyInquiryUpdateManyWithWhereWithoutPropertyInput = {
    where: PropertyInquiryScalarWhereInput
    data: XOR<PropertyInquiryUpdateManyMutationInput, PropertyInquiryUncheckedUpdateManyWithoutPropertyInput>
  }

  export type PropertyComparisonPropertiesUpsertWithWhereUniqueWithoutPropertyInput = {
    where: PropertyComparisonPropertiesWhereUniqueInput
    update: XOR<PropertyComparisonPropertiesUpdateWithoutPropertyInput, PropertyComparisonPropertiesUncheckedUpdateWithoutPropertyInput>
    create: XOR<PropertyComparisonPropertiesCreateWithoutPropertyInput, PropertyComparisonPropertiesUncheckedCreateWithoutPropertyInput>
  }

  export type PropertyComparisonPropertiesUpdateWithWhereUniqueWithoutPropertyInput = {
    where: PropertyComparisonPropertiesWhereUniqueInput
    data: XOR<PropertyComparisonPropertiesUpdateWithoutPropertyInput, PropertyComparisonPropertiesUncheckedUpdateWithoutPropertyInput>
  }

  export type PropertyComparisonPropertiesUpdateManyWithWhereWithoutPropertyInput = {
    where: PropertyComparisonPropertiesScalarWhereInput
    data: XOR<PropertyComparisonPropertiesUpdateManyMutationInput, PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyInput>
  }

  export type PropertyComparisonPropertiesScalarWhereInput = {
    AND?: PropertyComparisonPropertiesScalarWhereInput | PropertyComparisonPropertiesScalarWhereInput[]
    OR?: PropertyComparisonPropertiesScalarWhereInput[]
    NOT?: PropertyComparisonPropertiesScalarWhereInput | PropertyComparisonPropertiesScalarWhereInput[]
    id?: StringFilter<"PropertyComparisonProperties"> | string
    propertyComparisonId?: StringFilter<"PropertyComparisonProperties"> | string
    propertyId?: StringFilter<"PropertyComparisonProperties"> | string
  }

  export type PropertyReviewUpsertWithWhereUniqueWithoutPropertyInput = {
    where: PropertyReviewWhereUniqueInput
    update: XOR<PropertyReviewUpdateWithoutPropertyInput, PropertyReviewUncheckedUpdateWithoutPropertyInput>
    create: XOR<PropertyReviewCreateWithoutPropertyInput, PropertyReviewUncheckedCreateWithoutPropertyInput>
  }

  export type PropertyReviewUpdateWithWhereUniqueWithoutPropertyInput = {
    where: PropertyReviewWhereUniqueInput
    data: XOR<PropertyReviewUpdateWithoutPropertyInput, PropertyReviewUncheckedUpdateWithoutPropertyInput>
  }

  export type PropertyReviewUpdateManyWithWhereWithoutPropertyInput = {
    where: PropertyReviewScalarWhereInput
    data: XOR<PropertyReviewUpdateManyMutationInput, PropertyReviewUncheckedUpdateManyWithoutPropertyInput>
  }

  export type PropertyCommentUpsertWithWhereUniqueWithoutPropertyInput = {
    where: PropertyCommentWhereUniqueInput
    update: XOR<PropertyCommentUpdateWithoutPropertyInput, PropertyCommentUncheckedUpdateWithoutPropertyInput>
    create: XOR<PropertyCommentCreateWithoutPropertyInput, PropertyCommentUncheckedCreateWithoutPropertyInput>
  }

  export type PropertyCommentUpdateWithWhereUniqueWithoutPropertyInput = {
    where: PropertyCommentWhereUniqueInput
    data: XOR<PropertyCommentUpdateWithoutPropertyInput, PropertyCommentUncheckedUpdateWithoutPropertyInput>
  }

  export type PropertyCommentUpdateManyWithWhereWithoutPropertyInput = {
    where: PropertyCommentScalarWhereInput
    data: XOR<PropertyCommentUpdateManyMutationInput, PropertyCommentUncheckedUpdateManyWithoutPropertyInput>
  }

  export type PropertyViewingUpsertWithWhereUniqueWithoutPropertyInput = {
    where: PropertyViewingWhereUniqueInput
    update: XOR<PropertyViewingUpdateWithoutPropertyInput, PropertyViewingUncheckedUpdateWithoutPropertyInput>
    create: XOR<PropertyViewingCreateWithoutPropertyInput, PropertyViewingUncheckedCreateWithoutPropertyInput>
  }

  export type PropertyViewingUpdateWithWhereUniqueWithoutPropertyInput = {
    where: PropertyViewingWhereUniqueInput
    data: XOR<PropertyViewingUpdateWithoutPropertyInput, PropertyViewingUncheckedUpdateWithoutPropertyInput>
  }

  export type PropertyViewingUpdateManyWithWhereWithoutPropertyInput = {
    where: PropertyViewingScalarWhereInput
    data: XOR<PropertyViewingUpdateManyMutationInput, PropertyViewingUncheckedUpdateManyWithoutPropertyInput>
  }

  export type PropertyAnalyticsUpsertWithWhereUniqueWithoutPropertyInput = {
    where: PropertyAnalyticsWhereUniqueInput
    update: XOR<PropertyAnalyticsUpdateWithoutPropertyInput, PropertyAnalyticsUncheckedUpdateWithoutPropertyInput>
    create: XOR<PropertyAnalyticsCreateWithoutPropertyInput, PropertyAnalyticsUncheckedCreateWithoutPropertyInput>
  }

  export type PropertyAnalyticsUpdateWithWhereUniqueWithoutPropertyInput = {
    where: PropertyAnalyticsWhereUniqueInput
    data: XOR<PropertyAnalyticsUpdateWithoutPropertyInput, PropertyAnalyticsUncheckedUpdateWithoutPropertyInput>
  }

  export type PropertyAnalyticsUpdateManyWithWhereWithoutPropertyInput = {
    where: PropertyAnalyticsScalarWhereInput
    data: XOR<PropertyAnalyticsUpdateManyMutationInput, PropertyAnalyticsUncheckedUpdateManyWithoutPropertyInput>
  }

  export type AdminActionUpsertWithWhereUniqueWithoutPropertyInput = {
    where: AdminActionWhereUniqueInput
    update: XOR<AdminActionUpdateWithoutPropertyInput, AdminActionUncheckedUpdateWithoutPropertyInput>
    create: XOR<AdminActionCreateWithoutPropertyInput, AdminActionUncheckedCreateWithoutPropertyInput>
  }

  export type AdminActionUpdateWithWhereUniqueWithoutPropertyInput = {
    where: AdminActionWhereUniqueInput
    data: XOR<AdminActionUpdateWithoutPropertyInput, AdminActionUncheckedUpdateWithoutPropertyInput>
  }

  export type AdminActionUpdateManyWithWhereWithoutPropertyInput = {
    where: AdminActionScalarWhereInput
    data: XOR<AdminActionUpdateManyMutationInput, AdminActionUncheckedUpdateManyWithoutPropertyInput>
  }

  export type PaymentUpsertWithWhereUniqueWithoutPropertyInput = {
    where: PaymentWhereUniqueInput
    update: XOR<PaymentUpdateWithoutPropertyInput, PaymentUncheckedUpdateWithoutPropertyInput>
    create: XOR<PaymentCreateWithoutPropertyInput, PaymentUncheckedCreateWithoutPropertyInput>
  }

  export type PaymentUpdateWithWhereUniqueWithoutPropertyInput = {
    where: PaymentWhereUniqueInput
    data: XOR<PaymentUpdateWithoutPropertyInput, PaymentUncheckedUpdateWithoutPropertyInput>
  }

  export type PaymentUpdateManyWithWhereWithoutPropertyInput = {
    where: PaymentScalarWhereInput
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyWithoutPropertyInput>
  }

  export type AgencyInquiryUpsertWithWhereUniqueWithoutPropertyInput = {
    where: AgencyInquiryWhereUniqueInput
    update: XOR<AgencyInquiryUpdateWithoutPropertyInput, AgencyInquiryUncheckedUpdateWithoutPropertyInput>
    create: XOR<AgencyInquiryCreateWithoutPropertyInput, AgencyInquiryUncheckedCreateWithoutPropertyInput>
  }

  export type AgencyInquiryUpdateWithWhereUniqueWithoutPropertyInput = {
    where: AgencyInquiryWhereUniqueInput
    data: XOR<AgencyInquiryUpdateWithoutPropertyInput, AgencyInquiryUncheckedUpdateWithoutPropertyInput>
  }

  export type AgencyInquiryUpdateManyWithWhereWithoutPropertyInput = {
    where: AgencyInquiryScalarWhereInput
    data: XOR<AgencyInquiryUpdateManyMutationInput, AgencyInquiryUncheckedUpdateManyWithoutPropertyInput>
  }

  export type PropertyCreateWithoutPhotosInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    owner: UserCreateNestedOneWithoutOwnedPropertiesInput
    agent?: UserCreateNestedOneWithoutManagedPropertiesInput
    agency?: AgencyCreateNestedOneWithoutPropertiesInput
    videos?: PropertyVideoCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourCreateNestedManyWithoutPropertyInput
    views?: PropertyViewCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionCreateNestedManyWithoutPropertyInput
    payments?: PaymentCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryCreateNestedManyWithoutPropertyInput
  }

  export type PropertyUncheckedCreateWithoutPhotosInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    ownerId: string
    agentId?: string | null
    agencyId?: string | null
    videos?: PropertyVideoUncheckedCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourUncheckedCreateNestedManyWithoutPropertyInput
    views?: PropertyViewUncheckedCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesUncheckedCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingUncheckedCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutPropertyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutPropertyInput
  }

  export type PropertyCreateOrConnectWithoutPhotosInput = {
    where: PropertyWhereUniqueInput
    create: XOR<PropertyCreateWithoutPhotosInput, PropertyUncheckedCreateWithoutPhotosInput>
  }

  export type PropertyUpsertWithoutPhotosInput = {
    update: XOR<PropertyUpdateWithoutPhotosInput, PropertyUncheckedUpdateWithoutPhotosInput>
    create: XOR<PropertyCreateWithoutPhotosInput, PropertyUncheckedCreateWithoutPhotosInput>
    where?: PropertyWhereInput
  }

  export type PropertyUpdateToOneWithWhereWithoutPhotosInput = {
    where?: PropertyWhereInput
    data: XOR<PropertyUpdateWithoutPhotosInput, PropertyUncheckedUpdateWithoutPhotosInput>
  }

  export type PropertyUpdateWithoutPhotosInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedPropertiesNestedInput
    agent?: UserUpdateOneWithoutManagedPropertiesNestedInput
    agency?: AgencyUpdateOneWithoutPropertiesNestedInput
    videos?: PropertyVideoUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyUncheckedUpdateWithoutPhotosInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    agentId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    videos?: PropertyVideoUncheckedUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUncheckedUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUncheckedUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUncheckedUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUncheckedUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyCreateWithoutVideosInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    owner: UserCreateNestedOneWithoutOwnedPropertiesInput
    agent?: UserCreateNestedOneWithoutManagedPropertiesInput
    agency?: AgencyCreateNestedOneWithoutPropertiesInput
    photos?: PropertyPhotoCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourCreateNestedManyWithoutPropertyInput
    views?: PropertyViewCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionCreateNestedManyWithoutPropertyInput
    payments?: PaymentCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryCreateNestedManyWithoutPropertyInput
  }

  export type PropertyUncheckedCreateWithoutVideosInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    ownerId: string
    agentId?: string | null
    agencyId?: string | null
    photos?: PropertyPhotoUncheckedCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourUncheckedCreateNestedManyWithoutPropertyInput
    views?: PropertyViewUncheckedCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesUncheckedCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingUncheckedCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutPropertyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutPropertyInput
  }

  export type PropertyCreateOrConnectWithoutVideosInput = {
    where: PropertyWhereUniqueInput
    create: XOR<PropertyCreateWithoutVideosInput, PropertyUncheckedCreateWithoutVideosInput>
  }

  export type PropertyUpsertWithoutVideosInput = {
    update: XOR<PropertyUpdateWithoutVideosInput, PropertyUncheckedUpdateWithoutVideosInput>
    create: XOR<PropertyCreateWithoutVideosInput, PropertyUncheckedCreateWithoutVideosInput>
    where?: PropertyWhereInput
  }

  export type PropertyUpdateToOneWithWhereWithoutVideosInput = {
    where?: PropertyWhereInput
    data: XOR<PropertyUpdateWithoutVideosInput, PropertyUncheckedUpdateWithoutVideosInput>
  }

  export type PropertyUpdateWithoutVideosInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedPropertiesNestedInput
    agent?: UserUpdateOneWithoutManagedPropertiesNestedInput
    agency?: AgencyUpdateOneWithoutPropertiesNestedInput
    photos?: PropertyPhotoUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyUncheckedUpdateWithoutVideosInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    agentId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: PropertyPhotoUncheckedUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUncheckedUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUncheckedUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUncheckedUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUncheckedUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyCreateWithoutVirtualToursInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    owner: UserCreateNestedOneWithoutOwnedPropertiesInput
    agent?: UserCreateNestedOneWithoutManagedPropertiesInput
    agency?: AgencyCreateNestedOneWithoutPropertiesInput
    photos?: PropertyPhotoCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoCreateNestedManyWithoutPropertyInput
    views?: PropertyViewCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionCreateNestedManyWithoutPropertyInput
    payments?: PaymentCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryCreateNestedManyWithoutPropertyInput
  }

  export type PropertyUncheckedCreateWithoutVirtualToursInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    ownerId: string
    agentId?: string | null
    agencyId?: string | null
    photos?: PropertyPhotoUncheckedCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoUncheckedCreateNestedManyWithoutPropertyInput
    views?: PropertyViewUncheckedCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesUncheckedCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingUncheckedCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutPropertyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutPropertyInput
  }

  export type PropertyCreateOrConnectWithoutVirtualToursInput = {
    where: PropertyWhereUniqueInput
    create: XOR<PropertyCreateWithoutVirtualToursInput, PropertyUncheckedCreateWithoutVirtualToursInput>
  }

  export type PropertyUpsertWithoutVirtualToursInput = {
    update: XOR<PropertyUpdateWithoutVirtualToursInput, PropertyUncheckedUpdateWithoutVirtualToursInput>
    create: XOR<PropertyCreateWithoutVirtualToursInput, PropertyUncheckedCreateWithoutVirtualToursInput>
    where?: PropertyWhereInput
  }

  export type PropertyUpdateToOneWithWhereWithoutVirtualToursInput = {
    where?: PropertyWhereInput
    data: XOR<PropertyUpdateWithoutVirtualToursInput, PropertyUncheckedUpdateWithoutVirtualToursInput>
  }

  export type PropertyUpdateWithoutVirtualToursInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedPropertiesNestedInput
    agent?: UserUpdateOneWithoutManagedPropertiesNestedInput
    agency?: AgencyUpdateOneWithoutPropertiesNestedInput
    photos?: PropertyPhotoUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyUncheckedUpdateWithoutVirtualToursInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    agentId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: PropertyPhotoUncheckedUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUncheckedUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUncheckedUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUncheckedUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUncheckedUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
  }

  export type UserCreateWithoutViewedPropertiesInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListCreateNestedManyWithoutUserInput
    requests?: PropertyRequestCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsCreateNestedManyWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    agencyRoles?: AgencyRoleCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutViewedPropertiesInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListUncheckedCreateNestedManyWithoutUserInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonUncheckedCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyUncheckedCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyUncheckedCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingUncheckedCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingUncheckedCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutUserInput
    agencyRoles?: AgencyRoleUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberUncheckedCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutViewedPropertiesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutViewedPropertiesInput, UserUncheckedCreateWithoutViewedPropertiesInput>
  }

  export type PropertyCreateWithoutViewsInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    owner: UserCreateNestedOneWithoutOwnedPropertiesInput
    agent?: UserCreateNestedOneWithoutManagedPropertiesInput
    agency?: AgencyCreateNestedOneWithoutPropertiesInput
    photos?: PropertyPhotoCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionCreateNestedManyWithoutPropertyInput
    payments?: PaymentCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryCreateNestedManyWithoutPropertyInput
  }

  export type PropertyUncheckedCreateWithoutViewsInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    ownerId: string
    agentId?: string | null
    agencyId?: string | null
    photos?: PropertyPhotoUncheckedCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoUncheckedCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourUncheckedCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesUncheckedCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingUncheckedCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutPropertyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutPropertyInput
  }

  export type PropertyCreateOrConnectWithoutViewsInput = {
    where: PropertyWhereUniqueInput
    create: XOR<PropertyCreateWithoutViewsInput, PropertyUncheckedCreateWithoutViewsInput>
  }

  export type UserUpsertWithoutViewedPropertiesInput = {
    update: XOR<UserUpdateWithoutViewedPropertiesInput, UserUncheckedUpdateWithoutViewedPropertiesInput>
    create: XOR<UserCreateWithoutViewedPropertiesInput, UserUncheckedCreateWithoutViewedPropertiesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutViewedPropertiesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutViewedPropertiesInput, UserUncheckedUpdateWithoutViewedPropertiesInput>
  }

  export type UserUpdateWithoutViewedPropertiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUpdateManyWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    agencyRoles?: AgencyRoleUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutViewedPropertiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUncheckedUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUncheckedUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUncheckedUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUncheckedUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUncheckedUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUncheckedUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUncheckedUpdateManyWithoutUserNestedInput
    agencyRoles?: AgencyRoleUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUncheckedUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PropertyUpsertWithoutViewsInput = {
    update: XOR<PropertyUpdateWithoutViewsInput, PropertyUncheckedUpdateWithoutViewsInput>
    create: XOR<PropertyCreateWithoutViewsInput, PropertyUncheckedCreateWithoutViewsInput>
    where?: PropertyWhereInput
  }

  export type PropertyUpdateToOneWithWhereWithoutViewsInput = {
    where?: PropertyWhereInput
    data: XOR<PropertyUpdateWithoutViewsInput, PropertyUncheckedUpdateWithoutViewsInput>
  }

  export type PropertyUpdateWithoutViewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedPropertiesNestedInput
    agent?: UserUpdateOneWithoutManagedPropertiesNestedInput
    agency?: AgencyUpdateOneWithoutPropertiesNestedInput
    photos?: PropertyPhotoUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyUncheckedUpdateWithoutViewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    agentId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: PropertyPhotoUncheckedUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUncheckedUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUncheckedUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUncheckedUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUncheckedUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
  }

  export type UserCreateWithoutFavoritesInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    viewedProperties?: PropertyViewCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListCreateNestedManyWithoutUserInput
    requests?: PropertyRequestCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsCreateNestedManyWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    agencyRoles?: AgencyRoleCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutFavoritesInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    viewedProperties?: PropertyViewUncheckedCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListUncheckedCreateNestedManyWithoutUserInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonUncheckedCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyUncheckedCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyUncheckedCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingUncheckedCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingUncheckedCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutUserInput
    agencyRoles?: AgencyRoleUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberUncheckedCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutFavoritesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFavoritesInput, UserUncheckedCreateWithoutFavoritesInput>
  }

  export type PropertyCreateWithoutFavoritesInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    owner: UserCreateNestedOneWithoutOwnedPropertiesInput
    agent?: UserCreateNestedOneWithoutManagedPropertiesInput
    agency?: AgencyCreateNestedOneWithoutPropertiesInput
    photos?: PropertyPhotoCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourCreateNestedManyWithoutPropertyInput
    views?: PropertyViewCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionCreateNestedManyWithoutPropertyInput
    payments?: PaymentCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryCreateNestedManyWithoutPropertyInput
  }

  export type PropertyUncheckedCreateWithoutFavoritesInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    ownerId: string
    agentId?: string | null
    agencyId?: string | null
    photos?: PropertyPhotoUncheckedCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoUncheckedCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourUncheckedCreateNestedManyWithoutPropertyInput
    views?: PropertyViewUncheckedCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesUncheckedCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingUncheckedCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutPropertyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutPropertyInput
  }

  export type PropertyCreateOrConnectWithoutFavoritesInput = {
    where: PropertyWhereUniqueInput
    create: XOR<PropertyCreateWithoutFavoritesInput, PropertyUncheckedCreateWithoutFavoritesInput>
  }

  export type FavoriteListCreateWithoutFavoritesInput = {
    id?: string
    name: string
    description?: string | null
    isPublic?: boolean
    isDefault?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutFavoriteListsInput
  }

  export type FavoriteListUncheckedCreateWithoutFavoritesInput = {
    id?: string
    name: string
    description?: string | null
    isPublic?: boolean
    isDefault?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
  }

  export type FavoriteListCreateOrConnectWithoutFavoritesInput = {
    where: FavoriteListWhereUniqueInput
    create: XOR<FavoriteListCreateWithoutFavoritesInput, FavoriteListUncheckedCreateWithoutFavoritesInput>
  }

  export type UserUpsertWithoutFavoritesInput = {
    update: XOR<UserUpdateWithoutFavoritesInput, UserUncheckedUpdateWithoutFavoritesInput>
    create: XOR<UserCreateWithoutFavoritesInput, UserUncheckedCreateWithoutFavoritesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFavoritesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFavoritesInput, UserUncheckedUpdateWithoutFavoritesInput>
  }

  export type UserUpdateWithoutFavoritesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewedProperties?: PropertyViewUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUpdateManyWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    agencyRoles?: AgencyRoleUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutFavoritesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    viewedProperties?: PropertyViewUncheckedUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUncheckedUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUncheckedUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUncheckedUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUncheckedUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUncheckedUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUncheckedUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUncheckedUpdateManyWithoutUserNestedInput
    agencyRoles?: AgencyRoleUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUncheckedUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PropertyUpsertWithoutFavoritesInput = {
    update: XOR<PropertyUpdateWithoutFavoritesInput, PropertyUncheckedUpdateWithoutFavoritesInput>
    create: XOR<PropertyCreateWithoutFavoritesInput, PropertyUncheckedCreateWithoutFavoritesInput>
    where?: PropertyWhereInput
  }

  export type PropertyUpdateToOneWithWhereWithoutFavoritesInput = {
    where?: PropertyWhereInput
    data: XOR<PropertyUpdateWithoutFavoritesInput, PropertyUncheckedUpdateWithoutFavoritesInput>
  }

  export type PropertyUpdateWithoutFavoritesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedPropertiesNestedInput
    agent?: UserUpdateOneWithoutManagedPropertiesNestedInput
    agency?: AgencyUpdateOneWithoutPropertiesNestedInput
    photos?: PropertyPhotoUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyUncheckedUpdateWithoutFavoritesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    agentId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: PropertyPhotoUncheckedUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUncheckedUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUncheckedUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUncheckedUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUncheckedUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUncheckedUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
  }

  export type FavoriteListUpsertWithoutFavoritesInput = {
    update: XOR<FavoriteListUpdateWithoutFavoritesInput, FavoriteListUncheckedUpdateWithoutFavoritesInput>
    create: XOR<FavoriteListCreateWithoutFavoritesInput, FavoriteListUncheckedCreateWithoutFavoritesInput>
    where?: FavoriteListWhereInput
  }

  export type FavoriteListUpdateToOneWithWhereWithoutFavoritesInput = {
    where?: FavoriteListWhereInput
    data: XOR<FavoriteListUpdateWithoutFavoritesInput, FavoriteListUncheckedUpdateWithoutFavoritesInput>
  }

  export type FavoriteListUpdateWithoutFavoritesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutFavoriteListsNestedInput
  }

  export type FavoriteListUncheckedUpdateWithoutFavoritesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type UserCreateWithoutFavoriteListsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    viewedProperties?: PropertyViewCreateNestedManyWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    requests?: PropertyRequestCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsCreateNestedManyWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    agencyRoles?: AgencyRoleCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutFavoriteListsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    viewedProperties?: PropertyViewUncheckedCreateNestedManyWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonUncheckedCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyUncheckedCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyUncheckedCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingUncheckedCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingUncheckedCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutUserInput
    agencyRoles?: AgencyRoleUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberUncheckedCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutFavoriteListsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFavoriteListsInput, UserUncheckedCreateWithoutFavoriteListsInput>
  }

  export type FavoriteCreateWithoutListInput = {
    id?: string
    notes?: string | null
    priority?: number | null
    createdAt?: Date | string
    listId?: string | null
    user: UserCreateNestedOneWithoutFavoritesInput
    property: PropertyCreateNestedOneWithoutFavoritesInput
  }

  export type FavoriteUncheckedCreateWithoutListInput = {
    id?: string
    notes?: string | null
    priority?: number | null
    createdAt?: Date | string
    userId: string
    propertyId: string
    listId?: string | null
  }

  export type FavoriteCreateOrConnectWithoutListInput = {
    where: FavoriteWhereUniqueInput
    create: XOR<FavoriteCreateWithoutListInput, FavoriteUncheckedCreateWithoutListInput>
  }

  export type FavoriteCreateManyListInputEnvelope = {
    data: FavoriteCreateManyListInput | FavoriteCreateManyListInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutFavoriteListsInput = {
    update: XOR<UserUpdateWithoutFavoriteListsInput, UserUncheckedUpdateWithoutFavoriteListsInput>
    create: XOR<UserCreateWithoutFavoriteListsInput, UserUncheckedCreateWithoutFavoriteListsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFavoriteListsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFavoriteListsInput, UserUncheckedUpdateWithoutFavoriteListsInput>
  }

  export type UserUpdateWithoutFavoriteListsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewedProperties?: PropertyViewUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUpdateManyWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    agencyRoles?: AgencyRoleUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutFavoriteListsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    viewedProperties?: PropertyViewUncheckedUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUncheckedUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUncheckedUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUncheckedUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUncheckedUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUncheckedUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUncheckedUpdateManyWithoutUserNestedInput
    agencyRoles?: AgencyRoleUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUncheckedUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type FavoriteUpsertWithWhereUniqueWithoutListInput = {
    where: FavoriteWhereUniqueInput
    update: XOR<FavoriteUpdateWithoutListInput, FavoriteUncheckedUpdateWithoutListInput>
    create: XOR<FavoriteCreateWithoutListInput, FavoriteUncheckedCreateWithoutListInput>
  }

  export type FavoriteUpdateWithWhereUniqueWithoutListInput = {
    where: FavoriteWhereUniqueInput
    data: XOR<FavoriteUpdateWithoutListInput, FavoriteUncheckedUpdateWithoutListInput>
  }

  export type FavoriteUpdateManyWithWhereWithoutListInput = {
    where: FavoriteScalarWhereInput
    data: XOR<FavoriteUpdateManyMutationInput, FavoriteUncheckedUpdateManyWithoutListInput>
  }

  export type UserCreateWithoutRequestsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    viewedProperties?: PropertyViewCreateNestedManyWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListCreateNestedManyWithoutUserInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsCreateNestedManyWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    agencyRoles?: AgencyRoleCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutRequestsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    viewedProperties?: PropertyViewUncheckedCreateNestedManyWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListUncheckedCreateNestedManyWithoutUserInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonUncheckedCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyUncheckedCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyUncheckedCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingUncheckedCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingUncheckedCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutUserInput
    agencyRoles?: AgencyRoleUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberUncheckedCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutRequestsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRequestsInput, UserUncheckedCreateWithoutRequestsInput>
  }

  export type PropertyCreateWithoutRequestsInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    owner: UserCreateNestedOneWithoutOwnedPropertiesInput
    agent?: UserCreateNestedOneWithoutManagedPropertiesInput
    agency?: AgencyCreateNestedOneWithoutPropertiesInput
    photos?: PropertyPhotoCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourCreateNestedManyWithoutPropertyInput
    views?: PropertyViewCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionCreateNestedManyWithoutPropertyInput
    payments?: PaymentCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryCreateNestedManyWithoutPropertyInput
  }

  export type PropertyUncheckedCreateWithoutRequestsInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    ownerId: string
    agentId?: string | null
    agencyId?: string | null
    photos?: PropertyPhotoUncheckedCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoUncheckedCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourUncheckedCreateNestedManyWithoutPropertyInput
    views?: PropertyViewUncheckedCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesUncheckedCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingUncheckedCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutPropertyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutPropertyInput
  }

  export type PropertyCreateOrConnectWithoutRequestsInput = {
    where: PropertyWhereUniqueInput
    create: XOR<PropertyCreateWithoutRequestsInput, PropertyUncheckedCreateWithoutRequestsInput>
  }

  export type PropertyViewingCreateWithoutRequestInput = {
    id?: string
    scheduledAt: Date | string
    duration: number
    status?: string
    notes?: string | null
    buyerNotes?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    requestId?: string | null
    property: PropertyCreateNestedOneWithoutViewingsInput
    seller: UserCreateNestedOneWithoutScheduledViewingsInput
    buyer?: UserCreateNestedOneWithoutBuyerViewingsInput
  }

  export type PropertyViewingUncheckedCreateWithoutRequestInput = {
    id?: string
    scheduledAt: Date | string
    duration: number
    status?: string
    notes?: string | null
    buyerNotes?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    propertyId: string
    sellerId: string
    buyerId?: string | null
    requestId?: string | null
  }

  export type PropertyViewingCreateOrConnectWithoutRequestInput = {
    where: PropertyViewingWhereUniqueInput
    create: XOR<PropertyViewingCreateWithoutRequestInput, PropertyViewingUncheckedCreateWithoutRequestInput>
  }

  export type PropertyViewingCreateManyRequestInputEnvelope = {
    data: PropertyViewingCreateManyRequestInput | PropertyViewingCreateManyRequestInput[]
    skipDuplicates?: boolean
  }

  export type PaymentCreateWithoutRequestInput = {
    id?: string
    amount: number
    currency?: string
    status?: $Enums.PaymentStatus
    paymentMethod: string
    transactionId?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    requestId?: string | null
    user: UserCreateNestedOneWithoutPaymentsInput
    property?: PropertyCreateNestedOneWithoutPaymentsInput
  }

  export type PaymentUncheckedCreateWithoutRequestInput = {
    id?: string
    amount: number
    currency?: string
    status?: $Enums.PaymentStatus
    paymentMethod: string
    transactionId?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    propertyId?: string | null
    requestId?: string | null
  }

  export type PaymentCreateOrConnectWithoutRequestInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutRequestInput, PaymentUncheckedCreateWithoutRequestInput>
  }

  export type PaymentCreateManyRequestInputEnvelope = {
    data: PaymentCreateManyRequestInput | PaymentCreateManyRequestInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutRequestsInput = {
    update: XOR<UserUpdateWithoutRequestsInput, UserUncheckedUpdateWithoutRequestsInput>
    create: XOR<UserCreateWithoutRequestsInput, UserUncheckedCreateWithoutRequestsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutRequestsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutRequestsInput, UserUncheckedUpdateWithoutRequestsInput>
  }

  export type UserUpdateWithoutRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewedProperties?: PropertyViewUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUpdateManyWithoutUserNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUpdateManyWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    agencyRoles?: AgencyRoleUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    viewedProperties?: PropertyViewUncheckedUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUncheckedUpdateManyWithoutUserNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUncheckedUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUncheckedUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUncheckedUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUncheckedUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUncheckedUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUncheckedUpdateManyWithoutUserNestedInput
    agencyRoles?: AgencyRoleUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUncheckedUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PropertyUpsertWithoutRequestsInput = {
    update: XOR<PropertyUpdateWithoutRequestsInput, PropertyUncheckedUpdateWithoutRequestsInput>
    create: XOR<PropertyCreateWithoutRequestsInput, PropertyUncheckedCreateWithoutRequestsInput>
    where?: PropertyWhereInput
  }

  export type PropertyUpdateToOneWithWhereWithoutRequestsInput = {
    where?: PropertyWhereInput
    data: XOR<PropertyUpdateWithoutRequestsInput, PropertyUncheckedUpdateWithoutRequestsInput>
  }

  export type PropertyUpdateWithoutRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedPropertiesNestedInput
    agent?: UserUpdateOneWithoutManagedPropertiesNestedInput
    agency?: AgencyUpdateOneWithoutPropertiesNestedInput
    photos?: PropertyPhotoUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyUncheckedUpdateWithoutRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    agentId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: PropertyPhotoUncheckedUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUncheckedUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUncheckedUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUncheckedUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUncheckedUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUncheckedUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyViewingUpsertWithWhereUniqueWithoutRequestInput = {
    where: PropertyViewingWhereUniqueInput
    update: XOR<PropertyViewingUpdateWithoutRequestInput, PropertyViewingUncheckedUpdateWithoutRequestInput>
    create: XOR<PropertyViewingCreateWithoutRequestInput, PropertyViewingUncheckedCreateWithoutRequestInput>
  }

  export type PropertyViewingUpdateWithWhereUniqueWithoutRequestInput = {
    where: PropertyViewingWhereUniqueInput
    data: XOR<PropertyViewingUpdateWithoutRequestInput, PropertyViewingUncheckedUpdateWithoutRequestInput>
  }

  export type PropertyViewingUpdateManyWithWhereWithoutRequestInput = {
    where: PropertyViewingScalarWhereInput
    data: XOR<PropertyViewingUpdateManyMutationInput, PropertyViewingUncheckedUpdateManyWithoutRequestInput>
  }

  export type PaymentUpsertWithWhereUniqueWithoutRequestInput = {
    where: PaymentWhereUniqueInput
    update: XOR<PaymentUpdateWithoutRequestInput, PaymentUncheckedUpdateWithoutRequestInput>
    create: XOR<PaymentCreateWithoutRequestInput, PaymentUncheckedCreateWithoutRequestInput>
  }

  export type PaymentUpdateWithWhereUniqueWithoutRequestInput = {
    where: PaymentWhereUniqueInput
    data: XOR<PaymentUpdateWithoutRequestInput, PaymentUncheckedUpdateWithoutRequestInput>
  }

  export type PaymentUpdateManyWithWhereWithoutRequestInput = {
    where: PaymentScalarWhereInput
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyWithoutRequestInput>
  }

  export type UserCreateWithoutInquiriesInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    viewedProperties?: PropertyViewCreateNestedManyWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListCreateNestedManyWithoutUserInput
    requests?: PropertyRequestCreateNestedManyWithoutBuyerInput
    propertyComparisons?: PropertyComparisonCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsCreateNestedManyWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    agencyRoles?: AgencyRoleCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutInquiriesInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    viewedProperties?: PropertyViewUncheckedCreateNestedManyWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListUncheckedCreateNestedManyWithoutUserInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutBuyerInput
    propertyComparisons?: PropertyComparisonUncheckedCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyUncheckedCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyUncheckedCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingUncheckedCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingUncheckedCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutUserInput
    agencyRoles?: AgencyRoleUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberUncheckedCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutInquiriesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutInquiriesInput, UserUncheckedCreateWithoutInquiriesInput>
  }

  export type PropertyCreateWithoutInquiriesInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    owner: UserCreateNestedOneWithoutOwnedPropertiesInput
    agent?: UserCreateNestedOneWithoutManagedPropertiesInput
    agency?: AgencyCreateNestedOneWithoutPropertiesInput
    photos?: PropertyPhotoCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourCreateNestedManyWithoutPropertyInput
    views?: PropertyViewCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionCreateNestedManyWithoutPropertyInput
    payments?: PaymentCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryCreateNestedManyWithoutPropertyInput
  }

  export type PropertyUncheckedCreateWithoutInquiriesInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    ownerId: string
    agentId?: string | null
    agencyId?: string | null
    photos?: PropertyPhotoUncheckedCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoUncheckedCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourUncheckedCreateNestedManyWithoutPropertyInput
    views?: PropertyViewUncheckedCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesUncheckedCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingUncheckedCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutPropertyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutPropertyInput
  }

  export type PropertyCreateOrConnectWithoutInquiriesInput = {
    where: PropertyWhereUniqueInput
    create: XOR<PropertyCreateWithoutInquiriesInput, PropertyUncheckedCreateWithoutInquiriesInput>
  }

  export type UserUpsertWithoutInquiriesInput = {
    update: XOR<UserUpdateWithoutInquiriesInput, UserUncheckedUpdateWithoutInquiriesInput>
    create: XOR<UserCreateWithoutInquiriesInput, UserUncheckedCreateWithoutInquiriesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutInquiriesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutInquiriesInput, UserUncheckedUpdateWithoutInquiriesInput>
  }

  export type UserUpdateWithoutInquiriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewedProperties?: PropertyViewUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUpdateManyWithoutBuyerNestedInput
    propertyComparisons?: PropertyComparisonUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUpdateManyWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    agencyRoles?: AgencyRoleUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutInquiriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    viewedProperties?: PropertyViewUncheckedUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUncheckedUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutBuyerNestedInput
    propertyComparisons?: PropertyComparisonUncheckedUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUncheckedUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUncheckedUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUncheckedUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUncheckedUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUncheckedUpdateManyWithoutUserNestedInput
    agencyRoles?: AgencyRoleUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUncheckedUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PropertyUpsertWithoutInquiriesInput = {
    update: XOR<PropertyUpdateWithoutInquiriesInput, PropertyUncheckedUpdateWithoutInquiriesInput>
    create: XOR<PropertyCreateWithoutInquiriesInput, PropertyUncheckedCreateWithoutInquiriesInput>
    where?: PropertyWhereInput
  }

  export type PropertyUpdateToOneWithWhereWithoutInquiriesInput = {
    where?: PropertyWhereInput
    data: XOR<PropertyUpdateWithoutInquiriesInput, PropertyUncheckedUpdateWithoutInquiriesInput>
  }

  export type PropertyUpdateWithoutInquiriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedPropertiesNestedInput
    agent?: UserUpdateOneWithoutManagedPropertiesNestedInput
    agency?: AgencyUpdateOneWithoutPropertiesNestedInput
    photos?: PropertyPhotoUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyUncheckedUpdateWithoutInquiriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    agentId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: PropertyPhotoUncheckedUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUncheckedUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUncheckedUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUncheckedUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUncheckedUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUncheckedUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
  }

  export type UserCreateWithoutPropertyComparisonsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    viewedProperties?: PropertyViewCreateNestedManyWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListCreateNestedManyWithoutUserInput
    requests?: PropertyRequestCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsCreateNestedManyWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    agencyRoles?: AgencyRoleCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutPropertyComparisonsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    viewedProperties?: PropertyViewUncheckedCreateNestedManyWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListUncheckedCreateNestedManyWithoutUserInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyUncheckedCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyUncheckedCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingUncheckedCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingUncheckedCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutUserInput
    agencyRoles?: AgencyRoleUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberUncheckedCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutPropertyComparisonsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPropertyComparisonsInput, UserUncheckedCreateWithoutPropertyComparisonsInput>
  }

  export type PropertyComparisonPropertiesCreateWithoutPropertyComparisonInput = {
    id?: string
    property: PropertyCreateNestedOneWithoutComparisonsInput
  }

  export type PropertyComparisonPropertiesUncheckedCreateWithoutPropertyComparisonInput = {
    id?: string
    propertyId: string
  }

  export type PropertyComparisonPropertiesCreateOrConnectWithoutPropertyComparisonInput = {
    where: PropertyComparisonPropertiesWhereUniqueInput
    create: XOR<PropertyComparisonPropertiesCreateWithoutPropertyComparisonInput, PropertyComparisonPropertiesUncheckedCreateWithoutPropertyComparisonInput>
  }

  export type PropertyComparisonPropertiesCreateManyPropertyComparisonInputEnvelope = {
    data: PropertyComparisonPropertiesCreateManyPropertyComparisonInput | PropertyComparisonPropertiesCreateManyPropertyComparisonInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutPropertyComparisonsInput = {
    update: XOR<UserUpdateWithoutPropertyComparisonsInput, UserUncheckedUpdateWithoutPropertyComparisonsInput>
    create: XOR<UserCreateWithoutPropertyComparisonsInput, UserUncheckedCreateWithoutPropertyComparisonsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPropertyComparisonsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPropertyComparisonsInput, UserUncheckedUpdateWithoutPropertyComparisonsInput>
  }

  export type UserUpdateWithoutPropertyComparisonsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewedProperties?: PropertyViewUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUpdateManyWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    agencyRoles?: AgencyRoleUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutPropertyComparisonsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    viewedProperties?: PropertyViewUncheckedUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUncheckedUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUncheckedUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUncheckedUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUncheckedUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUncheckedUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUncheckedUpdateManyWithoutUserNestedInput
    agencyRoles?: AgencyRoleUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUncheckedUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PropertyComparisonPropertiesUpsertWithWhereUniqueWithoutPropertyComparisonInput = {
    where: PropertyComparisonPropertiesWhereUniqueInput
    update: XOR<PropertyComparisonPropertiesUpdateWithoutPropertyComparisonInput, PropertyComparisonPropertiesUncheckedUpdateWithoutPropertyComparisonInput>
    create: XOR<PropertyComparisonPropertiesCreateWithoutPropertyComparisonInput, PropertyComparisonPropertiesUncheckedCreateWithoutPropertyComparisonInput>
  }

  export type PropertyComparisonPropertiesUpdateWithWhereUniqueWithoutPropertyComparisonInput = {
    where: PropertyComparisonPropertiesWhereUniqueInput
    data: XOR<PropertyComparisonPropertiesUpdateWithoutPropertyComparisonInput, PropertyComparisonPropertiesUncheckedUpdateWithoutPropertyComparisonInput>
  }

  export type PropertyComparisonPropertiesUpdateManyWithWhereWithoutPropertyComparisonInput = {
    where: PropertyComparisonPropertiesScalarWhereInput
    data: XOR<PropertyComparisonPropertiesUpdateManyMutationInput, PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyComparisonInput>
  }

  export type PropertyComparisonCreateWithoutPropertyComparisonPropertiesInput = {
    id?: string
    name: string
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutPropertyComparisonsInput
  }

  export type PropertyComparisonUncheckedCreateWithoutPropertyComparisonPropertiesInput = {
    id?: string
    name: string
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
  }

  export type PropertyComparisonCreateOrConnectWithoutPropertyComparisonPropertiesInput = {
    where: PropertyComparisonWhereUniqueInput
    create: XOR<PropertyComparisonCreateWithoutPropertyComparisonPropertiesInput, PropertyComparisonUncheckedCreateWithoutPropertyComparisonPropertiesInput>
  }

  export type PropertyCreateWithoutComparisonsInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    owner: UserCreateNestedOneWithoutOwnedPropertiesInput
    agent?: UserCreateNestedOneWithoutManagedPropertiesInput
    agency?: AgencyCreateNestedOneWithoutPropertiesInput
    photos?: PropertyPhotoCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourCreateNestedManyWithoutPropertyInput
    views?: PropertyViewCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionCreateNestedManyWithoutPropertyInput
    payments?: PaymentCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryCreateNestedManyWithoutPropertyInput
  }

  export type PropertyUncheckedCreateWithoutComparisonsInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    ownerId: string
    agentId?: string | null
    agencyId?: string | null
    photos?: PropertyPhotoUncheckedCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoUncheckedCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourUncheckedCreateNestedManyWithoutPropertyInput
    views?: PropertyViewUncheckedCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingUncheckedCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutPropertyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutPropertyInput
  }

  export type PropertyCreateOrConnectWithoutComparisonsInput = {
    where: PropertyWhereUniqueInput
    create: XOR<PropertyCreateWithoutComparisonsInput, PropertyUncheckedCreateWithoutComparisonsInput>
  }

  export type PropertyComparisonUpsertWithoutPropertyComparisonPropertiesInput = {
    update: XOR<PropertyComparisonUpdateWithoutPropertyComparisonPropertiesInput, PropertyComparisonUncheckedUpdateWithoutPropertyComparisonPropertiesInput>
    create: XOR<PropertyComparisonCreateWithoutPropertyComparisonPropertiesInput, PropertyComparisonUncheckedCreateWithoutPropertyComparisonPropertiesInput>
    where?: PropertyComparisonWhereInput
  }

  export type PropertyComparisonUpdateToOneWithWhereWithoutPropertyComparisonPropertiesInput = {
    where?: PropertyComparisonWhereInput
    data: XOR<PropertyComparisonUpdateWithoutPropertyComparisonPropertiesInput, PropertyComparisonUncheckedUpdateWithoutPropertyComparisonPropertiesInput>
  }

  export type PropertyComparisonUpdateWithoutPropertyComparisonPropertiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutPropertyComparisonsNestedInput
  }

  export type PropertyComparisonUncheckedUpdateWithoutPropertyComparisonPropertiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyUpsertWithoutComparisonsInput = {
    update: XOR<PropertyUpdateWithoutComparisonsInput, PropertyUncheckedUpdateWithoutComparisonsInput>
    create: XOR<PropertyCreateWithoutComparisonsInput, PropertyUncheckedCreateWithoutComparisonsInput>
    where?: PropertyWhereInput
  }

  export type PropertyUpdateToOneWithWhereWithoutComparisonsInput = {
    where?: PropertyWhereInput
    data: XOR<PropertyUpdateWithoutComparisonsInput, PropertyUncheckedUpdateWithoutComparisonsInput>
  }

  export type PropertyUpdateWithoutComparisonsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedPropertiesNestedInput
    agent?: UserUpdateOneWithoutManagedPropertiesNestedInput
    agency?: AgencyUpdateOneWithoutPropertiesNestedInput
    photos?: PropertyPhotoUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyUncheckedUpdateWithoutComparisonsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    agentId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: PropertyPhotoUncheckedUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUncheckedUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUncheckedUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUncheckedUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUncheckedUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUncheckedUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
  }

  export type UserCreateWithoutReviewsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    viewedProperties?: PropertyViewCreateNestedManyWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListCreateNestedManyWithoutUserInput
    requests?: PropertyRequestCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonCreateNestedManyWithoutUserInput
    comments?: PropertyCommentCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsCreateNestedManyWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    agencyRoles?: AgencyRoleCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutReviewsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    viewedProperties?: PropertyViewUncheckedCreateNestedManyWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListUncheckedCreateNestedManyWithoutUserInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonUncheckedCreateNestedManyWithoutUserInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyUncheckedCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyUncheckedCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingUncheckedCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingUncheckedCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutUserInput
    agencyRoles?: AgencyRoleUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberUncheckedCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutReviewsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReviewsInput, UserUncheckedCreateWithoutReviewsInput>
  }

  export type PropertyCreateWithoutReviewsInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    owner: UserCreateNestedOneWithoutOwnedPropertiesInput
    agent?: UserCreateNestedOneWithoutManagedPropertiesInput
    agency?: AgencyCreateNestedOneWithoutPropertiesInput
    photos?: PropertyPhotoCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourCreateNestedManyWithoutPropertyInput
    views?: PropertyViewCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionCreateNestedManyWithoutPropertyInput
    payments?: PaymentCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryCreateNestedManyWithoutPropertyInput
  }

  export type PropertyUncheckedCreateWithoutReviewsInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    ownerId: string
    agentId?: string | null
    agencyId?: string | null
    photos?: PropertyPhotoUncheckedCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoUncheckedCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourUncheckedCreateNestedManyWithoutPropertyInput
    views?: PropertyViewUncheckedCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesUncheckedCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingUncheckedCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutPropertyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutPropertyInput
  }

  export type PropertyCreateOrConnectWithoutReviewsInput = {
    where: PropertyWhereUniqueInput
    create: XOR<PropertyCreateWithoutReviewsInput, PropertyUncheckedCreateWithoutReviewsInput>
  }

  export type UserUpsertWithoutReviewsInput = {
    update: XOR<UserUpdateWithoutReviewsInput, UserUncheckedUpdateWithoutReviewsInput>
    create: XOR<UserCreateWithoutReviewsInput, UserUncheckedCreateWithoutReviewsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReviewsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReviewsInput, UserUncheckedUpdateWithoutReviewsInput>
  }

  export type UserUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewedProperties?: PropertyViewUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUpdateManyWithoutUserNestedInput
    comments?: PropertyCommentUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUpdateManyWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    agencyRoles?: AgencyRoleUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    viewedProperties?: PropertyViewUncheckedUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUncheckedUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUncheckedUpdateManyWithoutUserNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUncheckedUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUncheckedUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUncheckedUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUncheckedUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUncheckedUpdateManyWithoutUserNestedInput
    agencyRoles?: AgencyRoleUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUncheckedUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PropertyUpsertWithoutReviewsInput = {
    update: XOR<PropertyUpdateWithoutReviewsInput, PropertyUncheckedUpdateWithoutReviewsInput>
    create: XOR<PropertyCreateWithoutReviewsInput, PropertyUncheckedCreateWithoutReviewsInput>
    where?: PropertyWhereInput
  }

  export type PropertyUpdateToOneWithWhereWithoutReviewsInput = {
    where?: PropertyWhereInput
    data: XOR<PropertyUpdateWithoutReviewsInput, PropertyUncheckedUpdateWithoutReviewsInput>
  }

  export type PropertyUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedPropertiesNestedInput
    agent?: UserUpdateOneWithoutManagedPropertiesNestedInput
    agency?: AgencyUpdateOneWithoutPropertiesNestedInput
    photos?: PropertyPhotoUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyUncheckedUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    agentId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: PropertyPhotoUncheckedUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUncheckedUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUncheckedUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUncheckedUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUncheckedUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUncheckedUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
  }

  export type UserCreateWithoutCommentsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    viewedProperties?: PropertyViewCreateNestedManyWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListCreateNestedManyWithoutUserInput
    requests?: PropertyRequestCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewCreateNestedManyWithoutReviewerInput
    ownedProperties?: PropertyCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsCreateNestedManyWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    agencyRoles?: AgencyRoleCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCommentsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    viewedProperties?: PropertyViewUncheckedCreateNestedManyWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListUncheckedCreateNestedManyWithoutUserInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonUncheckedCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutReviewerInput
    ownedProperties?: PropertyUncheckedCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyUncheckedCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingUncheckedCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingUncheckedCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutUserInput
    agencyRoles?: AgencyRoleUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberUncheckedCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCommentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCommentsInput, UserUncheckedCreateWithoutCommentsInput>
  }

  export type PropertyCreateWithoutCommentsInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    owner: UserCreateNestedOneWithoutOwnedPropertiesInput
    agent?: UserCreateNestedOneWithoutManagedPropertiesInput
    agency?: AgencyCreateNestedOneWithoutPropertiesInput
    photos?: PropertyPhotoCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourCreateNestedManyWithoutPropertyInput
    views?: PropertyViewCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionCreateNestedManyWithoutPropertyInput
    payments?: PaymentCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryCreateNestedManyWithoutPropertyInput
  }

  export type PropertyUncheckedCreateWithoutCommentsInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    ownerId: string
    agentId?: string | null
    agencyId?: string | null
    photos?: PropertyPhotoUncheckedCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoUncheckedCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourUncheckedCreateNestedManyWithoutPropertyInput
    views?: PropertyViewUncheckedCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesUncheckedCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingUncheckedCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutPropertyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutPropertyInput
  }

  export type PropertyCreateOrConnectWithoutCommentsInput = {
    where: PropertyWhereUniqueInput
    create: XOR<PropertyCreateWithoutCommentsInput, PropertyUncheckedCreateWithoutCommentsInput>
  }

  export type UserUpsertWithoutCommentsInput = {
    update: XOR<UserUpdateWithoutCommentsInput, UserUncheckedUpdateWithoutCommentsInput>
    create: XOR<UserCreateWithoutCommentsInput, UserUncheckedCreateWithoutCommentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCommentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCommentsInput, UserUncheckedUpdateWithoutCommentsInput>
  }

  export type UserUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewedProperties?: PropertyViewUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUpdateManyWithoutReviewerNestedInput
    ownedProperties?: PropertyUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUpdateManyWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    agencyRoles?: AgencyRoleUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    viewedProperties?: PropertyViewUncheckedUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUncheckedUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUncheckedUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutReviewerNestedInput
    ownedProperties?: PropertyUncheckedUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUncheckedUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUncheckedUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUncheckedUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUncheckedUpdateManyWithoutUserNestedInput
    agencyRoles?: AgencyRoleUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUncheckedUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PropertyUpsertWithoutCommentsInput = {
    update: XOR<PropertyUpdateWithoutCommentsInput, PropertyUncheckedUpdateWithoutCommentsInput>
    create: XOR<PropertyCreateWithoutCommentsInput, PropertyUncheckedCreateWithoutCommentsInput>
    where?: PropertyWhereInput
  }

  export type PropertyUpdateToOneWithWhereWithoutCommentsInput = {
    where?: PropertyWhereInput
    data: XOR<PropertyUpdateWithoutCommentsInput, PropertyUncheckedUpdateWithoutCommentsInput>
  }

  export type PropertyUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedPropertiesNestedInput
    agent?: UserUpdateOneWithoutManagedPropertiesNestedInput
    agency?: AgencyUpdateOneWithoutPropertiesNestedInput
    photos?: PropertyPhotoUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyUncheckedUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    agentId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: PropertyPhotoUncheckedUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUncheckedUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUncheckedUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUncheckedUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUncheckedUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUncheckedUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyCreateWithoutViewingsInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    owner: UserCreateNestedOneWithoutOwnedPropertiesInput
    agent?: UserCreateNestedOneWithoutManagedPropertiesInput
    agency?: AgencyCreateNestedOneWithoutPropertiesInput
    photos?: PropertyPhotoCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourCreateNestedManyWithoutPropertyInput
    views?: PropertyViewCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionCreateNestedManyWithoutPropertyInput
    payments?: PaymentCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryCreateNestedManyWithoutPropertyInput
  }

  export type PropertyUncheckedCreateWithoutViewingsInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    ownerId: string
    agentId?: string | null
    agencyId?: string | null
    photos?: PropertyPhotoUncheckedCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoUncheckedCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourUncheckedCreateNestedManyWithoutPropertyInput
    views?: PropertyViewUncheckedCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesUncheckedCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutPropertyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutPropertyInput
  }

  export type PropertyCreateOrConnectWithoutViewingsInput = {
    where: PropertyWhereUniqueInput
    create: XOR<PropertyCreateWithoutViewingsInput, PropertyUncheckedCreateWithoutViewingsInput>
  }

  export type UserCreateWithoutScheduledViewingsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    viewedProperties?: PropertyViewCreateNestedManyWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListCreateNestedManyWithoutUserInput
    requests?: PropertyRequestCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyCreateNestedManyWithoutAgentInput
    buyerViewings?: PropertyViewingCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsCreateNestedManyWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    agencyRoles?: AgencyRoleCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutScheduledViewingsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    viewedProperties?: PropertyViewUncheckedCreateNestedManyWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListUncheckedCreateNestedManyWithoutUserInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonUncheckedCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyUncheckedCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyUncheckedCreateNestedManyWithoutAgentInput
    buyerViewings?: PropertyViewingUncheckedCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutUserInput
    agencyRoles?: AgencyRoleUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberUncheckedCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutScheduledViewingsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutScheduledViewingsInput, UserUncheckedCreateWithoutScheduledViewingsInput>
  }

  export type UserCreateWithoutBuyerViewingsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    viewedProperties?: PropertyViewCreateNestedManyWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListCreateNestedManyWithoutUserInput
    requests?: PropertyRequestCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingCreateNestedManyWithoutSellerInput
    propertyAnalytics?: PropertyAnalyticsCreateNestedManyWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    agencyRoles?: AgencyRoleCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutBuyerViewingsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    viewedProperties?: PropertyViewUncheckedCreateNestedManyWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListUncheckedCreateNestedManyWithoutUserInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonUncheckedCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyUncheckedCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyUncheckedCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingUncheckedCreateNestedManyWithoutSellerInput
    propertyAnalytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutUserInput
    agencyRoles?: AgencyRoleUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberUncheckedCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutBuyerViewingsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutBuyerViewingsInput, UserUncheckedCreateWithoutBuyerViewingsInput>
  }

  export type PropertyRequestCreateWithoutViewingsInput = {
    id?: string
    type: $Enums.RequestType
    message: string
    status?: $Enums.RequestStatus
    preferredDate?: Date | string | null
    preferredTime?: string | null
    budget?: number | null
    timeline?: string | null
    sellerResponse?: string | null
    responseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    buyerId: string
    buyer: UserCreateNestedOneWithoutRequestsInput
    property: PropertyCreateNestedOneWithoutRequestsInput
    payments?: PaymentCreateNestedManyWithoutRequestInput
  }

  export type PropertyRequestUncheckedCreateWithoutViewingsInput = {
    id?: string
    type: $Enums.RequestType
    message: string
    status?: $Enums.RequestStatus
    preferredDate?: Date | string | null
    preferredTime?: string | null
    budget?: number | null
    timeline?: string | null
    sellerResponse?: string | null
    responseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    buyerId: string
    propertyId: string
    userId: string
    payments?: PaymentUncheckedCreateNestedManyWithoutRequestInput
  }

  export type PropertyRequestCreateOrConnectWithoutViewingsInput = {
    where: PropertyRequestWhereUniqueInput
    create: XOR<PropertyRequestCreateWithoutViewingsInput, PropertyRequestUncheckedCreateWithoutViewingsInput>
  }

  export type PropertyUpsertWithoutViewingsInput = {
    update: XOR<PropertyUpdateWithoutViewingsInput, PropertyUncheckedUpdateWithoutViewingsInput>
    create: XOR<PropertyCreateWithoutViewingsInput, PropertyUncheckedCreateWithoutViewingsInput>
    where?: PropertyWhereInput
  }

  export type PropertyUpdateToOneWithWhereWithoutViewingsInput = {
    where?: PropertyWhereInput
    data: XOR<PropertyUpdateWithoutViewingsInput, PropertyUncheckedUpdateWithoutViewingsInput>
  }

  export type PropertyUpdateWithoutViewingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedPropertiesNestedInput
    agent?: UserUpdateOneWithoutManagedPropertiesNestedInput
    agency?: AgencyUpdateOneWithoutPropertiesNestedInput
    photos?: PropertyPhotoUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyUncheckedUpdateWithoutViewingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    agentId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: PropertyPhotoUncheckedUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUncheckedUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUncheckedUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUncheckedUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUncheckedUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
  }

  export type UserUpsertWithoutScheduledViewingsInput = {
    update: XOR<UserUpdateWithoutScheduledViewingsInput, UserUncheckedUpdateWithoutScheduledViewingsInput>
    create: XOR<UserCreateWithoutScheduledViewingsInput, UserUncheckedCreateWithoutScheduledViewingsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutScheduledViewingsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutScheduledViewingsInput, UserUncheckedUpdateWithoutScheduledViewingsInput>
  }

  export type UserUpdateWithoutScheduledViewingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewedProperties?: PropertyViewUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUpdateManyWithoutAgentNestedInput
    buyerViewings?: PropertyViewingUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUpdateManyWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    agencyRoles?: AgencyRoleUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutScheduledViewingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    viewedProperties?: PropertyViewUncheckedUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUncheckedUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUncheckedUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUncheckedUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUncheckedUpdateManyWithoutAgentNestedInput
    buyerViewings?: PropertyViewingUncheckedUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUncheckedUpdateManyWithoutUserNestedInput
    agencyRoles?: AgencyRoleUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUncheckedUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUpsertWithoutBuyerViewingsInput = {
    update: XOR<UserUpdateWithoutBuyerViewingsInput, UserUncheckedUpdateWithoutBuyerViewingsInput>
    create: XOR<UserCreateWithoutBuyerViewingsInput, UserUncheckedCreateWithoutBuyerViewingsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutBuyerViewingsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutBuyerViewingsInput, UserUncheckedUpdateWithoutBuyerViewingsInput>
  }

  export type UserUpdateWithoutBuyerViewingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewedProperties?: PropertyViewUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUpdateManyWithoutSellerNestedInput
    propertyAnalytics?: PropertyAnalyticsUpdateManyWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    agencyRoles?: AgencyRoleUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutBuyerViewingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    viewedProperties?: PropertyViewUncheckedUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUncheckedUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUncheckedUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUncheckedUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUncheckedUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUncheckedUpdateManyWithoutSellerNestedInput
    propertyAnalytics?: PropertyAnalyticsUncheckedUpdateManyWithoutUserNestedInput
    agencyRoles?: AgencyRoleUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUncheckedUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PropertyRequestUpsertWithoutViewingsInput = {
    update: XOR<PropertyRequestUpdateWithoutViewingsInput, PropertyRequestUncheckedUpdateWithoutViewingsInput>
    create: XOR<PropertyRequestCreateWithoutViewingsInput, PropertyRequestUncheckedCreateWithoutViewingsInput>
    where?: PropertyRequestWhereInput
  }

  export type PropertyRequestUpdateToOneWithWhereWithoutViewingsInput = {
    where?: PropertyRequestWhereInput
    data: XOR<PropertyRequestUpdateWithoutViewingsInput, PropertyRequestUncheckedUpdateWithoutViewingsInput>
  }

  export type PropertyRequestUpdateWithoutViewingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRequestTypeFieldUpdateOperationsInput | $Enums.RequestType
    message?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    preferredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredTime?: NullableStringFieldUpdateOperationsInput | string | null
    budget?: NullableFloatFieldUpdateOperationsInput | number | null
    timeline?: NullableStringFieldUpdateOperationsInput | string | null
    sellerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    responseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    buyerId?: StringFieldUpdateOperationsInput | string
    buyer?: UserUpdateOneRequiredWithoutRequestsNestedInput
    property?: PropertyUpdateOneRequiredWithoutRequestsNestedInput
    payments?: PaymentUpdateManyWithoutRequestNestedInput
  }

  export type PropertyRequestUncheckedUpdateWithoutViewingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRequestTypeFieldUpdateOperationsInput | $Enums.RequestType
    message?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    preferredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredTime?: NullableStringFieldUpdateOperationsInput | string | null
    budget?: NullableFloatFieldUpdateOperationsInput | number | null
    timeline?: NullableStringFieldUpdateOperationsInput | string | null
    sellerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    responseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    buyerId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    payments?: PaymentUncheckedUpdateManyWithoutRequestNestedInput
  }

  export type PropertyCreateWithoutAnalyticsInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    owner: UserCreateNestedOneWithoutOwnedPropertiesInput
    agent?: UserCreateNestedOneWithoutManagedPropertiesInput
    agency?: AgencyCreateNestedOneWithoutPropertiesInput
    photos?: PropertyPhotoCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourCreateNestedManyWithoutPropertyInput
    views?: PropertyViewCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionCreateNestedManyWithoutPropertyInput
    payments?: PaymentCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryCreateNestedManyWithoutPropertyInput
  }

  export type PropertyUncheckedCreateWithoutAnalyticsInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    ownerId: string
    agentId?: string | null
    agencyId?: string | null
    photos?: PropertyPhotoUncheckedCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoUncheckedCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourUncheckedCreateNestedManyWithoutPropertyInput
    views?: PropertyViewUncheckedCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesUncheckedCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingUncheckedCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutPropertyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutPropertyInput
  }

  export type PropertyCreateOrConnectWithoutAnalyticsInput = {
    where: PropertyWhereUniqueInput
    create: XOR<PropertyCreateWithoutAnalyticsInput, PropertyUncheckedCreateWithoutAnalyticsInput>
  }

  export type UserCreateWithoutPropertyAnalyticsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    viewedProperties?: PropertyViewCreateNestedManyWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListCreateNestedManyWithoutUserInput
    requests?: PropertyRequestCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingCreateNestedManyWithoutBuyerInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    agencyRoles?: AgencyRoleCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutPropertyAnalyticsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    viewedProperties?: PropertyViewUncheckedCreateNestedManyWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListUncheckedCreateNestedManyWithoutUserInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonUncheckedCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyUncheckedCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyUncheckedCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingUncheckedCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingUncheckedCreateNestedManyWithoutBuyerInput
    agencyRoles?: AgencyRoleUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberUncheckedCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutPropertyAnalyticsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPropertyAnalyticsInput, UserUncheckedCreateWithoutPropertyAnalyticsInput>
  }

  export type PropertyUpsertWithoutAnalyticsInput = {
    update: XOR<PropertyUpdateWithoutAnalyticsInput, PropertyUncheckedUpdateWithoutAnalyticsInput>
    create: XOR<PropertyCreateWithoutAnalyticsInput, PropertyUncheckedCreateWithoutAnalyticsInput>
    where?: PropertyWhereInput
  }

  export type PropertyUpdateToOneWithWhereWithoutAnalyticsInput = {
    where?: PropertyWhereInput
    data: XOR<PropertyUpdateWithoutAnalyticsInput, PropertyUncheckedUpdateWithoutAnalyticsInput>
  }

  export type PropertyUpdateWithoutAnalyticsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedPropertiesNestedInput
    agent?: UserUpdateOneWithoutManagedPropertiesNestedInput
    agency?: AgencyUpdateOneWithoutPropertiesNestedInput
    photos?: PropertyPhotoUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyUncheckedUpdateWithoutAnalyticsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    agentId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: PropertyPhotoUncheckedUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUncheckedUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUncheckedUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUncheckedUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUncheckedUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
  }

  export type UserUpsertWithoutPropertyAnalyticsInput = {
    update: XOR<UserUpdateWithoutPropertyAnalyticsInput, UserUncheckedUpdateWithoutPropertyAnalyticsInput>
    create: XOR<UserCreateWithoutPropertyAnalyticsInput, UserUncheckedCreateWithoutPropertyAnalyticsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPropertyAnalyticsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPropertyAnalyticsInput, UserUncheckedUpdateWithoutPropertyAnalyticsInput>
  }

  export type UserUpdateWithoutPropertyAnalyticsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewedProperties?: PropertyViewUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUpdateManyWithoutBuyerNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    agencyRoles?: AgencyRoleUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutPropertyAnalyticsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    viewedProperties?: PropertyViewUncheckedUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUncheckedUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUncheckedUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUncheckedUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUncheckedUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUncheckedUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUncheckedUpdateManyWithoutBuyerNestedInput
    agencyRoles?: AgencyRoleUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUncheckedUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutAdminActionsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    viewedProperties?: PropertyViewCreateNestedManyWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListCreateNestedManyWithoutUserInput
    requests?: PropertyRequestCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsCreateNestedManyWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    agencyRoles?: AgencyRoleCreateNestedManyWithoutUserInput
    adminActionTargets?: AdminActionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAdminActionsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    viewedProperties?: PropertyViewUncheckedCreateNestedManyWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListUncheckedCreateNestedManyWithoutUserInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonUncheckedCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyUncheckedCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyUncheckedCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingUncheckedCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingUncheckedCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutUserInput
    agencyRoles?: AgencyRoleUncheckedCreateNestedManyWithoutUserInput
    adminActionTargets?: AdminActionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberUncheckedCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAdminActionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAdminActionsInput, UserUncheckedCreateWithoutAdminActionsInput>
  }

  export type PropertyCreateWithoutAdminActionsInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    owner: UserCreateNestedOneWithoutOwnedPropertiesInput
    agent?: UserCreateNestedOneWithoutManagedPropertiesInput
    agency?: AgencyCreateNestedOneWithoutPropertiesInput
    photos?: PropertyPhotoCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourCreateNestedManyWithoutPropertyInput
    views?: PropertyViewCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsCreateNestedManyWithoutPropertyInput
    payments?: PaymentCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryCreateNestedManyWithoutPropertyInput
  }

  export type PropertyUncheckedCreateWithoutAdminActionsInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    ownerId: string
    agentId?: string | null
    agencyId?: string | null
    photos?: PropertyPhotoUncheckedCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoUncheckedCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourUncheckedCreateNestedManyWithoutPropertyInput
    views?: PropertyViewUncheckedCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesUncheckedCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingUncheckedCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutPropertyInput
    payments?: PaymentUncheckedCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutPropertyInput
  }

  export type PropertyCreateOrConnectWithoutAdminActionsInput = {
    where: PropertyWhereUniqueInput
    create: XOR<PropertyCreateWithoutAdminActionsInput, PropertyUncheckedCreateWithoutAdminActionsInput>
  }

  export type UserCreateWithoutAdminActionTargetsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    viewedProperties?: PropertyViewCreateNestedManyWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListCreateNestedManyWithoutUserInput
    requests?: PropertyRequestCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsCreateNestedManyWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    agencyRoles?: AgencyRoleCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAdminActionTargetsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    viewedProperties?: PropertyViewUncheckedCreateNestedManyWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListUncheckedCreateNestedManyWithoutUserInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonUncheckedCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyUncheckedCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyUncheckedCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingUncheckedCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingUncheckedCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutUserInput
    agencyRoles?: AgencyRoleUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberUncheckedCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAdminActionTargetsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAdminActionTargetsInput, UserUncheckedCreateWithoutAdminActionTargetsInput>
  }

  export type AgencyCreateWithoutAdminActionsInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    activityType: $Enums.AgencyActivityType
    businessPhone: string
    businessEmail: string
    website?: string | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    businessRegistrationNumber?: string | null
    activityLicense?: string | null
    taxId?: string | null
    bankAccountInfo?: string | null
    isVerified?: boolean
    isActive?: boolean
    isSuspended?: boolean
    suspensionReason?: string | null
    suspendedAt?: Date | string | null
    suspendedBy?: string | null
    verificationStatus?: $Enums.AgencyVerificationStatus
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    verificationDocuments?: AgencyVerificationDocumentCreateNestedManyWithoutAgencyInput
    teamMembers?: AgencyMemberCreateNestedManyWithoutAgencyInput
    teamRoles?: AgencyRoleCreateNestedManyWithoutAgencyInput
    properties?: PropertyCreateNestedManyWithoutAgencyInput
    performance?: AgencyPerformanceCreateNestedOneWithoutAgencyInput
    inquiries?: AgencyInquiryCreateNestedManyWithoutAgencyInput
    User?: UserCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutAdminActionsInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    activityType: $Enums.AgencyActivityType
    businessPhone: string
    businessEmail: string
    website?: string | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    businessRegistrationNumber?: string | null
    activityLicense?: string | null
    taxId?: string | null
    bankAccountInfo?: string | null
    isVerified?: boolean
    isActive?: boolean
    isSuspended?: boolean
    suspensionReason?: string | null
    suspendedAt?: Date | string | null
    suspendedBy?: string | null
    verificationStatus?: $Enums.AgencyVerificationStatus
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    verificationDocuments?: AgencyVerificationDocumentUncheckedCreateNestedManyWithoutAgencyInput
    teamMembers?: AgencyMemberUncheckedCreateNestedManyWithoutAgencyInput
    teamRoles?: AgencyRoleUncheckedCreateNestedManyWithoutAgencyInput
    properties?: PropertyUncheckedCreateNestedManyWithoutAgencyInput
    performance?: AgencyPerformanceUncheckedCreateNestedOneWithoutAgencyInput
    inquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutAgencyInput
    User?: UserUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutAdminActionsInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutAdminActionsInput, AgencyUncheckedCreateWithoutAdminActionsInput>
  }

  export type UserUpsertWithoutAdminActionsInput = {
    update: XOR<UserUpdateWithoutAdminActionsInput, UserUncheckedUpdateWithoutAdminActionsInput>
    create: XOR<UserCreateWithoutAdminActionsInput, UserUncheckedCreateWithoutAdminActionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAdminActionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAdminActionsInput, UserUncheckedUpdateWithoutAdminActionsInput>
  }

  export type UserUpdateWithoutAdminActionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewedProperties?: PropertyViewUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUpdateManyWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    agencyRoles?: AgencyRoleUpdateManyWithoutUserNestedInput
    adminActionTargets?: AdminActionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAdminActionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    viewedProperties?: PropertyViewUncheckedUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUncheckedUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUncheckedUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUncheckedUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUncheckedUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUncheckedUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUncheckedUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUncheckedUpdateManyWithoutUserNestedInput
    agencyRoles?: AgencyRoleUncheckedUpdateManyWithoutUserNestedInput
    adminActionTargets?: AdminActionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUncheckedUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PropertyUpsertWithoutAdminActionsInput = {
    update: XOR<PropertyUpdateWithoutAdminActionsInput, PropertyUncheckedUpdateWithoutAdminActionsInput>
    create: XOR<PropertyCreateWithoutAdminActionsInput, PropertyUncheckedCreateWithoutAdminActionsInput>
    where?: PropertyWhereInput
  }

  export type PropertyUpdateToOneWithWhereWithoutAdminActionsInput = {
    where?: PropertyWhereInput
    data: XOR<PropertyUpdateWithoutAdminActionsInput, PropertyUncheckedUpdateWithoutAdminActionsInput>
  }

  export type PropertyUpdateWithoutAdminActionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedPropertiesNestedInput
    agent?: UserUpdateOneWithoutManagedPropertiesNestedInput
    agency?: AgencyUpdateOneWithoutPropertiesNestedInput
    photos?: PropertyPhotoUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyUncheckedUpdateWithoutAdminActionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    agentId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: PropertyPhotoUncheckedUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUncheckedUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUncheckedUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUncheckedUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUncheckedUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUncheckedUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
  }

  export type UserUpsertWithoutAdminActionTargetsInput = {
    update: XOR<UserUpdateWithoutAdminActionTargetsInput, UserUncheckedUpdateWithoutAdminActionTargetsInput>
    create: XOR<UserCreateWithoutAdminActionTargetsInput, UserUncheckedCreateWithoutAdminActionTargetsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAdminActionTargetsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAdminActionTargetsInput, UserUncheckedUpdateWithoutAdminActionTargetsInput>
  }

  export type UserUpdateWithoutAdminActionTargetsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewedProperties?: PropertyViewUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUpdateManyWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    agencyRoles?: AgencyRoleUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAdminActionTargetsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    viewedProperties?: PropertyViewUncheckedUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUncheckedUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUncheckedUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUncheckedUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUncheckedUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUncheckedUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUncheckedUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUncheckedUpdateManyWithoutUserNestedInput
    agencyRoles?: AgencyRoleUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUncheckedUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type AgencyUpsertWithoutAdminActionsInput = {
    update: XOR<AgencyUpdateWithoutAdminActionsInput, AgencyUncheckedUpdateWithoutAdminActionsInput>
    create: XOR<AgencyCreateWithoutAdminActionsInput, AgencyUncheckedCreateWithoutAdminActionsInput>
    where?: AgencyWhereInput
  }

  export type AgencyUpdateToOneWithWhereWithoutAdminActionsInput = {
    where?: AgencyWhereInput
    data: XOR<AgencyUpdateWithoutAdminActionsInput, AgencyUncheckedUpdateWithoutAdminActionsInput>
  }

  export type AgencyUpdateWithoutAdminActionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    activityType?: EnumAgencyActivityTypeFieldUpdateOperationsInput | $Enums.AgencyActivityType
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    businessRegistrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    activityLicense?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    bankAccountInfo?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    suspensionReason?: NullableStringFieldUpdateOperationsInput | string | null
    suspendedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    suspendedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumAgencyVerificationStatusFieldUpdateOperationsInput | $Enums.AgencyVerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationDocuments?: AgencyVerificationDocumentUpdateManyWithoutAgencyNestedInput
    teamMembers?: AgencyMemberUpdateManyWithoutAgencyNestedInput
    teamRoles?: AgencyRoleUpdateManyWithoutAgencyNestedInput
    properties?: PropertyUpdateManyWithoutAgencyNestedInput
    performance?: AgencyPerformanceUpdateOneWithoutAgencyNestedInput
    inquiries?: AgencyInquiryUpdateManyWithoutAgencyNestedInput
    User?: UserUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutAdminActionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    activityType?: EnumAgencyActivityTypeFieldUpdateOperationsInput | $Enums.AgencyActivityType
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    businessRegistrationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    activityLicense?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    bankAccountInfo?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSuspended?: BoolFieldUpdateOperationsInput | boolean
    suspensionReason?: NullableStringFieldUpdateOperationsInput | string | null
    suspendedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    suspendedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumAgencyVerificationStatusFieldUpdateOperationsInput | $Enums.AgencyVerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verificationDocuments?: AgencyVerificationDocumentUncheckedUpdateManyWithoutAgencyNestedInput
    teamMembers?: AgencyMemberUncheckedUpdateManyWithoutAgencyNestedInput
    teamRoles?: AgencyRoleUncheckedUpdateManyWithoutAgencyNestedInput
    properties?: PropertyUncheckedUpdateManyWithoutAgencyNestedInput
    performance?: AgencyPerformanceUncheckedUpdateOneWithoutAgencyNestedInput
    inquiries?: AgencyInquiryUncheckedUpdateManyWithoutAgencyNestedInput
    User?: UserUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type UserCreateWithoutNotificationsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    viewedProperties?: PropertyViewCreateNestedManyWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListCreateNestedManyWithoutUserInput
    requests?: PropertyRequestCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsCreateNestedManyWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    agencyRoles?: AgencyRoleCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutNotificationsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    viewedProperties?: PropertyViewUncheckedCreateNestedManyWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListUncheckedCreateNestedManyWithoutUserInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonUncheckedCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyUncheckedCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyUncheckedCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingUncheckedCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingUncheckedCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutUserInput
    agencyRoles?: AgencyRoleUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberUncheckedCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutNotificationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
  }

  export type UserUpsertWithoutNotificationsInput = {
    update: XOR<UserUpdateWithoutNotificationsInput, UserUncheckedUpdateWithoutNotificationsInput>
    create: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutNotificationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutNotificationsInput, UserUncheckedUpdateWithoutNotificationsInput>
  }

  export type UserUpdateWithoutNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewedProperties?: PropertyViewUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUpdateManyWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    agencyRoles?: AgencyRoleUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    viewedProperties?: PropertyViewUncheckedUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUncheckedUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUncheckedUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUncheckedUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUncheckedUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUncheckedUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUncheckedUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUncheckedUpdateManyWithoutUserNestedInput
    agencyRoles?: AgencyRoleUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUncheckedUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutPaymentsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    viewedProperties?: PropertyViewCreateNestedManyWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListCreateNestedManyWithoutUserInput
    requests?: PropertyRequestCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsCreateNestedManyWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    agencyRoles?: AgencyRoleCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutPaymentsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    viewedProperties?: PropertyViewUncheckedCreateNestedManyWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListUncheckedCreateNestedManyWithoutUserInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonUncheckedCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyUncheckedCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyUncheckedCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingUncheckedCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingUncheckedCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutUserInput
    agencyRoles?: AgencyRoleUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberUncheckedCreateNestedManyWithoutUserInput
    SavedSearch?: SavedSearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutPaymentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPaymentsInput, UserUncheckedCreateWithoutPaymentsInput>
  }

  export type PropertyCreateWithoutPaymentsInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    owner: UserCreateNestedOneWithoutOwnedPropertiesInput
    agent?: UserCreateNestedOneWithoutManagedPropertiesInput
    agency?: AgencyCreateNestedOneWithoutPropertiesInput
    photos?: PropertyPhotoCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourCreateNestedManyWithoutPropertyInput
    views?: PropertyViewCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryCreateNestedManyWithoutPropertyInput
  }

  export type PropertyUncheckedCreateWithoutPaymentsInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    ownerId: string
    agentId?: string | null
    agencyId?: string | null
    photos?: PropertyPhotoUncheckedCreateNestedManyWithoutPropertyInput
    videos?: PropertyVideoUncheckedCreateNestedManyWithoutPropertyInput
    virtualTours?: VirtualTourUncheckedCreateNestedManyWithoutPropertyInput
    views?: PropertyViewUncheckedCreateNestedManyWithoutPropertyInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPropertyInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutPropertyInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutPropertyInput
    comparisons?: PropertyComparisonPropertiesUncheckedCreateNestedManyWithoutPropertyInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutPropertyInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutPropertyInput
    viewings?: PropertyViewingUncheckedCreateNestedManyWithoutPropertyInput
    analytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutPropertyInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutPropertyInput
    agencyInquiries?: AgencyInquiryUncheckedCreateNestedManyWithoutPropertyInput
  }

  export type PropertyCreateOrConnectWithoutPaymentsInput = {
    where: PropertyWhereUniqueInput
    create: XOR<PropertyCreateWithoutPaymentsInput, PropertyUncheckedCreateWithoutPaymentsInput>
  }

  export type PropertyRequestCreateWithoutPaymentsInput = {
    id?: string
    type: $Enums.RequestType
    message: string
    status?: $Enums.RequestStatus
    preferredDate?: Date | string | null
    preferredTime?: string | null
    budget?: number | null
    timeline?: string | null
    sellerResponse?: string | null
    responseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    buyerId: string
    buyer: UserCreateNestedOneWithoutRequestsInput
    property: PropertyCreateNestedOneWithoutRequestsInput
    viewings?: PropertyViewingCreateNestedManyWithoutRequestInput
  }

  export type PropertyRequestUncheckedCreateWithoutPaymentsInput = {
    id?: string
    type: $Enums.RequestType
    message: string
    status?: $Enums.RequestStatus
    preferredDate?: Date | string | null
    preferredTime?: string | null
    budget?: number | null
    timeline?: string | null
    sellerResponse?: string | null
    responseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    buyerId: string
    propertyId: string
    userId: string
    viewings?: PropertyViewingUncheckedCreateNestedManyWithoutRequestInput
  }

  export type PropertyRequestCreateOrConnectWithoutPaymentsInput = {
    where: PropertyRequestWhereUniqueInput
    create: XOR<PropertyRequestCreateWithoutPaymentsInput, PropertyRequestUncheckedCreateWithoutPaymentsInput>
  }

  export type UserUpsertWithoutPaymentsInput = {
    update: XOR<UserUpdateWithoutPaymentsInput, UserUncheckedUpdateWithoutPaymentsInput>
    create: XOR<UserCreateWithoutPaymentsInput, UserUncheckedCreateWithoutPaymentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPaymentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPaymentsInput, UserUncheckedUpdateWithoutPaymentsInput>
  }

  export type UserUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewedProperties?: PropertyViewUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUpdateManyWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    agencyRoles?: AgencyRoleUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    viewedProperties?: PropertyViewUncheckedUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUncheckedUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUncheckedUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUncheckedUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUncheckedUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUncheckedUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUncheckedUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUncheckedUpdateManyWithoutUserNestedInput
    agencyRoles?: AgencyRoleUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUncheckedUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PropertyUpsertWithoutPaymentsInput = {
    update: XOR<PropertyUpdateWithoutPaymentsInput, PropertyUncheckedUpdateWithoutPaymentsInput>
    create: XOR<PropertyCreateWithoutPaymentsInput, PropertyUncheckedCreateWithoutPaymentsInput>
    where?: PropertyWhereInput
  }

  export type PropertyUpdateToOneWithWhereWithoutPaymentsInput = {
    where?: PropertyWhereInput
    data: XOR<PropertyUpdateWithoutPaymentsInput, PropertyUncheckedUpdateWithoutPaymentsInput>
  }

  export type PropertyUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedPropertiesNestedInput
    agent?: UserUpdateOneWithoutManagedPropertiesNestedInput
    agency?: AgencyUpdateOneWithoutPropertiesNestedInput
    photos?: PropertyPhotoUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyUncheckedUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    agentId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: PropertyPhotoUncheckedUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUncheckedUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUncheckedUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUncheckedUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUncheckedUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUncheckedUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyRequestUpsertWithoutPaymentsInput = {
    update: XOR<PropertyRequestUpdateWithoutPaymentsInput, PropertyRequestUncheckedUpdateWithoutPaymentsInput>
    create: XOR<PropertyRequestCreateWithoutPaymentsInput, PropertyRequestUncheckedCreateWithoutPaymentsInput>
    where?: PropertyRequestWhereInput
  }

  export type PropertyRequestUpdateToOneWithWhereWithoutPaymentsInput = {
    where?: PropertyRequestWhereInput
    data: XOR<PropertyRequestUpdateWithoutPaymentsInput, PropertyRequestUncheckedUpdateWithoutPaymentsInput>
  }

  export type PropertyRequestUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRequestTypeFieldUpdateOperationsInput | $Enums.RequestType
    message?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    preferredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredTime?: NullableStringFieldUpdateOperationsInput | string | null
    budget?: NullableFloatFieldUpdateOperationsInput | number | null
    timeline?: NullableStringFieldUpdateOperationsInput | string | null
    sellerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    responseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    buyerId?: StringFieldUpdateOperationsInput | string
    buyer?: UserUpdateOneRequiredWithoutRequestsNestedInput
    property?: PropertyUpdateOneRequiredWithoutRequestsNestedInput
    viewings?: PropertyViewingUpdateManyWithoutRequestNestedInput
  }

  export type PropertyRequestUncheckedUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRequestTypeFieldUpdateOperationsInput | $Enums.RequestType
    message?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    preferredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredTime?: NullableStringFieldUpdateOperationsInput | string | null
    budget?: NullableFloatFieldUpdateOperationsInput | number | null
    timeline?: NullableStringFieldUpdateOperationsInput | string | null
    sellerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    responseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    buyerId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    viewings?: PropertyViewingUncheckedUpdateManyWithoutRequestNestedInput
  }

  export type UserCreateWithoutSavedSearchInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    viewedProperties?: PropertyViewCreateNestedManyWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListCreateNestedManyWithoutUserInput
    requests?: PropertyRequestCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsCreateNestedManyWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    agencyRoles?: AgencyRoleCreateNestedManyWithoutUserInput
    adminActions?: AdminActionCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionCreateNestedManyWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSavedSearchInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId?: string | null
    viewedProperties?: PropertyViewUncheckedCreateNestedManyWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    favoriteLists?: FavoriteListUncheckedCreateNestedManyWithoutUserInput
    requests?: PropertyRequestUncheckedCreateNestedManyWithoutBuyerInput
    inquiries?: PropertyInquiryUncheckedCreateNestedManyWithoutUserInput
    propertyComparisons?: PropertyComparisonUncheckedCreateNestedManyWithoutUserInput
    reviews?: PropertyReviewUncheckedCreateNestedManyWithoutReviewerInput
    comments?: PropertyCommentUncheckedCreateNestedManyWithoutAuthorInput
    ownedProperties?: PropertyUncheckedCreateNestedManyWithoutOwnerInput
    managedProperties?: PropertyUncheckedCreateNestedManyWithoutAgentInput
    scheduledViewings?: PropertyViewingUncheckedCreateNestedManyWithoutSellerInput
    buyerViewings?: PropertyViewingUncheckedCreateNestedManyWithoutBuyerInput
    propertyAnalytics?: PropertyAnalyticsUncheckedCreateNestedManyWithoutUserInput
    agencyRoles?: AgencyRoleUncheckedCreateNestedManyWithoutUserInput
    adminActions?: AdminActionUncheckedCreateNestedManyWithoutAdminInput
    adminActionTargets?: AdminActionUncheckedCreateNestedManyWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    AgencyMember?: AgencyMemberUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSavedSearchInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSavedSearchInput, UserUncheckedCreateWithoutSavedSearchInput>
  }

  export type UserUpsertWithoutSavedSearchInput = {
    update: XOR<UserUpdateWithoutSavedSearchInput, UserUncheckedUpdateWithoutSavedSearchInput>
    create: XOR<UserCreateWithoutSavedSearchInput, UserUncheckedCreateWithoutSavedSearchInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSavedSearchInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSavedSearchInput, UserUncheckedUpdateWithoutSavedSearchInput>
  }

  export type UserUpdateWithoutSavedSearchInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewedProperties?: PropertyViewUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUpdateManyWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    agencyRoles?: AgencyRoleUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSavedSearchInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    viewedProperties?: PropertyViewUncheckedUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUncheckedUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUncheckedUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUncheckedUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUncheckedUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUncheckedUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUncheckedUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUncheckedUpdateManyWithoutUserNestedInput
    agencyRoles?: AgencyRoleUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PropertyViewCreateManyUserInput = {
    id?: string
    viewedAt?: Date | string
    viewDuration?: number | null
    ipAddress?: string | null
    userAgent?: string | null
    propertyId: string
  }

  export type FavoriteCreateManyUserInput = {
    id?: string
    notes?: string | null
    priority?: number | null
    createdAt?: Date | string
    propertyId: string
    listId?: string | null
    favoriteListId?: string | null
  }

  export type FavoriteListCreateManyUserInput = {
    id?: string
    name: string
    description?: string | null
    isPublic?: boolean
    isDefault?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PropertyRequestCreateManyBuyerInput = {
    id?: string
    type: $Enums.RequestType
    message: string
    status?: $Enums.RequestStatus
    preferredDate?: Date | string | null
    preferredTime?: string | null
    budget?: number | null
    timeline?: string | null
    sellerResponse?: string | null
    responseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    buyerId: string
    propertyId: string
  }

  export type PropertyInquiryCreateManyUserInput = {
    id?: string
    subject: string
    message: string
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    propertyId: string
  }

  export type PropertyComparisonCreateManyUserInput = {
    id?: string
    name: string
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PropertyReviewCreateManyReviewerInput = {
    id?: string
    rating: number
    title: string
    comment: string
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewerId: string
    propertyId: string
  }

  export type PropertyCommentCreateManyAuthorInput = {
    id?: string
    content: string
    isPublic?: boolean
    isModerated?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    authorId: string
    propertyId: string
  }

  export type PropertyCreateManyOwnerInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    agentId?: string | null
    agencyId?: string | null
  }

  export type PropertyCreateManyAgentInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    ownerId: string
    agencyId?: string | null
  }

  export type PropertyViewingCreateManySellerInput = {
    id?: string
    scheduledAt: Date | string
    duration: number
    status?: string
    notes?: string | null
    buyerNotes?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    propertyId: string
    buyerId?: string | null
    requestId?: string | null
    propertyRequestId?: string | null
  }

  export type PropertyViewingCreateManyBuyerInput = {
    id?: string
    scheduledAt: Date | string
    duration: number
    status?: string
    notes?: string | null
    buyerNotes?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    propertyId: string
    sellerId: string
    requestId?: string | null
    propertyRequestId?: string | null
  }

  export type PropertyAnalyticsCreateManyUserInput = {
    id?: string
    totalViews?: number
    uniqueViews?: number
    totalFavorites?: number
    totalRequests?: number
    totalInquiries?: number
    averageViewDuration?: number
    bounceRate?: number
    conversionRate?: number
    viewsThisWeek?: number
    viewsThisMonth?: number
    viewsThisYear?: number
    lastCalculated?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    propertyId: string
  }

  export type AgencyRoleCreateManyUserInput = {
    id?: string
    agencyId: string
    role: $Enums.UserRole
    title?: string | null
    description?: string | null
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    assignedAt?: Date | string
    updatedAt?: Date | string
  }

  export type AdminActionCreateManyAdminInput = {
    id?: string
    action: string
    details?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    propertyId?: string | null
    userId?: string | null
    agencyId?: string | null
  }

  export type AdminActionCreateManyUserInput = {
    id?: string
    action: string
    details?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    adminId: string
    propertyId?: string | null
    agencyId?: string | null
  }

  export type NotificationCreateManyUserInput = {
    id?: string
    type: $Enums.NotificationType
    title: string
    message: string
    isRead?: boolean
    readAt?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    link?: string | null
    createdAt?: Date | string
  }

  export type PaymentCreateManyUserInput = {
    id?: string
    amount: number
    currency?: string
    status?: $Enums.PaymentStatus
    paymentMethod: string
    transactionId?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    propertyId?: string | null
    requestId?: string | null
    propertyRequestId?: string | null
  }

  export type AgencyMemberCreateManyUserInput = {
    id?: string
    agencyId: string
    role: $Enums.UserRole
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    joinedAt?: Date | string
    updatedAt?: Date | string
  }

  export type SavedSearchCreateManyUserInput = {
    id?: string
    name: string
    description?: string | null
    propertyTypes?: SavedSearchCreatepropertyTypesInput | $Enums.PropertyType[]
    transactionTypes?: SavedSearchCreatetransactionTypesInput | $Enums.TransactionType[]
    minPrice?: number | null
    maxPrice?: number | null
    minArea?: number | null
    maxArea?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    cities?: SavedSearchCreatecitiesInput | string[]
    neighborhoods?: SavedSearchCreateneighborhoodsInput | string[]
    isActive?: boolean
    notifyOnMatch?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PropertyViewUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    viewedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewDuration?: NullableIntFieldUpdateOperationsInput | number | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    property?: PropertyUpdateOneRequiredWithoutViewsNestedInput
  }

  export type PropertyViewUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    viewedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewDuration?: NullableIntFieldUpdateOperationsInput | number | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyViewUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    viewedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewDuration?: NullableIntFieldUpdateOperationsInput | number | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listId?: NullableStringFieldUpdateOperationsInput | string | null
    property?: PropertyUpdateOneRequiredWithoutFavoritesNestedInput
    list?: FavoriteListUpdateOneWithoutFavoritesNestedInput
  }

  export type FavoriteUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: StringFieldUpdateOperationsInput | string
    listId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteListId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FavoriteUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: StringFieldUpdateOperationsInput | string
    listId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteListId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FavoriteListUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    favorites?: FavoriteUpdateManyWithoutListNestedInput
  }

  export type FavoriteListUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    favorites?: FavoriteUncheckedUpdateManyWithoutListNestedInput
  }

  export type FavoriteListUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PropertyRequestUpdateWithoutBuyerInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRequestTypeFieldUpdateOperationsInput | $Enums.RequestType
    message?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    preferredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredTime?: NullableStringFieldUpdateOperationsInput | string | null
    budget?: NullableFloatFieldUpdateOperationsInput | number | null
    timeline?: NullableStringFieldUpdateOperationsInput | string | null
    sellerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    responseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    buyerId?: StringFieldUpdateOperationsInput | string
    property?: PropertyUpdateOneRequiredWithoutRequestsNestedInput
    viewings?: PropertyViewingUpdateManyWithoutRequestNestedInput
    payments?: PaymentUpdateManyWithoutRequestNestedInput
  }

  export type PropertyRequestUncheckedUpdateWithoutBuyerInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRequestTypeFieldUpdateOperationsInput | $Enums.RequestType
    message?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    preferredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredTime?: NullableStringFieldUpdateOperationsInput | string | null
    budget?: NullableFloatFieldUpdateOperationsInput | number | null
    timeline?: NullableStringFieldUpdateOperationsInput | string | null
    sellerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    responseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    buyerId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    viewings?: PropertyViewingUncheckedUpdateManyWithoutRequestNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutRequestNestedInput
  }

  export type PropertyRequestUncheckedUpdateManyWithoutBuyerInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRequestTypeFieldUpdateOperationsInput | $Enums.RequestType
    message?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    preferredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredTime?: NullableStringFieldUpdateOperationsInput | string | null
    budget?: NullableFloatFieldUpdateOperationsInput | number | null
    timeline?: NullableStringFieldUpdateOperationsInput | string | null
    sellerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    responseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    buyerId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyInquiryUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    property?: PropertyUpdateOneRequiredWithoutInquiriesNestedInput
  }

  export type PropertyInquiryUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyInquiryUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyComparisonUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    PropertyComparisonProperties?: PropertyComparisonPropertiesUpdateManyWithoutPropertyComparisonNestedInput
  }

  export type PropertyComparisonUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    PropertyComparisonProperties?: PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyComparisonNestedInput
  }

  export type PropertyComparisonUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PropertyReviewUpdateWithoutReviewerInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewerId?: StringFieldUpdateOperationsInput | string
    property?: PropertyUpdateOneRequiredWithoutReviewsNestedInput
  }

  export type PropertyReviewUncheckedUpdateWithoutReviewerInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewerId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyReviewUncheckedUpdateManyWithoutReviewerInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewerId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyCommentUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isModerated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorId?: StringFieldUpdateOperationsInput | string
    property?: PropertyUpdateOneRequiredWithoutCommentsNestedInput
  }

  export type PropertyCommentUncheckedUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isModerated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyCommentUncheckedUpdateManyWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isModerated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyUpdateWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    agent?: UserUpdateOneWithoutManagedPropertiesNestedInput
    agency?: AgencyUpdateOneWithoutPropertiesNestedInput
    photos?: PropertyPhotoUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyUncheckedUpdateWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    agentId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: PropertyPhotoUncheckedUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUncheckedUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUncheckedUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUncheckedUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUncheckedUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUncheckedUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyUncheckedUpdateManyWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    agentId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PropertyUpdateWithoutAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedPropertiesNestedInput
    agency?: AgencyUpdateOneWithoutPropertiesNestedInput
    photos?: PropertyPhotoUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyUncheckedUpdateWithoutAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: PropertyPhotoUncheckedUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUncheckedUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUncheckedUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUncheckedUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUncheckedUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUncheckedUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyUncheckedUpdateManyWithoutAgentInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PropertyViewingUpdateWithoutSellerInput = {
    id?: StringFieldUpdateOperationsInput | string
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    buyerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    property?: PropertyUpdateOneRequiredWithoutViewingsNestedInput
    buyer?: UserUpdateOneWithoutBuyerViewingsNestedInput
    request?: PropertyRequestUpdateOneWithoutViewingsNestedInput
  }

  export type PropertyViewingUncheckedUpdateWithoutSellerInput = {
    id?: StringFieldUpdateOperationsInput | string
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    buyerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: StringFieldUpdateOperationsInput | string
    buyerId?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PropertyViewingUncheckedUpdateManyWithoutSellerInput = {
    id?: StringFieldUpdateOperationsInput | string
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    buyerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: StringFieldUpdateOperationsInput | string
    buyerId?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PropertyViewingUpdateWithoutBuyerInput = {
    id?: StringFieldUpdateOperationsInput | string
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    buyerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    property?: PropertyUpdateOneRequiredWithoutViewingsNestedInput
    seller?: UserUpdateOneRequiredWithoutScheduledViewingsNestedInput
    request?: PropertyRequestUpdateOneWithoutViewingsNestedInput
  }

  export type PropertyViewingUncheckedUpdateWithoutBuyerInput = {
    id?: StringFieldUpdateOperationsInput | string
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    buyerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PropertyViewingUncheckedUpdateManyWithoutBuyerInput = {
    id?: StringFieldUpdateOperationsInput | string
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    buyerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PropertyAnalyticsUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalViews?: IntFieldUpdateOperationsInput | number
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalFavorites?: IntFieldUpdateOperationsInput | number
    totalRequests?: IntFieldUpdateOperationsInput | number
    totalInquiries?: IntFieldUpdateOperationsInput | number
    averageViewDuration?: FloatFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    viewsThisWeek?: IntFieldUpdateOperationsInput | number
    viewsThisMonth?: IntFieldUpdateOperationsInput | number
    viewsThisYear?: IntFieldUpdateOperationsInput | number
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    property?: PropertyUpdateOneRequiredWithoutAnalyticsNestedInput
  }

  export type PropertyAnalyticsUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalViews?: IntFieldUpdateOperationsInput | number
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalFavorites?: IntFieldUpdateOperationsInput | number
    totalRequests?: IntFieldUpdateOperationsInput | number
    totalInquiries?: IntFieldUpdateOperationsInput | number
    averageViewDuration?: FloatFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    viewsThisWeek?: IntFieldUpdateOperationsInput | number
    viewsThisMonth?: IntFieldUpdateOperationsInput | number
    viewsThisYear?: IntFieldUpdateOperationsInput | number
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyAnalyticsUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalViews?: IntFieldUpdateOperationsInput | number
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalFavorites?: IntFieldUpdateOperationsInput | number
    totalRequests?: IntFieldUpdateOperationsInput | number
    totalInquiries?: IntFieldUpdateOperationsInput | number
    averageViewDuration?: FloatFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    viewsThisWeek?: IntFieldUpdateOperationsInput | number
    viewsThisMonth?: IntFieldUpdateOperationsInput | number
    viewsThisYear?: IntFieldUpdateOperationsInput | number
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type AgencyRoleUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    canManageProperties?: BoolFieldUpdateOperationsInput | boolean
    canManageTeam?: BoolFieldUpdateOperationsInput | boolean
    canViewAllData?: BoolFieldUpdateOperationsInput | boolean
    canContactClients?: BoolFieldUpdateOperationsInput | boolean
    canScheduleViewings?: BoolFieldUpdateOperationsInput | boolean
    canSetPrices?: BoolFieldUpdateOperationsInput | boolean
    canUploadDocuments?: BoolFieldUpdateOperationsInput | boolean
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agency?: AgencyUpdateOneRequiredWithoutTeamRolesNestedInput
  }

  export type AgencyRoleUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    canManageProperties?: BoolFieldUpdateOperationsInput | boolean
    canManageTeam?: BoolFieldUpdateOperationsInput | boolean
    canViewAllData?: BoolFieldUpdateOperationsInput | boolean
    canContactClients?: BoolFieldUpdateOperationsInput | boolean
    canScheduleViewings?: BoolFieldUpdateOperationsInput | boolean
    canSetPrices?: BoolFieldUpdateOperationsInput | boolean
    canUploadDocuments?: BoolFieldUpdateOperationsInput | boolean
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyRoleUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    canManageProperties?: BoolFieldUpdateOperationsInput | boolean
    canManageTeam?: BoolFieldUpdateOperationsInput | boolean
    canViewAllData?: BoolFieldUpdateOperationsInput | boolean
    canContactClients?: BoolFieldUpdateOperationsInput | boolean
    canScheduleViewings?: BoolFieldUpdateOperationsInput | boolean
    canSetPrices?: BoolFieldUpdateOperationsInput | boolean
    canUploadDocuments?: BoolFieldUpdateOperationsInput | boolean
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdminActionUpdateWithoutAdminInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    property?: PropertyUpdateOneWithoutAdminActionsNestedInput
    user?: UserUpdateOneWithoutAdminActionTargetsNestedInput
    agency?: AgencyUpdateOneWithoutAdminActionsNestedInput
  }

  export type AdminActionUncheckedUpdateWithoutAdminInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdminActionUncheckedUpdateManyWithoutAdminInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdminActionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admin?: UserUpdateOneRequiredWithoutAdminActionsNestedInput
    property?: PropertyUpdateOneWithoutAdminActionsNestedInput
    agency?: AgencyUpdateOneWithoutAdminActionsNestedInput
  }

  export type AdminActionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    adminId?: StringFieldUpdateOperationsInput | string
    propertyId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdminActionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    adminId?: StringFieldUpdateOperationsInput | string
    propertyId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    link?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    link?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    link?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: StringFieldUpdateOperationsInput | string
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    property?: PropertyUpdateOneWithoutPaymentsNestedInput
    request?: PropertyRequestUpdateOneWithoutPaymentsNestedInput
  }

  export type PaymentUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: StringFieldUpdateOperationsInput | string
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: StringFieldUpdateOperationsInput | string
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AgencyMemberUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    canManageProperties?: BoolFieldUpdateOperationsInput | boolean
    canManageTeam?: BoolFieldUpdateOperationsInput | boolean
    canViewAllData?: BoolFieldUpdateOperationsInput | boolean
    canContactClients?: BoolFieldUpdateOperationsInput | boolean
    canScheduleViewings?: BoolFieldUpdateOperationsInput | boolean
    canSetPrices?: BoolFieldUpdateOperationsInput | boolean
    canUploadDocuments?: BoolFieldUpdateOperationsInput | boolean
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agency?: AgencyUpdateOneRequiredWithoutTeamMembersNestedInput
    performance?: AgentPerformanceUpdateOneWithoutAgentNestedInput
  }

  export type AgencyMemberUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    canManageProperties?: BoolFieldUpdateOperationsInput | boolean
    canManageTeam?: BoolFieldUpdateOperationsInput | boolean
    canViewAllData?: BoolFieldUpdateOperationsInput | boolean
    canContactClients?: BoolFieldUpdateOperationsInput | boolean
    canScheduleViewings?: BoolFieldUpdateOperationsInput | boolean
    canSetPrices?: BoolFieldUpdateOperationsInput | boolean
    canUploadDocuments?: BoolFieldUpdateOperationsInput | boolean
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    performance?: AgentPerformanceUncheckedUpdateOneWithoutAgentNestedInput
  }

  export type AgencyMemberUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    canManageProperties?: BoolFieldUpdateOperationsInput | boolean
    canManageTeam?: BoolFieldUpdateOperationsInput | boolean
    canViewAllData?: BoolFieldUpdateOperationsInput | boolean
    canContactClients?: BoolFieldUpdateOperationsInput | boolean
    canScheduleViewings?: BoolFieldUpdateOperationsInput | boolean
    canSetPrices?: BoolFieldUpdateOperationsInput | boolean
    canUploadDocuments?: BoolFieldUpdateOperationsInput | boolean
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SavedSearchUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    propertyTypes?: SavedSearchUpdatepropertyTypesInput | $Enums.PropertyType[]
    transactionTypes?: SavedSearchUpdatetransactionTypesInput | $Enums.TransactionType[]
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minArea?: NullableFloatFieldUpdateOperationsInput | number | null
    maxArea?: NullableFloatFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    cities?: SavedSearchUpdatecitiesInput | string[]
    neighborhoods?: SavedSearchUpdateneighborhoodsInput | string[]
    isActive?: BoolFieldUpdateOperationsInput | boolean
    notifyOnMatch?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SavedSearchUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    propertyTypes?: SavedSearchUpdatepropertyTypesInput | $Enums.PropertyType[]
    transactionTypes?: SavedSearchUpdatetransactionTypesInput | $Enums.TransactionType[]
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minArea?: NullableFloatFieldUpdateOperationsInput | number | null
    maxArea?: NullableFloatFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    cities?: SavedSearchUpdatecitiesInput | string[]
    neighborhoods?: SavedSearchUpdateneighborhoodsInput | string[]
    isActive?: BoolFieldUpdateOperationsInput | boolean
    notifyOnMatch?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SavedSearchUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    propertyTypes?: SavedSearchUpdatepropertyTypesInput | $Enums.PropertyType[]
    transactionTypes?: SavedSearchUpdatetransactionTypesInput | $Enums.TransactionType[]
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minArea?: NullableFloatFieldUpdateOperationsInput | number | null
    maxArea?: NullableFloatFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    cities?: SavedSearchUpdatecitiesInput | string[]
    neighborhoods?: SavedSearchUpdateneighborhoodsInput | string[]
    isActive?: BoolFieldUpdateOperationsInput | boolean
    notifyOnMatch?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyVerificationDocumentCreateManyAgencyInput = {
    id?: string
    documentType: string
    fileName: string
    fileUrl: string
    fileSize: number
    mimeType: string
    title: string
    description?: string | null
    isVerified?: boolean
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    uploadedAt?: Date | string
  }

  export type AgencyMemberCreateManyAgencyInput = {
    id?: string
    userId: string
    role: $Enums.UserRole
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    joinedAt?: Date | string
    updatedAt?: Date | string
  }

  export type AgencyRoleCreateManyAgencyInput = {
    id?: string
    userId: string
    role: $Enums.UserRole
    title?: string | null
    description?: string | null
    canManageProperties?: boolean
    canManageTeam?: boolean
    canViewAllData?: boolean
    canContactClients?: boolean
    canScheduleViewings?: boolean
    canSetPrices?: boolean
    canUploadDocuments?: boolean
    assignedAt?: Date | string
    updatedAt?: Date | string
  }

  export type PropertyCreateManyAgencyInput = {
    id?: string
    title: string
    description: string
    type: $Enums.PropertyType
    transactionType: $Enums.TransactionType
    price?: number | null
    rentAmount?: number | null
    pricePerSqm?: number | null
    deposit?: number | null
    address: string
    city: string
    state: string
    zipCode: string
    country: string
    latitude?: number | null
    longitude?: number | null
    neighborhood?: string | null
    totalArea: number
    landArea?: number | null
    floorNumber?: number | null
    totalFloors?: number | null
    bedrooms?: number | null
    bathrooms?: number | null
    livingRooms?: number | null
    kitchen?: string | null
    yearBuilt?: number | null
    condition: $Enums.PropertyCondition
    furnished?: boolean | null
    amenities?: PropertyCreateamenitiesInput | string[]
    utilities?: PropertyCreateutilitiesInput | string[]
    parking?: boolean | null
    garden?: boolean | null
    balcony?: boolean | null
    elevator?: boolean | null
    pool?: boolean | null
    ac?: boolean | null
    petPolicy?: string | null
    nearbyServices?: PropertyCreatenearbyServicesInput | string[]
    energyRating?: string | null
    leaseType?: $Enums.LeaseType | null
    minRentalPeriod?: string | null
    availableDate?: Date | string | null
    status?: $Enums.PropertyStatus
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    listedAt?: Date | string | null
    soldAt?: Date | string | null
    rentedAt?: Date | string | null
    ownerId: string
    agentId?: string | null
  }

  export type AgencyInquiryCreateManyAgencyInput = {
    id?: string
    subject: string
    message: string
    whoSentIt: string
    whichProperty?: string | null
    status?: $Enums.InquiryStatus
    whenSent?: Date | string
    response?: string | null
    respondedAt?: Date | string | null
    respondedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    propertyId?: string | null
  }

  export type AdminActionCreateManyAgencyInput = {
    id?: string
    action: string
    details?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    adminId: string
    propertyId?: string | null
    userId?: string | null
  }

  export type UserCreateManyAgencyInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    avatar?: string | null
    roles?: UserCreaterolesInput | $Enums.UserRole[]
    dateOfBirth?: Date | string | null
    address?: string | null
    city?: string | null
    state?: string | null
    zipCode?: string | null
    country?: string | null
    isVerified?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    bannedAt?: Date | string | null
    bannedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AgencyVerificationDocumentUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    mimeType?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyVerificationDocumentUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    mimeType?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyVerificationDocumentUncheckedUpdateManyWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    mimeType?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyMemberUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    canManageProperties?: BoolFieldUpdateOperationsInput | boolean
    canManageTeam?: BoolFieldUpdateOperationsInput | boolean
    canViewAllData?: BoolFieldUpdateOperationsInput | boolean
    canContactClients?: BoolFieldUpdateOperationsInput | boolean
    canScheduleViewings?: BoolFieldUpdateOperationsInput | boolean
    canSetPrices?: BoolFieldUpdateOperationsInput | boolean
    canUploadDocuments?: BoolFieldUpdateOperationsInput | boolean
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutAgencyMemberNestedInput
    performance?: AgentPerformanceUpdateOneWithoutAgentNestedInput
  }

  export type AgencyMemberUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    canManageProperties?: BoolFieldUpdateOperationsInput | boolean
    canManageTeam?: BoolFieldUpdateOperationsInput | boolean
    canViewAllData?: BoolFieldUpdateOperationsInput | boolean
    canContactClients?: BoolFieldUpdateOperationsInput | boolean
    canScheduleViewings?: BoolFieldUpdateOperationsInput | boolean
    canSetPrices?: BoolFieldUpdateOperationsInput | boolean
    canUploadDocuments?: BoolFieldUpdateOperationsInput | boolean
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    performance?: AgentPerformanceUncheckedUpdateOneWithoutAgentNestedInput
  }

  export type AgencyMemberUncheckedUpdateManyWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    canManageProperties?: BoolFieldUpdateOperationsInput | boolean
    canManageTeam?: BoolFieldUpdateOperationsInput | boolean
    canViewAllData?: BoolFieldUpdateOperationsInput | boolean
    canContactClients?: BoolFieldUpdateOperationsInput | boolean
    canScheduleViewings?: BoolFieldUpdateOperationsInput | boolean
    canSetPrices?: BoolFieldUpdateOperationsInput | boolean
    canUploadDocuments?: BoolFieldUpdateOperationsInput | boolean
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyRoleUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    canManageProperties?: BoolFieldUpdateOperationsInput | boolean
    canManageTeam?: BoolFieldUpdateOperationsInput | boolean
    canViewAllData?: BoolFieldUpdateOperationsInput | boolean
    canContactClients?: BoolFieldUpdateOperationsInput | boolean
    canScheduleViewings?: BoolFieldUpdateOperationsInput | boolean
    canSetPrices?: BoolFieldUpdateOperationsInput | boolean
    canUploadDocuments?: BoolFieldUpdateOperationsInput | boolean
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutAgencyRolesNestedInput
  }

  export type AgencyRoleUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    canManageProperties?: BoolFieldUpdateOperationsInput | boolean
    canManageTeam?: BoolFieldUpdateOperationsInput | boolean
    canViewAllData?: BoolFieldUpdateOperationsInput | boolean
    canContactClients?: BoolFieldUpdateOperationsInput | boolean
    canScheduleViewings?: BoolFieldUpdateOperationsInput | boolean
    canSetPrices?: BoolFieldUpdateOperationsInput | boolean
    canUploadDocuments?: BoolFieldUpdateOperationsInput | boolean
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyRoleUncheckedUpdateManyWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    canManageProperties?: BoolFieldUpdateOperationsInput | boolean
    canManageTeam?: BoolFieldUpdateOperationsInput | boolean
    canViewAllData?: BoolFieldUpdateOperationsInput | boolean
    canContactClients?: BoolFieldUpdateOperationsInput | boolean
    canScheduleViewings?: BoolFieldUpdateOperationsInput | boolean
    canSetPrices?: BoolFieldUpdateOperationsInput | boolean
    canUploadDocuments?: BoolFieldUpdateOperationsInput | boolean
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PropertyUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    owner?: UserUpdateOneRequiredWithoutOwnedPropertiesNestedInput
    agent?: UserUpdateOneWithoutManagedPropertiesNestedInput
    photos?: PropertyPhotoUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    agentId?: NullableStringFieldUpdateOperationsInput | string | null
    photos?: PropertyPhotoUncheckedUpdateManyWithoutPropertyNestedInput
    videos?: PropertyVideoUncheckedUpdateManyWithoutPropertyNestedInput
    virtualTours?: VirtualTourUncheckedUpdateManyWithoutPropertyNestedInput
    views?: PropertyViewUncheckedUpdateManyWithoutPropertyNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPropertyNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutPropertyNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
    comparisons?: PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutPropertyNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutPropertyNestedInput
    viewings?: PropertyViewingUncheckedUpdateManyWithoutPropertyNestedInput
    analytics?: PropertyAnalyticsUncheckedUpdateManyWithoutPropertyNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutPropertyNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutPropertyNestedInput
    agencyInquiries?: AgencyInquiryUncheckedUpdateManyWithoutPropertyNestedInput
  }

  export type PropertyUncheckedUpdateManyWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    type?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    transactionType?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    rentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    pricePerSqm?: NullableFloatFieldUpdateOperationsInput | number | null
    deposit?: NullableFloatFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    totalArea?: FloatFieldUpdateOperationsInput | number
    landArea?: NullableFloatFieldUpdateOperationsInput | number | null
    floorNumber?: NullableIntFieldUpdateOperationsInput | number | null
    totalFloors?: NullableIntFieldUpdateOperationsInput | number | null
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableIntFieldUpdateOperationsInput | number | null
    livingRooms?: NullableIntFieldUpdateOperationsInput | number | null
    kitchen?: NullableStringFieldUpdateOperationsInput | string | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    condition?: EnumPropertyConditionFieldUpdateOperationsInput | $Enums.PropertyCondition
    furnished?: NullableBoolFieldUpdateOperationsInput | boolean | null
    amenities?: PropertyUpdateamenitiesInput | string[]
    utilities?: PropertyUpdateutilitiesInput | string[]
    parking?: NullableBoolFieldUpdateOperationsInput | boolean | null
    garden?: NullableBoolFieldUpdateOperationsInput | boolean | null
    balcony?: NullableBoolFieldUpdateOperationsInput | boolean | null
    elevator?: NullableBoolFieldUpdateOperationsInput | boolean | null
    pool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ac?: NullableBoolFieldUpdateOperationsInput | boolean | null
    petPolicy?: NullableStringFieldUpdateOperationsInput | string | null
    nearbyServices?: PropertyUpdatenearbyServicesInput | string[]
    energyRating?: NullableStringFieldUpdateOperationsInput | string | null
    leaseType?: NullableEnumLeaseTypeFieldUpdateOperationsInput | $Enums.LeaseType | null
    minRentalPeriod?: NullableStringFieldUpdateOperationsInput | string | null
    availableDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumPropertyStatusFieldUpdateOperationsInput | $Enums.PropertyStatus
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rentedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    agentId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AgencyInquiryUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    whoSentIt?: StringFieldUpdateOperationsInput | string
    whichProperty?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    whenSent?: DateTimeFieldUpdateOperationsInput | Date | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    respondedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    property?: PropertyUpdateOneWithoutAgencyInquiriesNestedInput
  }

  export type AgencyInquiryUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    whoSentIt?: StringFieldUpdateOperationsInput | string
    whichProperty?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    whenSent?: DateTimeFieldUpdateOperationsInput | Date | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    respondedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AgencyInquiryUncheckedUpdateManyWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    whoSentIt?: StringFieldUpdateOperationsInput | string
    whichProperty?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    whenSent?: DateTimeFieldUpdateOperationsInput | Date | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    respondedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdminActionUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admin?: UserUpdateOneRequiredWithoutAdminActionsNestedInput
    property?: PropertyUpdateOneWithoutAdminActionsNestedInput
    user?: UserUpdateOneWithoutAdminActionTargetsNestedInput
  }

  export type AdminActionUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    adminId?: StringFieldUpdateOperationsInput | string
    propertyId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdminActionUncheckedUpdateManyWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    adminId?: StringFieldUpdateOperationsInput | string
    propertyId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewedProperties?: PropertyViewUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUpdateManyWithoutUserNestedInput
    agencyRoles?: AgencyRoleUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUpdateManyWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewedProperties?: PropertyViewUncheckedUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    favoriteLists?: FavoriteListUncheckedUpdateManyWithoutUserNestedInput
    requests?: PropertyRequestUncheckedUpdateManyWithoutBuyerNestedInput
    inquiries?: PropertyInquiryUncheckedUpdateManyWithoutUserNestedInput
    propertyComparisons?: PropertyComparisonUncheckedUpdateManyWithoutUserNestedInput
    reviews?: PropertyReviewUncheckedUpdateManyWithoutReviewerNestedInput
    comments?: PropertyCommentUncheckedUpdateManyWithoutAuthorNestedInput
    ownedProperties?: PropertyUncheckedUpdateManyWithoutOwnerNestedInput
    managedProperties?: PropertyUncheckedUpdateManyWithoutAgentNestedInput
    scheduledViewings?: PropertyViewingUncheckedUpdateManyWithoutSellerNestedInput
    buyerViewings?: PropertyViewingUncheckedUpdateManyWithoutBuyerNestedInput
    propertyAnalytics?: PropertyAnalyticsUncheckedUpdateManyWithoutUserNestedInput
    agencyRoles?: AgencyRoleUncheckedUpdateManyWithoutUserNestedInput
    adminActions?: AdminActionUncheckedUpdateManyWithoutAdminNestedInput
    adminActionTargets?: AdminActionUncheckedUpdateManyWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    AgencyMember?: AgencyMemberUncheckedUpdateManyWithoutUserNestedInput
    SavedSearch?: SavedSearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: UserUpdaterolesInput | $Enums.UserRole[]
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    bannedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bannedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PropertyPhotoCreateManyPropertyInput = {
    id?: string
    url: string
    caption?: string | null
    altText?: string | null
    isPrimary?: boolean
    order?: number
    category?: string | null
    createdAt?: Date | string
  }

  export type PropertyVideoCreateManyPropertyInput = {
    id?: string
    url: string
    thumbnail?: string | null
    duration?: number | null
    caption?: string | null
    order?: number
    createdAt?: Date | string
  }

  export type VirtualTourCreateManyPropertyInput = {
    id?: string
    url: string
    platform?: string | null
    caption?: string | null
    order?: number
    createdAt?: Date | string
  }

  export type PropertyViewCreateManyPropertyInput = {
    id?: string
    viewedAt?: Date | string
    viewDuration?: number | null
    ipAddress?: string | null
    userAgent?: string | null
    userId: string
  }

  export type FavoriteCreateManyPropertyInput = {
    id?: string
    notes?: string | null
    priority?: number | null
    createdAt?: Date | string
    userId: string
    listId?: string | null
    favoriteListId?: string | null
  }

  export type PropertyRequestCreateManyPropertyInput = {
    id?: string
    type: $Enums.RequestType
    message: string
    status?: $Enums.RequestStatus
    preferredDate?: Date | string | null
    preferredTime?: string | null
    budget?: number | null
    timeline?: string | null
    sellerResponse?: string | null
    responseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    buyerId: string
    userId: string
  }

  export type PropertyInquiryCreateManyPropertyInput = {
    id?: string
    subject: string
    message: string
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
  }

  export type PropertyComparisonPropertiesCreateManyPropertyInput = {
    id?: string
    propertyComparisonId: string
  }

  export type PropertyReviewCreateManyPropertyInput = {
    id?: string
    rating: number
    title: string
    comment: string
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewerId: string
    userId: string
  }

  export type PropertyCommentCreateManyPropertyInput = {
    id?: string
    content: string
    isPublic?: boolean
    isModerated?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    authorId: string
    userId: string
  }

  export type PropertyViewingCreateManyPropertyInput = {
    id?: string
    scheduledAt: Date | string
    duration: number
    status?: string
    notes?: string | null
    buyerNotes?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    sellerId: string
    buyerId?: string | null
    requestId?: string | null
    propertyRequestId?: string | null
  }

  export type PropertyAnalyticsCreateManyPropertyInput = {
    id?: string
    totalViews?: number
    uniqueViews?: number
    totalFavorites?: number
    totalRequests?: number
    totalInquiries?: number
    averageViewDuration?: number
    bounceRate?: number
    conversionRate?: number
    viewsThisWeek?: number
    viewsThisMonth?: number
    viewsThisYear?: number
    lastCalculated?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    userId?: string | null
  }

  export type AdminActionCreateManyPropertyInput = {
    id?: string
    action: string
    details?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    adminId: string
    userId?: string | null
    agencyId?: string | null
  }

  export type PaymentCreateManyPropertyInput = {
    id?: string
    amount: number
    currency?: string
    status?: $Enums.PaymentStatus
    paymentMethod: string
    transactionId?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    requestId?: string | null
    propertyRequestId?: string | null
  }

  export type AgencyInquiryCreateManyPropertyInput = {
    id?: string
    subject: string
    message: string
    whoSentIt: string
    whichProperty?: string | null
    status?: $Enums.InquiryStatus
    whenSent?: Date | string
    response?: string | null
    respondedAt?: Date | string | null
    respondedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    agencyId: string
  }

  export type PropertyPhotoUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    altText?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    category?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PropertyPhotoUncheckedUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    altText?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    category?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PropertyPhotoUncheckedUpdateManyWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    altText?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    order?: IntFieldUpdateOperationsInput | number
    category?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PropertyVideoUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PropertyVideoUncheckedUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PropertyVideoUncheckedUpdateManyWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VirtualTourUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    platform?: NullableStringFieldUpdateOperationsInput | string | null
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VirtualTourUncheckedUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    platform?: NullableStringFieldUpdateOperationsInput | string | null
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VirtualTourUncheckedUpdateManyWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    platform?: NullableStringFieldUpdateOperationsInput | string | null
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PropertyViewUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    viewedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewDuration?: NullableIntFieldUpdateOperationsInput | number | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutViewedPropertiesNestedInput
  }

  export type PropertyViewUncheckedUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    viewedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewDuration?: NullableIntFieldUpdateOperationsInput | number | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyViewUncheckedUpdateManyWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    viewedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    viewDuration?: NullableIntFieldUpdateOperationsInput | number | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listId?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutFavoritesNestedInput
    list?: FavoriteListUpdateOneWithoutFavoritesNestedInput
  }

  export type FavoriteUncheckedUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    listId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteListId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FavoriteUncheckedUpdateManyWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    listId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteListId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PropertyRequestUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRequestTypeFieldUpdateOperationsInput | $Enums.RequestType
    message?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    preferredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredTime?: NullableStringFieldUpdateOperationsInput | string | null
    budget?: NullableFloatFieldUpdateOperationsInput | number | null
    timeline?: NullableStringFieldUpdateOperationsInput | string | null
    sellerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    responseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    buyerId?: StringFieldUpdateOperationsInput | string
    buyer?: UserUpdateOneRequiredWithoutRequestsNestedInput
    viewings?: PropertyViewingUpdateManyWithoutRequestNestedInput
    payments?: PaymentUpdateManyWithoutRequestNestedInput
  }

  export type PropertyRequestUncheckedUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRequestTypeFieldUpdateOperationsInput | $Enums.RequestType
    message?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    preferredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredTime?: NullableStringFieldUpdateOperationsInput | string | null
    budget?: NullableFloatFieldUpdateOperationsInput | number | null
    timeline?: NullableStringFieldUpdateOperationsInput | string | null
    sellerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    responseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    buyerId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    viewings?: PropertyViewingUncheckedUpdateManyWithoutRequestNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutRequestNestedInput
  }

  export type PropertyRequestUncheckedUpdateManyWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumRequestTypeFieldUpdateOperationsInput | $Enums.RequestType
    message?: StringFieldUpdateOperationsInput | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    preferredDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    preferredTime?: NullableStringFieldUpdateOperationsInput | string | null
    budget?: NullableFloatFieldUpdateOperationsInput | number | null
    timeline?: NullableStringFieldUpdateOperationsInput | string | null
    sellerResponse?: NullableStringFieldUpdateOperationsInput | string | null
    responseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    buyerId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyInquiryUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutInquiriesNestedInput
  }

  export type PropertyInquiryUncheckedUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyInquiryUncheckedUpdateManyWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyComparisonPropertiesUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyComparison?: PropertyComparisonUpdateOneRequiredWithoutPropertyComparisonPropertiesNestedInput
  }

  export type PropertyComparisonPropertiesUncheckedUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyComparisonId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyComparisonId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyReviewUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewerId?: StringFieldUpdateOperationsInput | string
    reviewer?: UserUpdateOneRequiredWithoutReviewsNestedInput
  }

  export type PropertyReviewUncheckedUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewerId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyReviewUncheckedUpdateManyWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    comment?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewerId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyCommentUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isModerated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorId?: StringFieldUpdateOperationsInput | string
    author?: UserUpdateOneRequiredWithoutCommentsNestedInput
  }

  export type PropertyCommentUncheckedUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isModerated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyCommentUncheckedUpdateManyWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    isModerated?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    authorId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyViewingUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    buyerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    seller?: UserUpdateOneRequiredWithoutScheduledViewingsNestedInput
    buyer?: UserUpdateOneWithoutBuyerViewingsNestedInput
    request?: PropertyRequestUpdateOneWithoutViewingsNestedInput
  }

  export type PropertyViewingUncheckedUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    buyerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sellerId?: StringFieldUpdateOperationsInput | string
    buyerId?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PropertyViewingUncheckedUpdateManyWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    buyerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sellerId?: StringFieldUpdateOperationsInput | string
    buyerId?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PropertyAnalyticsUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalViews?: IntFieldUpdateOperationsInput | number
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalFavorites?: IntFieldUpdateOperationsInput | number
    totalRequests?: IntFieldUpdateOperationsInput | number
    totalInquiries?: IntFieldUpdateOperationsInput | number
    averageViewDuration?: FloatFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    viewsThisWeek?: IntFieldUpdateOperationsInput | number
    viewsThisMonth?: IntFieldUpdateOperationsInput | number
    viewsThisYear?: IntFieldUpdateOperationsInput | number
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User?: UserUpdateOneWithoutPropertyAnalyticsNestedInput
  }

  export type PropertyAnalyticsUncheckedUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalViews?: IntFieldUpdateOperationsInput | number
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalFavorites?: IntFieldUpdateOperationsInput | number
    totalRequests?: IntFieldUpdateOperationsInput | number
    totalInquiries?: IntFieldUpdateOperationsInput | number
    averageViewDuration?: FloatFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    viewsThisWeek?: IntFieldUpdateOperationsInput | number
    viewsThisMonth?: IntFieldUpdateOperationsInput | number
    viewsThisYear?: IntFieldUpdateOperationsInput | number
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PropertyAnalyticsUncheckedUpdateManyWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalViews?: IntFieldUpdateOperationsInput | number
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalFavorites?: IntFieldUpdateOperationsInput | number
    totalRequests?: IntFieldUpdateOperationsInput | number
    totalInquiries?: IntFieldUpdateOperationsInput | number
    averageViewDuration?: FloatFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    viewsThisWeek?: IntFieldUpdateOperationsInput | number
    viewsThisMonth?: IntFieldUpdateOperationsInput | number
    viewsThisYear?: IntFieldUpdateOperationsInput | number
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdminActionUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admin?: UserUpdateOneRequiredWithoutAdminActionsNestedInput
    user?: UserUpdateOneWithoutAdminActionTargetsNestedInput
    agency?: AgencyUpdateOneWithoutAdminActionsNestedInput
  }

  export type AdminActionUncheckedUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    adminId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdminActionUncheckedUpdateManyWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    adminId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: StringFieldUpdateOperationsInput | string
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutPaymentsNestedInput
    request?: PropertyRequestUpdateOneWithoutPaymentsNestedInput
  }

  export type PaymentUncheckedUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: StringFieldUpdateOperationsInput | string
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentUncheckedUpdateManyWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: StringFieldUpdateOperationsInput | string
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyRequestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AgencyInquiryUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    whoSentIt?: StringFieldUpdateOperationsInput | string
    whichProperty?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    whenSent?: DateTimeFieldUpdateOperationsInput | Date | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    respondedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agency?: AgencyUpdateOneRequiredWithoutInquiriesNestedInput
  }

  export type AgencyInquiryUncheckedUpdateWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    whoSentIt?: StringFieldUpdateOperationsInput | string
    whichProperty?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    whenSent?: DateTimeFieldUpdateOperationsInput | Date | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    respondedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: StringFieldUpdateOperationsInput | string
  }

  export type AgencyInquiryUncheckedUpdateManyWithoutPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    whoSentIt?: StringFieldUpdateOperationsInput | string
    whichProperty?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumInquiryStatusFieldUpdateOperationsInput | $Enums.InquiryStatus
    whenSent?: DateTimeFieldUpdateOperationsInput | Date | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    respondedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    agencyId?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteCreateManyListInput = {
    id?: string
    notes?: string | null
    priority?: number | null
    createdAt?: Date | string
    userId: string
    propertyId: string
    listId?: string | null
  }

  export type FavoriteUpdateWithoutListInput = {
    id?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listId?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutFavoritesNestedInput
    property?: PropertyUpdateOneRequiredWithoutFavoritesNestedInput
  }

  export type FavoriteUncheckedUpdateWithoutListInput = {
    id?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    listId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FavoriteUncheckedUpdateManyWithoutListInput = {
    id?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    listId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PropertyViewingCreateManyRequestInput = {
    id?: string
    scheduledAt: Date | string
    duration: number
    status?: string
    notes?: string | null
    buyerNotes?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    propertyId: string
    sellerId: string
    buyerId?: string | null
    requestId?: string | null
  }

  export type PaymentCreateManyRequestInput = {
    id?: string
    amount: number
    currency?: string
    status?: $Enums.PaymentStatus
    paymentMethod: string
    transactionId?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
    propertyId?: string | null
    requestId?: string | null
  }

  export type PropertyViewingUpdateWithoutRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    buyerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    property?: PropertyUpdateOneRequiredWithoutViewingsNestedInput
    seller?: UserUpdateOneRequiredWithoutScheduledViewingsNestedInput
    buyer?: UserUpdateOneWithoutBuyerViewingsNestedInput
  }

  export type PropertyViewingUncheckedUpdateWithoutRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    buyerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    buyerId?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PropertyViewingUncheckedUpdateManyWithoutRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    buyerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    propertyId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    buyerId?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentUpdateWithoutRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: StringFieldUpdateOperationsInput | string
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutPaymentsNestedInput
    property?: PropertyUpdateOneWithoutPaymentsNestedInput
  }

  export type PaymentUncheckedUpdateWithoutRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: StringFieldUpdateOperationsInput | string
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    propertyId?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentUncheckedUpdateManyWithoutRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: StringFieldUpdateOperationsInput | string
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    propertyId?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PropertyComparisonPropertiesCreateManyPropertyComparisonInput = {
    id?: string
    propertyId: string
  }

  export type PropertyComparisonPropertiesUpdateWithoutPropertyComparisonInput = {
    id?: StringFieldUpdateOperationsInput | string
    property?: PropertyUpdateOneRequiredWithoutComparisonsNestedInput
  }

  export type PropertyComparisonPropertiesUncheckedUpdateWithoutPropertyComparisonInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type PropertyComparisonPropertiesUncheckedUpdateManyWithoutPropertyComparisonInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}